(function () {
function $parcel$export(e, n, v, s) {
  Object.defineProperty(e, n, {get: v, set: s, enumerable: true, configurable: true});
}
var $parcel$global =
typeof globalThis !== 'undefined'
  ? globalThis
  : typeof self !== 'undefined'
  ? self
  : typeof window !== 'undefined'
  ? window
  : typeof global !== 'undefined'
  ? global
  : {};
function $parcel$interopDefault(a) {
  return a && a.__esModule ? a.default : a;
}
var $parcel$modules = {};
var $parcel$inits = {};

var parcelRequire = $parcel$global["parcelRequire4232"];
if (parcelRequire == null) {
  parcelRequire = function(id) {
    if (id in $parcel$modules) {
      return $parcel$modules[id].exports;
    }
    if (id in $parcel$inits) {
      var init = $parcel$inits[id];
      delete $parcel$inits[id];
      var module = {id: id, exports: {}};
      $parcel$modules[id] = module;
      init.call(module.exports, module, module.exports);
      return module.exports;
    }
    var err = new Error("Cannot find module '" + id + "'");
    err.code = 'MODULE_NOT_FOUND';
    throw err;
  };

  parcelRequire.register = function register(id, init) {
    $parcel$inits[id] = init;
  };

  $parcel$global["parcelRequire4232"] = parcelRequire;
}
parcelRequire.register("cXafQ", function(module, exports) {

$parcel$export(module.exports, "register", function () { return $96e2f311c958547c$export$6503ec6e8aabbaf; }, function (v) { return $96e2f311c958547c$export$6503ec6e8aabbaf = v; });
$parcel$export(module.exports, "resolve", function () { return $96e2f311c958547c$export$f7ad0328861e2f03; }, function (v) { return $96e2f311c958547c$export$f7ad0328861e2f03 = v; });
var $96e2f311c958547c$export$6503ec6e8aabbaf;
var $96e2f311c958547c$export$f7ad0328861e2f03;
"use strict";
var $96e2f311c958547c$var$mapping = {};
function $96e2f311c958547c$var$register(pairs) {
    var keys = Object.keys(pairs);
    for(var i = 0; i < keys.length; i++)$96e2f311c958547c$var$mapping[keys[i]] = pairs[keys[i]];
}
function $96e2f311c958547c$var$resolve(id) {
    var resolved = $96e2f311c958547c$var$mapping[id];
    if (resolved == null) throw new Error("Could not resolve bundle with id " + id);
    return resolved;
}
$96e2f311c958547c$export$6503ec6e8aabbaf = $96e2f311c958547c$var$register;
$96e2f311c958547c$export$f7ad0328861e2f03 = $96e2f311c958547c$var$resolve;

});

parcelRequire.register("cmWGu", function(module, exports) {

$parcel$export(module.exports, "Fragment", function () { return $90150f9e2193b9f7$export$ffb0004e005737fa; }, function (v) { return $90150f9e2193b9f7$export$ffb0004e005737fa = v; });
$parcel$export(module.exports, "jsx", function () { return $90150f9e2193b9f7$export$34b9dba7ce09269b; }, function (v) { return $90150f9e2193b9f7$export$34b9dba7ce09269b = v; });
$parcel$export(module.exports, "jsxs", function () { return $90150f9e2193b9f7$export$25062201e9e25d76; }, function (v) { return $90150f9e2193b9f7$export$25062201e9e25d76 = v; });
/**
 * @license React
 * react-jsx-runtime.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ var $90150f9e2193b9f7$export$ffb0004e005737fa;
var $90150f9e2193b9f7$export$34b9dba7ce09269b;
var $90150f9e2193b9f7$export$25062201e9e25d76;
"use strict";

var $laauJ = parcelRequire("laauJ");
var $90150f9e2193b9f7$var$k = Symbol.for("react.element"), $90150f9e2193b9f7$var$l = Symbol.for("react.fragment"), $90150f9e2193b9f7$var$m = Object.prototype.hasOwnProperty, $90150f9e2193b9f7$var$n = $laauJ.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner, $90150f9e2193b9f7$var$p = {
    key: !0,
    ref: !0,
    __self: !0,
    __source: !0
};
function $90150f9e2193b9f7$var$q(c, a, g) {
    var b, d = {}, e = null, h = null;
    void 0 !== g && (e = "" + g);
    void 0 !== a.key && (e = "" + a.key);
    void 0 !== a.ref && (h = a.ref);
    for(b in a)$90150f9e2193b9f7$var$m.call(a, b) && !$90150f9e2193b9f7$var$p.hasOwnProperty(b) && (d[b] = a[b]);
    if (c && c.defaultProps) for(b in a = c.defaultProps, a)void 0 === d[b] && (d[b] = a[b]);
    return {
        $$typeof: $90150f9e2193b9f7$var$k,
        type: c,
        key: e,
        ref: h,
        props: d,
        _owner: $90150f9e2193b9f7$var$n.current
    };
}
$90150f9e2193b9f7$export$ffb0004e005737fa = $90150f9e2193b9f7$var$l;
$90150f9e2193b9f7$export$34b9dba7ce09269b = $90150f9e2193b9f7$var$q;
$90150f9e2193b9f7$export$25062201e9e25d76 = $90150f9e2193b9f7$var$q;

});
parcelRequire.register("laauJ", function(module, exports) {
"use strict";

module.exports = (parcelRequire("iGXIG"));

});
parcelRequire.register("iGXIG", function(module, exports) {

$parcel$export(module.exports, "Children", function () { return $d9ba7950afda9111$export$dca3b0875bd9a954; }, function (v) { return $d9ba7950afda9111$export$dca3b0875bd9a954 = v; });
$parcel$export(module.exports, "Component", function () { return $d9ba7950afda9111$export$16fa2f45be04daa8; }, function (v) { return $d9ba7950afda9111$export$16fa2f45be04daa8 = v; });
$parcel$export(module.exports, "Fragment", function () { return $d9ba7950afda9111$export$ffb0004e005737fa; }, function (v) { return $d9ba7950afda9111$export$ffb0004e005737fa = v; });
$parcel$export(module.exports, "Profiler", function () { return $d9ba7950afda9111$export$e2c29f18771995cb; }, function (v) { return $d9ba7950afda9111$export$e2c29f18771995cb = v; });
$parcel$export(module.exports, "PureComponent", function () { return $d9ba7950afda9111$export$221d75b3f55bb0bd; }, function (v) { return $d9ba7950afda9111$export$221d75b3f55bb0bd = v; });
$parcel$export(module.exports, "StrictMode", function () { return $d9ba7950afda9111$export$5f8d39834fd61797; }, function (v) { return $d9ba7950afda9111$export$5f8d39834fd61797 = v; });
$parcel$export(module.exports, "Suspense", function () { return $d9ba7950afda9111$export$74bf444e3cd11ea5; }, function (v) { return $d9ba7950afda9111$export$74bf444e3cd11ea5 = v; });
$parcel$export(module.exports, "__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED", function () { return $d9ba7950afda9111$export$ae55be85d98224ed; }, function (v) { return $d9ba7950afda9111$export$ae55be85d98224ed = v; });
$parcel$export(module.exports, "cloneElement", function () { return $d9ba7950afda9111$export$e530037191fcd5d7; }, function (v) { return $d9ba7950afda9111$export$e530037191fcd5d7 = v; });
$parcel$export(module.exports, "createContext", function () { return $d9ba7950afda9111$export$fd42f52fd3ae1109; }, function (v) { return $d9ba7950afda9111$export$fd42f52fd3ae1109 = v; });
$parcel$export(module.exports, "createElement", function () { return $d9ba7950afda9111$export$c8a8987d4410bf2d; }, function (v) { return $d9ba7950afda9111$export$c8a8987d4410bf2d = v; });
$parcel$export(module.exports, "createFactory", function () { return $d9ba7950afda9111$export$d38cd72104c1f0e9; }, function (v) { return $d9ba7950afda9111$export$d38cd72104c1f0e9 = v; });
$parcel$export(module.exports, "createRef", function () { return $d9ba7950afda9111$export$7d1e3a5e95ceca43; }, function (v) { return $d9ba7950afda9111$export$7d1e3a5e95ceca43 = v; });
$parcel$export(module.exports, "forwardRef", function () { return $d9ba7950afda9111$export$257a8862b851cb5b; }, function (v) { return $d9ba7950afda9111$export$257a8862b851cb5b = v; });
$parcel$export(module.exports, "isValidElement", function () { return $d9ba7950afda9111$export$a8257692ac88316c; }, function (v) { return $d9ba7950afda9111$export$a8257692ac88316c = v; });
$parcel$export(module.exports, "lazy", function () { return $d9ba7950afda9111$export$488013bae63b21da; }, function (v) { return $d9ba7950afda9111$export$488013bae63b21da = v; });
$parcel$export(module.exports, "memo", function () { return $d9ba7950afda9111$export$7c73462e0d25e514; }, function (v) { return $d9ba7950afda9111$export$7c73462e0d25e514 = v; });
$parcel$export(module.exports, "startTransition", function () { return $d9ba7950afda9111$export$7568632d0d33d16d; }, function (v) { return $d9ba7950afda9111$export$7568632d0d33d16d = v; });
$parcel$export(module.exports, "unstable_act", function () { return $d9ba7950afda9111$export$88948ce120ea2619; }, function (v) { return $d9ba7950afda9111$export$88948ce120ea2619 = v; });
$parcel$export(module.exports, "useCallback", function () { return $d9ba7950afda9111$export$35808ee640e87ca7; }, function (v) { return $d9ba7950afda9111$export$35808ee640e87ca7 = v; });
$parcel$export(module.exports, "useContext", function () { return $d9ba7950afda9111$export$fae74005e78b1a27; }, function (v) { return $d9ba7950afda9111$export$fae74005e78b1a27 = v; });
$parcel$export(module.exports, "useDebugValue", function () { return $d9ba7950afda9111$export$dc8fbce3eb94dc1e; }, function (v) { return $d9ba7950afda9111$export$dc8fbce3eb94dc1e = v; });
$parcel$export(module.exports, "useDeferredValue", function () { return $d9ba7950afda9111$export$6a7bc4e911dc01cf; }, function (v) { return $d9ba7950afda9111$export$6a7bc4e911dc01cf = v; });
$parcel$export(module.exports, "useEffect", function () { return $d9ba7950afda9111$export$6d9c69b0de29b591; }, function (v) { return $d9ba7950afda9111$export$6d9c69b0de29b591 = v; });
$parcel$export(module.exports, "useId", function () { return $d9ba7950afda9111$export$f680877a34711e37; }, function (v) { return $d9ba7950afda9111$export$f680877a34711e37 = v; });
$parcel$export(module.exports, "useImperativeHandle", function () { return $d9ba7950afda9111$export$d5a552a76deda3c2; }, function (v) { return $d9ba7950afda9111$export$d5a552a76deda3c2 = v; });
$parcel$export(module.exports, "useInsertionEffect", function () { return $d9ba7950afda9111$export$aaabe4eda9ed9969; }, function (v) { return $d9ba7950afda9111$export$aaabe4eda9ed9969 = v; });
$parcel$export(module.exports, "useLayoutEffect", function () { return $d9ba7950afda9111$export$e5c5a5f917a5871c; }, function (v) { return $d9ba7950afda9111$export$e5c5a5f917a5871c = v; });
$parcel$export(module.exports, "useMemo", function () { return $d9ba7950afda9111$export$1538c33de8887b59; }, function (v) { return $d9ba7950afda9111$export$1538c33de8887b59 = v; });
$parcel$export(module.exports, "useReducer", function () { return $d9ba7950afda9111$export$13e3392192263954; }, function (v) { return $d9ba7950afda9111$export$13e3392192263954 = v; });
$parcel$export(module.exports, "useRef", function () { return $d9ba7950afda9111$export$b8f5890fc79d6aca; }, function (v) { return $d9ba7950afda9111$export$b8f5890fc79d6aca = v; });
$parcel$export(module.exports, "useState", function () { return $d9ba7950afda9111$export$60241385465d0a34; }, function (v) { return $d9ba7950afda9111$export$60241385465d0a34 = v; });
$parcel$export(module.exports, "useSyncExternalStore", function () { return $d9ba7950afda9111$export$306c0aa65ff9ec16; }, function (v) { return $d9ba7950afda9111$export$306c0aa65ff9ec16 = v; });
$parcel$export(module.exports, "useTransition", function () { return $d9ba7950afda9111$export$7b286972b8d8ccbf; }, function (v) { return $d9ba7950afda9111$export$7b286972b8d8ccbf = v; });
$parcel$export(module.exports, "version", function () { return $d9ba7950afda9111$export$83d89fbfd8236492; }, function (v) { return $d9ba7950afda9111$export$83d89fbfd8236492 = v; });
/**
 * @license React
 * react.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ var $d9ba7950afda9111$export$dca3b0875bd9a954;
var $d9ba7950afda9111$export$16fa2f45be04daa8;
var $d9ba7950afda9111$export$ffb0004e005737fa;
var $d9ba7950afda9111$export$e2c29f18771995cb;
var $d9ba7950afda9111$export$221d75b3f55bb0bd;
var $d9ba7950afda9111$export$5f8d39834fd61797;
var $d9ba7950afda9111$export$74bf444e3cd11ea5;
var $d9ba7950afda9111$export$ae55be85d98224ed;
var $d9ba7950afda9111$export$e530037191fcd5d7;
var $d9ba7950afda9111$export$fd42f52fd3ae1109;
var $d9ba7950afda9111$export$c8a8987d4410bf2d;
var $d9ba7950afda9111$export$d38cd72104c1f0e9;
var $d9ba7950afda9111$export$7d1e3a5e95ceca43;
var $d9ba7950afda9111$export$257a8862b851cb5b;
var $d9ba7950afda9111$export$a8257692ac88316c;
var $d9ba7950afda9111$export$488013bae63b21da;
var $d9ba7950afda9111$export$7c73462e0d25e514;
var $d9ba7950afda9111$export$7568632d0d33d16d;
var $d9ba7950afda9111$export$88948ce120ea2619;
var $d9ba7950afda9111$export$35808ee640e87ca7;
var $d9ba7950afda9111$export$fae74005e78b1a27;
var $d9ba7950afda9111$export$dc8fbce3eb94dc1e;
var $d9ba7950afda9111$export$6a7bc4e911dc01cf;
var $d9ba7950afda9111$export$6d9c69b0de29b591;
var $d9ba7950afda9111$export$f680877a34711e37;
var $d9ba7950afda9111$export$d5a552a76deda3c2;
var $d9ba7950afda9111$export$aaabe4eda9ed9969;
var $d9ba7950afda9111$export$e5c5a5f917a5871c;
var $d9ba7950afda9111$export$1538c33de8887b59;
var $d9ba7950afda9111$export$13e3392192263954;
var $d9ba7950afda9111$export$b8f5890fc79d6aca;
var $d9ba7950afda9111$export$60241385465d0a34;
var $d9ba7950afda9111$export$306c0aa65ff9ec16;
var $d9ba7950afda9111$export$7b286972b8d8ccbf;
var $d9ba7950afda9111$export$83d89fbfd8236492;
"use strict";
var $d9ba7950afda9111$var$l = Symbol.for("react.element"), $d9ba7950afda9111$var$n = Symbol.for("react.portal"), $d9ba7950afda9111$var$p = Symbol.for("react.fragment"), $d9ba7950afda9111$var$q = Symbol.for("react.strict_mode"), $d9ba7950afda9111$var$r = Symbol.for("react.profiler"), $d9ba7950afda9111$var$t = Symbol.for("react.provider"), $d9ba7950afda9111$var$u = Symbol.for("react.context"), $d9ba7950afda9111$var$v = Symbol.for("react.forward_ref"), $d9ba7950afda9111$var$w = Symbol.for("react.suspense"), $d9ba7950afda9111$var$x = Symbol.for("react.memo"), $d9ba7950afda9111$var$y = Symbol.for("react.lazy"), $d9ba7950afda9111$var$z = Symbol.iterator;
function $d9ba7950afda9111$var$A(a) {
    if (null === a || "object" !== typeof a) return null;
    a = $d9ba7950afda9111$var$z && a[$d9ba7950afda9111$var$z] || a["@@iterator"];
    return "function" === typeof a ? a : null;
}
var $d9ba7950afda9111$var$B = {
    isMounted: function() {
        return !1;
    },
    enqueueForceUpdate: function() {},
    enqueueReplaceState: function() {},
    enqueueSetState: function() {}
}, $d9ba7950afda9111$var$C = Object.assign, $d9ba7950afda9111$var$D = {};
function $d9ba7950afda9111$var$E(a, b, e) {
    this.props = a;
    this.context = b;
    this.refs = $d9ba7950afda9111$var$D;
    this.updater = e || $d9ba7950afda9111$var$B;
}
$d9ba7950afda9111$var$E.prototype.isReactComponent = {};
$d9ba7950afda9111$var$E.prototype.setState = function(a, b) {
    if ("object" !== typeof a && "function" !== typeof a && null != a) throw Error("setState(...): takes an object of state variables to update or a function which returns an object of state variables.");
    this.updater.enqueueSetState(this, a, b, "setState");
};
$d9ba7950afda9111$var$E.prototype.forceUpdate = function(a) {
    this.updater.enqueueForceUpdate(this, a, "forceUpdate");
};
function $d9ba7950afda9111$var$F() {}
$d9ba7950afda9111$var$F.prototype = $d9ba7950afda9111$var$E.prototype;
function $d9ba7950afda9111$var$G(a, b, e) {
    this.props = a;
    this.context = b;
    this.refs = $d9ba7950afda9111$var$D;
    this.updater = e || $d9ba7950afda9111$var$B;
}
var $d9ba7950afda9111$var$H = $d9ba7950afda9111$var$G.prototype = new $d9ba7950afda9111$var$F;
$d9ba7950afda9111$var$H.constructor = $d9ba7950afda9111$var$G;
$d9ba7950afda9111$var$C($d9ba7950afda9111$var$H, $d9ba7950afda9111$var$E.prototype);
$d9ba7950afda9111$var$H.isPureReactComponent = !0;
var $d9ba7950afda9111$var$I = Array.isArray, $d9ba7950afda9111$var$J = Object.prototype.hasOwnProperty, $d9ba7950afda9111$var$K = {
    current: null
}, $d9ba7950afda9111$var$L = {
    key: !0,
    ref: !0,
    __self: !0,
    __source: !0
};
function $d9ba7950afda9111$var$M(a, b, e) {
    var d, c = {}, k = null, h = null;
    if (null != b) for(d in void 0 !== b.ref && (h = b.ref), void 0 !== b.key && (k = "" + b.key), b)$d9ba7950afda9111$var$J.call(b, d) && !$d9ba7950afda9111$var$L.hasOwnProperty(d) && (c[d] = b[d]);
    var g = arguments.length - 2;
    if (1 === g) c.children = e;
    else if (1 < g) {
        for(var f = Array(g), m = 0; m < g; m++)f[m] = arguments[m + 2];
        c.children = f;
    }
    if (a && a.defaultProps) for(d in g = a.defaultProps, g)void 0 === c[d] && (c[d] = g[d]);
    return {
        $$typeof: $d9ba7950afda9111$var$l,
        type: a,
        key: k,
        ref: h,
        props: c,
        _owner: $d9ba7950afda9111$var$K.current
    };
}
function $d9ba7950afda9111$var$N(a, b) {
    return {
        $$typeof: $d9ba7950afda9111$var$l,
        type: a.type,
        key: b,
        ref: a.ref,
        props: a.props,
        _owner: a._owner
    };
}
function $d9ba7950afda9111$var$O(a) {
    return "object" === typeof a && null !== a && a.$$typeof === $d9ba7950afda9111$var$l;
}
function $d9ba7950afda9111$var$escape(a) {
    var b = {
        "=": "=0",
        ":": "=2"
    };
    return "$" + a.replace(/[=:]/g, function(a) {
        return b[a];
    });
}
var $d9ba7950afda9111$var$P = /\/+/g;
function $d9ba7950afda9111$var$Q(a, b) {
    return "object" === typeof a && null !== a && null != a.key ? $d9ba7950afda9111$var$escape("" + a.key) : b.toString(36);
}
function $d9ba7950afda9111$var$R(a, b, e, d, c) {
    var k = typeof a;
    if ("undefined" === k || "boolean" === k) a = null;
    var h = !1;
    if (null === a) h = !0;
    else switch(k){
        case "string":
        case "number":
            h = !0;
            break;
        case "object":
            switch(a.$$typeof){
                case $d9ba7950afda9111$var$l:
                case $d9ba7950afda9111$var$n:
                    h = !0;
            }
    }
    if (h) return h = a, c = c(h), a = "" === d ? "." + $d9ba7950afda9111$var$Q(h, 0) : d, $d9ba7950afda9111$var$I(c) ? (e = "", null != a && (e = a.replace($d9ba7950afda9111$var$P, "$&/") + "/"), $d9ba7950afda9111$var$R(c, b, e, "", function(a) {
        return a;
    })) : null != c && ($d9ba7950afda9111$var$O(c) && (c = $d9ba7950afda9111$var$N(c, e + (!c.key || h && h.key === c.key ? "" : ("" + c.key).replace($d9ba7950afda9111$var$P, "$&/") + "/") + a)), b.push(c)), 1;
    h = 0;
    d = "" === d ? "." : d + ":";
    if ($d9ba7950afda9111$var$I(a)) for(var g = 0; g < a.length; g++){
        k = a[g];
        var f = d + $d9ba7950afda9111$var$Q(k, g);
        h += $d9ba7950afda9111$var$R(k, b, e, f, c);
    }
    else if (f = $d9ba7950afda9111$var$A(a), "function" === typeof f) for(a = f.call(a), g = 0; !(k = a.next()).done;)k = k.value, f = d + $d9ba7950afda9111$var$Q(k, g++), h += $d9ba7950afda9111$var$R(k, b, e, f, c);
    else if ("object" === k) throw b = String(a), Error("Objects are not valid as a React child (found: " + ("[object Object]" === b ? "object with keys {" + Object.keys(a).join(", ") + "}" : b) + "). If you meant to render a collection of children, use an array instead.");
    return h;
}
function $d9ba7950afda9111$var$S(a, b, e) {
    if (null == a) return a;
    var d = [], c = 0;
    $d9ba7950afda9111$var$R(a, d, "", "", function(a) {
        return b.call(e, a, c++);
    });
    return d;
}
function $d9ba7950afda9111$var$T(a) {
    if (-1 === a._status) {
        var b = a._result;
        b = b();
        b.then(function(b) {
            if (0 === a._status || -1 === a._status) a._status = 1, a._result = b;
        }, function(b) {
            if (0 === a._status || -1 === a._status) a._status = 2, a._result = b;
        });
        -1 === a._status && (a._status = 0, a._result = b);
    }
    if (1 === a._status) return a._result.default;
    throw a._result;
}
var $d9ba7950afda9111$var$U = {
    current: null
}, $d9ba7950afda9111$var$V = {
    transition: null
}, $d9ba7950afda9111$var$W = {
    ReactCurrentDispatcher: $d9ba7950afda9111$var$U,
    ReactCurrentBatchConfig: $d9ba7950afda9111$var$V,
    ReactCurrentOwner: $d9ba7950afda9111$var$K
};
$d9ba7950afda9111$export$dca3b0875bd9a954 = {
    map: $d9ba7950afda9111$var$S,
    forEach: function(a, b, e) {
        $d9ba7950afda9111$var$S(a, function() {
            b.apply(this, arguments);
        }, e);
    },
    count: function(a) {
        var b = 0;
        $d9ba7950afda9111$var$S(a, function() {
            b++;
        });
        return b;
    },
    toArray: function(a) {
        return $d9ba7950afda9111$var$S(a, function(a) {
            return a;
        }) || [];
    },
    only: function(a) {
        if (!$d9ba7950afda9111$var$O(a)) throw Error("React.Children.only expected to receive a single React element child.");
        return a;
    }
};
$d9ba7950afda9111$export$16fa2f45be04daa8 = $d9ba7950afda9111$var$E;
$d9ba7950afda9111$export$ffb0004e005737fa = $d9ba7950afda9111$var$p;
$d9ba7950afda9111$export$e2c29f18771995cb = $d9ba7950afda9111$var$r;
$d9ba7950afda9111$export$221d75b3f55bb0bd = $d9ba7950afda9111$var$G;
$d9ba7950afda9111$export$5f8d39834fd61797 = $d9ba7950afda9111$var$q;
$d9ba7950afda9111$export$74bf444e3cd11ea5 = $d9ba7950afda9111$var$w;
$d9ba7950afda9111$export$ae55be85d98224ed = $d9ba7950afda9111$var$W;
$d9ba7950afda9111$export$e530037191fcd5d7 = function(a, b, e) {
    if (null === a || void 0 === a) throw Error("React.cloneElement(...): The argument must be a React element, but you passed " + a + ".");
    var d = $d9ba7950afda9111$var$C({}, a.props), c = a.key, k = a.ref, h = a._owner;
    if (null != b) {
        void 0 !== b.ref && (k = b.ref, h = $d9ba7950afda9111$var$K.current);
        void 0 !== b.key && (c = "" + b.key);
        if (a.type && a.type.defaultProps) var g = a.type.defaultProps;
        for(f in b)$d9ba7950afda9111$var$J.call(b, f) && !$d9ba7950afda9111$var$L.hasOwnProperty(f) && (d[f] = void 0 === b[f] && void 0 !== g ? g[f] : b[f]);
    }
    var f = arguments.length - 2;
    if (1 === f) d.children = e;
    else if (1 < f) {
        g = Array(f);
        for(var m = 0; m < f; m++)g[m] = arguments[m + 2];
        d.children = g;
    }
    return {
        $$typeof: $d9ba7950afda9111$var$l,
        type: a.type,
        key: c,
        ref: k,
        props: d,
        _owner: h
    };
};
$d9ba7950afda9111$export$fd42f52fd3ae1109 = function(a) {
    a = {
        $$typeof: $d9ba7950afda9111$var$u,
        _currentValue: a,
        _currentValue2: a,
        _threadCount: 0,
        Provider: null,
        Consumer: null,
        _defaultValue: null,
        _globalName: null
    };
    a.Provider = {
        $$typeof: $d9ba7950afda9111$var$t,
        _context: a
    };
    return a.Consumer = a;
};
$d9ba7950afda9111$export$c8a8987d4410bf2d = $d9ba7950afda9111$var$M;
$d9ba7950afda9111$export$d38cd72104c1f0e9 = function(a) {
    var b = $d9ba7950afda9111$var$M.bind(null, a);
    b.type = a;
    return b;
};
$d9ba7950afda9111$export$7d1e3a5e95ceca43 = function() {
    return {
        current: null
    };
};
$d9ba7950afda9111$export$257a8862b851cb5b = function(a) {
    return {
        $$typeof: $d9ba7950afda9111$var$v,
        render: a
    };
};
$d9ba7950afda9111$export$a8257692ac88316c = $d9ba7950afda9111$var$O;
$d9ba7950afda9111$export$488013bae63b21da = function(a) {
    return {
        $$typeof: $d9ba7950afda9111$var$y,
        _payload: {
            _status: -1,
            _result: a
        },
        _init: $d9ba7950afda9111$var$T
    };
};
$d9ba7950afda9111$export$7c73462e0d25e514 = function(a, b) {
    return {
        $$typeof: $d9ba7950afda9111$var$x,
        type: a,
        compare: void 0 === b ? null : b
    };
};
$d9ba7950afda9111$export$7568632d0d33d16d = function(a) {
    var b = $d9ba7950afda9111$var$V.transition;
    $d9ba7950afda9111$var$V.transition = {};
    try {
        a();
    } finally{
        $d9ba7950afda9111$var$V.transition = b;
    }
};
$d9ba7950afda9111$export$88948ce120ea2619 = function() {
    throw Error("act(...) is not supported in production builds of React.");
};
$d9ba7950afda9111$export$35808ee640e87ca7 = function(a, b) {
    return $d9ba7950afda9111$var$U.current.useCallback(a, b);
};
$d9ba7950afda9111$export$fae74005e78b1a27 = function(a) {
    return $d9ba7950afda9111$var$U.current.useContext(a);
};
$d9ba7950afda9111$export$dc8fbce3eb94dc1e = function() {};
$d9ba7950afda9111$export$6a7bc4e911dc01cf = function(a) {
    return $d9ba7950afda9111$var$U.current.useDeferredValue(a);
};
$d9ba7950afda9111$export$6d9c69b0de29b591 = function(a, b) {
    return $d9ba7950afda9111$var$U.current.useEffect(a, b);
};
$d9ba7950afda9111$export$f680877a34711e37 = function() {
    return $d9ba7950afda9111$var$U.current.useId();
};
$d9ba7950afda9111$export$d5a552a76deda3c2 = function(a, b, e) {
    return $d9ba7950afda9111$var$U.current.useImperativeHandle(a, b, e);
};
$d9ba7950afda9111$export$aaabe4eda9ed9969 = function(a, b) {
    return $d9ba7950afda9111$var$U.current.useInsertionEffect(a, b);
};
$d9ba7950afda9111$export$e5c5a5f917a5871c = function(a, b) {
    return $d9ba7950afda9111$var$U.current.useLayoutEffect(a, b);
};
$d9ba7950afda9111$export$1538c33de8887b59 = function(a, b) {
    return $d9ba7950afda9111$var$U.current.useMemo(a, b);
};
$d9ba7950afda9111$export$13e3392192263954 = function(a, b, e) {
    return $d9ba7950afda9111$var$U.current.useReducer(a, b, e);
};
$d9ba7950afda9111$export$b8f5890fc79d6aca = function(a) {
    return $d9ba7950afda9111$var$U.current.useRef(a);
};
$d9ba7950afda9111$export$60241385465d0a34 = function(a) {
    return $d9ba7950afda9111$var$U.current.useState(a);
};
$d9ba7950afda9111$export$306c0aa65ff9ec16 = function(a, b, e) {
    return $d9ba7950afda9111$var$U.current.useSyncExternalStore(a, b, e);
};
$d9ba7950afda9111$export$7b286972b8d8ccbf = function() {
    return $d9ba7950afda9111$var$U.current.useTransition();
};
$d9ba7950afda9111$export$83d89fbfd8236492 = "18.2.0";

});



parcelRequire.register("hNEfo", function(module, exports) {

$parcel$export(module.exports, "__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED", function () { return $cf563b86f33a2bc2$export$ae55be85d98224ed; }, function (v) { return $cf563b86f33a2bc2$export$ae55be85d98224ed = v; });
$parcel$export(module.exports, "createPortal", function () { return $cf563b86f33a2bc2$export$d39a5bbd09211389; }, function (v) { return $cf563b86f33a2bc2$export$d39a5bbd09211389 = v; });
$parcel$export(module.exports, "createRoot", function () { return $cf563b86f33a2bc2$export$882461b6382ed46c; }, function (v) { return $cf563b86f33a2bc2$export$882461b6382ed46c = v; });
$parcel$export(module.exports, "findDOMNode", function () { return $cf563b86f33a2bc2$export$466bfc07425424d5; }, function (v) { return $cf563b86f33a2bc2$export$466bfc07425424d5 = v; });
$parcel$export(module.exports, "flushSync", function () { return $cf563b86f33a2bc2$export$cd75ccfd720a3cd4; }, function (v) { return $cf563b86f33a2bc2$export$cd75ccfd720a3cd4 = v; });
$parcel$export(module.exports, "hydrate", function () { return $cf563b86f33a2bc2$export$fa8d919ba61d84db; }, function (v) { return $cf563b86f33a2bc2$export$fa8d919ba61d84db = v; });
$parcel$export(module.exports, "hydrateRoot", function () { return $cf563b86f33a2bc2$export$757ceba2d55c277e; }, function (v) { return $cf563b86f33a2bc2$export$757ceba2d55c277e = v; });
$parcel$export(module.exports, "render", function () { return $cf563b86f33a2bc2$export$b3890eb0ae9dca99; }, function (v) { return $cf563b86f33a2bc2$export$b3890eb0ae9dca99 = v; });
$parcel$export(module.exports, "unmountComponentAtNode", function () { return $cf563b86f33a2bc2$export$502457920280e6be; }, function (v) { return $cf563b86f33a2bc2$export$502457920280e6be = v; });
$parcel$export(module.exports, "unstable_batchedUpdates", function () { return $cf563b86f33a2bc2$export$c78a37762a8d58e1; }, function (v) { return $cf563b86f33a2bc2$export$c78a37762a8d58e1 = v; });
$parcel$export(module.exports, "unstable_renderSubtreeIntoContainer", function () { return $cf563b86f33a2bc2$export$dc54d992c10e8a18; }, function (v) { return $cf563b86f33a2bc2$export$dc54d992c10e8a18 = v; });
$parcel$export(module.exports, "version", function () { return $cf563b86f33a2bc2$export$83d89fbfd8236492; }, function (v) { return $cf563b86f33a2bc2$export$83d89fbfd8236492 = v; });
/**
 * @license React
 * react-dom.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ /*
 Modernizr 3.0.0pre (Custom Build) | MIT
*/ var $cf563b86f33a2bc2$export$ae55be85d98224ed;
var $cf563b86f33a2bc2$export$d39a5bbd09211389;
var $cf563b86f33a2bc2$export$882461b6382ed46c;
var $cf563b86f33a2bc2$export$466bfc07425424d5;
var $cf563b86f33a2bc2$export$cd75ccfd720a3cd4;
var $cf563b86f33a2bc2$export$fa8d919ba61d84db;
var $cf563b86f33a2bc2$export$757ceba2d55c277e;
var $cf563b86f33a2bc2$export$b3890eb0ae9dca99;
var $cf563b86f33a2bc2$export$502457920280e6be;
var $cf563b86f33a2bc2$export$c78a37762a8d58e1;
var $cf563b86f33a2bc2$export$dc54d992c10e8a18;
var $cf563b86f33a2bc2$export$83d89fbfd8236492;
"use strict";

var $laauJ = parcelRequire("laauJ");

var $aYOb9 = parcelRequire("aYOb9");
function $cf563b86f33a2bc2$var$p(a) {
    for(var b = "https://reactjs.org/docs/error-decoder.html?invariant=" + a, c = 1; c < arguments.length; c++)b += "&args[]=" + encodeURIComponent(arguments[c]);
    return "Minified React error #" + a + "; visit " + b + " for the full message or use the non-minified dev environment for full errors and additional helpful warnings.";
}
var $cf563b86f33a2bc2$var$da = new Set, $cf563b86f33a2bc2$var$ea = {};
function $cf563b86f33a2bc2$var$fa(a, b) {
    $cf563b86f33a2bc2$var$ha(a, b);
    $cf563b86f33a2bc2$var$ha(a + "Capture", b);
}
function $cf563b86f33a2bc2$var$ha(a, b) {
    $cf563b86f33a2bc2$var$ea[a] = b;
    for(a = 0; a < b.length; a++)$cf563b86f33a2bc2$var$da.add(b[a]);
}
var $cf563b86f33a2bc2$var$ia = !("undefined" === typeof window || "undefined" === typeof window.document || "undefined" === typeof window.document.createElement), $cf563b86f33a2bc2$var$ja = Object.prototype.hasOwnProperty, $cf563b86f33a2bc2$var$ka = /^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/, $cf563b86f33a2bc2$var$la = {}, $cf563b86f33a2bc2$var$ma = {};
function $cf563b86f33a2bc2$var$oa(a) {
    if ($cf563b86f33a2bc2$var$ja.call($cf563b86f33a2bc2$var$ma, a)) return !0;
    if ($cf563b86f33a2bc2$var$ja.call($cf563b86f33a2bc2$var$la, a)) return !1;
    if ($cf563b86f33a2bc2$var$ka.test(a)) return $cf563b86f33a2bc2$var$ma[a] = !0;
    $cf563b86f33a2bc2$var$la[a] = !0;
    return !1;
}
function $cf563b86f33a2bc2$var$pa(a, b, c, d) {
    if (null !== c && 0 === c.type) return !1;
    switch(typeof b){
        case "function":
        case "symbol":
            return !0;
        case "boolean":
            if (d) return !1;
            if (null !== c) return !c.acceptsBooleans;
            a = a.toLowerCase().slice(0, 5);
            return "data-" !== a && "aria-" !== a;
        default:
            return !1;
    }
}
function $cf563b86f33a2bc2$var$qa(a, b, c, d) {
    if (null === b || "undefined" === typeof b || $cf563b86f33a2bc2$var$pa(a, b, c, d)) return !0;
    if (d) return !1;
    if (null !== c) switch(c.type){
        case 3:
            return !b;
        case 4:
            return !1 === b;
        case 5:
            return isNaN(b);
        case 6:
            return isNaN(b) || 1 > b;
    }
    return !1;
}
function $cf563b86f33a2bc2$var$v(a, b, c, d, e, f, g) {
    this.acceptsBooleans = 2 === b || 3 === b || 4 === b;
    this.attributeName = d;
    this.attributeNamespace = e;
    this.mustUseProperty = c;
    this.propertyName = a;
    this.type = b;
    this.sanitizeURL = f;
    this.removeEmptyString = g;
}
var $cf563b86f33a2bc2$var$z = {};
"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style".split(" ").forEach(function(a) {
    $cf563b86f33a2bc2$var$z[a] = new $cf563b86f33a2bc2$var$v(a, 0, !1, a, null, !1, !1);
});
[
    [
        "acceptCharset",
        "accept-charset"
    ],
    [
        "className",
        "class"
    ],
    [
        "htmlFor",
        "for"
    ],
    [
        "httpEquiv",
        "http-equiv"
    ]
].forEach(function(a) {
    var b = a[0];
    $cf563b86f33a2bc2$var$z[b] = new $cf563b86f33a2bc2$var$v(b, 1, !1, a[1], null, !1, !1);
});
[
    "contentEditable",
    "draggable",
    "spellCheck",
    "value"
].forEach(function(a) {
    $cf563b86f33a2bc2$var$z[a] = new $cf563b86f33a2bc2$var$v(a, 2, !1, a.toLowerCase(), null, !1, !1);
});
[
    "autoReverse",
    "externalResourcesRequired",
    "focusable",
    "preserveAlpha"
].forEach(function(a) {
    $cf563b86f33a2bc2$var$z[a] = new $cf563b86f33a2bc2$var$v(a, 2, !1, a, null, !1, !1);
});
"allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture disableRemotePlayback formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope".split(" ").forEach(function(a) {
    $cf563b86f33a2bc2$var$z[a] = new $cf563b86f33a2bc2$var$v(a, 3, !1, a.toLowerCase(), null, !1, !1);
});
[
    "checked",
    "multiple",
    "muted",
    "selected"
].forEach(function(a) {
    $cf563b86f33a2bc2$var$z[a] = new $cf563b86f33a2bc2$var$v(a, 3, !0, a, null, !1, !1);
});
[
    "capture",
    "download"
].forEach(function(a) {
    $cf563b86f33a2bc2$var$z[a] = new $cf563b86f33a2bc2$var$v(a, 4, !1, a, null, !1, !1);
});
[
    "cols",
    "rows",
    "size",
    "span"
].forEach(function(a) {
    $cf563b86f33a2bc2$var$z[a] = new $cf563b86f33a2bc2$var$v(a, 6, !1, a, null, !1, !1);
});
[
    "rowSpan",
    "start"
].forEach(function(a) {
    $cf563b86f33a2bc2$var$z[a] = new $cf563b86f33a2bc2$var$v(a, 5, !1, a.toLowerCase(), null, !1, !1);
});
var $cf563b86f33a2bc2$var$ra = /[\-:]([a-z])/g;
function $cf563b86f33a2bc2$var$sa(a) {
    return a[1].toUpperCase();
}
"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height".split(" ").forEach(function(a) {
    var b = a.replace($cf563b86f33a2bc2$var$ra, $cf563b86f33a2bc2$var$sa);
    $cf563b86f33a2bc2$var$z[b] = new $cf563b86f33a2bc2$var$v(b, 1, !1, a, null, !1, !1);
});
"xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type".split(" ").forEach(function(a) {
    var b = a.replace($cf563b86f33a2bc2$var$ra, $cf563b86f33a2bc2$var$sa);
    $cf563b86f33a2bc2$var$z[b] = new $cf563b86f33a2bc2$var$v(b, 1, !1, a, "http://www.w3.org/1999/xlink", !1, !1);
});
[
    "xml:base",
    "xml:lang",
    "xml:space"
].forEach(function(a) {
    var b = a.replace($cf563b86f33a2bc2$var$ra, $cf563b86f33a2bc2$var$sa);
    $cf563b86f33a2bc2$var$z[b] = new $cf563b86f33a2bc2$var$v(b, 1, !1, a, "http://www.w3.org/XML/1998/namespace", !1, !1);
});
[
    "tabIndex",
    "crossOrigin"
].forEach(function(a) {
    $cf563b86f33a2bc2$var$z[a] = new $cf563b86f33a2bc2$var$v(a, 1, !1, a.toLowerCase(), null, !1, !1);
});
$cf563b86f33a2bc2$var$z.xlinkHref = new $cf563b86f33a2bc2$var$v("xlinkHref", 1, !1, "xlink:href", "http://www.w3.org/1999/xlink", !0, !1);
[
    "src",
    "href",
    "action",
    "formAction"
].forEach(function(a) {
    $cf563b86f33a2bc2$var$z[a] = new $cf563b86f33a2bc2$var$v(a, 1, !1, a.toLowerCase(), null, !0, !0);
});
function $cf563b86f33a2bc2$var$ta(a, b, c, d) {
    var e = $cf563b86f33a2bc2$var$z.hasOwnProperty(b) ? $cf563b86f33a2bc2$var$z[b] : null;
    if (null !== e ? 0 !== e.type : d || !(2 < b.length) || "o" !== b[0] && "O" !== b[0] || "n" !== b[1] && "N" !== b[1]) $cf563b86f33a2bc2$var$qa(b, c, e, d) && (c = null), d || null === e ? $cf563b86f33a2bc2$var$oa(b) && (null === c ? a.removeAttribute(b) : a.setAttribute(b, "" + c)) : e.mustUseProperty ? a[e.propertyName] = null === c ? 3 === e.type ? !1 : "" : c : (b = e.attributeName, d = e.attributeNamespace, null === c ? a.removeAttribute(b) : (e = e.type, c = 3 === e || 4 === e && !0 === c ? "" : "" + c, d ? a.setAttributeNS(d, b, c) : a.setAttribute(b, c)));
}
var $cf563b86f33a2bc2$var$ua = $laauJ.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED, $cf563b86f33a2bc2$var$va = Symbol.for("react.element"), $cf563b86f33a2bc2$var$wa = Symbol.for("react.portal"), $cf563b86f33a2bc2$var$ya = Symbol.for("react.fragment"), $cf563b86f33a2bc2$var$za = Symbol.for("react.strict_mode"), $cf563b86f33a2bc2$var$Aa = Symbol.for("react.profiler"), $cf563b86f33a2bc2$var$Ba = Symbol.for("react.provider"), $cf563b86f33a2bc2$var$Ca = Symbol.for("react.context"), $cf563b86f33a2bc2$var$Da = Symbol.for("react.forward_ref"), $cf563b86f33a2bc2$var$Ea = Symbol.for("react.suspense"), $cf563b86f33a2bc2$var$Fa = Symbol.for("react.suspense_list"), $cf563b86f33a2bc2$var$Ga = Symbol.for("react.memo"), $cf563b86f33a2bc2$var$Ha = Symbol.for("react.lazy");
Symbol.for("react.scope");
Symbol.for("react.debug_trace_mode");
var $cf563b86f33a2bc2$var$Ia = Symbol.for("react.offscreen");
Symbol.for("react.legacy_hidden");
Symbol.for("react.cache");
Symbol.for("react.tracing_marker");
var $cf563b86f33a2bc2$var$Ja = Symbol.iterator;
function $cf563b86f33a2bc2$var$Ka(a) {
    if (null === a || "object" !== typeof a) return null;
    a = $cf563b86f33a2bc2$var$Ja && a[$cf563b86f33a2bc2$var$Ja] || a["@@iterator"];
    return "function" === typeof a ? a : null;
}
var $cf563b86f33a2bc2$var$A = Object.assign, $cf563b86f33a2bc2$var$La;
function $cf563b86f33a2bc2$var$Ma(a) {
    if (void 0 === $cf563b86f33a2bc2$var$La) try {
        throw Error();
    } catch (c) {
        var b = c.stack.trim().match(/\n( *(at )?)/);
        $cf563b86f33a2bc2$var$La = b && b[1] || "";
    }
    return "\n" + $cf563b86f33a2bc2$var$La + a;
}
var $cf563b86f33a2bc2$var$Na = !1;
function $cf563b86f33a2bc2$var$Oa(a, b) {
    if (!a || $cf563b86f33a2bc2$var$Na) return "";
    $cf563b86f33a2bc2$var$Na = !0;
    var c = Error.prepareStackTrace;
    Error.prepareStackTrace = void 0;
    try {
        if (b) {
            if (b = function() {
                throw Error();
            }, Object.defineProperty(b.prototype, "props", {
                set: function() {
                    throw Error();
                }
            }), "object" === typeof Reflect && Reflect.construct) {
                try {
                    Reflect.construct(b, []);
                } catch (l) {
                    var d = l;
                }
                Reflect.construct(a, [], b);
            } else {
                try {
                    b.call();
                } catch (l) {
                    d = l;
                }
                a.call(b.prototype);
            }
        } else {
            try {
                throw Error();
            } catch (l) {
                d = l;
            }
            a();
        }
    } catch (l) {
        if (l && d && "string" === typeof l.stack) {
            for(var e = l.stack.split("\n"), f = d.stack.split("\n"), g = e.length - 1, h = f.length - 1; 1 <= g && 0 <= h && e[g] !== f[h];)h--;
            for(; 1 <= g && 0 <= h; g--, h--)if (e[g] !== f[h]) {
                if (1 !== g || 1 !== h) {
                    do if (g--, h--, 0 > h || e[g] !== f[h]) {
                        var k = "\n" + e[g].replace(" at new ", " at ");
                        a.displayName && k.includes("<anonymous>") && (k = k.replace("<anonymous>", a.displayName));
                        return k;
                    }
                    while (1 <= g && 0 <= h);
                }
                break;
            }
        }
    } finally{
        $cf563b86f33a2bc2$var$Na = !1, Error.prepareStackTrace = c;
    }
    return (a = a ? a.displayName || a.name : "") ? $cf563b86f33a2bc2$var$Ma(a) : "";
}
function $cf563b86f33a2bc2$var$Pa(a) {
    switch(a.tag){
        case 5:
            return $cf563b86f33a2bc2$var$Ma(a.type);
        case 16:
            return $cf563b86f33a2bc2$var$Ma("Lazy");
        case 13:
            return $cf563b86f33a2bc2$var$Ma("Suspense");
        case 19:
            return $cf563b86f33a2bc2$var$Ma("SuspenseList");
        case 0:
        case 2:
        case 15:
            return a = $cf563b86f33a2bc2$var$Oa(a.type, !1), a;
        case 11:
            return a = $cf563b86f33a2bc2$var$Oa(a.type.render, !1), a;
        case 1:
            return a = $cf563b86f33a2bc2$var$Oa(a.type, !0), a;
        default:
            return "";
    }
}
function $cf563b86f33a2bc2$var$Qa(a) {
    if (null == a) return null;
    if ("function" === typeof a) return a.displayName || a.name || null;
    if ("string" === typeof a) return a;
    switch(a){
        case $cf563b86f33a2bc2$var$ya:
            return "Fragment";
        case $cf563b86f33a2bc2$var$wa:
            return "Portal";
        case $cf563b86f33a2bc2$var$Aa:
            return "Profiler";
        case $cf563b86f33a2bc2$var$za:
            return "StrictMode";
        case $cf563b86f33a2bc2$var$Ea:
            return "Suspense";
        case $cf563b86f33a2bc2$var$Fa:
            return "SuspenseList";
    }
    if ("object" === typeof a) switch(a.$$typeof){
        case $cf563b86f33a2bc2$var$Ca:
            return (a.displayName || "Context") + ".Consumer";
        case $cf563b86f33a2bc2$var$Ba:
            return (a._context.displayName || "Context") + ".Provider";
        case $cf563b86f33a2bc2$var$Da:
            var b = a.render;
            a = a.displayName;
            a || (a = b.displayName || b.name || "", a = "" !== a ? "ForwardRef(" + a + ")" : "ForwardRef");
            return a;
        case $cf563b86f33a2bc2$var$Ga:
            return b = a.displayName || null, null !== b ? b : $cf563b86f33a2bc2$var$Qa(a.type) || "Memo";
        case $cf563b86f33a2bc2$var$Ha:
            b = a._payload;
            a = a._init;
            try {
                return $cf563b86f33a2bc2$var$Qa(a(b));
            } catch (c) {}
    }
    return null;
}
function $cf563b86f33a2bc2$var$Ra(a) {
    var b = a.type;
    switch(a.tag){
        case 24:
            return "Cache";
        case 9:
            return (b.displayName || "Context") + ".Consumer";
        case 10:
            return (b._context.displayName || "Context") + ".Provider";
        case 18:
            return "DehydratedFragment";
        case 11:
            return a = b.render, a = a.displayName || a.name || "", b.displayName || ("" !== a ? "ForwardRef(" + a + ")" : "ForwardRef");
        case 7:
            return "Fragment";
        case 5:
            return b;
        case 4:
            return "Portal";
        case 3:
            return "Root";
        case 6:
            return "Text";
        case 16:
            return $cf563b86f33a2bc2$var$Qa(b);
        case 8:
            return b === $cf563b86f33a2bc2$var$za ? "StrictMode" : "Mode";
        case 22:
            return "Offscreen";
        case 12:
            return "Profiler";
        case 21:
            return "Scope";
        case 13:
            return "Suspense";
        case 19:
            return "SuspenseList";
        case 25:
            return "TracingMarker";
        case 1:
        case 0:
        case 17:
        case 2:
        case 14:
        case 15:
            if ("function" === typeof b) return b.displayName || b.name || null;
            if ("string" === typeof b) return b;
    }
    return null;
}
function $cf563b86f33a2bc2$var$Sa(a) {
    switch(typeof a){
        case "boolean":
        case "number":
        case "string":
        case "undefined":
            return a;
        case "object":
            return a;
        default:
            return "";
    }
}
function $cf563b86f33a2bc2$var$Ta(a) {
    var b = a.type;
    return (a = a.nodeName) && "input" === a.toLowerCase() && ("checkbox" === b || "radio" === b);
}
function $cf563b86f33a2bc2$var$Ua(a) {
    var b = $cf563b86f33a2bc2$var$Ta(a) ? "checked" : "value", c = Object.getOwnPropertyDescriptor(a.constructor.prototype, b), d = "" + a[b];
    if (!a.hasOwnProperty(b) && "undefined" !== typeof c && "function" === typeof c.get && "function" === typeof c.set) {
        var e = c.get, f = c.set;
        Object.defineProperty(a, b, {
            configurable: !0,
            get: function() {
                return e.call(this);
            },
            set: function(a) {
                d = "" + a;
                f.call(this, a);
            }
        });
        Object.defineProperty(a, b, {
            enumerable: c.enumerable
        });
        return {
            getValue: function() {
                return d;
            },
            setValue: function(a) {
                d = "" + a;
            },
            stopTracking: function() {
                a._valueTracker = null;
                delete a[b];
            }
        };
    }
}
function $cf563b86f33a2bc2$var$Va(a) {
    a._valueTracker || (a._valueTracker = $cf563b86f33a2bc2$var$Ua(a));
}
function $cf563b86f33a2bc2$var$Wa(a) {
    if (!a) return !1;
    var b = a._valueTracker;
    if (!b) return !0;
    var c = b.getValue();
    var d = "";
    a && (d = $cf563b86f33a2bc2$var$Ta(a) ? a.checked ? "true" : "false" : a.value);
    a = d;
    return a !== c ? (b.setValue(a), !0) : !1;
}
function $cf563b86f33a2bc2$var$Xa(a) {
    a = a || ("undefined" !== typeof document ? document : void 0);
    if ("undefined" === typeof a) return null;
    try {
        return a.activeElement || a.body;
    } catch (b) {
        return a.body;
    }
}
function $cf563b86f33a2bc2$var$Ya(a, b) {
    var c = b.checked;
    return $cf563b86f33a2bc2$var$A({}, b, {
        defaultChecked: void 0,
        defaultValue: void 0,
        value: void 0,
        checked: null != c ? c : a._wrapperState.initialChecked
    });
}
function $cf563b86f33a2bc2$var$Za(a, b) {
    var c = null == b.defaultValue ? "" : b.defaultValue, d = null != b.checked ? b.checked : b.defaultChecked;
    c = $cf563b86f33a2bc2$var$Sa(null != b.value ? b.value : c);
    a._wrapperState = {
        initialChecked: d,
        initialValue: c,
        controlled: "checkbox" === b.type || "radio" === b.type ? null != b.checked : null != b.value
    };
}
function $cf563b86f33a2bc2$var$ab(a, b) {
    b = b.checked;
    null != b && $cf563b86f33a2bc2$var$ta(a, "checked", b, !1);
}
function $cf563b86f33a2bc2$var$bb(a, b) {
    $cf563b86f33a2bc2$var$ab(a, b);
    var c = $cf563b86f33a2bc2$var$Sa(b.value), d = b.type;
    if (null != c) {
        if ("number" === d) {
            if (0 === c && "" === a.value || a.value != c) a.value = "" + c;
        } else a.value !== "" + c && (a.value = "" + c);
    } else if ("submit" === d || "reset" === d) {
        a.removeAttribute("value");
        return;
    }
    b.hasOwnProperty("value") ? $cf563b86f33a2bc2$var$cb(a, b.type, c) : b.hasOwnProperty("defaultValue") && $cf563b86f33a2bc2$var$cb(a, b.type, $cf563b86f33a2bc2$var$Sa(b.defaultValue));
    null == b.checked && null != b.defaultChecked && (a.defaultChecked = !!b.defaultChecked);
}
function $cf563b86f33a2bc2$var$db(a, b, c) {
    if (b.hasOwnProperty("value") || b.hasOwnProperty("defaultValue")) {
        var d = b.type;
        if (!("submit" !== d && "reset" !== d || void 0 !== b.value && null !== b.value)) return;
        b = "" + a._wrapperState.initialValue;
        c || b === a.value || (a.value = b);
        a.defaultValue = b;
    }
    c = a.name;
    "" !== c && (a.name = "");
    a.defaultChecked = !!a._wrapperState.initialChecked;
    "" !== c && (a.name = c);
}
function $cf563b86f33a2bc2$var$cb(a, b, c) {
    if ("number" !== b || $cf563b86f33a2bc2$var$Xa(a.ownerDocument) !== a) null == c ? a.defaultValue = "" + a._wrapperState.initialValue : a.defaultValue !== "" + c && (a.defaultValue = "" + c);
}
var $cf563b86f33a2bc2$var$eb = Array.isArray;
function $cf563b86f33a2bc2$var$fb(a, b, c, d) {
    a = a.options;
    if (b) {
        b = {};
        for(var e = 0; e < c.length; e++)b["$" + c[e]] = !0;
        for(c = 0; c < a.length; c++)e = b.hasOwnProperty("$" + a[c].value), a[c].selected !== e && (a[c].selected = e), e && d && (a[c].defaultSelected = !0);
    } else {
        c = "" + $cf563b86f33a2bc2$var$Sa(c);
        b = null;
        for(e = 0; e < a.length; e++){
            if (a[e].value === c) {
                a[e].selected = !0;
                d && (a[e].defaultSelected = !0);
                return;
            }
            null !== b || a[e].disabled || (b = a[e]);
        }
        null !== b && (b.selected = !0);
    }
}
function $cf563b86f33a2bc2$var$gb(a, b) {
    if (null != b.dangerouslySetInnerHTML) throw Error($cf563b86f33a2bc2$var$p(91));
    return $cf563b86f33a2bc2$var$A({}, b, {
        value: void 0,
        defaultValue: void 0,
        children: "" + a._wrapperState.initialValue
    });
}
function $cf563b86f33a2bc2$var$hb(a, b) {
    var c = b.value;
    if (null == c) {
        c = b.children;
        b = b.defaultValue;
        if (null != c) {
            if (null != b) throw Error($cf563b86f33a2bc2$var$p(92));
            if ($cf563b86f33a2bc2$var$eb(c)) {
                if (1 < c.length) throw Error($cf563b86f33a2bc2$var$p(93));
                c = c[0];
            }
            b = c;
        }
        null == b && (b = "");
        c = b;
    }
    a._wrapperState = {
        initialValue: $cf563b86f33a2bc2$var$Sa(c)
    };
}
function $cf563b86f33a2bc2$var$ib(a, b) {
    var c = $cf563b86f33a2bc2$var$Sa(b.value), d = $cf563b86f33a2bc2$var$Sa(b.defaultValue);
    null != c && (c = "" + c, c !== a.value && (a.value = c), null == b.defaultValue && a.defaultValue !== c && (a.defaultValue = c));
    null != d && (a.defaultValue = "" + d);
}
function $cf563b86f33a2bc2$var$jb(a) {
    var b = a.textContent;
    b === a._wrapperState.initialValue && "" !== b && null !== b && (a.value = b);
}
function $cf563b86f33a2bc2$var$kb(a) {
    switch(a){
        case "svg":
            return "http://www.w3.org/2000/svg";
        case "math":
            return "http://www.w3.org/1998/Math/MathML";
        default:
            return "http://www.w3.org/1999/xhtml";
    }
}
function $cf563b86f33a2bc2$var$lb(a, b) {
    return null == a || "http://www.w3.org/1999/xhtml" === a ? $cf563b86f33a2bc2$var$kb(b) : "http://www.w3.org/2000/svg" === a && "foreignObject" === b ? "http://www.w3.org/1999/xhtml" : a;
}
var $cf563b86f33a2bc2$var$mb, $cf563b86f33a2bc2$var$nb = function(a) {
    return "undefined" !== typeof MSApp && MSApp.execUnsafeLocalFunction ? function(b, c, d, e) {
        MSApp.execUnsafeLocalFunction(function() {
            return a(b, c, d, e);
        });
    } : a;
}(function(a, b) {
    if ("http://www.w3.org/2000/svg" !== a.namespaceURI || "innerHTML" in a) a.innerHTML = b;
    else {
        $cf563b86f33a2bc2$var$mb = $cf563b86f33a2bc2$var$mb || document.createElement("div");
        $cf563b86f33a2bc2$var$mb.innerHTML = "<svg>" + b.valueOf().toString() + "</svg>";
        for(b = $cf563b86f33a2bc2$var$mb.firstChild; a.firstChild;)a.removeChild(a.firstChild);
        for(; b.firstChild;)a.appendChild(b.firstChild);
    }
});
function $cf563b86f33a2bc2$var$ob(a, b) {
    if (b) {
        var c = a.firstChild;
        if (c && c === a.lastChild && 3 === c.nodeType) {
            c.nodeValue = b;
            return;
        }
    }
    a.textContent = b;
}
var $cf563b86f33a2bc2$var$pb = {
    animationIterationCount: !0,
    aspectRatio: !0,
    borderImageOutset: !0,
    borderImageSlice: !0,
    borderImageWidth: !0,
    boxFlex: !0,
    boxFlexGroup: !0,
    boxOrdinalGroup: !0,
    columnCount: !0,
    columns: !0,
    flex: !0,
    flexGrow: !0,
    flexPositive: !0,
    flexShrink: !0,
    flexNegative: !0,
    flexOrder: !0,
    gridArea: !0,
    gridRow: !0,
    gridRowEnd: !0,
    gridRowSpan: !0,
    gridRowStart: !0,
    gridColumn: !0,
    gridColumnEnd: !0,
    gridColumnSpan: !0,
    gridColumnStart: !0,
    fontWeight: !0,
    lineClamp: !0,
    lineHeight: !0,
    opacity: !0,
    order: !0,
    orphans: !0,
    tabSize: !0,
    widows: !0,
    zIndex: !0,
    zoom: !0,
    fillOpacity: !0,
    floodOpacity: !0,
    stopOpacity: !0,
    strokeDasharray: !0,
    strokeDashoffset: !0,
    strokeMiterlimit: !0,
    strokeOpacity: !0,
    strokeWidth: !0
}, $cf563b86f33a2bc2$var$qb = [
    "Webkit",
    "ms",
    "Moz",
    "O"
];
Object.keys($cf563b86f33a2bc2$var$pb).forEach(function(a) {
    $cf563b86f33a2bc2$var$qb.forEach(function(b) {
        b = b + a.charAt(0).toUpperCase() + a.substring(1);
        $cf563b86f33a2bc2$var$pb[b] = $cf563b86f33a2bc2$var$pb[a];
    });
});
function $cf563b86f33a2bc2$var$rb(a, b, c) {
    return null == b || "boolean" === typeof b || "" === b ? "" : c || "number" !== typeof b || 0 === b || $cf563b86f33a2bc2$var$pb.hasOwnProperty(a) && $cf563b86f33a2bc2$var$pb[a] ? ("" + b).trim() : b + "px";
}
function $cf563b86f33a2bc2$var$sb(a, b) {
    a = a.style;
    for(var c in b)if (b.hasOwnProperty(c)) {
        var d = 0 === c.indexOf("--"), e = $cf563b86f33a2bc2$var$rb(c, b[c], d);
        "float" === c && (c = "cssFloat");
        d ? a.setProperty(c, e) : a[c] = e;
    }
}
var $cf563b86f33a2bc2$var$tb = $cf563b86f33a2bc2$var$A({
    menuitem: !0
}, {
    area: !0,
    base: !0,
    br: !0,
    col: !0,
    embed: !0,
    hr: !0,
    img: !0,
    input: !0,
    keygen: !0,
    link: !0,
    meta: !0,
    param: !0,
    source: !0,
    track: !0,
    wbr: !0
});
function $cf563b86f33a2bc2$var$ub(a, b) {
    if (b) {
        if ($cf563b86f33a2bc2$var$tb[a] && (null != b.children || null != b.dangerouslySetInnerHTML)) throw Error($cf563b86f33a2bc2$var$p(137, a));
        if (null != b.dangerouslySetInnerHTML) {
            if (null != b.children) throw Error($cf563b86f33a2bc2$var$p(60));
            if ("object" !== typeof b.dangerouslySetInnerHTML || !("__html" in b.dangerouslySetInnerHTML)) throw Error($cf563b86f33a2bc2$var$p(61));
        }
        if (null != b.style && "object" !== typeof b.style) throw Error($cf563b86f33a2bc2$var$p(62));
    }
}
function $cf563b86f33a2bc2$var$vb(a, b) {
    if (-1 === a.indexOf("-")) return "string" === typeof b.is;
    switch(a){
        case "annotation-xml":
        case "color-profile":
        case "font-face":
        case "font-face-src":
        case "font-face-uri":
        case "font-face-format":
        case "font-face-name":
        case "missing-glyph":
            return !1;
        default:
            return !0;
    }
}
var $cf563b86f33a2bc2$var$wb = null;
function $cf563b86f33a2bc2$var$xb(a) {
    a = a.target || a.srcElement || window;
    a.correspondingUseElement && (a = a.correspondingUseElement);
    return 3 === a.nodeType ? a.parentNode : a;
}
var $cf563b86f33a2bc2$var$yb = null, $cf563b86f33a2bc2$var$zb = null, $cf563b86f33a2bc2$var$Ab = null;
function $cf563b86f33a2bc2$var$Bb(a) {
    if (a = $cf563b86f33a2bc2$var$Cb(a)) {
        if ("function" !== typeof $cf563b86f33a2bc2$var$yb) throw Error($cf563b86f33a2bc2$var$p(280));
        var b = a.stateNode;
        b && (b = $cf563b86f33a2bc2$var$Db(b), $cf563b86f33a2bc2$var$yb(a.stateNode, a.type, b));
    }
}
function $cf563b86f33a2bc2$var$Eb(a) {
    $cf563b86f33a2bc2$var$zb ? $cf563b86f33a2bc2$var$Ab ? $cf563b86f33a2bc2$var$Ab.push(a) : $cf563b86f33a2bc2$var$Ab = [
        a
    ] : $cf563b86f33a2bc2$var$zb = a;
}
function $cf563b86f33a2bc2$var$Fb() {
    if ($cf563b86f33a2bc2$var$zb) {
        var a = $cf563b86f33a2bc2$var$zb, b = $cf563b86f33a2bc2$var$Ab;
        $cf563b86f33a2bc2$var$Ab = $cf563b86f33a2bc2$var$zb = null;
        $cf563b86f33a2bc2$var$Bb(a);
        if (b) for(a = 0; a < b.length; a++)$cf563b86f33a2bc2$var$Bb(b[a]);
    }
}
function $cf563b86f33a2bc2$var$Gb(a, b) {
    return a(b);
}
function $cf563b86f33a2bc2$var$Hb() {}
var $cf563b86f33a2bc2$var$Ib = !1;
function $cf563b86f33a2bc2$var$Jb(a, b, c) {
    if ($cf563b86f33a2bc2$var$Ib) return a(b, c);
    $cf563b86f33a2bc2$var$Ib = !0;
    try {
        return $cf563b86f33a2bc2$var$Gb(a, b, c);
    } finally{
        if ($cf563b86f33a2bc2$var$Ib = !1, null !== $cf563b86f33a2bc2$var$zb || null !== $cf563b86f33a2bc2$var$Ab) $cf563b86f33a2bc2$var$Hb(), $cf563b86f33a2bc2$var$Fb();
    }
}
function $cf563b86f33a2bc2$var$Kb(a, b) {
    var c = a.stateNode;
    if (null === c) return null;
    var d = $cf563b86f33a2bc2$var$Db(c);
    if (null === d) return null;
    c = d[b];
    a: switch(b){
        case "onClick":
        case "onClickCapture":
        case "onDoubleClick":
        case "onDoubleClickCapture":
        case "onMouseDown":
        case "onMouseDownCapture":
        case "onMouseMove":
        case "onMouseMoveCapture":
        case "onMouseUp":
        case "onMouseUpCapture":
        case "onMouseEnter":
            (d = !d.disabled) || (a = a.type, d = !("button" === a || "input" === a || "select" === a || "textarea" === a));
            a = !d;
            break a;
        default:
            a = !1;
    }
    if (a) return null;
    if (c && "function" !== typeof c) throw Error($cf563b86f33a2bc2$var$p(231, b, typeof c));
    return c;
}
var $cf563b86f33a2bc2$var$Lb = !1;
if ($cf563b86f33a2bc2$var$ia) try {
    var $cf563b86f33a2bc2$var$Mb = {};
    Object.defineProperty($cf563b86f33a2bc2$var$Mb, "passive", {
        get: function() {
            $cf563b86f33a2bc2$var$Lb = !0;
        }
    });
    window.addEventListener("test", $cf563b86f33a2bc2$var$Mb, $cf563b86f33a2bc2$var$Mb);
    window.removeEventListener("test", $cf563b86f33a2bc2$var$Mb, $cf563b86f33a2bc2$var$Mb);
} catch (a) {
    $cf563b86f33a2bc2$var$Lb = !1;
}
function $cf563b86f33a2bc2$var$Nb(a, b, c, d, e, f, g, h, k) {
    var l = Array.prototype.slice.call(arguments, 3);
    try {
        b.apply(c, l);
    } catch (m) {
        this.onError(m);
    }
}
var $cf563b86f33a2bc2$var$Ob = !1, $cf563b86f33a2bc2$var$Pb = null, $cf563b86f33a2bc2$var$Qb = !1, $cf563b86f33a2bc2$var$Rb = null, $cf563b86f33a2bc2$var$Sb = {
    onError: function(a) {
        $cf563b86f33a2bc2$var$Ob = !0;
        $cf563b86f33a2bc2$var$Pb = a;
    }
};
function $cf563b86f33a2bc2$var$Tb(a, b, c, d, e, f, g, h, k) {
    $cf563b86f33a2bc2$var$Ob = !1;
    $cf563b86f33a2bc2$var$Pb = null;
    $cf563b86f33a2bc2$var$Nb.apply($cf563b86f33a2bc2$var$Sb, arguments);
}
function $cf563b86f33a2bc2$var$Ub(a, b, c, d, e, f, g, h, k) {
    $cf563b86f33a2bc2$var$Tb.apply(this, arguments);
    if ($cf563b86f33a2bc2$var$Ob) {
        if ($cf563b86f33a2bc2$var$Ob) {
            var l = $cf563b86f33a2bc2$var$Pb;
            $cf563b86f33a2bc2$var$Ob = !1;
            $cf563b86f33a2bc2$var$Pb = null;
        } else throw Error($cf563b86f33a2bc2$var$p(198));
        $cf563b86f33a2bc2$var$Qb || ($cf563b86f33a2bc2$var$Qb = !0, $cf563b86f33a2bc2$var$Rb = l);
    }
}
function $cf563b86f33a2bc2$var$Vb(a) {
    var b = a, c = a;
    if (a.alternate) for(; b.return;)b = b.return;
    else {
        a = b;
        do b = a, 0 !== (b.flags & 4098) && (c = b.return), a = b.return;
        while (a);
    }
    return 3 === b.tag ? c : null;
}
function $cf563b86f33a2bc2$var$Wb(a) {
    if (13 === a.tag) {
        var b = a.memoizedState;
        null === b && (a = a.alternate, null !== a && (b = a.memoizedState));
        if (null !== b) return b.dehydrated;
    }
    return null;
}
function $cf563b86f33a2bc2$var$Xb(a) {
    if ($cf563b86f33a2bc2$var$Vb(a) !== a) throw Error($cf563b86f33a2bc2$var$p(188));
}
function $cf563b86f33a2bc2$var$Yb(a) {
    var b = a.alternate;
    if (!b) {
        b = $cf563b86f33a2bc2$var$Vb(a);
        if (null === b) throw Error($cf563b86f33a2bc2$var$p(188));
        return b !== a ? null : a;
    }
    for(var c = a, d = b;;){
        var e = c.return;
        if (null === e) break;
        var f = e.alternate;
        if (null === f) {
            d = e.return;
            if (null !== d) {
                c = d;
                continue;
            }
            break;
        }
        if (e.child === f.child) {
            for(f = e.child; f;){
                if (f === c) return $cf563b86f33a2bc2$var$Xb(e), a;
                if (f === d) return $cf563b86f33a2bc2$var$Xb(e), b;
                f = f.sibling;
            }
            throw Error($cf563b86f33a2bc2$var$p(188));
        }
        if (c.return !== d.return) c = e, d = f;
        else {
            for(var g = !1, h = e.child; h;){
                if (h === c) {
                    g = !0;
                    c = e;
                    d = f;
                    break;
                }
                if (h === d) {
                    g = !0;
                    d = e;
                    c = f;
                    break;
                }
                h = h.sibling;
            }
            if (!g) {
                for(h = f.child; h;){
                    if (h === c) {
                        g = !0;
                        c = f;
                        d = e;
                        break;
                    }
                    if (h === d) {
                        g = !0;
                        d = f;
                        c = e;
                        break;
                    }
                    h = h.sibling;
                }
                if (!g) throw Error($cf563b86f33a2bc2$var$p(189));
            }
        }
        if (c.alternate !== d) throw Error($cf563b86f33a2bc2$var$p(190));
    }
    if (3 !== c.tag) throw Error($cf563b86f33a2bc2$var$p(188));
    return c.stateNode.current === c ? a : b;
}
function $cf563b86f33a2bc2$var$Zb(a) {
    a = $cf563b86f33a2bc2$var$Yb(a);
    return null !== a ? $cf563b86f33a2bc2$var$$b(a) : null;
}
function $cf563b86f33a2bc2$var$$b(a) {
    if (5 === a.tag || 6 === a.tag) return a;
    for(a = a.child; null !== a;){
        var b = $cf563b86f33a2bc2$var$$b(a);
        if (null !== b) return b;
        a = a.sibling;
    }
    return null;
}
var $cf563b86f33a2bc2$var$ac = $aYOb9.unstable_scheduleCallback, $cf563b86f33a2bc2$var$bc = $aYOb9.unstable_cancelCallback, $cf563b86f33a2bc2$var$cc = $aYOb9.unstable_shouldYield, $cf563b86f33a2bc2$var$dc = $aYOb9.unstable_requestPaint, $cf563b86f33a2bc2$var$B = $aYOb9.unstable_now, $cf563b86f33a2bc2$var$ec = $aYOb9.unstable_getCurrentPriorityLevel, $cf563b86f33a2bc2$var$fc = $aYOb9.unstable_ImmediatePriority, $cf563b86f33a2bc2$var$gc = $aYOb9.unstable_UserBlockingPriority, $cf563b86f33a2bc2$var$hc = $aYOb9.unstable_NormalPriority, $cf563b86f33a2bc2$var$ic = $aYOb9.unstable_LowPriority, $cf563b86f33a2bc2$var$jc = $aYOb9.unstable_IdlePriority, $cf563b86f33a2bc2$var$kc = null, $cf563b86f33a2bc2$var$lc = null;
function $cf563b86f33a2bc2$var$mc(a) {
    if ($cf563b86f33a2bc2$var$lc && "function" === typeof $cf563b86f33a2bc2$var$lc.onCommitFiberRoot) try {
        $cf563b86f33a2bc2$var$lc.onCommitFiberRoot($cf563b86f33a2bc2$var$kc, a, void 0, 128 === (a.current.flags & 128));
    } catch (b) {}
}
var $cf563b86f33a2bc2$var$oc = Math.clz32 ? Math.clz32 : $cf563b86f33a2bc2$var$nc, $cf563b86f33a2bc2$var$pc = Math.log, $cf563b86f33a2bc2$var$qc = Math.LN2;
function $cf563b86f33a2bc2$var$nc(a) {
    a >>>= 0;
    return 0 === a ? 32 : 31 - ($cf563b86f33a2bc2$var$pc(a) / $cf563b86f33a2bc2$var$qc | 0) | 0;
}
var $cf563b86f33a2bc2$var$rc = 64, $cf563b86f33a2bc2$var$sc = 4194304;
function $cf563b86f33a2bc2$var$tc(a) {
    switch(a & -a){
        case 1:
            return 1;
        case 2:
            return 2;
        case 4:
            return 4;
        case 8:
            return 8;
        case 16:
            return 16;
        case 32:
            return 32;
        case 64:
        case 128:
        case 256:
        case 512:
        case 1024:
        case 2048:
        case 4096:
        case 8192:
        case 16384:
        case 32768:
        case 65536:
        case 131072:
        case 262144:
        case 524288:
        case 1048576:
        case 2097152:
            return a & 4194240;
        case 4194304:
        case 8388608:
        case 16777216:
        case 33554432:
        case 67108864:
            return a & 130023424;
        case 134217728:
            return 134217728;
        case 268435456:
            return 268435456;
        case 536870912:
            return 536870912;
        case 1073741824:
            return 1073741824;
        default:
            return a;
    }
}
function $cf563b86f33a2bc2$var$uc(a, b) {
    var c = a.pendingLanes;
    if (0 === c) return 0;
    var d = 0, e = a.suspendedLanes, f = a.pingedLanes, g = c & 268435455;
    if (0 !== g) {
        var h = g & ~e;
        0 !== h ? d = $cf563b86f33a2bc2$var$tc(h) : (f &= g, 0 !== f && (d = $cf563b86f33a2bc2$var$tc(f)));
    } else g = c & ~e, 0 !== g ? d = $cf563b86f33a2bc2$var$tc(g) : 0 !== f && (d = $cf563b86f33a2bc2$var$tc(f));
    if (0 === d) return 0;
    if (0 !== b && b !== d && 0 === (b & e) && (e = d & -d, f = b & -b, e >= f || 16 === e && 0 !== (f & 4194240))) return b;
    0 !== (d & 4) && (d |= c & 16);
    b = a.entangledLanes;
    if (0 !== b) for(a = a.entanglements, b &= d; 0 < b;)c = 31 - $cf563b86f33a2bc2$var$oc(b), e = 1 << c, d |= a[c], b &= ~e;
    return d;
}
function $cf563b86f33a2bc2$var$vc(a, b) {
    switch(a){
        case 1:
        case 2:
        case 4:
            return b + 250;
        case 8:
        case 16:
        case 32:
        case 64:
        case 128:
        case 256:
        case 512:
        case 1024:
        case 2048:
        case 4096:
        case 8192:
        case 16384:
        case 32768:
        case 65536:
        case 131072:
        case 262144:
        case 524288:
        case 1048576:
        case 2097152:
            return b + 5E3;
        case 4194304:
        case 8388608:
        case 16777216:
        case 33554432:
        case 67108864:
            return -1;
        case 134217728:
        case 268435456:
        case 536870912:
        case 1073741824:
            return -1;
        default:
            return -1;
    }
}
function $cf563b86f33a2bc2$var$wc(a, b) {
    for(var c = a.suspendedLanes, d = a.pingedLanes, e = a.expirationTimes, f = a.pendingLanes; 0 < f;){
        var g = 31 - $cf563b86f33a2bc2$var$oc(f), h = 1 << g, k = e[g];
        if (-1 === k) {
            if (0 === (h & c) || 0 !== (h & d)) e[g] = $cf563b86f33a2bc2$var$vc(h, b);
        } else k <= b && (a.expiredLanes |= h);
        f &= ~h;
    }
}
function $cf563b86f33a2bc2$var$xc(a) {
    a = a.pendingLanes & -1073741825;
    return 0 !== a ? a : a & 1073741824 ? 1073741824 : 0;
}
function $cf563b86f33a2bc2$var$yc() {
    var a = $cf563b86f33a2bc2$var$rc;
    $cf563b86f33a2bc2$var$rc <<= 1;
    0 === ($cf563b86f33a2bc2$var$rc & 4194240) && ($cf563b86f33a2bc2$var$rc = 64);
    return a;
}
function $cf563b86f33a2bc2$var$zc(a) {
    for(var b = [], c = 0; 31 > c; c++)b.push(a);
    return b;
}
function $cf563b86f33a2bc2$var$Ac(a, b, c) {
    a.pendingLanes |= b;
    536870912 !== b && (a.suspendedLanes = 0, a.pingedLanes = 0);
    a = a.eventTimes;
    b = 31 - $cf563b86f33a2bc2$var$oc(b);
    a[b] = c;
}
function $cf563b86f33a2bc2$var$Bc(a, b) {
    var c = a.pendingLanes & ~b;
    a.pendingLanes = b;
    a.suspendedLanes = 0;
    a.pingedLanes = 0;
    a.expiredLanes &= b;
    a.mutableReadLanes &= b;
    a.entangledLanes &= b;
    b = a.entanglements;
    var d = a.eventTimes;
    for(a = a.expirationTimes; 0 < c;){
        var e = 31 - $cf563b86f33a2bc2$var$oc(c), f = 1 << e;
        b[e] = 0;
        d[e] = -1;
        a[e] = -1;
        c &= ~f;
    }
}
function $cf563b86f33a2bc2$var$Cc(a, b) {
    var c = a.entangledLanes |= b;
    for(a = a.entanglements; c;){
        var d = 31 - $cf563b86f33a2bc2$var$oc(c), e = 1 << d;
        e & b | a[d] & b && (a[d] |= b);
        c &= ~e;
    }
}
var $cf563b86f33a2bc2$var$C = 0;
function $cf563b86f33a2bc2$var$Dc(a) {
    a &= -a;
    return 1 < a ? 4 < a ? 0 !== (a & 268435455) ? 16 : 536870912 : 4 : 1;
}
var $cf563b86f33a2bc2$var$Ec, $cf563b86f33a2bc2$var$Fc, $cf563b86f33a2bc2$var$Gc, $cf563b86f33a2bc2$var$Hc, $cf563b86f33a2bc2$var$Ic, $cf563b86f33a2bc2$var$Jc = !1, $cf563b86f33a2bc2$var$Kc = [], $cf563b86f33a2bc2$var$Lc = null, $cf563b86f33a2bc2$var$Mc = null, $cf563b86f33a2bc2$var$Nc = null, $cf563b86f33a2bc2$var$Oc = new Map, $cf563b86f33a2bc2$var$Pc = new Map, $cf563b86f33a2bc2$var$Qc = [], $cf563b86f33a2bc2$var$Rc = "mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput copy cut paste click change contextmenu reset submit".split(" ");
function $cf563b86f33a2bc2$var$Sc(a, b) {
    switch(a){
        case "focusin":
        case "focusout":
            $cf563b86f33a2bc2$var$Lc = null;
            break;
        case "dragenter":
        case "dragleave":
            $cf563b86f33a2bc2$var$Mc = null;
            break;
        case "mouseover":
        case "mouseout":
            $cf563b86f33a2bc2$var$Nc = null;
            break;
        case "pointerover":
        case "pointerout":
            $cf563b86f33a2bc2$var$Oc.delete(b.pointerId);
            break;
        case "gotpointercapture":
        case "lostpointercapture":
            $cf563b86f33a2bc2$var$Pc.delete(b.pointerId);
    }
}
function $cf563b86f33a2bc2$var$Tc(a, b, c, d, e, f) {
    if (null === a || a.nativeEvent !== f) return a = {
        blockedOn: b,
        domEventName: c,
        eventSystemFlags: d,
        nativeEvent: f,
        targetContainers: [
            e
        ]
    }, null !== b && (b = $cf563b86f33a2bc2$var$Cb(b), null !== b && $cf563b86f33a2bc2$var$Fc(b)), a;
    a.eventSystemFlags |= d;
    b = a.targetContainers;
    null !== e && -1 === b.indexOf(e) && b.push(e);
    return a;
}
function $cf563b86f33a2bc2$var$Uc(a, b, c, d, e) {
    switch(b){
        case "focusin":
            return $cf563b86f33a2bc2$var$Lc = $cf563b86f33a2bc2$var$Tc($cf563b86f33a2bc2$var$Lc, a, b, c, d, e), !0;
        case "dragenter":
            return $cf563b86f33a2bc2$var$Mc = $cf563b86f33a2bc2$var$Tc($cf563b86f33a2bc2$var$Mc, a, b, c, d, e), !0;
        case "mouseover":
            return $cf563b86f33a2bc2$var$Nc = $cf563b86f33a2bc2$var$Tc($cf563b86f33a2bc2$var$Nc, a, b, c, d, e), !0;
        case "pointerover":
            var f = e.pointerId;
            $cf563b86f33a2bc2$var$Oc.set(f, $cf563b86f33a2bc2$var$Tc($cf563b86f33a2bc2$var$Oc.get(f) || null, a, b, c, d, e));
            return !0;
        case "gotpointercapture":
            return f = e.pointerId, $cf563b86f33a2bc2$var$Pc.set(f, $cf563b86f33a2bc2$var$Tc($cf563b86f33a2bc2$var$Pc.get(f) || null, a, b, c, d, e)), !0;
    }
    return !1;
}
function $cf563b86f33a2bc2$var$Vc(a) {
    var b = $cf563b86f33a2bc2$var$Wc(a.target);
    if (null !== b) {
        var c = $cf563b86f33a2bc2$var$Vb(b);
        if (null !== c) {
            if (b = c.tag, 13 === b) {
                if (b = $cf563b86f33a2bc2$var$Wb(c), null !== b) {
                    a.blockedOn = b;
                    $cf563b86f33a2bc2$var$Ic(a.priority, function() {
                        $cf563b86f33a2bc2$var$Gc(c);
                    });
                    return;
                }
            } else if (3 === b && c.stateNode.current.memoizedState.isDehydrated) {
                a.blockedOn = 3 === c.tag ? c.stateNode.containerInfo : null;
                return;
            }
        }
    }
    a.blockedOn = null;
}
function $cf563b86f33a2bc2$var$Xc(a) {
    if (null !== a.blockedOn) return !1;
    for(var b = a.targetContainers; 0 < b.length;){
        var c = $cf563b86f33a2bc2$var$Yc(a.domEventName, a.eventSystemFlags, b[0], a.nativeEvent);
        if (null === c) {
            c = a.nativeEvent;
            var d = new c.constructor(c.type, c);
            $cf563b86f33a2bc2$var$wb = d;
            c.target.dispatchEvent(d);
            $cf563b86f33a2bc2$var$wb = null;
        } else return b = $cf563b86f33a2bc2$var$Cb(c), null !== b && $cf563b86f33a2bc2$var$Fc(b), a.blockedOn = c, !1;
        b.shift();
    }
    return !0;
}
function $cf563b86f33a2bc2$var$Zc(a, b, c) {
    $cf563b86f33a2bc2$var$Xc(a) && c.delete(b);
}
function $cf563b86f33a2bc2$var$$c() {
    $cf563b86f33a2bc2$var$Jc = !1;
    null !== $cf563b86f33a2bc2$var$Lc && $cf563b86f33a2bc2$var$Xc($cf563b86f33a2bc2$var$Lc) && ($cf563b86f33a2bc2$var$Lc = null);
    null !== $cf563b86f33a2bc2$var$Mc && $cf563b86f33a2bc2$var$Xc($cf563b86f33a2bc2$var$Mc) && ($cf563b86f33a2bc2$var$Mc = null);
    null !== $cf563b86f33a2bc2$var$Nc && $cf563b86f33a2bc2$var$Xc($cf563b86f33a2bc2$var$Nc) && ($cf563b86f33a2bc2$var$Nc = null);
    $cf563b86f33a2bc2$var$Oc.forEach($cf563b86f33a2bc2$var$Zc);
    $cf563b86f33a2bc2$var$Pc.forEach($cf563b86f33a2bc2$var$Zc);
}
function $cf563b86f33a2bc2$var$ad(a, b) {
    a.blockedOn === b && (a.blockedOn = null, $cf563b86f33a2bc2$var$Jc || ($cf563b86f33a2bc2$var$Jc = !0, $aYOb9.unstable_scheduleCallback($aYOb9.unstable_NormalPriority, $cf563b86f33a2bc2$var$$c)));
}
function $cf563b86f33a2bc2$var$bd(a) {
    function b(b) {
        return $cf563b86f33a2bc2$var$ad(b, a);
    }
    if (0 < $cf563b86f33a2bc2$var$Kc.length) {
        $cf563b86f33a2bc2$var$ad($cf563b86f33a2bc2$var$Kc[0], a);
        for(var c = 1; c < $cf563b86f33a2bc2$var$Kc.length; c++){
            var d = $cf563b86f33a2bc2$var$Kc[c];
            d.blockedOn === a && (d.blockedOn = null);
        }
    }
    null !== $cf563b86f33a2bc2$var$Lc && $cf563b86f33a2bc2$var$ad($cf563b86f33a2bc2$var$Lc, a);
    null !== $cf563b86f33a2bc2$var$Mc && $cf563b86f33a2bc2$var$ad($cf563b86f33a2bc2$var$Mc, a);
    null !== $cf563b86f33a2bc2$var$Nc && $cf563b86f33a2bc2$var$ad($cf563b86f33a2bc2$var$Nc, a);
    $cf563b86f33a2bc2$var$Oc.forEach(b);
    $cf563b86f33a2bc2$var$Pc.forEach(b);
    for(c = 0; c < $cf563b86f33a2bc2$var$Qc.length; c++)d = $cf563b86f33a2bc2$var$Qc[c], d.blockedOn === a && (d.blockedOn = null);
    for(; 0 < $cf563b86f33a2bc2$var$Qc.length && (c = $cf563b86f33a2bc2$var$Qc[0], null === c.blockedOn);)$cf563b86f33a2bc2$var$Vc(c), null === c.blockedOn && $cf563b86f33a2bc2$var$Qc.shift();
}
var $cf563b86f33a2bc2$var$cd = $cf563b86f33a2bc2$var$ua.ReactCurrentBatchConfig, $cf563b86f33a2bc2$var$dd = !0;
function $cf563b86f33a2bc2$var$ed(a, b, c, d) {
    var e = $cf563b86f33a2bc2$var$C, f = $cf563b86f33a2bc2$var$cd.transition;
    $cf563b86f33a2bc2$var$cd.transition = null;
    try {
        $cf563b86f33a2bc2$var$C = 1, $cf563b86f33a2bc2$var$fd(a, b, c, d);
    } finally{
        $cf563b86f33a2bc2$var$C = e, $cf563b86f33a2bc2$var$cd.transition = f;
    }
}
function $cf563b86f33a2bc2$var$gd(a, b, c, d) {
    var e = $cf563b86f33a2bc2$var$C, f = $cf563b86f33a2bc2$var$cd.transition;
    $cf563b86f33a2bc2$var$cd.transition = null;
    try {
        $cf563b86f33a2bc2$var$C = 4, $cf563b86f33a2bc2$var$fd(a, b, c, d);
    } finally{
        $cf563b86f33a2bc2$var$C = e, $cf563b86f33a2bc2$var$cd.transition = f;
    }
}
function $cf563b86f33a2bc2$var$fd(a, b, c, d) {
    if ($cf563b86f33a2bc2$var$dd) {
        var e = $cf563b86f33a2bc2$var$Yc(a, b, c, d);
        if (null === e) $cf563b86f33a2bc2$var$hd(a, b, d, $cf563b86f33a2bc2$var$id, c), $cf563b86f33a2bc2$var$Sc(a, d);
        else if ($cf563b86f33a2bc2$var$Uc(e, a, b, c, d)) d.stopPropagation();
        else if ($cf563b86f33a2bc2$var$Sc(a, d), b & 4 && -1 < $cf563b86f33a2bc2$var$Rc.indexOf(a)) {
            for(; null !== e;){
                var f = $cf563b86f33a2bc2$var$Cb(e);
                null !== f && $cf563b86f33a2bc2$var$Ec(f);
                f = $cf563b86f33a2bc2$var$Yc(a, b, c, d);
                null === f && $cf563b86f33a2bc2$var$hd(a, b, d, $cf563b86f33a2bc2$var$id, c);
                if (f === e) break;
                e = f;
            }
            null !== e && d.stopPropagation();
        } else $cf563b86f33a2bc2$var$hd(a, b, d, null, c);
    }
}
var $cf563b86f33a2bc2$var$id = null;
function $cf563b86f33a2bc2$var$Yc(a, b, c, d) {
    $cf563b86f33a2bc2$var$id = null;
    a = $cf563b86f33a2bc2$var$xb(d);
    a = $cf563b86f33a2bc2$var$Wc(a);
    if (null !== a) {
        if (b = $cf563b86f33a2bc2$var$Vb(a), null === b) a = null;
        else if (c = b.tag, 13 === c) {
            a = $cf563b86f33a2bc2$var$Wb(b);
            if (null !== a) return a;
            a = null;
        } else if (3 === c) {
            if (b.stateNode.current.memoizedState.isDehydrated) return 3 === b.tag ? b.stateNode.containerInfo : null;
            a = null;
        } else b !== a && (a = null);
    }
    $cf563b86f33a2bc2$var$id = a;
    return null;
}
function $cf563b86f33a2bc2$var$jd(a) {
    switch(a){
        case "cancel":
        case "click":
        case "close":
        case "contextmenu":
        case "copy":
        case "cut":
        case "auxclick":
        case "dblclick":
        case "dragend":
        case "dragstart":
        case "drop":
        case "focusin":
        case "focusout":
        case "input":
        case "invalid":
        case "keydown":
        case "keypress":
        case "keyup":
        case "mousedown":
        case "mouseup":
        case "paste":
        case "pause":
        case "play":
        case "pointercancel":
        case "pointerdown":
        case "pointerup":
        case "ratechange":
        case "reset":
        case "resize":
        case "seeked":
        case "submit":
        case "touchcancel":
        case "touchend":
        case "touchstart":
        case "volumechange":
        case "change":
        case "selectionchange":
        case "textInput":
        case "compositionstart":
        case "compositionend":
        case "compositionupdate":
        case "beforeblur":
        case "afterblur":
        case "beforeinput":
        case "blur":
        case "fullscreenchange":
        case "focus":
        case "hashchange":
        case "popstate":
        case "select":
        case "selectstart":
            return 1;
        case "drag":
        case "dragenter":
        case "dragexit":
        case "dragleave":
        case "dragover":
        case "mousemove":
        case "mouseout":
        case "mouseover":
        case "pointermove":
        case "pointerout":
        case "pointerover":
        case "scroll":
        case "toggle":
        case "touchmove":
        case "wheel":
        case "mouseenter":
        case "mouseleave":
        case "pointerenter":
        case "pointerleave":
            return 4;
        case "message":
            switch($cf563b86f33a2bc2$var$ec()){
                case $cf563b86f33a2bc2$var$fc:
                    return 1;
                case $cf563b86f33a2bc2$var$gc:
                    return 4;
                case $cf563b86f33a2bc2$var$hc:
                case $cf563b86f33a2bc2$var$ic:
                    return 16;
                case $cf563b86f33a2bc2$var$jc:
                    return 536870912;
                default:
                    return 16;
            }
        default:
            return 16;
    }
}
var $cf563b86f33a2bc2$var$kd = null, $cf563b86f33a2bc2$var$ld = null, $cf563b86f33a2bc2$var$md = null;
function $cf563b86f33a2bc2$var$nd() {
    if ($cf563b86f33a2bc2$var$md) return $cf563b86f33a2bc2$var$md;
    var a, b = $cf563b86f33a2bc2$var$ld, c = b.length, d, e = "value" in $cf563b86f33a2bc2$var$kd ? $cf563b86f33a2bc2$var$kd.value : $cf563b86f33a2bc2$var$kd.textContent, f = e.length;
    for(a = 0; a < c && b[a] === e[a]; a++);
    var g = c - a;
    for(d = 1; d <= g && b[c - d] === e[f - d]; d++);
    return $cf563b86f33a2bc2$var$md = e.slice(a, 1 < d ? 1 - d : void 0);
}
function $cf563b86f33a2bc2$var$od(a) {
    var b = a.keyCode;
    "charCode" in a ? (a = a.charCode, 0 === a && 13 === b && (a = 13)) : a = b;
    10 === a && (a = 13);
    return 32 <= a || 13 === a ? a : 0;
}
function $cf563b86f33a2bc2$var$pd() {
    return !0;
}
function $cf563b86f33a2bc2$var$qd() {
    return !1;
}
function $cf563b86f33a2bc2$var$rd(a) {
    function b(b, d, e, f, g) {
        this._reactName = b;
        this._targetInst = e;
        this.type = d;
        this.nativeEvent = f;
        this.target = g;
        this.currentTarget = null;
        for(var c in a)a.hasOwnProperty(c) && (b = a[c], this[c] = b ? b(f) : f[c]);
        this.isDefaultPrevented = (null != f.defaultPrevented ? f.defaultPrevented : !1 === f.returnValue) ? $cf563b86f33a2bc2$var$pd : $cf563b86f33a2bc2$var$qd;
        this.isPropagationStopped = $cf563b86f33a2bc2$var$qd;
        return this;
    }
    $cf563b86f33a2bc2$var$A(b.prototype, {
        preventDefault: function() {
            this.defaultPrevented = !0;
            var a = this.nativeEvent;
            a && (a.preventDefault ? a.preventDefault() : "unknown" !== typeof a.returnValue && (a.returnValue = !1), this.isDefaultPrevented = $cf563b86f33a2bc2$var$pd);
        },
        stopPropagation: function() {
            var a = this.nativeEvent;
            a && (a.stopPropagation ? a.stopPropagation() : "unknown" !== typeof a.cancelBubble && (a.cancelBubble = !0), this.isPropagationStopped = $cf563b86f33a2bc2$var$pd);
        },
        persist: function() {},
        isPersistent: $cf563b86f33a2bc2$var$pd
    });
    return b;
}
var $cf563b86f33a2bc2$var$sd = {
    eventPhase: 0,
    bubbles: 0,
    cancelable: 0,
    timeStamp: function(a) {
        return a.timeStamp || Date.now();
    },
    defaultPrevented: 0,
    isTrusted: 0
}, $cf563b86f33a2bc2$var$td = $cf563b86f33a2bc2$var$rd($cf563b86f33a2bc2$var$sd), $cf563b86f33a2bc2$var$ud = $cf563b86f33a2bc2$var$A({}, $cf563b86f33a2bc2$var$sd, {
    view: 0,
    detail: 0
}), $cf563b86f33a2bc2$var$vd = $cf563b86f33a2bc2$var$rd($cf563b86f33a2bc2$var$ud), $cf563b86f33a2bc2$var$wd, $cf563b86f33a2bc2$var$xd, $cf563b86f33a2bc2$var$yd, $cf563b86f33a2bc2$var$Ad = $cf563b86f33a2bc2$var$A({}, $cf563b86f33a2bc2$var$ud, {
    screenX: 0,
    screenY: 0,
    clientX: 0,
    clientY: 0,
    pageX: 0,
    pageY: 0,
    ctrlKey: 0,
    shiftKey: 0,
    altKey: 0,
    metaKey: 0,
    getModifierState: $cf563b86f33a2bc2$var$zd,
    button: 0,
    buttons: 0,
    relatedTarget: function(a) {
        return void 0 === a.relatedTarget ? a.fromElement === a.srcElement ? a.toElement : a.fromElement : a.relatedTarget;
    },
    movementX: function(a) {
        if ("movementX" in a) return a.movementX;
        a !== $cf563b86f33a2bc2$var$yd && ($cf563b86f33a2bc2$var$yd && "mousemove" === a.type ? ($cf563b86f33a2bc2$var$wd = a.screenX - $cf563b86f33a2bc2$var$yd.screenX, $cf563b86f33a2bc2$var$xd = a.screenY - $cf563b86f33a2bc2$var$yd.screenY) : $cf563b86f33a2bc2$var$xd = $cf563b86f33a2bc2$var$wd = 0, $cf563b86f33a2bc2$var$yd = a);
        return $cf563b86f33a2bc2$var$wd;
    },
    movementY: function(a) {
        return "movementY" in a ? a.movementY : $cf563b86f33a2bc2$var$xd;
    }
}), $cf563b86f33a2bc2$var$Bd = $cf563b86f33a2bc2$var$rd($cf563b86f33a2bc2$var$Ad), $cf563b86f33a2bc2$var$Cd = $cf563b86f33a2bc2$var$A({}, $cf563b86f33a2bc2$var$Ad, {
    dataTransfer: 0
}), $cf563b86f33a2bc2$var$Dd = $cf563b86f33a2bc2$var$rd($cf563b86f33a2bc2$var$Cd), $cf563b86f33a2bc2$var$Ed = $cf563b86f33a2bc2$var$A({}, $cf563b86f33a2bc2$var$ud, {
    relatedTarget: 0
}), $cf563b86f33a2bc2$var$Fd = $cf563b86f33a2bc2$var$rd($cf563b86f33a2bc2$var$Ed), $cf563b86f33a2bc2$var$Gd = $cf563b86f33a2bc2$var$A({}, $cf563b86f33a2bc2$var$sd, {
    animationName: 0,
    elapsedTime: 0,
    pseudoElement: 0
}), $cf563b86f33a2bc2$var$Hd = $cf563b86f33a2bc2$var$rd($cf563b86f33a2bc2$var$Gd), $cf563b86f33a2bc2$var$Id = $cf563b86f33a2bc2$var$A({}, $cf563b86f33a2bc2$var$sd, {
    clipboardData: function(a) {
        return "clipboardData" in a ? a.clipboardData : window.clipboardData;
    }
}), $cf563b86f33a2bc2$var$Jd = $cf563b86f33a2bc2$var$rd($cf563b86f33a2bc2$var$Id), $cf563b86f33a2bc2$var$Kd = $cf563b86f33a2bc2$var$A({}, $cf563b86f33a2bc2$var$sd, {
    data: 0
}), $cf563b86f33a2bc2$var$Ld = $cf563b86f33a2bc2$var$rd($cf563b86f33a2bc2$var$Kd), $cf563b86f33a2bc2$var$Md = {
    Esc: "Escape",
    Spacebar: " ",
    Left: "ArrowLeft",
    Up: "ArrowUp",
    Right: "ArrowRight",
    Down: "ArrowDown",
    Del: "Delete",
    Win: "OS",
    Menu: "ContextMenu",
    Apps: "ContextMenu",
    Scroll: "ScrollLock",
    MozPrintableKey: "Unidentified"
}, $cf563b86f33a2bc2$var$Nd = {
    8: "Backspace",
    9: "Tab",
    12: "Clear",
    13: "Enter",
    16: "Shift",
    17: "Control",
    18: "Alt",
    19: "Pause",
    20: "CapsLock",
    27: "Escape",
    32: " ",
    33: "PageUp",
    34: "PageDown",
    35: "End",
    36: "Home",
    37: "ArrowLeft",
    38: "ArrowUp",
    39: "ArrowRight",
    40: "ArrowDown",
    45: "Insert",
    46: "Delete",
    112: "F1",
    113: "F2",
    114: "F3",
    115: "F4",
    116: "F5",
    117: "F6",
    118: "F7",
    119: "F8",
    120: "F9",
    121: "F10",
    122: "F11",
    123: "F12",
    144: "NumLock",
    145: "ScrollLock",
    224: "Meta"
}, $cf563b86f33a2bc2$var$Od = {
    Alt: "altKey",
    Control: "ctrlKey",
    Meta: "metaKey",
    Shift: "shiftKey"
};
function $cf563b86f33a2bc2$var$Pd(a) {
    var b = this.nativeEvent;
    return b.getModifierState ? b.getModifierState(a) : (a = $cf563b86f33a2bc2$var$Od[a]) ? !!b[a] : !1;
}
function $cf563b86f33a2bc2$var$zd() {
    return $cf563b86f33a2bc2$var$Pd;
}
var $cf563b86f33a2bc2$var$Qd = $cf563b86f33a2bc2$var$A({}, $cf563b86f33a2bc2$var$ud, {
    key: function(a) {
        if (a.key) {
            var b = $cf563b86f33a2bc2$var$Md[a.key] || a.key;
            if ("Unidentified" !== b) return b;
        }
        return "keypress" === a.type ? (a = $cf563b86f33a2bc2$var$od(a), 13 === a ? "Enter" : String.fromCharCode(a)) : "keydown" === a.type || "keyup" === a.type ? $cf563b86f33a2bc2$var$Nd[a.keyCode] || "Unidentified" : "";
    },
    code: 0,
    location: 0,
    ctrlKey: 0,
    shiftKey: 0,
    altKey: 0,
    metaKey: 0,
    repeat: 0,
    locale: 0,
    getModifierState: $cf563b86f33a2bc2$var$zd,
    charCode: function(a) {
        return "keypress" === a.type ? $cf563b86f33a2bc2$var$od(a) : 0;
    },
    keyCode: function(a) {
        return "keydown" === a.type || "keyup" === a.type ? a.keyCode : 0;
    },
    which: function(a) {
        return "keypress" === a.type ? $cf563b86f33a2bc2$var$od(a) : "keydown" === a.type || "keyup" === a.type ? a.keyCode : 0;
    }
}), $cf563b86f33a2bc2$var$Rd = $cf563b86f33a2bc2$var$rd($cf563b86f33a2bc2$var$Qd), $cf563b86f33a2bc2$var$Sd = $cf563b86f33a2bc2$var$A({}, $cf563b86f33a2bc2$var$Ad, {
    pointerId: 0,
    width: 0,
    height: 0,
    pressure: 0,
    tangentialPressure: 0,
    tiltX: 0,
    tiltY: 0,
    twist: 0,
    pointerType: 0,
    isPrimary: 0
}), $cf563b86f33a2bc2$var$Td = $cf563b86f33a2bc2$var$rd($cf563b86f33a2bc2$var$Sd), $cf563b86f33a2bc2$var$Ud = $cf563b86f33a2bc2$var$A({}, $cf563b86f33a2bc2$var$ud, {
    touches: 0,
    targetTouches: 0,
    changedTouches: 0,
    altKey: 0,
    metaKey: 0,
    ctrlKey: 0,
    shiftKey: 0,
    getModifierState: $cf563b86f33a2bc2$var$zd
}), $cf563b86f33a2bc2$var$Vd = $cf563b86f33a2bc2$var$rd($cf563b86f33a2bc2$var$Ud), $cf563b86f33a2bc2$var$Wd = $cf563b86f33a2bc2$var$A({}, $cf563b86f33a2bc2$var$sd, {
    propertyName: 0,
    elapsedTime: 0,
    pseudoElement: 0
}), $cf563b86f33a2bc2$var$Xd = $cf563b86f33a2bc2$var$rd($cf563b86f33a2bc2$var$Wd), $cf563b86f33a2bc2$var$Yd = $cf563b86f33a2bc2$var$A({}, $cf563b86f33a2bc2$var$Ad, {
    deltaX: function(a) {
        return "deltaX" in a ? a.deltaX : "wheelDeltaX" in a ? -a.wheelDeltaX : 0;
    },
    deltaY: function(a) {
        return "deltaY" in a ? a.deltaY : "wheelDeltaY" in a ? -a.wheelDeltaY : "wheelDelta" in a ? -a.wheelDelta : 0;
    },
    deltaZ: 0,
    deltaMode: 0
}), $cf563b86f33a2bc2$var$Zd = $cf563b86f33a2bc2$var$rd($cf563b86f33a2bc2$var$Yd), $cf563b86f33a2bc2$var$$d = [
    9,
    13,
    27,
    32
], $cf563b86f33a2bc2$var$ae = $cf563b86f33a2bc2$var$ia && "CompositionEvent" in window, $cf563b86f33a2bc2$var$be = null;
$cf563b86f33a2bc2$var$ia && "documentMode" in document && ($cf563b86f33a2bc2$var$be = document.documentMode);
var $cf563b86f33a2bc2$var$ce = $cf563b86f33a2bc2$var$ia && "TextEvent" in window && !$cf563b86f33a2bc2$var$be, $cf563b86f33a2bc2$var$de = $cf563b86f33a2bc2$var$ia && (!$cf563b86f33a2bc2$var$ae || $cf563b86f33a2bc2$var$be && 8 < $cf563b86f33a2bc2$var$be && 11 >= $cf563b86f33a2bc2$var$be), $cf563b86f33a2bc2$var$ee = String.fromCharCode(32), $cf563b86f33a2bc2$var$fe = !1;
function $cf563b86f33a2bc2$var$ge(a, b) {
    switch(a){
        case "keyup":
            return -1 !== $cf563b86f33a2bc2$var$$d.indexOf(b.keyCode);
        case "keydown":
            return 229 !== b.keyCode;
        case "keypress":
        case "mousedown":
        case "focusout":
            return !0;
        default:
            return !1;
    }
}
function $cf563b86f33a2bc2$var$he(a) {
    a = a.detail;
    return "object" === typeof a && "data" in a ? a.data : null;
}
var $cf563b86f33a2bc2$var$ie = !1;
function $cf563b86f33a2bc2$var$je(a, b) {
    switch(a){
        case "compositionend":
            return $cf563b86f33a2bc2$var$he(b);
        case "keypress":
            if (32 !== b.which) return null;
            $cf563b86f33a2bc2$var$fe = !0;
            return $cf563b86f33a2bc2$var$ee;
        case "textInput":
            return a = b.data, a === $cf563b86f33a2bc2$var$ee && $cf563b86f33a2bc2$var$fe ? null : a;
        default:
            return null;
    }
}
function $cf563b86f33a2bc2$var$ke(a, b) {
    if ($cf563b86f33a2bc2$var$ie) return "compositionend" === a || !$cf563b86f33a2bc2$var$ae && $cf563b86f33a2bc2$var$ge(a, b) ? (a = $cf563b86f33a2bc2$var$nd(), $cf563b86f33a2bc2$var$md = $cf563b86f33a2bc2$var$ld = $cf563b86f33a2bc2$var$kd = null, $cf563b86f33a2bc2$var$ie = !1, a) : null;
    switch(a){
        case "paste":
            return null;
        case "keypress":
            if (!(b.ctrlKey || b.altKey || b.metaKey) || b.ctrlKey && b.altKey) {
                if (b.char && 1 < b.char.length) return b.char;
                if (b.which) return String.fromCharCode(b.which);
            }
            return null;
        case "compositionend":
            return $cf563b86f33a2bc2$var$de && "ko" !== b.locale ? null : b.data;
        default:
            return null;
    }
}
var $cf563b86f33a2bc2$var$le = {
    color: !0,
    date: !0,
    datetime: !0,
    "datetime-local": !0,
    email: !0,
    month: !0,
    number: !0,
    password: !0,
    range: !0,
    search: !0,
    tel: !0,
    text: !0,
    time: !0,
    url: !0,
    week: !0
};
function $cf563b86f33a2bc2$var$me(a) {
    var b = a && a.nodeName && a.nodeName.toLowerCase();
    return "input" === b ? !!$cf563b86f33a2bc2$var$le[a.type] : "textarea" === b ? !0 : !1;
}
function $cf563b86f33a2bc2$var$ne(a, b, c, d) {
    $cf563b86f33a2bc2$var$Eb(d);
    b = $cf563b86f33a2bc2$var$oe(b, "onChange");
    0 < b.length && (c = new $cf563b86f33a2bc2$var$td("onChange", "change", null, c, d), a.push({
        event: c,
        listeners: b
    }));
}
var $cf563b86f33a2bc2$var$pe = null, $cf563b86f33a2bc2$var$qe = null;
function $cf563b86f33a2bc2$var$re(a) {
    $cf563b86f33a2bc2$var$se(a, 0);
}
function $cf563b86f33a2bc2$var$te(a) {
    var b = $cf563b86f33a2bc2$var$ue(a);
    if ($cf563b86f33a2bc2$var$Wa(b)) return a;
}
function $cf563b86f33a2bc2$var$ve(a, b) {
    if ("change" === a) return b;
}
var $cf563b86f33a2bc2$var$we = !1;
if ($cf563b86f33a2bc2$var$ia) {
    var $cf563b86f33a2bc2$var$xe;
    if ($cf563b86f33a2bc2$var$ia) {
        var $cf563b86f33a2bc2$var$ye = "oninput" in document;
        if (!$cf563b86f33a2bc2$var$ye) {
            var $cf563b86f33a2bc2$var$ze = document.createElement("div");
            $cf563b86f33a2bc2$var$ze.setAttribute("oninput", "return;");
            $cf563b86f33a2bc2$var$ye = "function" === typeof $cf563b86f33a2bc2$var$ze.oninput;
        }
        $cf563b86f33a2bc2$var$xe = $cf563b86f33a2bc2$var$ye;
    } else $cf563b86f33a2bc2$var$xe = !1;
    $cf563b86f33a2bc2$var$we = $cf563b86f33a2bc2$var$xe && (!document.documentMode || 9 < document.documentMode);
}
function $cf563b86f33a2bc2$var$Ae() {
    $cf563b86f33a2bc2$var$pe && ($cf563b86f33a2bc2$var$pe.detachEvent("onpropertychange", $cf563b86f33a2bc2$var$Be), $cf563b86f33a2bc2$var$qe = $cf563b86f33a2bc2$var$pe = null);
}
function $cf563b86f33a2bc2$var$Be(a) {
    if ("value" === a.propertyName && $cf563b86f33a2bc2$var$te($cf563b86f33a2bc2$var$qe)) {
        var b = [];
        $cf563b86f33a2bc2$var$ne(b, $cf563b86f33a2bc2$var$qe, a, $cf563b86f33a2bc2$var$xb(a));
        $cf563b86f33a2bc2$var$Jb($cf563b86f33a2bc2$var$re, b);
    }
}
function $cf563b86f33a2bc2$var$Ce(a, b, c) {
    "focusin" === a ? ($cf563b86f33a2bc2$var$Ae(), $cf563b86f33a2bc2$var$pe = b, $cf563b86f33a2bc2$var$qe = c, $cf563b86f33a2bc2$var$pe.attachEvent("onpropertychange", $cf563b86f33a2bc2$var$Be)) : "focusout" === a && $cf563b86f33a2bc2$var$Ae();
}
function $cf563b86f33a2bc2$var$De(a) {
    if ("selectionchange" === a || "keyup" === a || "keydown" === a) return $cf563b86f33a2bc2$var$te($cf563b86f33a2bc2$var$qe);
}
function $cf563b86f33a2bc2$var$Ee(a, b) {
    if ("click" === a) return $cf563b86f33a2bc2$var$te(b);
}
function $cf563b86f33a2bc2$var$Fe(a, b) {
    if ("input" === a || "change" === a) return $cf563b86f33a2bc2$var$te(b);
}
function $cf563b86f33a2bc2$var$Ge(a, b) {
    return a === b && (0 !== a || 1 / a === 1 / b) || a !== a && b !== b;
}
var $cf563b86f33a2bc2$var$He = "function" === typeof Object.is ? Object.is : $cf563b86f33a2bc2$var$Ge;
function $cf563b86f33a2bc2$var$Ie(a, b) {
    if ($cf563b86f33a2bc2$var$He(a, b)) return !0;
    if ("object" !== typeof a || null === a || "object" !== typeof b || null === b) return !1;
    var c = Object.keys(a), d = Object.keys(b);
    if (c.length !== d.length) return !1;
    for(d = 0; d < c.length; d++){
        var e = c[d];
        if (!$cf563b86f33a2bc2$var$ja.call(b, e) || !$cf563b86f33a2bc2$var$He(a[e], b[e])) return !1;
    }
    return !0;
}
function $cf563b86f33a2bc2$var$Je(a) {
    for(; a && a.firstChild;)a = a.firstChild;
    return a;
}
function $cf563b86f33a2bc2$var$Ke(a, b) {
    var c = $cf563b86f33a2bc2$var$Je(a);
    a = 0;
    for(var d; c;){
        if (3 === c.nodeType) {
            d = a + c.textContent.length;
            if (a <= b && d >= b) return {
                node: c,
                offset: b - a
            };
            a = d;
        }
        a: {
            for(; c;){
                if (c.nextSibling) {
                    c = c.nextSibling;
                    break a;
                }
                c = c.parentNode;
            }
            c = void 0;
        }
        c = $cf563b86f33a2bc2$var$Je(c);
    }
}
function $cf563b86f33a2bc2$var$Le(a, b) {
    return a && b ? a === b ? !0 : a && 3 === a.nodeType ? !1 : b && 3 === b.nodeType ? $cf563b86f33a2bc2$var$Le(a, b.parentNode) : "contains" in a ? a.contains(b) : a.compareDocumentPosition ? !!(a.compareDocumentPosition(b) & 16) : !1 : !1;
}
function $cf563b86f33a2bc2$var$Me() {
    for(var a = window, b = $cf563b86f33a2bc2$var$Xa(); b instanceof a.HTMLIFrameElement;){
        try {
            var c = "string" === typeof b.contentWindow.location.href;
        } catch (d) {
            c = !1;
        }
        if (c) a = b.contentWindow;
        else break;
        b = $cf563b86f33a2bc2$var$Xa(a.document);
    }
    return b;
}
function $cf563b86f33a2bc2$var$Ne(a) {
    var b = a && a.nodeName && a.nodeName.toLowerCase();
    return b && ("input" === b && ("text" === a.type || "search" === a.type || "tel" === a.type || "url" === a.type || "password" === a.type) || "textarea" === b || "true" === a.contentEditable);
}
function $cf563b86f33a2bc2$var$Oe(a) {
    var b = $cf563b86f33a2bc2$var$Me(), c = a.focusedElem, d = a.selectionRange;
    if (b !== c && c && c.ownerDocument && $cf563b86f33a2bc2$var$Le(c.ownerDocument.documentElement, c)) {
        if (null !== d && $cf563b86f33a2bc2$var$Ne(c)) {
            if (b = d.start, a = d.end, void 0 === a && (a = b), "selectionStart" in c) c.selectionStart = b, c.selectionEnd = Math.min(a, c.value.length);
            else if (a = (b = c.ownerDocument || document) && b.defaultView || window, a.getSelection) {
                a = a.getSelection();
                var e = c.textContent.length, f = Math.min(d.start, e);
                d = void 0 === d.end ? f : Math.min(d.end, e);
                !a.extend && f > d && (e = d, d = f, f = e);
                e = $cf563b86f33a2bc2$var$Ke(c, f);
                var g = $cf563b86f33a2bc2$var$Ke(c, d);
                e && g && (1 !== a.rangeCount || a.anchorNode !== e.node || a.anchorOffset !== e.offset || a.focusNode !== g.node || a.focusOffset !== g.offset) && (b = b.createRange(), b.setStart(e.node, e.offset), a.removeAllRanges(), f > d ? (a.addRange(b), a.extend(g.node, g.offset)) : (b.setEnd(g.node, g.offset), a.addRange(b)));
            }
        }
        b = [];
        for(a = c; a = a.parentNode;)1 === a.nodeType && b.push({
            element: a,
            left: a.scrollLeft,
            top: a.scrollTop
        });
        "function" === typeof c.focus && c.focus();
        for(c = 0; c < b.length; c++)a = b[c], a.element.scrollLeft = a.left, a.element.scrollTop = a.top;
    }
}
var $cf563b86f33a2bc2$var$Pe = $cf563b86f33a2bc2$var$ia && "documentMode" in document && 11 >= document.documentMode, $cf563b86f33a2bc2$var$Qe = null, $cf563b86f33a2bc2$var$Re = null, $cf563b86f33a2bc2$var$Se = null, $cf563b86f33a2bc2$var$Te = !1;
function $cf563b86f33a2bc2$var$Ue(a, b, c) {
    var d = c.window === c ? c.document : 9 === c.nodeType ? c : c.ownerDocument;
    $cf563b86f33a2bc2$var$Te || null == $cf563b86f33a2bc2$var$Qe || $cf563b86f33a2bc2$var$Qe !== $cf563b86f33a2bc2$var$Xa(d) || (d = $cf563b86f33a2bc2$var$Qe, "selectionStart" in d && $cf563b86f33a2bc2$var$Ne(d) ? d = {
        start: d.selectionStart,
        end: d.selectionEnd
    } : (d = (d.ownerDocument && d.ownerDocument.defaultView || window).getSelection(), d = {
        anchorNode: d.anchorNode,
        anchorOffset: d.anchorOffset,
        focusNode: d.focusNode,
        focusOffset: d.focusOffset
    }), $cf563b86f33a2bc2$var$Se && $cf563b86f33a2bc2$var$Ie($cf563b86f33a2bc2$var$Se, d) || ($cf563b86f33a2bc2$var$Se = d, d = $cf563b86f33a2bc2$var$oe($cf563b86f33a2bc2$var$Re, "onSelect"), 0 < d.length && (b = new $cf563b86f33a2bc2$var$td("onSelect", "select", null, b, c), a.push({
        event: b,
        listeners: d
    }), b.target = $cf563b86f33a2bc2$var$Qe)));
}
function $cf563b86f33a2bc2$var$Ve(a, b) {
    var c = {};
    c[a.toLowerCase()] = b.toLowerCase();
    c["Webkit" + a] = "webkit" + b;
    c["Moz" + a] = "moz" + b;
    return c;
}
var $cf563b86f33a2bc2$var$We = {
    animationend: $cf563b86f33a2bc2$var$Ve("Animation", "AnimationEnd"),
    animationiteration: $cf563b86f33a2bc2$var$Ve("Animation", "AnimationIteration"),
    animationstart: $cf563b86f33a2bc2$var$Ve("Animation", "AnimationStart"),
    transitionend: $cf563b86f33a2bc2$var$Ve("Transition", "TransitionEnd")
}, $cf563b86f33a2bc2$var$Xe = {}, $cf563b86f33a2bc2$var$Ye = {};
$cf563b86f33a2bc2$var$ia && ($cf563b86f33a2bc2$var$Ye = document.createElement("div").style, "AnimationEvent" in window || (delete $cf563b86f33a2bc2$var$We.animationend.animation, delete $cf563b86f33a2bc2$var$We.animationiteration.animation, delete $cf563b86f33a2bc2$var$We.animationstart.animation), "TransitionEvent" in window || delete $cf563b86f33a2bc2$var$We.transitionend.transition);
function $cf563b86f33a2bc2$var$Ze(a) {
    if ($cf563b86f33a2bc2$var$Xe[a]) return $cf563b86f33a2bc2$var$Xe[a];
    if (!$cf563b86f33a2bc2$var$We[a]) return a;
    var b = $cf563b86f33a2bc2$var$We[a], c;
    for(c in b)if (b.hasOwnProperty(c) && c in $cf563b86f33a2bc2$var$Ye) return $cf563b86f33a2bc2$var$Xe[a] = b[c];
    return a;
}
var $cf563b86f33a2bc2$var$$e = $cf563b86f33a2bc2$var$Ze("animationend"), $cf563b86f33a2bc2$var$af = $cf563b86f33a2bc2$var$Ze("animationiteration"), $cf563b86f33a2bc2$var$bf = $cf563b86f33a2bc2$var$Ze("animationstart"), $cf563b86f33a2bc2$var$cf = $cf563b86f33a2bc2$var$Ze("transitionend"), $cf563b86f33a2bc2$var$df = new Map, $cf563b86f33a2bc2$var$ef = "abort auxClick cancel canPlay canPlayThrough click close contextMenu copy cut drag dragEnd dragEnter dragExit dragLeave dragOver dragStart drop durationChange emptied encrypted ended error gotPointerCapture input invalid keyDown keyPress keyUp load loadedData loadedMetadata loadStart lostPointerCapture mouseDown mouseMove mouseOut mouseOver mouseUp paste pause play playing pointerCancel pointerDown pointerMove pointerOut pointerOver pointerUp progress rateChange reset resize seeked seeking stalled submit suspend timeUpdate touchCancel touchEnd touchStart volumeChange scroll toggle touchMove waiting wheel".split(" ");
function $cf563b86f33a2bc2$var$ff(a, b) {
    $cf563b86f33a2bc2$var$df.set(a, b);
    $cf563b86f33a2bc2$var$fa(b, [
        a
    ]);
}
for(var $cf563b86f33a2bc2$var$gf = 0; $cf563b86f33a2bc2$var$gf < $cf563b86f33a2bc2$var$ef.length; $cf563b86f33a2bc2$var$gf++){
    var $cf563b86f33a2bc2$var$hf = $cf563b86f33a2bc2$var$ef[$cf563b86f33a2bc2$var$gf], $cf563b86f33a2bc2$var$jf = $cf563b86f33a2bc2$var$hf.toLowerCase(), $cf563b86f33a2bc2$var$kf = $cf563b86f33a2bc2$var$hf[0].toUpperCase() + $cf563b86f33a2bc2$var$hf.slice(1);
    $cf563b86f33a2bc2$var$ff($cf563b86f33a2bc2$var$jf, "on" + $cf563b86f33a2bc2$var$kf);
}
$cf563b86f33a2bc2$var$ff($cf563b86f33a2bc2$var$$e, "onAnimationEnd");
$cf563b86f33a2bc2$var$ff($cf563b86f33a2bc2$var$af, "onAnimationIteration");
$cf563b86f33a2bc2$var$ff($cf563b86f33a2bc2$var$bf, "onAnimationStart");
$cf563b86f33a2bc2$var$ff("dblclick", "onDoubleClick");
$cf563b86f33a2bc2$var$ff("focusin", "onFocus");
$cf563b86f33a2bc2$var$ff("focusout", "onBlur");
$cf563b86f33a2bc2$var$ff($cf563b86f33a2bc2$var$cf, "onTransitionEnd");
$cf563b86f33a2bc2$var$ha("onMouseEnter", [
    "mouseout",
    "mouseover"
]);
$cf563b86f33a2bc2$var$ha("onMouseLeave", [
    "mouseout",
    "mouseover"
]);
$cf563b86f33a2bc2$var$ha("onPointerEnter", [
    "pointerout",
    "pointerover"
]);
$cf563b86f33a2bc2$var$ha("onPointerLeave", [
    "pointerout",
    "pointerover"
]);
$cf563b86f33a2bc2$var$fa("onChange", "change click focusin focusout input keydown keyup selectionchange".split(" "));
$cf563b86f33a2bc2$var$fa("onSelect", "focusout contextmenu dragend focusin keydown keyup mousedown mouseup selectionchange".split(" "));
$cf563b86f33a2bc2$var$fa("onBeforeInput", [
    "compositionend",
    "keypress",
    "textInput",
    "paste"
]);
$cf563b86f33a2bc2$var$fa("onCompositionEnd", "compositionend focusout keydown keypress keyup mousedown".split(" "));
$cf563b86f33a2bc2$var$fa("onCompositionStart", "compositionstart focusout keydown keypress keyup mousedown".split(" "));
$cf563b86f33a2bc2$var$fa("onCompositionUpdate", "compositionupdate focusout keydown keypress keyup mousedown".split(" "));
var $cf563b86f33a2bc2$var$lf = "abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange resize seeked seeking stalled suspend timeupdate volumechange waiting".split(" "), $cf563b86f33a2bc2$var$mf = new Set("cancel close invalid load scroll toggle".split(" ").concat($cf563b86f33a2bc2$var$lf));
function $cf563b86f33a2bc2$var$nf(a, b, c) {
    var d = a.type || "unknown-event";
    a.currentTarget = c;
    $cf563b86f33a2bc2$var$Ub(d, b, void 0, a);
    a.currentTarget = null;
}
function $cf563b86f33a2bc2$var$se(a, b) {
    b = 0 !== (b & 4);
    for(var c = 0; c < a.length; c++){
        var d = a[c], e = d.event;
        d = d.listeners;
        a: {
            var f = void 0;
            if (b) for(var g = d.length - 1; 0 <= g; g--){
                var h = d[g], k = h.instance, l = h.currentTarget;
                h = h.listener;
                if (k !== f && e.isPropagationStopped()) break a;
                $cf563b86f33a2bc2$var$nf(e, h, l);
                f = k;
            }
            else for(g = 0; g < d.length; g++){
                h = d[g];
                k = h.instance;
                l = h.currentTarget;
                h = h.listener;
                if (k !== f && e.isPropagationStopped()) break a;
                $cf563b86f33a2bc2$var$nf(e, h, l);
                f = k;
            }
        }
    }
    if ($cf563b86f33a2bc2$var$Qb) throw a = $cf563b86f33a2bc2$var$Rb, $cf563b86f33a2bc2$var$Qb = !1, $cf563b86f33a2bc2$var$Rb = null, a;
}
function $cf563b86f33a2bc2$var$D(a, b) {
    var c = b[$cf563b86f33a2bc2$var$of];
    void 0 === c && (c = b[$cf563b86f33a2bc2$var$of] = new Set);
    var d = a + "__bubble";
    c.has(d) || ($cf563b86f33a2bc2$var$pf(b, a, 2, !1), c.add(d));
}
function $cf563b86f33a2bc2$var$qf(a, b, c) {
    var d = 0;
    b && (d |= 4);
    $cf563b86f33a2bc2$var$pf(c, a, d, b);
}
var $cf563b86f33a2bc2$var$rf = "_reactListening" + Math.random().toString(36).slice(2);
function $cf563b86f33a2bc2$var$sf(a) {
    if (!a[$cf563b86f33a2bc2$var$rf]) {
        a[$cf563b86f33a2bc2$var$rf] = !0;
        $cf563b86f33a2bc2$var$da.forEach(function(b) {
            "selectionchange" !== b && ($cf563b86f33a2bc2$var$mf.has(b) || $cf563b86f33a2bc2$var$qf(b, !1, a), $cf563b86f33a2bc2$var$qf(b, !0, a));
        });
        var b = 9 === a.nodeType ? a : a.ownerDocument;
        null === b || b[$cf563b86f33a2bc2$var$rf] || (b[$cf563b86f33a2bc2$var$rf] = !0, $cf563b86f33a2bc2$var$qf("selectionchange", !1, b));
    }
}
function $cf563b86f33a2bc2$var$pf(a, b, c, d) {
    switch($cf563b86f33a2bc2$var$jd(b)){
        case 1:
            var e = $cf563b86f33a2bc2$var$ed;
            break;
        case 4:
            e = $cf563b86f33a2bc2$var$gd;
            break;
        default:
            e = $cf563b86f33a2bc2$var$fd;
    }
    c = e.bind(null, b, c, a);
    e = void 0;
    !$cf563b86f33a2bc2$var$Lb || "touchstart" !== b && "touchmove" !== b && "wheel" !== b || (e = !0);
    d ? void 0 !== e ? a.addEventListener(b, c, {
        capture: !0,
        passive: e
    }) : a.addEventListener(b, c, !0) : void 0 !== e ? a.addEventListener(b, c, {
        passive: e
    }) : a.addEventListener(b, c, !1);
}
function $cf563b86f33a2bc2$var$hd(a, b, c, d, e) {
    var f = d;
    if (0 === (b & 1) && 0 === (b & 2) && null !== d) a: for(;;){
        if (null === d) return;
        var g = d.tag;
        if (3 === g || 4 === g) {
            var h = d.stateNode.containerInfo;
            if (h === e || 8 === h.nodeType && h.parentNode === e) break;
            if (4 === g) for(g = d.return; null !== g;){
                var k = g.tag;
                if (3 === k || 4 === k) {
                    if (k = g.stateNode.containerInfo, k === e || 8 === k.nodeType && k.parentNode === e) return;
                }
                g = g.return;
            }
            for(; null !== h;){
                g = $cf563b86f33a2bc2$var$Wc(h);
                if (null === g) return;
                k = g.tag;
                if (5 === k || 6 === k) {
                    d = f = g;
                    continue a;
                }
                h = h.parentNode;
            }
        }
        d = d.return;
    }
    $cf563b86f33a2bc2$var$Jb(function() {
        var d = f, e = $cf563b86f33a2bc2$var$xb(c), g = [];
        a: {
            var h = $cf563b86f33a2bc2$var$df.get(a);
            if (void 0 !== h) {
                var k = $cf563b86f33a2bc2$var$td, n = a;
                switch(a){
                    case "keypress":
                        if (0 === $cf563b86f33a2bc2$var$od(c)) break a;
                    case "keydown":
                    case "keyup":
                        k = $cf563b86f33a2bc2$var$Rd;
                        break;
                    case "focusin":
                        n = "focus";
                        k = $cf563b86f33a2bc2$var$Fd;
                        break;
                    case "focusout":
                        n = "blur";
                        k = $cf563b86f33a2bc2$var$Fd;
                        break;
                    case "beforeblur":
                    case "afterblur":
                        k = $cf563b86f33a2bc2$var$Fd;
                        break;
                    case "click":
                        if (2 === c.button) break a;
                    case "auxclick":
                    case "dblclick":
                    case "mousedown":
                    case "mousemove":
                    case "mouseup":
                    case "mouseout":
                    case "mouseover":
                    case "contextmenu":
                        k = $cf563b86f33a2bc2$var$Bd;
                        break;
                    case "drag":
                    case "dragend":
                    case "dragenter":
                    case "dragexit":
                    case "dragleave":
                    case "dragover":
                    case "dragstart":
                    case "drop":
                        k = $cf563b86f33a2bc2$var$Dd;
                        break;
                    case "touchcancel":
                    case "touchend":
                    case "touchmove":
                    case "touchstart":
                        k = $cf563b86f33a2bc2$var$Vd;
                        break;
                    case $cf563b86f33a2bc2$var$$e:
                    case $cf563b86f33a2bc2$var$af:
                    case $cf563b86f33a2bc2$var$bf:
                        k = $cf563b86f33a2bc2$var$Hd;
                        break;
                    case $cf563b86f33a2bc2$var$cf:
                        k = $cf563b86f33a2bc2$var$Xd;
                        break;
                    case "scroll":
                        k = $cf563b86f33a2bc2$var$vd;
                        break;
                    case "wheel":
                        k = $cf563b86f33a2bc2$var$Zd;
                        break;
                    case "copy":
                    case "cut":
                    case "paste":
                        k = $cf563b86f33a2bc2$var$Jd;
                        break;
                    case "gotpointercapture":
                    case "lostpointercapture":
                    case "pointercancel":
                    case "pointerdown":
                    case "pointermove":
                    case "pointerout":
                    case "pointerover":
                    case "pointerup":
                        k = $cf563b86f33a2bc2$var$Td;
                }
                var t = 0 !== (b & 4), J = !t && "scroll" === a, x = t ? null !== h ? h + "Capture" : null : h;
                t = [];
                for(var w = d, u; null !== w;){
                    u = w;
                    var F = u.stateNode;
                    5 === u.tag && null !== F && (u = F, null !== x && (F = $cf563b86f33a2bc2$var$Kb(w, x), null != F && t.push($cf563b86f33a2bc2$var$tf(w, F, u))));
                    if (J) break;
                    w = w.return;
                }
                0 < t.length && (h = new k(h, n, null, c, e), g.push({
                    event: h,
                    listeners: t
                }));
            }
        }
        if (0 === (b & 7)) {
            a: {
                h = "mouseover" === a || "pointerover" === a;
                k = "mouseout" === a || "pointerout" === a;
                if (h && c !== $cf563b86f33a2bc2$var$wb && (n = c.relatedTarget || c.fromElement) && ($cf563b86f33a2bc2$var$Wc(n) || n[$cf563b86f33a2bc2$var$uf])) break a;
                if (k || h) {
                    h = e.window === e ? e : (h = e.ownerDocument) ? h.defaultView || h.parentWindow : window;
                    if (k) {
                        if (n = c.relatedTarget || c.toElement, k = d, n = n ? $cf563b86f33a2bc2$var$Wc(n) : null, null !== n && (J = $cf563b86f33a2bc2$var$Vb(n), n !== J || 5 !== n.tag && 6 !== n.tag)) n = null;
                    } else k = null, n = d;
                    if (k !== n) {
                        t = $cf563b86f33a2bc2$var$Bd;
                        F = "onMouseLeave";
                        x = "onMouseEnter";
                        w = "mouse";
                        if ("pointerout" === a || "pointerover" === a) t = $cf563b86f33a2bc2$var$Td, F = "onPointerLeave", x = "onPointerEnter", w = "pointer";
                        J = null == k ? h : $cf563b86f33a2bc2$var$ue(k);
                        u = null == n ? h : $cf563b86f33a2bc2$var$ue(n);
                        h = new t(F, w + "leave", k, c, e);
                        h.target = J;
                        h.relatedTarget = u;
                        F = null;
                        $cf563b86f33a2bc2$var$Wc(e) === d && (t = new t(x, w + "enter", n, c, e), t.target = u, t.relatedTarget = J, F = t);
                        J = F;
                        if (k && n) b: {
                            t = k;
                            x = n;
                            w = 0;
                            for(u = t; u; u = $cf563b86f33a2bc2$var$vf(u))w++;
                            u = 0;
                            for(F = x; F; F = $cf563b86f33a2bc2$var$vf(F))u++;
                            for(; 0 < w - u;)t = $cf563b86f33a2bc2$var$vf(t), w--;
                            for(; 0 < u - w;)x = $cf563b86f33a2bc2$var$vf(x), u--;
                            for(; w--;){
                                if (t === x || null !== x && t === x.alternate) break b;
                                t = $cf563b86f33a2bc2$var$vf(t);
                                x = $cf563b86f33a2bc2$var$vf(x);
                            }
                            t = null;
                        }
                        else t = null;
                        null !== k && $cf563b86f33a2bc2$var$wf(g, h, k, t, !1);
                        null !== n && null !== J && $cf563b86f33a2bc2$var$wf(g, J, n, t, !0);
                    }
                }
            }
            a: {
                h = d ? $cf563b86f33a2bc2$var$ue(d) : window;
                k = h.nodeName && h.nodeName.toLowerCase();
                if ("select" === k || "input" === k && "file" === h.type) var na = $cf563b86f33a2bc2$var$ve;
                else if ($cf563b86f33a2bc2$var$me(h)) {
                    if ($cf563b86f33a2bc2$var$we) na = $cf563b86f33a2bc2$var$Fe;
                    else {
                        na = $cf563b86f33a2bc2$var$De;
                        var xa = $cf563b86f33a2bc2$var$Ce;
                    }
                } else (k = h.nodeName) && "input" === k.toLowerCase() && ("checkbox" === h.type || "radio" === h.type) && (na = $cf563b86f33a2bc2$var$Ee);
                if (na && (na = na(a, d))) {
                    $cf563b86f33a2bc2$var$ne(g, na, c, e);
                    break a;
                }
                xa && xa(a, h, d);
                "focusout" === a && (xa = h._wrapperState) && xa.controlled && "number" === h.type && $cf563b86f33a2bc2$var$cb(h, "number", h.value);
            }
            xa = d ? $cf563b86f33a2bc2$var$ue(d) : window;
            switch(a){
                case "focusin":
                    if ($cf563b86f33a2bc2$var$me(xa) || "true" === xa.contentEditable) $cf563b86f33a2bc2$var$Qe = xa, $cf563b86f33a2bc2$var$Re = d, $cf563b86f33a2bc2$var$Se = null;
                    break;
                case "focusout":
                    $cf563b86f33a2bc2$var$Se = $cf563b86f33a2bc2$var$Re = $cf563b86f33a2bc2$var$Qe = null;
                    break;
                case "mousedown":
                    $cf563b86f33a2bc2$var$Te = !0;
                    break;
                case "contextmenu":
                case "mouseup":
                case "dragend":
                    $cf563b86f33a2bc2$var$Te = !1;
                    $cf563b86f33a2bc2$var$Ue(g, c, e);
                    break;
                case "selectionchange":
                    if ($cf563b86f33a2bc2$var$Pe) break;
                case "keydown":
                case "keyup":
                    $cf563b86f33a2bc2$var$Ue(g, c, e);
            }
            var $a;
            if ($cf563b86f33a2bc2$var$ae) b: {
                switch(a){
                    case "compositionstart":
                        var ba = "onCompositionStart";
                        break b;
                    case "compositionend":
                        ba = "onCompositionEnd";
                        break b;
                    case "compositionupdate":
                        ba = "onCompositionUpdate";
                        break b;
                }
                ba = void 0;
            }
            else $cf563b86f33a2bc2$var$ie ? $cf563b86f33a2bc2$var$ge(a, c) && (ba = "onCompositionEnd") : "keydown" === a && 229 === c.keyCode && (ba = "onCompositionStart");
            ba && ($cf563b86f33a2bc2$var$de && "ko" !== c.locale && ($cf563b86f33a2bc2$var$ie || "onCompositionStart" !== ba ? "onCompositionEnd" === ba && $cf563b86f33a2bc2$var$ie && ($a = $cf563b86f33a2bc2$var$nd()) : ($cf563b86f33a2bc2$var$kd = e, $cf563b86f33a2bc2$var$ld = "value" in $cf563b86f33a2bc2$var$kd ? $cf563b86f33a2bc2$var$kd.value : $cf563b86f33a2bc2$var$kd.textContent, $cf563b86f33a2bc2$var$ie = !0)), xa = $cf563b86f33a2bc2$var$oe(d, ba), 0 < xa.length && (ba = new $cf563b86f33a2bc2$var$Ld(ba, a, null, c, e), g.push({
                event: ba,
                listeners: xa
            }), $a ? ba.data = $a : ($a = $cf563b86f33a2bc2$var$he(c), null !== $a && (ba.data = $a))));
            if ($a = $cf563b86f33a2bc2$var$ce ? $cf563b86f33a2bc2$var$je(a, c) : $cf563b86f33a2bc2$var$ke(a, c)) d = $cf563b86f33a2bc2$var$oe(d, "onBeforeInput"), 0 < d.length && (e = new $cf563b86f33a2bc2$var$Ld("onBeforeInput", "beforeinput", null, c, e), g.push({
                event: e,
                listeners: d
            }), e.data = $a);
        }
        $cf563b86f33a2bc2$var$se(g, b);
    });
}
function $cf563b86f33a2bc2$var$tf(a, b, c) {
    return {
        instance: a,
        listener: b,
        currentTarget: c
    };
}
function $cf563b86f33a2bc2$var$oe(a, b) {
    for(var c = b + "Capture", d = []; null !== a;){
        var e = a, f = e.stateNode;
        5 === e.tag && null !== f && (e = f, f = $cf563b86f33a2bc2$var$Kb(a, c), null != f && d.unshift($cf563b86f33a2bc2$var$tf(a, f, e)), f = $cf563b86f33a2bc2$var$Kb(a, b), null != f && d.push($cf563b86f33a2bc2$var$tf(a, f, e)));
        a = a.return;
    }
    return d;
}
function $cf563b86f33a2bc2$var$vf(a) {
    if (null === a) return null;
    do a = a.return;
    while (a && 5 !== a.tag);
    return a ? a : null;
}
function $cf563b86f33a2bc2$var$wf(a, b, c, d, e) {
    for(var f = b._reactName, g = []; null !== c && c !== d;){
        var h = c, k = h.alternate, l = h.stateNode;
        if (null !== k && k === d) break;
        5 === h.tag && null !== l && (h = l, e ? (k = $cf563b86f33a2bc2$var$Kb(c, f), null != k && g.unshift($cf563b86f33a2bc2$var$tf(c, k, h))) : e || (k = $cf563b86f33a2bc2$var$Kb(c, f), null != k && g.push($cf563b86f33a2bc2$var$tf(c, k, h))));
        c = c.return;
    }
    0 !== g.length && a.push({
        event: b,
        listeners: g
    });
}
var $cf563b86f33a2bc2$var$xf = /\r\n?/g, $cf563b86f33a2bc2$var$yf = /\u0000|\uFFFD/g;
function $cf563b86f33a2bc2$var$zf(a) {
    return ("string" === typeof a ? a : "" + a).replace($cf563b86f33a2bc2$var$xf, "\n").replace($cf563b86f33a2bc2$var$yf, "");
}
function $cf563b86f33a2bc2$var$Af(a, b, c) {
    b = $cf563b86f33a2bc2$var$zf(b);
    if ($cf563b86f33a2bc2$var$zf(a) !== b && c) throw Error($cf563b86f33a2bc2$var$p(425));
}
function $cf563b86f33a2bc2$var$Bf() {}
var $cf563b86f33a2bc2$var$Cf = null, $cf563b86f33a2bc2$var$Df = null;
function $cf563b86f33a2bc2$var$Ef(a, b) {
    return "textarea" === a || "noscript" === a || "string" === typeof b.children || "number" === typeof b.children || "object" === typeof b.dangerouslySetInnerHTML && null !== b.dangerouslySetInnerHTML && null != b.dangerouslySetInnerHTML.__html;
}
var $cf563b86f33a2bc2$var$Ff = "function" === typeof setTimeout ? setTimeout : void 0, $cf563b86f33a2bc2$var$Gf = "function" === typeof clearTimeout ? clearTimeout : void 0, $cf563b86f33a2bc2$var$Hf = "function" === typeof Promise ? Promise : void 0, $cf563b86f33a2bc2$var$Jf = "function" === typeof queueMicrotask ? queueMicrotask : "undefined" !== typeof $cf563b86f33a2bc2$var$Hf ? function(a) {
    return $cf563b86f33a2bc2$var$Hf.resolve(null).then(a).catch($cf563b86f33a2bc2$var$If);
} : $cf563b86f33a2bc2$var$Ff;
function $cf563b86f33a2bc2$var$If(a) {
    setTimeout(function() {
        throw a;
    });
}
function $cf563b86f33a2bc2$var$Kf(a, b) {
    var c = b, d = 0;
    do {
        var e = c.nextSibling;
        a.removeChild(c);
        if (e && 8 === e.nodeType) {
            if (c = e.data, "/$" === c) {
                if (0 === d) {
                    a.removeChild(e);
                    $cf563b86f33a2bc2$var$bd(b);
                    return;
                }
                d--;
            } else "$" !== c && "$?" !== c && "$!" !== c || d++;
        }
        c = e;
    }while (c);
    $cf563b86f33a2bc2$var$bd(b);
}
function $cf563b86f33a2bc2$var$Lf(a) {
    for(; null != a; a = a.nextSibling){
        var b = a.nodeType;
        if (1 === b || 3 === b) break;
        if (8 === b) {
            b = a.data;
            if ("$" === b || "$!" === b || "$?" === b) break;
            if ("/$" === b) return null;
        }
    }
    return a;
}
function $cf563b86f33a2bc2$var$Mf(a) {
    a = a.previousSibling;
    for(var b = 0; a;){
        if (8 === a.nodeType) {
            var c = a.data;
            if ("$" === c || "$!" === c || "$?" === c) {
                if (0 === b) return a;
                b--;
            } else "/$" === c && b++;
        }
        a = a.previousSibling;
    }
    return null;
}
var $cf563b86f33a2bc2$var$Nf = Math.random().toString(36).slice(2), $cf563b86f33a2bc2$var$Of = "__reactFiber$" + $cf563b86f33a2bc2$var$Nf, $cf563b86f33a2bc2$var$Pf = "__reactProps$" + $cf563b86f33a2bc2$var$Nf, $cf563b86f33a2bc2$var$uf = "__reactContainer$" + $cf563b86f33a2bc2$var$Nf, $cf563b86f33a2bc2$var$of = "__reactEvents$" + $cf563b86f33a2bc2$var$Nf, $cf563b86f33a2bc2$var$Qf = "__reactListeners$" + $cf563b86f33a2bc2$var$Nf, $cf563b86f33a2bc2$var$Rf = "__reactHandles$" + $cf563b86f33a2bc2$var$Nf;
function $cf563b86f33a2bc2$var$Wc(a) {
    var b = a[$cf563b86f33a2bc2$var$Of];
    if (b) return b;
    for(var c = a.parentNode; c;){
        if (b = c[$cf563b86f33a2bc2$var$uf] || c[$cf563b86f33a2bc2$var$Of]) {
            c = b.alternate;
            if (null !== b.child || null !== c && null !== c.child) for(a = $cf563b86f33a2bc2$var$Mf(a); null !== a;){
                if (c = a[$cf563b86f33a2bc2$var$Of]) return c;
                a = $cf563b86f33a2bc2$var$Mf(a);
            }
            return b;
        }
        a = c;
        c = a.parentNode;
    }
    return null;
}
function $cf563b86f33a2bc2$var$Cb(a) {
    a = a[$cf563b86f33a2bc2$var$Of] || a[$cf563b86f33a2bc2$var$uf];
    return !a || 5 !== a.tag && 6 !== a.tag && 13 !== a.tag && 3 !== a.tag ? null : a;
}
function $cf563b86f33a2bc2$var$ue(a) {
    if (5 === a.tag || 6 === a.tag) return a.stateNode;
    throw Error($cf563b86f33a2bc2$var$p(33));
}
function $cf563b86f33a2bc2$var$Db(a) {
    return a[$cf563b86f33a2bc2$var$Pf] || null;
}
var $cf563b86f33a2bc2$var$Sf = [], $cf563b86f33a2bc2$var$Tf = -1;
function $cf563b86f33a2bc2$var$Uf(a) {
    return {
        current: a
    };
}
function $cf563b86f33a2bc2$var$E(a) {
    0 > $cf563b86f33a2bc2$var$Tf || (a.current = $cf563b86f33a2bc2$var$Sf[$cf563b86f33a2bc2$var$Tf], $cf563b86f33a2bc2$var$Sf[$cf563b86f33a2bc2$var$Tf] = null, $cf563b86f33a2bc2$var$Tf--);
}
function $cf563b86f33a2bc2$var$G(a, b) {
    $cf563b86f33a2bc2$var$Tf++;
    $cf563b86f33a2bc2$var$Sf[$cf563b86f33a2bc2$var$Tf] = a.current;
    a.current = b;
}
var $cf563b86f33a2bc2$var$Vf = {}, $cf563b86f33a2bc2$var$H = $cf563b86f33a2bc2$var$Uf($cf563b86f33a2bc2$var$Vf), $cf563b86f33a2bc2$var$Wf = $cf563b86f33a2bc2$var$Uf(!1), $cf563b86f33a2bc2$var$Xf = $cf563b86f33a2bc2$var$Vf;
function $cf563b86f33a2bc2$var$Yf(a, b) {
    var c = a.type.contextTypes;
    if (!c) return $cf563b86f33a2bc2$var$Vf;
    var d = a.stateNode;
    if (d && d.__reactInternalMemoizedUnmaskedChildContext === b) return d.__reactInternalMemoizedMaskedChildContext;
    var e = {}, f;
    for(f in c)e[f] = b[f];
    d && (a = a.stateNode, a.__reactInternalMemoizedUnmaskedChildContext = b, a.__reactInternalMemoizedMaskedChildContext = e);
    return e;
}
function $cf563b86f33a2bc2$var$Zf(a) {
    a = a.childContextTypes;
    return null !== a && void 0 !== a;
}
function $cf563b86f33a2bc2$var$$f() {
    $cf563b86f33a2bc2$var$E($cf563b86f33a2bc2$var$Wf);
    $cf563b86f33a2bc2$var$E($cf563b86f33a2bc2$var$H);
}
function $cf563b86f33a2bc2$var$ag(a, b, c) {
    if ($cf563b86f33a2bc2$var$H.current !== $cf563b86f33a2bc2$var$Vf) throw Error($cf563b86f33a2bc2$var$p(168));
    $cf563b86f33a2bc2$var$G($cf563b86f33a2bc2$var$H, b);
    $cf563b86f33a2bc2$var$G($cf563b86f33a2bc2$var$Wf, c);
}
function $cf563b86f33a2bc2$var$bg(a, b, c) {
    var d = a.stateNode;
    b = b.childContextTypes;
    if ("function" !== typeof d.getChildContext) return c;
    d = d.getChildContext();
    for(var e in d)if (!(e in b)) throw Error($cf563b86f33a2bc2$var$p(108, $cf563b86f33a2bc2$var$Ra(a) || "Unknown", e));
    return $cf563b86f33a2bc2$var$A({}, c, d);
}
function $cf563b86f33a2bc2$var$cg(a) {
    a = (a = a.stateNode) && a.__reactInternalMemoizedMergedChildContext || $cf563b86f33a2bc2$var$Vf;
    $cf563b86f33a2bc2$var$Xf = $cf563b86f33a2bc2$var$H.current;
    $cf563b86f33a2bc2$var$G($cf563b86f33a2bc2$var$H, a);
    $cf563b86f33a2bc2$var$G($cf563b86f33a2bc2$var$Wf, $cf563b86f33a2bc2$var$Wf.current);
    return !0;
}
function $cf563b86f33a2bc2$var$dg(a, b, c) {
    var d = a.stateNode;
    if (!d) throw Error($cf563b86f33a2bc2$var$p(169));
    c ? (a = $cf563b86f33a2bc2$var$bg(a, b, $cf563b86f33a2bc2$var$Xf), d.__reactInternalMemoizedMergedChildContext = a, $cf563b86f33a2bc2$var$E($cf563b86f33a2bc2$var$Wf), $cf563b86f33a2bc2$var$E($cf563b86f33a2bc2$var$H), $cf563b86f33a2bc2$var$G($cf563b86f33a2bc2$var$H, a)) : $cf563b86f33a2bc2$var$E($cf563b86f33a2bc2$var$Wf);
    $cf563b86f33a2bc2$var$G($cf563b86f33a2bc2$var$Wf, c);
}
var $cf563b86f33a2bc2$var$eg = null, $cf563b86f33a2bc2$var$fg = !1, $cf563b86f33a2bc2$var$gg = !1;
function $cf563b86f33a2bc2$var$hg(a) {
    null === $cf563b86f33a2bc2$var$eg ? $cf563b86f33a2bc2$var$eg = [
        a
    ] : $cf563b86f33a2bc2$var$eg.push(a);
}
function $cf563b86f33a2bc2$var$ig(a) {
    $cf563b86f33a2bc2$var$fg = !0;
    $cf563b86f33a2bc2$var$hg(a);
}
function $cf563b86f33a2bc2$var$jg() {
    if (!$cf563b86f33a2bc2$var$gg && null !== $cf563b86f33a2bc2$var$eg) {
        $cf563b86f33a2bc2$var$gg = !0;
        var a = 0, b = $cf563b86f33a2bc2$var$C;
        try {
            var c = $cf563b86f33a2bc2$var$eg;
            for($cf563b86f33a2bc2$var$C = 1; a < c.length; a++){
                var d = c[a];
                do d = d(!0);
                while (null !== d);
            }
            $cf563b86f33a2bc2$var$eg = null;
            $cf563b86f33a2bc2$var$fg = !1;
        } catch (e) {
            throw null !== $cf563b86f33a2bc2$var$eg && ($cf563b86f33a2bc2$var$eg = $cf563b86f33a2bc2$var$eg.slice(a + 1)), $cf563b86f33a2bc2$var$ac($cf563b86f33a2bc2$var$fc, $cf563b86f33a2bc2$var$jg), e;
        } finally{
            $cf563b86f33a2bc2$var$C = b, $cf563b86f33a2bc2$var$gg = !1;
        }
    }
    return null;
}
var $cf563b86f33a2bc2$var$kg = [], $cf563b86f33a2bc2$var$lg = 0, $cf563b86f33a2bc2$var$mg = null, $cf563b86f33a2bc2$var$ng = 0, $cf563b86f33a2bc2$var$og = [], $cf563b86f33a2bc2$var$pg = 0, $cf563b86f33a2bc2$var$qg = null, $cf563b86f33a2bc2$var$rg = 1, $cf563b86f33a2bc2$var$sg = "";
function $cf563b86f33a2bc2$var$tg(a, b) {
    $cf563b86f33a2bc2$var$kg[$cf563b86f33a2bc2$var$lg++] = $cf563b86f33a2bc2$var$ng;
    $cf563b86f33a2bc2$var$kg[$cf563b86f33a2bc2$var$lg++] = $cf563b86f33a2bc2$var$mg;
    $cf563b86f33a2bc2$var$mg = a;
    $cf563b86f33a2bc2$var$ng = b;
}
function $cf563b86f33a2bc2$var$ug(a, b, c) {
    $cf563b86f33a2bc2$var$og[$cf563b86f33a2bc2$var$pg++] = $cf563b86f33a2bc2$var$rg;
    $cf563b86f33a2bc2$var$og[$cf563b86f33a2bc2$var$pg++] = $cf563b86f33a2bc2$var$sg;
    $cf563b86f33a2bc2$var$og[$cf563b86f33a2bc2$var$pg++] = $cf563b86f33a2bc2$var$qg;
    $cf563b86f33a2bc2$var$qg = a;
    var d = $cf563b86f33a2bc2$var$rg;
    a = $cf563b86f33a2bc2$var$sg;
    var e = 32 - $cf563b86f33a2bc2$var$oc(d) - 1;
    d &= ~(1 << e);
    c += 1;
    var f = 32 - $cf563b86f33a2bc2$var$oc(b) + e;
    if (30 < f) {
        var g = e - e % 5;
        f = (d & (1 << g) - 1).toString(32);
        d >>= g;
        e -= g;
        $cf563b86f33a2bc2$var$rg = 1 << 32 - $cf563b86f33a2bc2$var$oc(b) + e | c << e | d;
        $cf563b86f33a2bc2$var$sg = f + a;
    } else $cf563b86f33a2bc2$var$rg = 1 << f | c << e | d, $cf563b86f33a2bc2$var$sg = a;
}
function $cf563b86f33a2bc2$var$vg(a) {
    null !== a.return && ($cf563b86f33a2bc2$var$tg(a, 1), $cf563b86f33a2bc2$var$ug(a, 1, 0));
}
function $cf563b86f33a2bc2$var$wg(a) {
    for(; a === $cf563b86f33a2bc2$var$mg;)$cf563b86f33a2bc2$var$mg = $cf563b86f33a2bc2$var$kg[--$cf563b86f33a2bc2$var$lg], $cf563b86f33a2bc2$var$kg[$cf563b86f33a2bc2$var$lg] = null, $cf563b86f33a2bc2$var$ng = $cf563b86f33a2bc2$var$kg[--$cf563b86f33a2bc2$var$lg], $cf563b86f33a2bc2$var$kg[$cf563b86f33a2bc2$var$lg] = null;
    for(; a === $cf563b86f33a2bc2$var$qg;)$cf563b86f33a2bc2$var$qg = $cf563b86f33a2bc2$var$og[--$cf563b86f33a2bc2$var$pg], $cf563b86f33a2bc2$var$og[$cf563b86f33a2bc2$var$pg] = null, $cf563b86f33a2bc2$var$sg = $cf563b86f33a2bc2$var$og[--$cf563b86f33a2bc2$var$pg], $cf563b86f33a2bc2$var$og[$cf563b86f33a2bc2$var$pg] = null, $cf563b86f33a2bc2$var$rg = $cf563b86f33a2bc2$var$og[--$cf563b86f33a2bc2$var$pg], $cf563b86f33a2bc2$var$og[$cf563b86f33a2bc2$var$pg] = null;
}
var $cf563b86f33a2bc2$var$xg = null, $cf563b86f33a2bc2$var$yg = null, $cf563b86f33a2bc2$var$I = !1, $cf563b86f33a2bc2$var$zg = null;
function $cf563b86f33a2bc2$var$Ag(a, b) {
    var c = $cf563b86f33a2bc2$var$Bg(5, null, null, 0);
    c.elementType = "DELETED";
    c.stateNode = b;
    c.return = a;
    b = a.deletions;
    null === b ? (a.deletions = [
        c
    ], a.flags |= 16) : b.push(c);
}
function $cf563b86f33a2bc2$var$Cg(a, b) {
    switch(a.tag){
        case 5:
            var c = a.type;
            b = 1 !== b.nodeType || c.toLowerCase() !== b.nodeName.toLowerCase() ? null : b;
            return null !== b ? (a.stateNode = b, $cf563b86f33a2bc2$var$xg = a, $cf563b86f33a2bc2$var$yg = $cf563b86f33a2bc2$var$Lf(b.firstChild), !0) : !1;
        case 6:
            return b = "" === a.pendingProps || 3 !== b.nodeType ? null : b, null !== b ? (a.stateNode = b, $cf563b86f33a2bc2$var$xg = a, $cf563b86f33a2bc2$var$yg = null, !0) : !1;
        case 13:
            return b = 8 !== b.nodeType ? null : b, null !== b ? (c = null !== $cf563b86f33a2bc2$var$qg ? {
                id: $cf563b86f33a2bc2$var$rg,
                overflow: $cf563b86f33a2bc2$var$sg
            } : null, a.memoizedState = {
                dehydrated: b,
                treeContext: c,
                retryLane: 1073741824
            }, c = $cf563b86f33a2bc2$var$Bg(18, null, null, 0), c.stateNode = b, c.return = a, a.child = c, $cf563b86f33a2bc2$var$xg = a, $cf563b86f33a2bc2$var$yg = null, !0) : !1;
        default:
            return !1;
    }
}
function $cf563b86f33a2bc2$var$Dg(a) {
    return 0 !== (a.mode & 1) && 0 === (a.flags & 128);
}
function $cf563b86f33a2bc2$var$Eg(a) {
    if ($cf563b86f33a2bc2$var$I) {
        var b = $cf563b86f33a2bc2$var$yg;
        if (b) {
            var c = b;
            if (!$cf563b86f33a2bc2$var$Cg(a, b)) {
                if ($cf563b86f33a2bc2$var$Dg(a)) throw Error($cf563b86f33a2bc2$var$p(418));
                b = $cf563b86f33a2bc2$var$Lf(c.nextSibling);
                var d = $cf563b86f33a2bc2$var$xg;
                b && $cf563b86f33a2bc2$var$Cg(a, b) ? $cf563b86f33a2bc2$var$Ag(d, c) : (a.flags = a.flags & -4097 | 2, $cf563b86f33a2bc2$var$I = !1, $cf563b86f33a2bc2$var$xg = a);
            }
        } else {
            if ($cf563b86f33a2bc2$var$Dg(a)) throw Error($cf563b86f33a2bc2$var$p(418));
            a.flags = a.flags & -4097 | 2;
            $cf563b86f33a2bc2$var$I = !1;
            $cf563b86f33a2bc2$var$xg = a;
        }
    }
}
function $cf563b86f33a2bc2$var$Fg(a) {
    for(a = a.return; null !== a && 5 !== a.tag && 3 !== a.tag && 13 !== a.tag;)a = a.return;
    $cf563b86f33a2bc2$var$xg = a;
}
function $cf563b86f33a2bc2$var$Gg(a) {
    if (a !== $cf563b86f33a2bc2$var$xg) return !1;
    if (!$cf563b86f33a2bc2$var$I) return $cf563b86f33a2bc2$var$Fg(a), $cf563b86f33a2bc2$var$I = !0, !1;
    var b;
    (b = 3 !== a.tag) && !(b = 5 !== a.tag) && (b = a.type, b = "head" !== b && "body" !== b && !$cf563b86f33a2bc2$var$Ef(a.type, a.memoizedProps));
    if (b && (b = $cf563b86f33a2bc2$var$yg)) {
        if ($cf563b86f33a2bc2$var$Dg(a)) throw $cf563b86f33a2bc2$var$Hg(), Error($cf563b86f33a2bc2$var$p(418));
        for(; b;)$cf563b86f33a2bc2$var$Ag(a, b), b = $cf563b86f33a2bc2$var$Lf(b.nextSibling);
    }
    $cf563b86f33a2bc2$var$Fg(a);
    if (13 === a.tag) {
        a = a.memoizedState;
        a = null !== a ? a.dehydrated : null;
        if (!a) throw Error($cf563b86f33a2bc2$var$p(317));
        a: {
            a = a.nextSibling;
            for(b = 0; a;){
                if (8 === a.nodeType) {
                    var c = a.data;
                    if ("/$" === c) {
                        if (0 === b) {
                            $cf563b86f33a2bc2$var$yg = $cf563b86f33a2bc2$var$Lf(a.nextSibling);
                            break a;
                        }
                        b--;
                    } else "$" !== c && "$!" !== c && "$?" !== c || b++;
                }
                a = a.nextSibling;
            }
            $cf563b86f33a2bc2$var$yg = null;
        }
    } else $cf563b86f33a2bc2$var$yg = $cf563b86f33a2bc2$var$xg ? $cf563b86f33a2bc2$var$Lf(a.stateNode.nextSibling) : null;
    return !0;
}
function $cf563b86f33a2bc2$var$Hg() {
    for(var a = $cf563b86f33a2bc2$var$yg; a;)a = $cf563b86f33a2bc2$var$Lf(a.nextSibling);
}
function $cf563b86f33a2bc2$var$Ig() {
    $cf563b86f33a2bc2$var$yg = $cf563b86f33a2bc2$var$xg = null;
    $cf563b86f33a2bc2$var$I = !1;
}
function $cf563b86f33a2bc2$var$Jg(a) {
    null === $cf563b86f33a2bc2$var$zg ? $cf563b86f33a2bc2$var$zg = [
        a
    ] : $cf563b86f33a2bc2$var$zg.push(a);
}
var $cf563b86f33a2bc2$var$Kg = $cf563b86f33a2bc2$var$ua.ReactCurrentBatchConfig;
function $cf563b86f33a2bc2$var$Lg(a, b) {
    if (a && a.defaultProps) {
        b = $cf563b86f33a2bc2$var$A({}, b);
        a = a.defaultProps;
        for(var c in a)void 0 === b[c] && (b[c] = a[c]);
        return b;
    }
    return b;
}
var $cf563b86f33a2bc2$var$Mg = $cf563b86f33a2bc2$var$Uf(null), $cf563b86f33a2bc2$var$Ng = null, $cf563b86f33a2bc2$var$Og = null, $cf563b86f33a2bc2$var$Pg = null;
function $cf563b86f33a2bc2$var$Qg() {
    $cf563b86f33a2bc2$var$Pg = $cf563b86f33a2bc2$var$Og = $cf563b86f33a2bc2$var$Ng = null;
}
function $cf563b86f33a2bc2$var$Rg(a) {
    var b = $cf563b86f33a2bc2$var$Mg.current;
    $cf563b86f33a2bc2$var$E($cf563b86f33a2bc2$var$Mg);
    a._currentValue = b;
}
function $cf563b86f33a2bc2$var$Sg(a, b, c) {
    for(; null !== a;){
        var d = a.alternate;
        (a.childLanes & b) !== b ? (a.childLanes |= b, null !== d && (d.childLanes |= b)) : null !== d && (d.childLanes & b) !== b && (d.childLanes |= b);
        if (a === c) break;
        a = a.return;
    }
}
function $cf563b86f33a2bc2$var$Tg(a, b) {
    $cf563b86f33a2bc2$var$Ng = a;
    $cf563b86f33a2bc2$var$Pg = $cf563b86f33a2bc2$var$Og = null;
    a = a.dependencies;
    null !== a && null !== a.firstContext && (0 !== (a.lanes & b) && ($cf563b86f33a2bc2$var$Ug = !0), a.firstContext = null);
}
function $cf563b86f33a2bc2$var$Vg(a) {
    var b = a._currentValue;
    if ($cf563b86f33a2bc2$var$Pg !== a) {
        if (a = {
            context: a,
            memoizedValue: b,
            next: null
        }, null === $cf563b86f33a2bc2$var$Og) {
            if (null === $cf563b86f33a2bc2$var$Ng) throw Error($cf563b86f33a2bc2$var$p(308));
            $cf563b86f33a2bc2$var$Og = a;
            $cf563b86f33a2bc2$var$Ng.dependencies = {
                lanes: 0,
                firstContext: a
            };
        } else $cf563b86f33a2bc2$var$Og = $cf563b86f33a2bc2$var$Og.next = a;
    }
    return b;
}
var $cf563b86f33a2bc2$var$Wg = null;
function $cf563b86f33a2bc2$var$Xg(a) {
    null === $cf563b86f33a2bc2$var$Wg ? $cf563b86f33a2bc2$var$Wg = [
        a
    ] : $cf563b86f33a2bc2$var$Wg.push(a);
}
function $cf563b86f33a2bc2$var$Yg(a, b, c, d) {
    var e = b.interleaved;
    null === e ? (c.next = c, $cf563b86f33a2bc2$var$Xg(b)) : (c.next = e.next, e.next = c);
    b.interleaved = c;
    return $cf563b86f33a2bc2$var$Zg(a, d);
}
function $cf563b86f33a2bc2$var$Zg(a, b) {
    a.lanes |= b;
    var c = a.alternate;
    null !== c && (c.lanes |= b);
    c = a;
    for(a = a.return; null !== a;)a.childLanes |= b, c = a.alternate, null !== c && (c.childLanes |= b), c = a, a = a.return;
    return 3 === c.tag ? c.stateNode : null;
}
var $cf563b86f33a2bc2$var$$g = !1;
function $cf563b86f33a2bc2$var$ah(a) {
    a.updateQueue = {
        baseState: a.memoizedState,
        firstBaseUpdate: null,
        lastBaseUpdate: null,
        shared: {
            pending: null,
            interleaved: null,
            lanes: 0
        },
        effects: null
    };
}
function $cf563b86f33a2bc2$var$bh(a, b) {
    a = a.updateQueue;
    b.updateQueue === a && (b.updateQueue = {
        baseState: a.baseState,
        firstBaseUpdate: a.firstBaseUpdate,
        lastBaseUpdate: a.lastBaseUpdate,
        shared: a.shared,
        effects: a.effects
    });
}
function $cf563b86f33a2bc2$var$ch(a, b) {
    return {
        eventTime: a,
        lane: b,
        tag: 0,
        payload: null,
        callback: null,
        next: null
    };
}
function $cf563b86f33a2bc2$var$dh(a, b, c) {
    var d = a.updateQueue;
    if (null === d) return null;
    d = d.shared;
    if (0 !== ($cf563b86f33a2bc2$var$K & 2)) {
        var e = d.pending;
        null === e ? b.next = b : (b.next = e.next, e.next = b);
        d.pending = b;
        return $cf563b86f33a2bc2$var$Zg(a, c);
    }
    e = d.interleaved;
    null === e ? (b.next = b, $cf563b86f33a2bc2$var$Xg(d)) : (b.next = e.next, e.next = b);
    d.interleaved = b;
    return $cf563b86f33a2bc2$var$Zg(a, c);
}
function $cf563b86f33a2bc2$var$eh(a, b, c) {
    b = b.updateQueue;
    if (null !== b && (b = b.shared, 0 !== (c & 4194240))) {
        var d = b.lanes;
        d &= a.pendingLanes;
        c |= d;
        b.lanes = c;
        $cf563b86f33a2bc2$var$Cc(a, c);
    }
}
function $cf563b86f33a2bc2$var$fh(a, b) {
    var c = a.updateQueue, d = a.alternate;
    if (null !== d && (d = d.updateQueue, c === d)) {
        var e = null, f = null;
        c = c.firstBaseUpdate;
        if (null !== c) {
            do {
                var g = {
                    eventTime: c.eventTime,
                    lane: c.lane,
                    tag: c.tag,
                    payload: c.payload,
                    callback: c.callback,
                    next: null
                };
                null === f ? e = f = g : f = f.next = g;
                c = c.next;
            }while (null !== c);
            null === f ? e = f = b : f = f.next = b;
        } else e = f = b;
        c = {
            baseState: d.baseState,
            firstBaseUpdate: e,
            lastBaseUpdate: f,
            shared: d.shared,
            effects: d.effects
        };
        a.updateQueue = c;
        return;
    }
    a = c.lastBaseUpdate;
    null === a ? c.firstBaseUpdate = b : a.next = b;
    c.lastBaseUpdate = b;
}
function $cf563b86f33a2bc2$var$gh(a, b, c, d) {
    var e = a.updateQueue;
    $cf563b86f33a2bc2$var$$g = !1;
    var f = e.firstBaseUpdate, g = e.lastBaseUpdate, h = e.shared.pending;
    if (null !== h) {
        e.shared.pending = null;
        var k = h, l = k.next;
        k.next = null;
        null === g ? f = l : g.next = l;
        g = k;
        var m = a.alternate;
        null !== m && (m = m.updateQueue, h = m.lastBaseUpdate, h !== g && (null === h ? m.firstBaseUpdate = l : h.next = l, m.lastBaseUpdate = k));
    }
    if (null !== f) {
        var q = e.baseState;
        g = 0;
        m = l = k = null;
        h = f;
        do {
            var r = h.lane, y = h.eventTime;
            if ((d & r) === r) {
                null !== m && (m = m.next = {
                    eventTime: y,
                    lane: 0,
                    tag: h.tag,
                    payload: h.payload,
                    callback: h.callback,
                    next: null
                });
                a: {
                    var n = a, t = h;
                    r = b;
                    y = c;
                    switch(t.tag){
                        case 1:
                            n = t.payload;
                            if ("function" === typeof n) {
                                q = n.call(y, q, r);
                                break a;
                            }
                            q = n;
                            break a;
                        case 3:
                            n.flags = n.flags & -65537 | 128;
                        case 0:
                            n = t.payload;
                            r = "function" === typeof n ? n.call(y, q, r) : n;
                            if (null === r || void 0 === r) break a;
                            q = $cf563b86f33a2bc2$var$A({}, q, r);
                            break a;
                        case 2:
                            $cf563b86f33a2bc2$var$$g = !0;
                    }
                }
                null !== h.callback && 0 !== h.lane && (a.flags |= 64, r = e.effects, null === r ? e.effects = [
                    h
                ] : r.push(h));
            } else y = {
                eventTime: y,
                lane: r,
                tag: h.tag,
                payload: h.payload,
                callback: h.callback,
                next: null
            }, null === m ? (l = m = y, k = q) : m = m.next = y, g |= r;
            h = h.next;
            if (null === h) {
                if (h = e.shared.pending, null === h) break;
                else r = h, h = r.next, r.next = null, e.lastBaseUpdate = r, e.shared.pending = null;
            }
        }while (1);
        null === m && (k = q);
        e.baseState = k;
        e.firstBaseUpdate = l;
        e.lastBaseUpdate = m;
        b = e.shared.interleaved;
        if (null !== b) {
            e = b;
            do g |= e.lane, e = e.next;
            while (e !== b);
        } else null === f && (e.shared.lanes = 0);
        $cf563b86f33a2bc2$var$hh |= g;
        a.lanes = g;
        a.memoizedState = q;
    }
}
function $cf563b86f33a2bc2$var$ih(a, b, c) {
    a = b.effects;
    b.effects = null;
    if (null !== a) for(b = 0; b < a.length; b++){
        var d = a[b], e = d.callback;
        if (null !== e) {
            d.callback = null;
            d = c;
            if ("function" !== typeof e) throw Error($cf563b86f33a2bc2$var$p(191, e));
            e.call(d);
        }
    }
}
var $cf563b86f33a2bc2$var$jh = (new $laauJ.Component).refs;
function $cf563b86f33a2bc2$var$kh(a, b, c, d) {
    b = a.memoizedState;
    c = c(d, b);
    c = null === c || void 0 === c ? b : $cf563b86f33a2bc2$var$A({}, b, c);
    a.memoizedState = c;
    0 === a.lanes && (a.updateQueue.baseState = c);
}
var $cf563b86f33a2bc2$var$nh = {
    isMounted: function(a) {
        return (a = a._reactInternals) ? $cf563b86f33a2bc2$var$Vb(a) === a : !1;
    },
    enqueueSetState: function(a, b, c) {
        a = a._reactInternals;
        var d = $cf563b86f33a2bc2$var$L(), e = $cf563b86f33a2bc2$var$lh(a), f = $cf563b86f33a2bc2$var$ch(d, e);
        f.payload = b;
        void 0 !== c && null !== c && (f.callback = c);
        b = $cf563b86f33a2bc2$var$dh(a, f, e);
        null !== b && ($cf563b86f33a2bc2$var$mh(b, a, e, d), $cf563b86f33a2bc2$var$eh(b, a, e));
    },
    enqueueReplaceState: function(a, b, c) {
        a = a._reactInternals;
        var d = $cf563b86f33a2bc2$var$L(), e = $cf563b86f33a2bc2$var$lh(a), f = $cf563b86f33a2bc2$var$ch(d, e);
        f.tag = 1;
        f.payload = b;
        void 0 !== c && null !== c && (f.callback = c);
        b = $cf563b86f33a2bc2$var$dh(a, f, e);
        null !== b && ($cf563b86f33a2bc2$var$mh(b, a, e, d), $cf563b86f33a2bc2$var$eh(b, a, e));
    },
    enqueueForceUpdate: function(a, b) {
        a = a._reactInternals;
        var c = $cf563b86f33a2bc2$var$L(), d = $cf563b86f33a2bc2$var$lh(a), e = $cf563b86f33a2bc2$var$ch(c, d);
        e.tag = 2;
        void 0 !== b && null !== b && (e.callback = b);
        b = $cf563b86f33a2bc2$var$dh(a, e, d);
        null !== b && ($cf563b86f33a2bc2$var$mh(b, a, d, c), $cf563b86f33a2bc2$var$eh(b, a, d));
    }
};
function $cf563b86f33a2bc2$var$oh(a, b, c, d, e, f, g) {
    a = a.stateNode;
    return "function" === typeof a.shouldComponentUpdate ? a.shouldComponentUpdate(d, f, g) : b.prototype && b.prototype.isPureReactComponent ? !$cf563b86f33a2bc2$var$Ie(c, d) || !$cf563b86f33a2bc2$var$Ie(e, f) : !0;
}
function $cf563b86f33a2bc2$var$ph(a, b, c) {
    var d = !1, e = $cf563b86f33a2bc2$var$Vf;
    var f = b.contextType;
    "object" === typeof f && null !== f ? f = $cf563b86f33a2bc2$var$Vg(f) : (e = $cf563b86f33a2bc2$var$Zf(b) ? $cf563b86f33a2bc2$var$Xf : $cf563b86f33a2bc2$var$H.current, d = b.contextTypes, f = (d = null !== d && void 0 !== d) ? $cf563b86f33a2bc2$var$Yf(a, e) : $cf563b86f33a2bc2$var$Vf);
    b = new b(c, f);
    a.memoizedState = null !== b.state && void 0 !== b.state ? b.state : null;
    b.updater = $cf563b86f33a2bc2$var$nh;
    a.stateNode = b;
    b._reactInternals = a;
    d && (a = a.stateNode, a.__reactInternalMemoizedUnmaskedChildContext = e, a.__reactInternalMemoizedMaskedChildContext = f);
    return b;
}
function $cf563b86f33a2bc2$var$qh(a, b, c, d) {
    a = b.state;
    "function" === typeof b.componentWillReceiveProps && b.componentWillReceiveProps(c, d);
    "function" === typeof b.UNSAFE_componentWillReceiveProps && b.UNSAFE_componentWillReceiveProps(c, d);
    b.state !== a && $cf563b86f33a2bc2$var$nh.enqueueReplaceState(b, b.state, null);
}
function $cf563b86f33a2bc2$var$rh(a, b, c, d) {
    var e = a.stateNode;
    e.props = c;
    e.state = a.memoizedState;
    e.refs = $cf563b86f33a2bc2$var$jh;
    $cf563b86f33a2bc2$var$ah(a);
    var f = b.contextType;
    "object" === typeof f && null !== f ? e.context = $cf563b86f33a2bc2$var$Vg(f) : (f = $cf563b86f33a2bc2$var$Zf(b) ? $cf563b86f33a2bc2$var$Xf : $cf563b86f33a2bc2$var$H.current, e.context = $cf563b86f33a2bc2$var$Yf(a, f));
    e.state = a.memoizedState;
    f = b.getDerivedStateFromProps;
    "function" === typeof f && ($cf563b86f33a2bc2$var$kh(a, b, f, c), e.state = a.memoizedState);
    "function" === typeof b.getDerivedStateFromProps || "function" === typeof e.getSnapshotBeforeUpdate || "function" !== typeof e.UNSAFE_componentWillMount && "function" !== typeof e.componentWillMount || (b = e.state, "function" === typeof e.componentWillMount && e.componentWillMount(), "function" === typeof e.UNSAFE_componentWillMount && e.UNSAFE_componentWillMount(), b !== e.state && $cf563b86f33a2bc2$var$nh.enqueueReplaceState(e, e.state, null), $cf563b86f33a2bc2$var$gh(a, c, e, d), e.state = a.memoizedState);
    "function" === typeof e.componentDidMount && (a.flags |= 4194308);
}
function $cf563b86f33a2bc2$var$sh(a, b, c) {
    a = c.ref;
    if (null !== a && "function" !== typeof a && "object" !== typeof a) {
        if (c._owner) {
            c = c._owner;
            if (c) {
                if (1 !== c.tag) throw Error($cf563b86f33a2bc2$var$p(309));
                var d = c.stateNode;
            }
            if (!d) throw Error($cf563b86f33a2bc2$var$p(147, a));
            var e = d, f = "" + a;
            if (null !== b && null !== b.ref && "function" === typeof b.ref && b.ref._stringRef === f) return b.ref;
            b = function(a) {
                var b = e.refs;
                b === $cf563b86f33a2bc2$var$jh && (b = e.refs = {});
                null === a ? delete b[f] : b[f] = a;
            };
            b._stringRef = f;
            return b;
        }
        if ("string" !== typeof a) throw Error($cf563b86f33a2bc2$var$p(284));
        if (!c._owner) throw Error($cf563b86f33a2bc2$var$p(290, a));
    }
    return a;
}
function $cf563b86f33a2bc2$var$th(a, b) {
    a = Object.prototype.toString.call(b);
    throw Error($cf563b86f33a2bc2$var$p(31, "[object Object]" === a ? "object with keys {" + Object.keys(b).join(", ") + "}" : a));
}
function $cf563b86f33a2bc2$var$uh(a) {
    var b = a._init;
    return b(a._payload);
}
function $cf563b86f33a2bc2$var$vh(a) {
    function b(b, c) {
        if (a) {
            var d = b.deletions;
            null === d ? (b.deletions = [
                c
            ], b.flags |= 16) : d.push(c);
        }
    }
    function c(c, d) {
        if (!a) return null;
        for(; null !== d;)b(c, d), d = d.sibling;
        return null;
    }
    function d(a, b) {
        for(a = new Map; null !== b;)null !== b.key ? a.set(b.key, b) : a.set(b.index, b), b = b.sibling;
        return a;
    }
    function e(a, b) {
        a = $cf563b86f33a2bc2$var$wh(a, b);
        a.index = 0;
        a.sibling = null;
        return a;
    }
    function f(b, c, d) {
        b.index = d;
        if (!a) return b.flags |= 1048576, c;
        d = b.alternate;
        if (null !== d) return d = d.index, d < c ? (b.flags |= 2, c) : d;
        b.flags |= 2;
        return c;
    }
    function g(b) {
        a && null === b.alternate && (b.flags |= 2);
        return b;
    }
    function h(a, b, c, d) {
        if (null === b || 6 !== b.tag) return b = $cf563b86f33a2bc2$var$xh(c, a.mode, d), b.return = a, b;
        b = e(b, c);
        b.return = a;
        return b;
    }
    function k(a, b, c, d) {
        var f = c.type;
        if (f === $cf563b86f33a2bc2$var$ya) return m(a, b, c.props.children, d, c.key);
        if (null !== b && (b.elementType === f || "object" === typeof f && null !== f && f.$$typeof === $cf563b86f33a2bc2$var$Ha && $cf563b86f33a2bc2$var$uh(f) === b.type)) return d = e(b, c.props), d.ref = $cf563b86f33a2bc2$var$sh(a, b, c), d.return = a, d;
        d = $cf563b86f33a2bc2$var$yh(c.type, c.key, c.props, null, a.mode, d);
        d.ref = $cf563b86f33a2bc2$var$sh(a, b, c);
        d.return = a;
        return d;
    }
    function l(a, b, c, d) {
        if (null === b || 4 !== b.tag || b.stateNode.containerInfo !== c.containerInfo || b.stateNode.implementation !== c.implementation) return b = $cf563b86f33a2bc2$var$zh(c, a.mode, d), b.return = a, b;
        b = e(b, c.children || []);
        b.return = a;
        return b;
    }
    function m(a, b, c, d, f) {
        if (null === b || 7 !== b.tag) return b = $cf563b86f33a2bc2$var$Ah(c, a.mode, d, f), b.return = a, b;
        b = e(b, c);
        b.return = a;
        return b;
    }
    function q(a, b, c) {
        if ("string" === typeof b && "" !== b || "number" === typeof b) return b = $cf563b86f33a2bc2$var$xh("" + b, a.mode, c), b.return = a, b;
        if ("object" === typeof b && null !== b) {
            switch(b.$$typeof){
                case $cf563b86f33a2bc2$var$va:
                    return c = $cf563b86f33a2bc2$var$yh(b.type, b.key, b.props, null, a.mode, c), c.ref = $cf563b86f33a2bc2$var$sh(a, null, b), c.return = a, c;
                case $cf563b86f33a2bc2$var$wa:
                    return b = $cf563b86f33a2bc2$var$zh(b, a.mode, c), b.return = a, b;
                case $cf563b86f33a2bc2$var$Ha:
                    var d = b._init;
                    return q(a, d(b._payload), c);
            }
            if ($cf563b86f33a2bc2$var$eb(b) || $cf563b86f33a2bc2$var$Ka(b)) return b = $cf563b86f33a2bc2$var$Ah(b, a.mode, c, null), b.return = a, b;
            $cf563b86f33a2bc2$var$th(a, b);
        }
        return null;
    }
    function r(a, b, c, d) {
        var e = null !== b ? b.key : null;
        if ("string" === typeof c && "" !== c || "number" === typeof c) return null !== e ? null : h(a, b, "" + c, d);
        if ("object" === typeof c && null !== c) {
            switch(c.$$typeof){
                case $cf563b86f33a2bc2$var$va:
                    return c.key === e ? k(a, b, c, d) : null;
                case $cf563b86f33a2bc2$var$wa:
                    return c.key === e ? l(a, b, c, d) : null;
                case $cf563b86f33a2bc2$var$Ha:
                    return e = c._init, r(a, b, e(c._payload), d);
            }
            if ($cf563b86f33a2bc2$var$eb(c) || $cf563b86f33a2bc2$var$Ka(c)) return null !== e ? null : m(a, b, c, d, null);
            $cf563b86f33a2bc2$var$th(a, c);
        }
        return null;
    }
    function y(a, b, c, d, e) {
        if ("string" === typeof d && "" !== d || "number" === typeof d) return a = a.get(c) || null, h(b, a, "" + d, e);
        if ("object" === typeof d && null !== d) {
            switch(d.$$typeof){
                case $cf563b86f33a2bc2$var$va:
                    return a = a.get(null === d.key ? c : d.key) || null, k(b, a, d, e);
                case $cf563b86f33a2bc2$var$wa:
                    return a = a.get(null === d.key ? c : d.key) || null, l(b, a, d, e);
                case $cf563b86f33a2bc2$var$Ha:
                    var f = d._init;
                    return y(a, b, c, f(d._payload), e);
            }
            if ($cf563b86f33a2bc2$var$eb(d) || $cf563b86f33a2bc2$var$Ka(d)) return a = a.get(c) || null, m(b, a, d, e, null);
            $cf563b86f33a2bc2$var$th(b, d);
        }
        return null;
    }
    function n(e, g, h, k) {
        for(var l = null, m = null, u = g, w = g = 0, x = null; null !== u && w < h.length; w++){
            u.index > w ? (x = u, u = null) : x = u.sibling;
            var n = r(e, u, h[w], k);
            if (null === n) {
                null === u && (u = x);
                break;
            }
            a && u && null === n.alternate && b(e, u);
            g = f(n, g, w);
            null === m ? l = n : m.sibling = n;
            m = n;
            u = x;
        }
        if (w === h.length) return c(e, u), $cf563b86f33a2bc2$var$I && $cf563b86f33a2bc2$var$tg(e, w), l;
        if (null === u) {
            for(; w < h.length; w++)u = q(e, h[w], k), null !== u && (g = f(u, g, w), null === m ? l = u : m.sibling = u, m = u);
            $cf563b86f33a2bc2$var$I && $cf563b86f33a2bc2$var$tg(e, w);
            return l;
        }
        for(u = d(e, u); w < h.length; w++)x = y(u, e, w, h[w], k), null !== x && (a && null !== x.alternate && u.delete(null === x.key ? w : x.key), g = f(x, g, w), null === m ? l = x : m.sibling = x, m = x);
        a && u.forEach(function(a) {
            return b(e, a);
        });
        $cf563b86f33a2bc2$var$I && $cf563b86f33a2bc2$var$tg(e, w);
        return l;
    }
    function t(e, g, h, k) {
        var l = $cf563b86f33a2bc2$var$Ka(h);
        if ("function" !== typeof l) throw Error($cf563b86f33a2bc2$var$p(150));
        h = l.call(h);
        if (null == h) throw Error($cf563b86f33a2bc2$var$p(151));
        for(var u = l = null, m = g, w = g = 0, x = null, n = h.next(); null !== m && !n.done; w++, n = h.next()){
            m.index > w ? (x = m, m = null) : x = m.sibling;
            var t = r(e, m, n.value, k);
            if (null === t) {
                null === m && (m = x);
                break;
            }
            a && m && null === t.alternate && b(e, m);
            g = f(t, g, w);
            null === u ? l = t : u.sibling = t;
            u = t;
            m = x;
        }
        if (n.done) return c(e, m), $cf563b86f33a2bc2$var$I && $cf563b86f33a2bc2$var$tg(e, w), l;
        if (null === m) {
            for(; !n.done; w++, n = h.next())n = q(e, n.value, k), null !== n && (g = f(n, g, w), null === u ? l = n : u.sibling = n, u = n);
            $cf563b86f33a2bc2$var$I && $cf563b86f33a2bc2$var$tg(e, w);
            return l;
        }
        for(m = d(e, m); !n.done; w++, n = h.next())n = y(m, e, w, n.value, k), null !== n && (a && null !== n.alternate && m.delete(null === n.key ? w : n.key), g = f(n, g, w), null === u ? l = n : u.sibling = n, u = n);
        a && m.forEach(function(a) {
            return b(e, a);
        });
        $cf563b86f33a2bc2$var$I && $cf563b86f33a2bc2$var$tg(e, w);
        return l;
    }
    function J(a, d, f, h) {
        "object" === typeof f && null !== f && f.type === $cf563b86f33a2bc2$var$ya && null === f.key && (f = f.props.children);
        if ("object" === typeof f && null !== f) {
            switch(f.$$typeof){
                case $cf563b86f33a2bc2$var$va:
                    a: {
                        for(var k = f.key, l = d; null !== l;){
                            if (l.key === k) {
                                k = f.type;
                                if (k === $cf563b86f33a2bc2$var$ya) {
                                    if (7 === l.tag) {
                                        c(a, l.sibling);
                                        d = e(l, f.props.children);
                                        d.return = a;
                                        a = d;
                                        break a;
                                    }
                                } else if (l.elementType === k || "object" === typeof k && null !== k && k.$$typeof === $cf563b86f33a2bc2$var$Ha && $cf563b86f33a2bc2$var$uh(k) === l.type) {
                                    c(a, l.sibling);
                                    d = e(l, f.props);
                                    d.ref = $cf563b86f33a2bc2$var$sh(a, l, f);
                                    d.return = a;
                                    a = d;
                                    break a;
                                }
                                c(a, l);
                                break;
                            } else b(a, l);
                            l = l.sibling;
                        }
                        f.type === $cf563b86f33a2bc2$var$ya ? (d = $cf563b86f33a2bc2$var$Ah(f.props.children, a.mode, h, f.key), d.return = a, a = d) : (h = $cf563b86f33a2bc2$var$yh(f.type, f.key, f.props, null, a.mode, h), h.ref = $cf563b86f33a2bc2$var$sh(a, d, f), h.return = a, a = h);
                    }
                    return g(a);
                case $cf563b86f33a2bc2$var$wa:
                    a: {
                        for(l = f.key; null !== d;){
                            if (d.key === l) {
                                if (4 === d.tag && d.stateNode.containerInfo === f.containerInfo && d.stateNode.implementation === f.implementation) {
                                    c(a, d.sibling);
                                    d = e(d, f.children || []);
                                    d.return = a;
                                    a = d;
                                    break a;
                                } else {
                                    c(a, d);
                                    break;
                                }
                            } else b(a, d);
                            d = d.sibling;
                        }
                        d = $cf563b86f33a2bc2$var$zh(f, a.mode, h);
                        d.return = a;
                        a = d;
                    }
                    return g(a);
                case $cf563b86f33a2bc2$var$Ha:
                    return l = f._init, J(a, d, l(f._payload), h);
            }
            if ($cf563b86f33a2bc2$var$eb(f)) return n(a, d, f, h);
            if ($cf563b86f33a2bc2$var$Ka(f)) return t(a, d, f, h);
            $cf563b86f33a2bc2$var$th(a, f);
        }
        return "string" === typeof f && "" !== f || "number" === typeof f ? (f = "" + f, null !== d && 6 === d.tag ? (c(a, d.sibling), d = e(d, f), d.return = a, a = d) : (c(a, d), d = $cf563b86f33a2bc2$var$xh(f, a.mode, h), d.return = a, a = d), g(a)) : c(a, d);
    }
    return J;
}
var $cf563b86f33a2bc2$var$Bh = $cf563b86f33a2bc2$var$vh(!0), $cf563b86f33a2bc2$var$Ch = $cf563b86f33a2bc2$var$vh(!1), $cf563b86f33a2bc2$var$Dh = {}, $cf563b86f33a2bc2$var$Eh = $cf563b86f33a2bc2$var$Uf($cf563b86f33a2bc2$var$Dh), $cf563b86f33a2bc2$var$Fh = $cf563b86f33a2bc2$var$Uf($cf563b86f33a2bc2$var$Dh), $cf563b86f33a2bc2$var$Gh = $cf563b86f33a2bc2$var$Uf($cf563b86f33a2bc2$var$Dh);
function $cf563b86f33a2bc2$var$Hh(a) {
    if (a === $cf563b86f33a2bc2$var$Dh) throw Error($cf563b86f33a2bc2$var$p(174));
    return a;
}
function $cf563b86f33a2bc2$var$Ih(a, b) {
    $cf563b86f33a2bc2$var$G($cf563b86f33a2bc2$var$Gh, b);
    $cf563b86f33a2bc2$var$G($cf563b86f33a2bc2$var$Fh, a);
    $cf563b86f33a2bc2$var$G($cf563b86f33a2bc2$var$Eh, $cf563b86f33a2bc2$var$Dh);
    a = b.nodeType;
    switch(a){
        case 9:
        case 11:
            b = (b = b.documentElement) ? b.namespaceURI : $cf563b86f33a2bc2$var$lb(null, "");
            break;
        default:
            a = 8 === a ? b.parentNode : b, b = a.namespaceURI || null, a = a.tagName, b = $cf563b86f33a2bc2$var$lb(b, a);
    }
    $cf563b86f33a2bc2$var$E($cf563b86f33a2bc2$var$Eh);
    $cf563b86f33a2bc2$var$G($cf563b86f33a2bc2$var$Eh, b);
}
function $cf563b86f33a2bc2$var$Jh() {
    $cf563b86f33a2bc2$var$E($cf563b86f33a2bc2$var$Eh);
    $cf563b86f33a2bc2$var$E($cf563b86f33a2bc2$var$Fh);
    $cf563b86f33a2bc2$var$E($cf563b86f33a2bc2$var$Gh);
}
function $cf563b86f33a2bc2$var$Kh(a) {
    $cf563b86f33a2bc2$var$Hh($cf563b86f33a2bc2$var$Gh.current);
    var b = $cf563b86f33a2bc2$var$Hh($cf563b86f33a2bc2$var$Eh.current);
    var c = $cf563b86f33a2bc2$var$lb(b, a.type);
    b !== c && ($cf563b86f33a2bc2$var$G($cf563b86f33a2bc2$var$Fh, a), $cf563b86f33a2bc2$var$G($cf563b86f33a2bc2$var$Eh, c));
}
function $cf563b86f33a2bc2$var$Lh(a) {
    $cf563b86f33a2bc2$var$Fh.current === a && ($cf563b86f33a2bc2$var$E($cf563b86f33a2bc2$var$Eh), $cf563b86f33a2bc2$var$E($cf563b86f33a2bc2$var$Fh));
}
var $cf563b86f33a2bc2$var$M = $cf563b86f33a2bc2$var$Uf(0);
function $cf563b86f33a2bc2$var$Mh(a) {
    for(var b = a; null !== b;){
        if (13 === b.tag) {
            var c = b.memoizedState;
            if (null !== c && (c = c.dehydrated, null === c || "$?" === c.data || "$!" === c.data)) return b;
        } else if (19 === b.tag && void 0 !== b.memoizedProps.revealOrder) {
            if (0 !== (b.flags & 128)) return b;
        } else if (null !== b.child) {
            b.child.return = b;
            b = b.child;
            continue;
        }
        if (b === a) break;
        for(; null === b.sibling;){
            if (null === b.return || b.return === a) return null;
            b = b.return;
        }
        b.sibling.return = b.return;
        b = b.sibling;
    }
    return null;
}
var $cf563b86f33a2bc2$var$Nh = [];
function $cf563b86f33a2bc2$var$Oh() {
    for(var a = 0; a < $cf563b86f33a2bc2$var$Nh.length; a++)$cf563b86f33a2bc2$var$Nh[a]._workInProgressVersionPrimary = null;
    $cf563b86f33a2bc2$var$Nh.length = 0;
}
var $cf563b86f33a2bc2$var$Ph = $cf563b86f33a2bc2$var$ua.ReactCurrentDispatcher, $cf563b86f33a2bc2$var$Qh = $cf563b86f33a2bc2$var$ua.ReactCurrentBatchConfig, $cf563b86f33a2bc2$var$Rh = 0, $cf563b86f33a2bc2$var$N = null, $cf563b86f33a2bc2$var$O = null, $cf563b86f33a2bc2$var$P = null, $cf563b86f33a2bc2$var$Sh = !1, $cf563b86f33a2bc2$var$Th = !1, $cf563b86f33a2bc2$var$Uh = 0, $cf563b86f33a2bc2$var$Vh = 0;
function $cf563b86f33a2bc2$var$Q() {
    throw Error($cf563b86f33a2bc2$var$p(321));
}
function $cf563b86f33a2bc2$var$Wh(a, b) {
    if (null === b) return !1;
    for(var c = 0; c < b.length && c < a.length; c++)if (!$cf563b86f33a2bc2$var$He(a[c], b[c])) return !1;
    return !0;
}
function $cf563b86f33a2bc2$var$Xh(a, b, c, d, e, f) {
    $cf563b86f33a2bc2$var$Rh = f;
    $cf563b86f33a2bc2$var$N = b;
    b.memoizedState = null;
    b.updateQueue = null;
    b.lanes = 0;
    $cf563b86f33a2bc2$var$Ph.current = null === a || null === a.memoizedState ? $cf563b86f33a2bc2$var$Yh : $cf563b86f33a2bc2$var$Zh;
    a = c(d, e);
    if ($cf563b86f33a2bc2$var$Th) {
        f = 0;
        do {
            $cf563b86f33a2bc2$var$Th = !1;
            $cf563b86f33a2bc2$var$Uh = 0;
            if (25 <= f) throw Error($cf563b86f33a2bc2$var$p(301));
            f += 1;
            $cf563b86f33a2bc2$var$P = $cf563b86f33a2bc2$var$O = null;
            b.updateQueue = null;
            $cf563b86f33a2bc2$var$Ph.current = $cf563b86f33a2bc2$var$$h;
            a = c(d, e);
        }while ($cf563b86f33a2bc2$var$Th);
    }
    $cf563b86f33a2bc2$var$Ph.current = $cf563b86f33a2bc2$var$ai;
    b = null !== $cf563b86f33a2bc2$var$O && null !== $cf563b86f33a2bc2$var$O.next;
    $cf563b86f33a2bc2$var$Rh = 0;
    $cf563b86f33a2bc2$var$P = $cf563b86f33a2bc2$var$O = $cf563b86f33a2bc2$var$N = null;
    $cf563b86f33a2bc2$var$Sh = !1;
    if (b) throw Error($cf563b86f33a2bc2$var$p(300));
    return a;
}
function $cf563b86f33a2bc2$var$bi() {
    var a = 0 !== $cf563b86f33a2bc2$var$Uh;
    $cf563b86f33a2bc2$var$Uh = 0;
    return a;
}
function $cf563b86f33a2bc2$var$ci() {
    var a = {
        memoizedState: null,
        baseState: null,
        baseQueue: null,
        queue: null,
        next: null
    };
    null === $cf563b86f33a2bc2$var$P ? $cf563b86f33a2bc2$var$N.memoizedState = $cf563b86f33a2bc2$var$P = a : $cf563b86f33a2bc2$var$P = $cf563b86f33a2bc2$var$P.next = a;
    return $cf563b86f33a2bc2$var$P;
}
function $cf563b86f33a2bc2$var$di() {
    if (null === $cf563b86f33a2bc2$var$O) {
        var a = $cf563b86f33a2bc2$var$N.alternate;
        a = null !== a ? a.memoizedState : null;
    } else a = $cf563b86f33a2bc2$var$O.next;
    var b = null === $cf563b86f33a2bc2$var$P ? $cf563b86f33a2bc2$var$N.memoizedState : $cf563b86f33a2bc2$var$P.next;
    if (null !== b) $cf563b86f33a2bc2$var$P = b, $cf563b86f33a2bc2$var$O = a;
    else {
        if (null === a) throw Error($cf563b86f33a2bc2$var$p(310));
        $cf563b86f33a2bc2$var$O = a;
        a = {
            memoizedState: $cf563b86f33a2bc2$var$O.memoizedState,
            baseState: $cf563b86f33a2bc2$var$O.baseState,
            baseQueue: $cf563b86f33a2bc2$var$O.baseQueue,
            queue: $cf563b86f33a2bc2$var$O.queue,
            next: null
        };
        null === $cf563b86f33a2bc2$var$P ? $cf563b86f33a2bc2$var$N.memoizedState = $cf563b86f33a2bc2$var$P = a : $cf563b86f33a2bc2$var$P = $cf563b86f33a2bc2$var$P.next = a;
    }
    return $cf563b86f33a2bc2$var$P;
}
function $cf563b86f33a2bc2$var$ei(a, b) {
    return "function" === typeof b ? b(a) : b;
}
function $cf563b86f33a2bc2$var$fi(a) {
    var b = $cf563b86f33a2bc2$var$di(), c = b.queue;
    if (null === c) throw Error($cf563b86f33a2bc2$var$p(311));
    c.lastRenderedReducer = a;
    var d = $cf563b86f33a2bc2$var$O, e = d.baseQueue, f = c.pending;
    if (null !== f) {
        if (null !== e) {
            var g = e.next;
            e.next = f.next;
            f.next = g;
        }
        d.baseQueue = e = f;
        c.pending = null;
    }
    if (null !== e) {
        f = e.next;
        d = d.baseState;
        var h = g = null, k = null, l = f;
        do {
            var m = l.lane;
            if (($cf563b86f33a2bc2$var$Rh & m) === m) null !== k && (k = k.next = {
                lane: 0,
                action: l.action,
                hasEagerState: l.hasEagerState,
                eagerState: l.eagerState,
                next: null
            }), d = l.hasEagerState ? l.eagerState : a(d, l.action);
            else {
                var q = {
                    lane: m,
                    action: l.action,
                    hasEagerState: l.hasEagerState,
                    eagerState: l.eagerState,
                    next: null
                };
                null === k ? (h = k = q, g = d) : k = k.next = q;
                $cf563b86f33a2bc2$var$N.lanes |= m;
                $cf563b86f33a2bc2$var$hh |= m;
            }
            l = l.next;
        }while (null !== l && l !== f);
        null === k ? g = d : k.next = h;
        $cf563b86f33a2bc2$var$He(d, b.memoizedState) || ($cf563b86f33a2bc2$var$Ug = !0);
        b.memoizedState = d;
        b.baseState = g;
        b.baseQueue = k;
        c.lastRenderedState = d;
    }
    a = c.interleaved;
    if (null !== a) {
        e = a;
        do f = e.lane, $cf563b86f33a2bc2$var$N.lanes |= f, $cf563b86f33a2bc2$var$hh |= f, e = e.next;
        while (e !== a);
    } else null === e && (c.lanes = 0);
    return [
        b.memoizedState,
        c.dispatch
    ];
}
function $cf563b86f33a2bc2$var$gi(a) {
    var b = $cf563b86f33a2bc2$var$di(), c = b.queue;
    if (null === c) throw Error($cf563b86f33a2bc2$var$p(311));
    c.lastRenderedReducer = a;
    var d = c.dispatch, e = c.pending, f = b.memoizedState;
    if (null !== e) {
        c.pending = null;
        var g = e = e.next;
        do f = a(f, g.action), g = g.next;
        while (g !== e);
        $cf563b86f33a2bc2$var$He(f, b.memoizedState) || ($cf563b86f33a2bc2$var$Ug = !0);
        b.memoizedState = f;
        null === b.baseQueue && (b.baseState = f);
        c.lastRenderedState = f;
    }
    return [
        f,
        d
    ];
}
function $cf563b86f33a2bc2$var$hi() {}
function $cf563b86f33a2bc2$var$ii(a, b) {
    var c = $cf563b86f33a2bc2$var$N, d = $cf563b86f33a2bc2$var$di(), e = b(), f = !$cf563b86f33a2bc2$var$He(d.memoizedState, e);
    f && (d.memoizedState = e, $cf563b86f33a2bc2$var$Ug = !0);
    d = d.queue;
    $cf563b86f33a2bc2$var$ji($cf563b86f33a2bc2$var$ki.bind(null, c, d, a), [
        a
    ]);
    if (d.getSnapshot !== b || f || null !== $cf563b86f33a2bc2$var$P && $cf563b86f33a2bc2$var$P.memoizedState.tag & 1) {
        c.flags |= 2048;
        $cf563b86f33a2bc2$var$li(9, $cf563b86f33a2bc2$var$mi.bind(null, c, d, e, b), void 0, null);
        if (null === $cf563b86f33a2bc2$var$R) throw Error($cf563b86f33a2bc2$var$p(349));
        0 !== ($cf563b86f33a2bc2$var$Rh & 30) || $cf563b86f33a2bc2$var$ni(c, b, e);
    }
    return e;
}
function $cf563b86f33a2bc2$var$ni(a, b, c) {
    a.flags |= 16384;
    a = {
        getSnapshot: b,
        value: c
    };
    b = $cf563b86f33a2bc2$var$N.updateQueue;
    null === b ? (b = {
        lastEffect: null,
        stores: null
    }, $cf563b86f33a2bc2$var$N.updateQueue = b, b.stores = [
        a
    ]) : (c = b.stores, null === c ? b.stores = [
        a
    ] : c.push(a));
}
function $cf563b86f33a2bc2$var$mi(a, b, c, d) {
    b.value = c;
    b.getSnapshot = d;
    $cf563b86f33a2bc2$var$oi(b) && $cf563b86f33a2bc2$var$pi(a);
}
function $cf563b86f33a2bc2$var$ki(a, b, c) {
    return c(function() {
        $cf563b86f33a2bc2$var$oi(b) && $cf563b86f33a2bc2$var$pi(a);
    });
}
function $cf563b86f33a2bc2$var$oi(a) {
    var b = a.getSnapshot;
    a = a.value;
    try {
        var c = b();
        return !$cf563b86f33a2bc2$var$He(a, c);
    } catch (d) {
        return !0;
    }
}
function $cf563b86f33a2bc2$var$pi(a) {
    var b = $cf563b86f33a2bc2$var$Zg(a, 1);
    null !== b && $cf563b86f33a2bc2$var$mh(b, a, 1, -1);
}
function $cf563b86f33a2bc2$var$qi(a) {
    var b = $cf563b86f33a2bc2$var$ci();
    "function" === typeof a && (a = a());
    b.memoizedState = b.baseState = a;
    a = {
        pending: null,
        interleaved: null,
        lanes: 0,
        dispatch: null,
        lastRenderedReducer: $cf563b86f33a2bc2$var$ei,
        lastRenderedState: a
    };
    b.queue = a;
    a = a.dispatch = $cf563b86f33a2bc2$var$ri.bind(null, $cf563b86f33a2bc2$var$N, a);
    return [
        b.memoizedState,
        a
    ];
}
function $cf563b86f33a2bc2$var$li(a, b, c, d) {
    a = {
        tag: a,
        create: b,
        destroy: c,
        deps: d,
        next: null
    };
    b = $cf563b86f33a2bc2$var$N.updateQueue;
    null === b ? (b = {
        lastEffect: null,
        stores: null
    }, $cf563b86f33a2bc2$var$N.updateQueue = b, b.lastEffect = a.next = a) : (c = b.lastEffect, null === c ? b.lastEffect = a.next = a : (d = c.next, c.next = a, a.next = d, b.lastEffect = a));
    return a;
}
function $cf563b86f33a2bc2$var$si() {
    return $cf563b86f33a2bc2$var$di().memoizedState;
}
function $cf563b86f33a2bc2$var$ti(a, b, c, d) {
    var e = $cf563b86f33a2bc2$var$ci();
    $cf563b86f33a2bc2$var$N.flags |= a;
    e.memoizedState = $cf563b86f33a2bc2$var$li(1 | b, c, void 0, void 0 === d ? null : d);
}
function $cf563b86f33a2bc2$var$ui(a, b, c, d) {
    var e = $cf563b86f33a2bc2$var$di();
    d = void 0 === d ? null : d;
    var f = void 0;
    if (null !== $cf563b86f33a2bc2$var$O) {
        var g = $cf563b86f33a2bc2$var$O.memoizedState;
        f = g.destroy;
        if (null !== d && $cf563b86f33a2bc2$var$Wh(d, g.deps)) {
            e.memoizedState = $cf563b86f33a2bc2$var$li(b, c, f, d);
            return;
        }
    }
    $cf563b86f33a2bc2$var$N.flags |= a;
    e.memoizedState = $cf563b86f33a2bc2$var$li(1 | b, c, f, d);
}
function $cf563b86f33a2bc2$var$vi(a, b) {
    return $cf563b86f33a2bc2$var$ti(8390656, 8, a, b);
}
function $cf563b86f33a2bc2$var$ji(a, b) {
    return $cf563b86f33a2bc2$var$ui(2048, 8, a, b);
}
function $cf563b86f33a2bc2$var$wi(a, b) {
    return $cf563b86f33a2bc2$var$ui(4, 2, a, b);
}
function $cf563b86f33a2bc2$var$xi(a, b) {
    return $cf563b86f33a2bc2$var$ui(4, 4, a, b);
}
function $cf563b86f33a2bc2$var$yi(a, b) {
    if ("function" === typeof b) return a = a(), b(a), function() {
        b(null);
    };
    if (null !== b && void 0 !== b) return a = a(), b.current = a, function() {
        b.current = null;
    };
}
function $cf563b86f33a2bc2$var$zi(a, b, c) {
    c = null !== c && void 0 !== c ? c.concat([
        a
    ]) : null;
    return $cf563b86f33a2bc2$var$ui(4, 4, $cf563b86f33a2bc2$var$yi.bind(null, b, a), c);
}
function $cf563b86f33a2bc2$var$Ai() {}
function $cf563b86f33a2bc2$var$Bi(a, b) {
    var c = $cf563b86f33a2bc2$var$di();
    b = void 0 === b ? null : b;
    var d = c.memoizedState;
    if (null !== d && null !== b && $cf563b86f33a2bc2$var$Wh(b, d[1])) return d[0];
    c.memoizedState = [
        a,
        b
    ];
    return a;
}
function $cf563b86f33a2bc2$var$Ci(a, b) {
    var c = $cf563b86f33a2bc2$var$di();
    b = void 0 === b ? null : b;
    var d = c.memoizedState;
    if (null !== d && null !== b && $cf563b86f33a2bc2$var$Wh(b, d[1])) return d[0];
    a = a();
    c.memoizedState = [
        a,
        b
    ];
    return a;
}
function $cf563b86f33a2bc2$var$Di(a, b, c) {
    if (0 === ($cf563b86f33a2bc2$var$Rh & 21)) return a.baseState && (a.baseState = !1, $cf563b86f33a2bc2$var$Ug = !0), a.memoizedState = c;
    $cf563b86f33a2bc2$var$He(c, b) || (c = $cf563b86f33a2bc2$var$yc(), $cf563b86f33a2bc2$var$N.lanes |= c, $cf563b86f33a2bc2$var$hh |= c, a.baseState = !0);
    return b;
}
function $cf563b86f33a2bc2$var$Ei(a, b) {
    var c = $cf563b86f33a2bc2$var$C;
    $cf563b86f33a2bc2$var$C = 0 !== c && 4 > c ? c : 4;
    a(!0);
    var d = $cf563b86f33a2bc2$var$Qh.transition;
    $cf563b86f33a2bc2$var$Qh.transition = {};
    try {
        a(!1), b();
    } finally{
        $cf563b86f33a2bc2$var$C = c, $cf563b86f33a2bc2$var$Qh.transition = d;
    }
}
function $cf563b86f33a2bc2$var$Fi() {
    return $cf563b86f33a2bc2$var$di().memoizedState;
}
function $cf563b86f33a2bc2$var$Gi(a, b, c) {
    var d = $cf563b86f33a2bc2$var$lh(a);
    c = {
        lane: d,
        action: c,
        hasEagerState: !1,
        eagerState: null,
        next: null
    };
    if ($cf563b86f33a2bc2$var$Hi(a)) $cf563b86f33a2bc2$var$Ii(b, c);
    else if (c = $cf563b86f33a2bc2$var$Yg(a, b, c, d), null !== c) {
        var e = $cf563b86f33a2bc2$var$L();
        $cf563b86f33a2bc2$var$mh(c, a, d, e);
        $cf563b86f33a2bc2$var$Ji(c, b, d);
    }
}
function $cf563b86f33a2bc2$var$ri(a, b, c) {
    var d = $cf563b86f33a2bc2$var$lh(a), e = {
        lane: d,
        action: c,
        hasEagerState: !1,
        eagerState: null,
        next: null
    };
    if ($cf563b86f33a2bc2$var$Hi(a)) $cf563b86f33a2bc2$var$Ii(b, e);
    else {
        var f = a.alternate;
        if (0 === a.lanes && (null === f || 0 === f.lanes) && (f = b.lastRenderedReducer, null !== f)) try {
            var g = b.lastRenderedState, h = f(g, c);
            e.hasEagerState = !0;
            e.eagerState = h;
            if ($cf563b86f33a2bc2$var$He(h, g)) {
                var k = b.interleaved;
                null === k ? (e.next = e, $cf563b86f33a2bc2$var$Xg(b)) : (e.next = k.next, k.next = e);
                b.interleaved = e;
                return;
            }
        } catch (l) {} finally{}
        c = $cf563b86f33a2bc2$var$Yg(a, b, e, d);
        null !== c && (e = $cf563b86f33a2bc2$var$L(), $cf563b86f33a2bc2$var$mh(c, a, d, e), $cf563b86f33a2bc2$var$Ji(c, b, d));
    }
}
function $cf563b86f33a2bc2$var$Hi(a) {
    var b = a.alternate;
    return a === $cf563b86f33a2bc2$var$N || null !== b && b === $cf563b86f33a2bc2$var$N;
}
function $cf563b86f33a2bc2$var$Ii(a, b) {
    $cf563b86f33a2bc2$var$Th = $cf563b86f33a2bc2$var$Sh = !0;
    var c = a.pending;
    null === c ? b.next = b : (b.next = c.next, c.next = b);
    a.pending = b;
}
function $cf563b86f33a2bc2$var$Ji(a, b, c) {
    if (0 !== (c & 4194240)) {
        var d = b.lanes;
        d &= a.pendingLanes;
        c |= d;
        b.lanes = c;
        $cf563b86f33a2bc2$var$Cc(a, c);
    }
}
var $cf563b86f33a2bc2$var$ai = {
    readContext: $cf563b86f33a2bc2$var$Vg,
    useCallback: $cf563b86f33a2bc2$var$Q,
    useContext: $cf563b86f33a2bc2$var$Q,
    useEffect: $cf563b86f33a2bc2$var$Q,
    useImperativeHandle: $cf563b86f33a2bc2$var$Q,
    useInsertionEffect: $cf563b86f33a2bc2$var$Q,
    useLayoutEffect: $cf563b86f33a2bc2$var$Q,
    useMemo: $cf563b86f33a2bc2$var$Q,
    useReducer: $cf563b86f33a2bc2$var$Q,
    useRef: $cf563b86f33a2bc2$var$Q,
    useState: $cf563b86f33a2bc2$var$Q,
    useDebugValue: $cf563b86f33a2bc2$var$Q,
    useDeferredValue: $cf563b86f33a2bc2$var$Q,
    useTransition: $cf563b86f33a2bc2$var$Q,
    useMutableSource: $cf563b86f33a2bc2$var$Q,
    useSyncExternalStore: $cf563b86f33a2bc2$var$Q,
    useId: $cf563b86f33a2bc2$var$Q,
    unstable_isNewReconciler: !1
}, $cf563b86f33a2bc2$var$Yh = {
    readContext: $cf563b86f33a2bc2$var$Vg,
    useCallback: function(a, b) {
        $cf563b86f33a2bc2$var$ci().memoizedState = [
            a,
            void 0 === b ? null : b
        ];
        return a;
    },
    useContext: $cf563b86f33a2bc2$var$Vg,
    useEffect: $cf563b86f33a2bc2$var$vi,
    useImperativeHandle: function(a, b, c) {
        c = null !== c && void 0 !== c ? c.concat([
            a
        ]) : null;
        return $cf563b86f33a2bc2$var$ti(4194308, 4, $cf563b86f33a2bc2$var$yi.bind(null, b, a), c);
    },
    useLayoutEffect: function(a, b) {
        return $cf563b86f33a2bc2$var$ti(4194308, 4, a, b);
    },
    useInsertionEffect: function(a, b) {
        return $cf563b86f33a2bc2$var$ti(4, 2, a, b);
    },
    useMemo: function(a, b) {
        var c = $cf563b86f33a2bc2$var$ci();
        b = void 0 === b ? null : b;
        a = a();
        c.memoizedState = [
            a,
            b
        ];
        return a;
    },
    useReducer: function(a, b, c) {
        var d = $cf563b86f33a2bc2$var$ci();
        b = void 0 !== c ? c(b) : b;
        d.memoizedState = d.baseState = b;
        a = {
            pending: null,
            interleaved: null,
            lanes: 0,
            dispatch: null,
            lastRenderedReducer: a,
            lastRenderedState: b
        };
        d.queue = a;
        a = a.dispatch = $cf563b86f33a2bc2$var$Gi.bind(null, $cf563b86f33a2bc2$var$N, a);
        return [
            d.memoizedState,
            a
        ];
    },
    useRef: function(a) {
        var b = $cf563b86f33a2bc2$var$ci();
        a = {
            current: a
        };
        return b.memoizedState = a;
    },
    useState: $cf563b86f33a2bc2$var$qi,
    useDebugValue: $cf563b86f33a2bc2$var$Ai,
    useDeferredValue: function(a) {
        return $cf563b86f33a2bc2$var$ci().memoizedState = a;
    },
    useTransition: function() {
        var a = $cf563b86f33a2bc2$var$qi(!1), b = a[0];
        a = $cf563b86f33a2bc2$var$Ei.bind(null, a[1]);
        $cf563b86f33a2bc2$var$ci().memoizedState = a;
        return [
            b,
            a
        ];
    },
    useMutableSource: function() {},
    useSyncExternalStore: function(a, b, c) {
        var d = $cf563b86f33a2bc2$var$N, e = $cf563b86f33a2bc2$var$ci();
        if ($cf563b86f33a2bc2$var$I) {
            if (void 0 === c) throw Error($cf563b86f33a2bc2$var$p(407));
            c = c();
        } else {
            c = b();
            if (null === $cf563b86f33a2bc2$var$R) throw Error($cf563b86f33a2bc2$var$p(349));
            0 !== ($cf563b86f33a2bc2$var$Rh & 30) || $cf563b86f33a2bc2$var$ni(d, b, c);
        }
        e.memoizedState = c;
        var f = {
            value: c,
            getSnapshot: b
        };
        e.queue = f;
        $cf563b86f33a2bc2$var$vi($cf563b86f33a2bc2$var$ki.bind(null, d, f, a), [
            a
        ]);
        d.flags |= 2048;
        $cf563b86f33a2bc2$var$li(9, $cf563b86f33a2bc2$var$mi.bind(null, d, f, c, b), void 0, null);
        return c;
    },
    useId: function() {
        var a = $cf563b86f33a2bc2$var$ci(), b = $cf563b86f33a2bc2$var$R.identifierPrefix;
        if ($cf563b86f33a2bc2$var$I) {
            var c = $cf563b86f33a2bc2$var$sg;
            var d = $cf563b86f33a2bc2$var$rg;
            c = (d & ~(1 << 32 - $cf563b86f33a2bc2$var$oc(d) - 1)).toString(32) + c;
            b = ":" + b + "R" + c;
            c = $cf563b86f33a2bc2$var$Uh++;
            0 < c && (b += "H" + c.toString(32));
            b += ":";
        } else c = $cf563b86f33a2bc2$var$Vh++, b = ":" + b + "r" + c.toString(32) + ":";
        return a.memoizedState = b;
    },
    unstable_isNewReconciler: !1
}, $cf563b86f33a2bc2$var$Zh = {
    readContext: $cf563b86f33a2bc2$var$Vg,
    useCallback: $cf563b86f33a2bc2$var$Bi,
    useContext: $cf563b86f33a2bc2$var$Vg,
    useEffect: $cf563b86f33a2bc2$var$ji,
    useImperativeHandle: $cf563b86f33a2bc2$var$zi,
    useInsertionEffect: $cf563b86f33a2bc2$var$wi,
    useLayoutEffect: $cf563b86f33a2bc2$var$xi,
    useMemo: $cf563b86f33a2bc2$var$Ci,
    useReducer: $cf563b86f33a2bc2$var$fi,
    useRef: $cf563b86f33a2bc2$var$si,
    useState: function() {
        return $cf563b86f33a2bc2$var$fi($cf563b86f33a2bc2$var$ei);
    },
    useDebugValue: $cf563b86f33a2bc2$var$Ai,
    useDeferredValue: function(a) {
        var b = $cf563b86f33a2bc2$var$di();
        return $cf563b86f33a2bc2$var$Di(b, $cf563b86f33a2bc2$var$O.memoizedState, a);
    },
    useTransition: function() {
        var a = $cf563b86f33a2bc2$var$fi($cf563b86f33a2bc2$var$ei)[0], b = $cf563b86f33a2bc2$var$di().memoizedState;
        return [
            a,
            b
        ];
    },
    useMutableSource: $cf563b86f33a2bc2$var$hi,
    useSyncExternalStore: $cf563b86f33a2bc2$var$ii,
    useId: $cf563b86f33a2bc2$var$Fi,
    unstable_isNewReconciler: !1
}, $cf563b86f33a2bc2$var$$h = {
    readContext: $cf563b86f33a2bc2$var$Vg,
    useCallback: $cf563b86f33a2bc2$var$Bi,
    useContext: $cf563b86f33a2bc2$var$Vg,
    useEffect: $cf563b86f33a2bc2$var$ji,
    useImperativeHandle: $cf563b86f33a2bc2$var$zi,
    useInsertionEffect: $cf563b86f33a2bc2$var$wi,
    useLayoutEffect: $cf563b86f33a2bc2$var$xi,
    useMemo: $cf563b86f33a2bc2$var$Ci,
    useReducer: $cf563b86f33a2bc2$var$gi,
    useRef: $cf563b86f33a2bc2$var$si,
    useState: function() {
        return $cf563b86f33a2bc2$var$gi($cf563b86f33a2bc2$var$ei);
    },
    useDebugValue: $cf563b86f33a2bc2$var$Ai,
    useDeferredValue: function(a) {
        var b = $cf563b86f33a2bc2$var$di();
        return null === $cf563b86f33a2bc2$var$O ? b.memoizedState = a : $cf563b86f33a2bc2$var$Di(b, $cf563b86f33a2bc2$var$O.memoizedState, a);
    },
    useTransition: function() {
        var a = $cf563b86f33a2bc2$var$gi($cf563b86f33a2bc2$var$ei)[0], b = $cf563b86f33a2bc2$var$di().memoizedState;
        return [
            a,
            b
        ];
    },
    useMutableSource: $cf563b86f33a2bc2$var$hi,
    useSyncExternalStore: $cf563b86f33a2bc2$var$ii,
    useId: $cf563b86f33a2bc2$var$Fi,
    unstable_isNewReconciler: !1
};
function $cf563b86f33a2bc2$var$Ki(a, b) {
    try {
        var c = "", d = b;
        do c += $cf563b86f33a2bc2$var$Pa(d), d = d.return;
        while (d);
        var e = c;
    } catch (f) {
        e = "\nError generating stack: " + f.message + "\n" + f.stack;
    }
    return {
        value: a,
        source: b,
        stack: e,
        digest: null
    };
}
function $cf563b86f33a2bc2$var$Li(a, b, c) {
    return {
        value: a,
        source: null,
        stack: null != c ? c : null,
        digest: null != b ? b : null
    };
}
function $cf563b86f33a2bc2$var$Mi(a, b) {
    try {
        console.error(b.value);
    } catch (c) {
        setTimeout(function() {
            throw c;
        });
    }
}
var $cf563b86f33a2bc2$var$Ni = "function" === typeof WeakMap ? WeakMap : Map;
function $cf563b86f33a2bc2$var$Oi(a, b, c) {
    c = $cf563b86f33a2bc2$var$ch(-1, c);
    c.tag = 3;
    c.payload = {
        element: null
    };
    var d = b.value;
    c.callback = function() {
        $cf563b86f33a2bc2$var$Pi || ($cf563b86f33a2bc2$var$Pi = !0, $cf563b86f33a2bc2$var$Qi = d);
        $cf563b86f33a2bc2$var$Mi(a, b);
    };
    return c;
}
function $cf563b86f33a2bc2$var$Ri(a, b, c) {
    c = $cf563b86f33a2bc2$var$ch(-1, c);
    c.tag = 3;
    var d = a.type.getDerivedStateFromError;
    if ("function" === typeof d) {
        var e = b.value;
        c.payload = function() {
            return d(e);
        };
        c.callback = function() {
            $cf563b86f33a2bc2$var$Mi(a, b);
        };
    }
    var f = a.stateNode;
    null !== f && "function" === typeof f.componentDidCatch && (c.callback = function() {
        $cf563b86f33a2bc2$var$Mi(a, b);
        "function" !== typeof d && (null === $cf563b86f33a2bc2$var$Si ? $cf563b86f33a2bc2$var$Si = new Set([
            this
        ]) : $cf563b86f33a2bc2$var$Si.add(this));
        var c = b.stack;
        this.componentDidCatch(b.value, {
            componentStack: null !== c ? c : ""
        });
    });
    return c;
}
function $cf563b86f33a2bc2$var$Ti(a, b, c) {
    var d = a.pingCache;
    if (null === d) {
        d = a.pingCache = new $cf563b86f33a2bc2$var$Ni;
        var e = new Set;
        d.set(b, e);
    } else e = d.get(b), void 0 === e && (e = new Set, d.set(b, e));
    e.has(c) || (e.add(c), a = $cf563b86f33a2bc2$var$Ui.bind(null, a, b, c), b.then(a, a));
}
function $cf563b86f33a2bc2$var$Vi(a) {
    do {
        var b;
        if (b = 13 === a.tag) b = a.memoizedState, b = null !== b ? null !== b.dehydrated ? !0 : !1 : !0;
        if (b) return a;
        a = a.return;
    }while (null !== a);
    return null;
}
function $cf563b86f33a2bc2$var$Wi(a, b, c, d, e) {
    if (0 === (a.mode & 1)) return a === b ? a.flags |= 65536 : (a.flags |= 128, c.flags |= 131072, c.flags &= -52805, 1 === c.tag && (null === c.alternate ? c.tag = 17 : (b = $cf563b86f33a2bc2$var$ch(-1, 1), b.tag = 2, $cf563b86f33a2bc2$var$dh(c, b, 1))), c.lanes |= 1), a;
    a.flags |= 65536;
    a.lanes = e;
    return a;
}
var $cf563b86f33a2bc2$var$Xi = $cf563b86f33a2bc2$var$ua.ReactCurrentOwner, $cf563b86f33a2bc2$var$Ug = !1;
function $cf563b86f33a2bc2$var$Yi(a, b, c, d) {
    b.child = null === a ? $cf563b86f33a2bc2$var$Ch(b, null, c, d) : $cf563b86f33a2bc2$var$Bh(b, a.child, c, d);
}
function $cf563b86f33a2bc2$var$Zi(a, b, c, d, e) {
    c = c.render;
    var f = b.ref;
    $cf563b86f33a2bc2$var$Tg(b, e);
    d = $cf563b86f33a2bc2$var$Xh(a, b, c, d, f, e);
    c = $cf563b86f33a2bc2$var$bi();
    if (null !== a && !$cf563b86f33a2bc2$var$Ug) return b.updateQueue = a.updateQueue, b.flags &= -2053, a.lanes &= ~e, $cf563b86f33a2bc2$var$$i(a, b, e);
    $cf563b86f33a2bc2$var$I && c && $cf563b86f33a2bc2$var$vg(b);
    b.flags |= 1;
    $cf563b86f33a2bc2$var$Yi(a, b, d, e);
    return b.child;
}
function $cf563b86f33a2bc2$var$aj(a, b, c, d, e) {
    if (null === a) {
        var f = c.type;
        if ("function" === typeof f && !$cf563b86f33a2bc2$var$bj(f) && void 0 === f.defaultProps && null === c.compare && void 0 === c.defaultProps) return b.tag = 15, b.type = f, $cf563b86f33a2bc2$var$cj(a, b, f, d, e);
        a = $cf563b86f33a2bc2$var$yh(c.type, null, d, b, b.mode, e);
        a.ref = b.ref;
        a.return = b;
        return b.child = a;
    }
    f = a.child;
    if (0 === (a.lanes & e)) {
        var g = f.memoizedProps;
        c = c.compare;
        c = null !== c ? c : $cf563b86f33a2bc2$var$Ie;
        if (c(g, d) && a.ref === b.ref) return $cf563b86f33a2bc2$var$$i(a, b, e);
    }
    b.flags |= 1;
    a = $cf563b86f33a2bc2$var$wh(f, d);
    a.ref = b.ref;
    a.return = b;
    return b.child = a;
}
function $cf563b86f33a2bc2$var$cj(a, b, c, d, e) {
    if (null !== a) {
        var f = a.memoizedProps;
        if ($cf563b86f33a2bc2$var$Ie(f, d) && a.ref === b.ref) {
            if ($cf563b86f33a2bc2$var$Ug = !1, b.pendingProps = d = f, 0 !== (a.lanes & e)) 0 !== (a.flags & 131072) && ($cf563b86f33a2bc2$var$Ug = !0);
            else return b.lanes = a.lanes, $cf563b86f33a2bc2$var$$i(a, b, e);
        }
    }
    return $cf563b86f33a2bc2$var$dj(a, b, c, d, e);
}
function $cf563b86f33a2bc2$var$ej(a, b, c) {
    var d = b.pendingProps, e = d.children, f = null !== a ? a.memoizedState : null;
    if ("hidden" === d.mode) {
        if (0 === (b.mode & 1)) b.memoizedState = {
            baseLanes: 0,
            cachePool: null,
            transitions: null
        }, $cf563b86f33a2bc2$var$G($cf563b86f33a2bc2$var$fj, $cf563b86f33a2bc2$var$gj), $cf563b86f33a2bc2$var$gj |= c;
        else {
            if (0 === (c & 1073741824)) return a = null !== f ? f.baseLanes | c : c, b.lanes = b.childLanes = 1073741824, b.memoizedState = {
                baseLanes: a,
                cachePool: null,
                transitions: null
            }, b.updateQueue = null, $cf563b86f33a2bc2$var$G($cf563b86f33a2bc2$var$fj, $cf563b86f33a2bc2$var$gj), $cf563b86f33a2bc2$var$gj |= a, null;
            b.memoizedState = {
                baseLanes: 0,
                cachePool: null,
                transitions: null
            };
            d = null !== f ? f.baseLanes : c;
            $cf563b86f33a2bc2$var$G($cf563b86f33a2bc2$var$fj, $cf563b86f33a2bc2$var$gj);
            $cf563b86f33a2bc2$var$gj |= d;
        }
    } else null !== f ? (d = f.baseLanes | c, b.memoizedState = null) : d = c, $cf563b86f33a2bc2$var$G($cf563b86f33a2bc2$var$fj, $cf563b86f33a2bc2$var$gj), $cf563b86f33a2bc2$var$gj |= d;
    $cf563b86f33a2bc2$var$Yi(a, b, e, c);
    return b.child;
}
function $cf563b86f33a2bc2$var$hj(a, b) {
    var c = b.ref;
    if (null === a && null !== c || null !== a && a.ref !== c) b.flags |= 512, b.flags |= 2097152;
}
function $cf563b86f33a2bc2$var$dj(a, b, c, d, e) {
    var f = $cf563b86f33a2bc2$var$Zf(c) ? $cf563b86f33a2bc2$var$Xf : $cf563b86f33a2bc2$var$H.current;
    f = $cf563b86f33a2bc2$var$Yf(b, f);
    $cf563b86f33a2bc2$var$Tg(b, e);
    c = $cf563b86f33a2bc2$var$Xh(a, b, c, d, f, e);
    d = $cf563b86f33a2bc2$var$bi();
    if (null !== a && !$cf563b86f33a2bc2$var$Ug) return b.updateQueue = a.updateQueue, b.flags &= -2053, a.lanes &= ~e, $cf563b86f33a2bc2$var$$i(a, b, e);
    $cf563b86f33a2bc2$var$I && d && $cf563b86f33a2bc2$var$vg(b);
    b.flags |= 1;
    $cf563b86f33a2bc2$var$Yi(a, b, c, e);
    return b.child;
}
function $cf563b86f33a2bc2$var$ij(a, b, c, d, e) {
    if ($cf563b86f33a2bc2$var$Zf(c)) {
        var f = !0;
        $cf563b86f33a2bc2$var$cg(b);
    } else f = !1;
    $cf563b86f33a2bc2$var$Tg(b, e);
    if (null === b.stateNode) $cf563b86f33a2bc2$var$jj(a, b), $cf563b86f33a2bc2$var$ph(b, c, d), $cf563b86f33a2bc2$var$rh(b, c, d, e), d = !0;
    else if (null === a) {
        var g = b.stateNode, h = b.memoizedProps;
        g.props = h;
        var k = g.context, l = c.contextType;
        "object" === typeof l && null !== l ? l = $cf563b86f33a2bc2$var$Vg(l) : (l = $cf563b86f33a2bc2$var$Zf(c) ? $cf563b86f33a2bc2$var$Xf : $cf563b86f33a2bc2$var$H.current, l = $cf563b86f33a2bc2$var$Yf(b, l));
        var m = c.getDerivedStateFromProps, q = "function" === typeof m || "function" === typeof g.getSnapshotBeforeUpdate;
        q || "function" !== typeof g.UNSAFE_componentWillReceiveProps && "function" !== typeof g.componentWillReceiveProps || (h !== d || k !== l) && $cf563b86f33a2bc2$var$qh(b, g, d, l);
        $cf563b86f33a2bc2$var$$g = !1;
        var r = b.memoizedState;
        g.state = r;
        $cf563b86f33a2bc2$var$gh(b, d, g, e);
        k = b.memoizedState;
        h !== d || r !== k || $cf563b86f33a2bc2$var$Wf.current || $cf563b86f33a2bc2$var$$g ? ("function" === typeof m && ($cf563b86f33a2bc2$var$kh(b, c, m, d), k = b.memoizedState), (h = $cf563b86f33a2bc2$var$$g || $cf563b86f33a2bc2$var$oh(b, c, h, d, r, k, l)) ? (q || "function" !== typeof g.UNSAFE_componentWillMount && "function" !== typeof g.componentWillMount || ("function" === typeof g.componentWillMount && g.componentWillMount(), "function" === typeof g.UNSAFE_componentWillMount && g.UNSAFE_componentWillMount()), "function" === typeof g.componentDidMount && (b.flags |= 4194308)) : ("function" === typeof g.componentDidMount && (b.flags |= 4194308), b.memoizedProps = d, b.memoizedState = k), g.props = d, g.state = k, g.context = l, d = h) : ("function" === typeof g.componentDidMount && (b.flags |= 4194308), d = !1);
    } else {
        g = b.stateNode;
        $cf563b86f33a2bc2$var$bh(a, b);
        h = b.memoizedProps;
        l = b.type === b.elementType ? h : $cf563b86f33a2bc2$var$Lg(b.type, h);
        g.props = l;
        q = b.pendingProps;
        r = g.context;
        k = c.contextType;
        "object" === typeof k && null !== k ? k = $cf563b86f33a2bc2$var$Vg(k) : (k = $cf563b86f33a2bc2$var$Zf(c) ? $cf563b86f33a2bc2$var$Xf : $cf563b86f33a2bc2$var$H.current, k = $cf563b86f33a2bc2$var$Yf(b, k));
        var y = c.getDerivedStateFromProps;
        (m = "function" === typeof y || "function" === typeof g.getSnapshotBeforeUpdate) || "function" !== typeof g.UNSAFE_componentWillReceiveProps && "function" !== typeof g.componentWillReceiveProps || (h !== q || r !== k) && $cf563b86f33a2bc2$var$qh(b, g, d, k);
        $cf563b86f33a2bc2$var$$g = !1;
        r = b.memoizedState;
        g.state = r;
        $cf563b86f33a2bc2$var$gh(b, d, g, e);
        var n = b.memoizedState;
        h !== q || r !== n || $cf563b86f33a2bc2$var$Wf.current || $cf563b86f33a2bc2$var$$g ? ("function" === typeof y && ($cf563b86f33a2bc2$var$kh(b, c, y, d), n = b.memoizedState), (l = $cf563b86f33a2bc2$var$$g || $cf563b86f33a2bc2$var$oh(b, c, l, d, r, n, k) || !1) ? (m || "function" !== typeof g.UNSAFE_componentWillUpdate && "function" !== typeof g.componentWillUpdate || ("function" === typeof g.componentWillUpdate && g.componentWillUpdate(d, n, k), "function" === typeof g.UNSAFE_componentWillUpdate && g.UNSAFE_componentWillUpdate(d, n, k)), "function" === typeof g.componentDidUpdate && (b.flags |= 4), "function" === typeof g.getSnapshotBeforeUpdate && (b.flags |= 1024)) : ("function" !== typeof g.componentDidUpdate || h === a.memoizedProps && r === a.memoizedState || (b.flags |= 4), "function" !== typeof g.getSnapshotBeforeUpdate || h === a.memoizedProps && r === a.memoizedState || (b.flags |= 1024), b.memoizedProps = d, b.memoizedState = n), g.props = d, g.state = n, g.context = k, d = l) : ("function" !== typeof g.componentDidUpdate || h === a.memoizedProps && r === a.memoizedState || (b.flags |= 4), "function" !== typeof g.getSnapshotBeforeUpdate || h === a.memoizedProps && r === a.memoizedState || (b.flags |= 1024), d = !1);
    }
    return $cf563b86f33a2bc2$var$kj(a, b, c, d, f, e);
}
function $cf563b86f33a2bc2$var$kj(a, b, c, d, e, f) {
    $cf563b86f33a2bc2$var$hj(a, b);
    var g = 0 !== (b.flags & 128);
    if (!d && !g) return e && $cf563b86f33a2bc2$var$dg(b, c, !1), $cf563b86f33a2bc2$var$$i(a, b, f);
    d = b.stateNode;
    $cf563b86f33a2bc2$var$Xi.current = b;
    var h = g && "function" !== typeof c.getDerivedStateFromError ? null : d.render();
    b.flags |= 1;
    null !== a && g ? (b.child = $cf563b86f33a2bc2$var$Bh(b, a.child, null, f), b.child = $cf563b86f33a2bc2$var$Bh(b, null, h, f)) : $cf563b86f33a2bc2$var$Yi(a, b, h, f);
    b.memoizedState = d.state;
    e && $cf563b86f33a2bc2$var$dg(b, c, !0);
    return b.child;
}
function $cf563b86f33a2bc2$var$lj(a) {
    var b = a.stateNode;
    b.pendingContext ? $cf563b86f33a2bc2$var$ag(a, b.pendingContext, b.pendingContext !== b.context) : b.context && $cf563b86f33a2bc2$var$ag(a, b.context, !1);
    $cf563b86f33a2bc2$var$Ih(a, b.containerInfo);
}
function $cf563b86f33a2bc2$var$mj(a, b, c, d, e) {
    $cf563b86f33a2bc2$var$Ig();
    $cf563b86f33a2bc2$var$Jg(e);
    b.flags |= 256;
    $cf563b86f33a2bc2$var$Yi(a, b, c, d);
    return b.child;
}
var $cf563b86f33a2bc2$var$nj = {
    dehydrated: null,
    treeContext: null,
    retryLane: 0
};
function $cf563b86f33a2bc2$var$oj(a) {
    return {
        baseLanes: a,
        cachePool: null,
        transitions: null
    };
}
function $cf563b86f33a2bc2$var$pj(a, b, c) {
    var d = b.pendingProps, e = $cf563b86f33a2bc2$var$M.current, f = !1, g = 0 !== (b.flags & 128), h;
    (h = g) || (h = null !== a && null === a.memoizedState ? !1 : 0 !== (e & 2));
    if (h) f = !0, b.flags &= -129;
    else if (null === a || null !== a.memoizedState) e |= 1;
    $cf563b86f33a2bc2$var$G($cf563b86f33a2bc2$var$M, e & 1);
    if (null === a) {
        $cf563b86f33a2bc2$var$Eg(b);
        a = b.memoizedState;
        if (null !== a && (a = a.dehydrated, null !== a)) return 0 === (b.mode & 1) ? b.lanes = 1 : "$!" === a.data ? b.lanes = 8 : b.lanes = 1073741824, null;
        g = d.children;
        a = d.fallback;
        return f ? (d = b.mode, f = b.child, g = {
            mode: "hidden",
            children: g
        }, 0 === (d & 1) && null !== f ? (f.childLanes = 0, f.pendingProps = g) : f = $cf563b86f33a2bc2$var$qj(g, d, 0, null), a = $cf563b86f33a2bc2$var$Ah(a, d, c, null), f.return = b, a.return = b, f.sibling = a, b.child = f, b.child.memoizedState = $cf563b86f33a2bc2$var$oj(c), b.memoizedState = $cf563b86f33a2bc2$var$nj, a) : $cf563b86f33a2bc2$var$rj(b, g);
    }
    e = a.memoizedState;
    if (null !== e && (h = e.dehydrated, null !== h)) return $cf563b86f33a2bc2$var$sj(a, b, g, d, h, e, c);
    if (f) {
        f = d.fallback;
        g = b.mode;
        e = a.child;
        h = e.sibling;
        var k = {
            mode: "hidden",
            children: d.children
        };
        0 === (g & 1) && b.child !== e ? (d = b.child, d.childLanes = 0, d.pendingProps = k, b.deletions = null) : (d = $cf563b86f33a2bc2$var$wh(e, k), d.subtreeFlags = e.subtreeFlags & 14680064);
        null !== h ? f = $cf563b86f33a2bc2$var$wh(h, f) : (f = $cf563b86f33a2bc2$var$Ah(f, g, c, null), f.flags |= 2);
        f.return = b;
        d.return = b;
        d.sibling = f;
        b.child = d;
        d = f;
        f = b.child;
        g = a.child.memoizedState;
        g = null === g ? $cf563b86f33a2bc2$var$oj(c) : {
            baseLanes: g.baseLanes | c,
            cachePool: null,
            transitions: g.transitions
        };
        f.memoizedState = g;
        f.childLanes = a.childLanes & ~c;
        b.memoizedState = $cf563b86f33a2bc2$var$nj;
        return d;
    }
    f = a.child;
    a = f.sibling;
    d = $cf563b86f33a2bc2$var$wh(f, {
        mode: "visible",
        children: d.children
    });
    0 === (b.mode & 1) && (d.lanes = c);
    d.return = b;
    d.sibling = null;
    null !== a && (c = b.deletions, null === c ? (b.deletions = [
        a
    ], b.flags |= 16) : c.push(a));
    b.child = d;
    b.memoizedState = null;
    return d;
}
function $cf563b86f33a2bc2$var$rj(a, b) {
    b = $cf563b86f33a2bc2$var$qj({
        mode: "visible",
        children: b
    }, a.mode, 0, null);
    b.return = a;
    return a.child = b;
}
function $cf563b86f33a2bc2$var$tj(a, b, c, d) {
    null !== d && $cf563b86f33a2bc2$var$Jg(d);
    $cf563b86f33a2bc2$var$Bh(b, a.child, null, c);
    a = $cf563b86f33a2bc2$var$rj(b, b.pendingProps.children);
    a.flags |= 2;
    b.memoizedState = null;
    return a;
}
function $cf563b86f33a2bc2$var$sj(a, b, c, d, e, f, g) {
    if (c) {
        if (b.flags & 256) return b.flags &= -257, d = $cf563b86f33a2bc2$var$Li(Error($cf563b86f33a2bc2$var$p(422))), $cf563b86f33a2bc2$var$tj(a, b, g, d);
        if (null !== b.memoizedState) return b.child = a.child, b.flags |= 128, null;
        f = d.fallback;
        e = b.mode;
        d = $cf563b86f33a2bc2$var$qj({
            mode: "visible",
            children: d.children
        }, e, 0, null);
        f = $cf563b86f33a2bc2$var$Ah(f, e, g, null);
        f.flags |= 2;
        d.return = b;
        f.return = b;
        d.sibling = f;
        b.child = d;
        0 !== (b.mode & 1) && $cf563b86f33a2bc2$var$Bh(b, a.child, null, g);
        b.child.memoizedState = $cf563b86f33a2bc2$var$oj(g);
        b.memoizedState = $cf563b86f33a2bc2$var$nj;
        return f;
    }
    if (0 === (b.mode & 1)) return $cf563b86f33a2bc2$var$tj(a, b, g, null);
    if ("$!" === e.data) {
        d = e.nextSibling && e.nextSibling.dataset;
        if (d) var h = d.dgst;
        d = h;
        f = Error($cf563b86f33a2bc2$var$p(419));
        d = $cf563b86f33a2bc2$var$Li(f, d, void 0);
        return $cf563b86f33a2bc2$var$tj(a, b, g, d);
    }
    h = 0 !== (g & a.childLanes);
    if ($cf563b86f33a2bc2$var$Ug || h) {
        d = $cf563b86f33a2bc2$var$R;
        if (null !== d) {
            switch(g & -g){
                case 4:
                    e = 2;
                    break;
                case 16:
                    e = 8;
                    break;
                case 64:
                case 128:
                case 256:
                case 512:
                case 1024:
                case 2048:
                case 4096:
                case 8192:
                case 16384:
                case 32768:
                case 65536:
                case 131072:
                case 262144:
                case 524288:
                case 1048576:
                case 2097152:
                case 4194304:
                case 8388608:
                case 16777216:
                case 33554432:
                case 67108864:
                    e = 32;
                    break;
                case 536870912:
                    e = 268435456;
                    break;
                default:
                    e = 0;
            }
            e = 0 !== (e & (d.suspendedLanes | g)) ? 0 : e;
            0 !== e && e !== f.retryLane && (f.retryLane = e, $cf563b86f33a2bc2$var$Zg(a, e), $cf563b86f33a2bc2$var$mh(d, a, e, -1));
        }
        $cf563b86f33a2bc2$var$uj();
        d = $cf563b86f33a2bc2$var$Li(Error($cf563b86f33a2bc2$var$p(421)));
        return $cf563b86f33a2bc2$var$tj(a, b, g, d);
    }
    if ("$?" === e.data) return b.flags |= 128, b.child = a.child, b = $cf563b86f33a2bc2$var$vj.bind(null, a), e._reactRetry = b, null;
    a = f.treeContext;
    $cf563b86f33a2bc2$var$yg = $cf563b86f33a2bc2$var$Lf(e.nextSibling);
    $cf563b86f33a2bc2$var$xg = b;
    $cf563b86f33a2bc2$var$I = !0;
    $cf563b86f33a2bc2$var$zg = null;
    null !== a && ($cf563b86f33a2bc2$var$og[$cf563b86f33a2bc2$var$pg++] = $cf563b86f33a2bc2$var$rg, $cf563b86f33a2bc2$var$og[$cf563b86f33a2bc2$var$pg++] = $cf563b86f33a2bc2$var$sg, $cf563b86f33a2bc2$var$og[$cf563b86f33a2bc2$var$pg++] = $cf563b86f33a2bc2$var$qg, $cf563b86f33a2bc2$var$rg = a.id, $cf563b86f33a2bc2$var$sg = a.overflow, $cf563b86f33a2bc2$var$qg = b);
    b = $cf563b86f33a2bc2$var$rj(b, d.children);
    b.flags |= 4096;
    return b;
}
function $cf563b86f33a2bc2$var$wj(a, b, c) {
    a.lanes |= b;
    var d = a.alternate;
    null !== d && (d.lanes |= b);
    $cf563b86f33a2bc2$var$Sg(a.return, b, c);
}
function $cf563b86f33a2bc2$var$xj(a, b, c, d, e) {
    var f = a.memoizedState;
    null === f ? a.memoizedState = {
        isBackwards: b,
        rendering: null,
        renderingStartTime: 0,
        last: d,
        tail: c,
        tailMode: e
    } : (f.isBackwards = b, f.rendering = null, f.renderingStartTime = 0, f.last = d, f.tail = c, f.tailMode = e);
}
function $cf563b86f33a2bc2$var$yj(a, b, c) {
    var d = b.pendingProps, e = d.revealOrder, f = d.tail;
    $cf563b86f33a2bc2$var$Yi(a, b, d.children, c);
    d = $cf563b86f33a2bc2$var$M.current;
    if (0 !== (d & 2)) d = d & 1 | 2, b.flags |= 128;
    else {
        if (null !== a && 0 !== (a.flags & 128)) a: for(a = b.child; null !== a;){
            if (13 === a.tag) null !== a.memoizedState && $cf563b86f33a2bc2$var$wj(a, c, b);
            else if (19 === a.tag) $cf563b86f33a2bc2$var$wj(a, c, b);
            else if (null !== a.child) {
                a.child.return = a;
                a = a.child;
                continue;
            }
            if (a === b) break a;
            for(; null === a.sibling;){
                if (null === a.return || a.return === b) break a;
                a = a.return;
            }
            a.sibling.return = a.return;
            a = a.sibling;
        }
        d &= 1;
    }
    $cf563b86f33a2bc2$var$G($cf563b86f33a2bc2$var$M, d);
    if (0 === (b.mode & 1)) b.memoizedState = null;
    else switch(e){
        case "forwards":
            c = b.child;
            for(e = null; null !== c;)a = c.alternate, null !== a && null === $cf563b86f33a2bc2$var$Mh(a) && (e = c), c = c.sibling;
            c = e;
            null === c ? (e = b.child, b.child = null) : (e = c.sibling, c.sibling = null);
            $cf563b86f33a2bc2$var$xj(b, !1, e, c, f);
            break;
        case "backwards":
            c = null;
            e = b.child;
            for(b.child = null; null !== e;){
                a = e.alternate;
                if (null !== a && null === $cf563b86f33a2bc2$var$Mh(a)) {
                    b.child = e;
                    break;
                }
                a = e.sibling;
                e.sibling = c;
                c = e;
                e = a;
            }
            $cf563b86f33a2bc2$var$xj(b, !0, c, null, f);
            break;
        case "together":
            $cf563b86f33a2bc2$var$xj(b, !1, null, null, void 0);
            break;
        default:
            b.memoizedState = null;
    }
    return b.child;
}
function $cf563b86f33a2bc2$var$jj(a, b) {
    0 === (b.mode & 1) && null !== a && (a.alternate = null, b.alternate = null, b.flags |= 2);
}
function $cf563b86f33a2bc2$var$$i(a, b, c) {
    null !== a && (b.dependencies = a.dependencies);
    $cf563b86f33a2bc2$var$hh |= b.lanes;
    if (0 === (c & b.childLanes)) return null;
    if (null !== a && b.child !== a.child) throw Error($cf563b86f33a2bc2$var$p(153));
    if (null !== b.child) {
        a = b.child;
        c = $cf563b86f33a2bc2$var$wh(a, a.pendingProps);
        b.child = c;
        for(c.return = b; null !== a.sibling;)a = a.sibling, c = c.sibling = $cf563b86f33a2bc2$var$wh(a, a.pendingProps), c.return = b;
        c.sibling = null;
    }
    return b.child;
}
function $cf563b86f33a2bc2$var$zj(a, b, c) {
    switch(b.tag){
        case 3:
            $cf563b86f33a2bc2$var$lj(b);
            $cf563b86f33a2bc2$var$Ig();
            break;
        case 5:
            $cf563b86f33a2bc2$var$Kh(b);
            break;
        case 1:
            $cf563b86f33a2bc2$var$Zf(b.type) && $cf563b86f33a2bc2$var$cg(b);
            break;
        case 4:
            $cf563b86f33a2bc2$var$Ih(b, b.stateNode.containerInfo);
            break;
        case 10:
            var d = b.type._context, e = b.memoizedProps.value;
            $cf563b86f33a2bc2$var$G($cf563b86f33a2bc2$var$Mg, d._currentValue);
            d._currentValue = e;
            break;
        case 13:
            d = b.memoizedState;
            if (null !== d) {
                if (null !== d.dehydrated) return $cf563b86f33a2bc2$var$G($cf563b86f33a2bc2$var$M, $cf563b86f33a2bc2$var$M.current & 1), b.flags |= 128, null;
                if (0 !== (c & b.child.childLanes)) return $cf563b86f33a2bc2$var$pj(a, b, c);
                $cf563b86f33a2bc2$var$G($cf563b86f33a2bc2$var$M, $cf563b86f33a2bc2$var$M.current & 1);
                a = $cf563b86f33a2bc2$var$$i(a, b, c);
                return null !== a ? a.sibling : null;
            }
            $cf563b86f33a2bc2$var$G($cf563b86f33a2bc2$var$M, $cf563b86f33a2bc2$var$M.current & 1);
            break;
        case 19:
            d = 0 !== (c & b.childLanes);
            if (0 !== (a.flags & 128)) {
                if (d) return $cf563b86f33a2bc2$var$yj(a, b, c);
                b.flags |= 128;
            }
            e = b.memoizedState;
            null !== e && (e.rendering = null, e.tail = null, e.lastEffect = null);
            $cf563b86f33a2bc2$var$G($cf563b86f33a2bc2$var$M, $cf563b86f33a2bc2$var$M.current);
            if (d) break;
            else return null;
        case 22:
        case 23:
            return b.lanes = 0, $cf563b86f33a2bc2$var$ej(a, b, c);
    }
    return $cf563b86f33a2bc2$var$$i(a, b, c);
}
var $cf563b86f33a2bc2$var$Aj, $cf563b86f33a2bc2$var$Bj, $cf563b86f33a2bc2$var$Cj, $cf563b86f33a2bc2$var$Dj;
$cf563b86f33a2bc2$var$Aj = function(a, b) {
    for(var c = b.child; null !== c;){
        if (5 === c.tag || 6 === c.tag) a.appendChild(c.stateNode);
        else if (4 !== c.tag && null !== c.child) {
            c.child.return = c;
            c = c.child;
            continue;
        }
        if (c === b) break;
        for(; null === c.sibling;){
            if (null === c.return || c.return === b) return;
            c = c.return;
        }
        c.sibling.return = c.return;
        c = c.sibling;
    }
};
$cf563b86f33a2bc2$var$Bj = function() {};
$cf563b86f33a2bc2$var$Cj = function(a, b, c, d) {
    var e = a.memoizedProps;
    if (e !== d) {
        a = b.stateNode;
        $cf563b86f33a2bc2$var$Hh($cf563b86f33a2bc2$var$Eh.current);
        var f = null;
        switch(c){
            case "input":
                e = $cf563b86f33a2bc2$var$Ya(a, e);
                d = $cf563b86f33a2bc2$var$Ya(a, d);
                f = [];
                break;
            case "select":
                e = $cf563b86f33a2bc2$var$A({}, e, {
                    value: void 0
                });
                d = $cf563b86f33a2bc2$var$A({}, d, {
                    value: void 0
                });
                f = [];
                break;
            case "textarea":
                e = $cf563b86f33a2bc2$var$gb(a, e);
                d = $cf563b86f33a2bc2$var$gb(a, d);
                f = [];
                break;
            default:
                "function" !== typeof e.onClick && "function" === typeof d.onClick && (a.onclick = $cf563b86f33a2bc2$var$Bf);
        }
        $cf563b86f33a2bc2$var$ub(c, d);
        var g;
        c = null;
        for(l in e)if (!d.hasOwnProperty(l) && e.hasOwnProperty(l) && null != e[l]) {
            if ("style" === l) {
                var h = e[l];
                for(g in h)h.hasOwnProperty(g) && (c || (c = {}), c[g] = "");
            } else "dangerouslySetInnerHTML" !== l && "children" !== l && "suppressContentEditableWarning" !== l && "suppressHydrationWarning" !== l && "autoFocus" !== l && ($cf563b86f33a2bc2$var$ea.hasOwnProperty(l) ? f || (f = []) : (f = f || []).push(l, null));
        }
        for(l in d){
            var k = d[l];
            h = null != e ? e[l] : void 0;
            if (d.hasOwnProperty(l) && k !== h && (null != k || null != h)) {
                if ("style" === l) {
                    if (h) {
                        for(g in h)!h.hasOwnProperty(g) || k && k.hasOwnProperty(g) || (c || (c = {}), c[g] = "");
                        for(g in k)k.hasOwnProperty(g) && h[g] !== k[g] && (c || (c = {}), c[g] = k[g]);
                    } else c || (f || (f = []), f.push(l, c)), c = k;
                } else "dangerouslySetInnerHTML" === l ? (k = k ? k.__html : void 0, h = h ? h.__html : void 0, null != k && h !== k && (f = f || []).push(l, k)) : "children" === l ? "string" !== typeof k && "number" !== typeof k || (f = f || []).push(l, "" + k) : "suppressContentEditableWarning" !== l && "suppressHydrationWarning" !== l && ($cf563b86f33a2bc2$var$ea.hasOwnProperty(l) ? (null != k && "onScroll" === l && $cf563b86f33a2bc2$var$D("scroll", a), f || h === k || (f = [])) : (f = f || []).push(l, k));
            }
        }
        c && (f = f || []).push("style", c);
        var l = f;
        if (b.updateQueue = l) b.flags |= 4;
    }
};
$cf563b86f33a2bc2$var$Dj = function(a, b, c, d) {
    c !== d && (b.flags |= 4);
};
function $cf563b86f33a2bc2$var$Ej(a, b) {
    if (!$cf563b86f33a2bc2$var$I) switch(a.tailMode){
        case "hidden":
            b = a.tail;
            for(var c = null; null !== b;)null !== b.alternate && (c = b), b = b.sibling;
            null === c ? a.tail = null : c.sibling = null;
            break;
        case "collapsed":
            c = a.tail;
            for(var d = null; null !== c;)null !== c.alternate && (d = c), c = c.sibling;
            null === d ? b || null === a.tail ? a.tail = null : a.tail.sibling = null : d.sibling = null;
    }
}
function $cf563b86f33a2bc2$var$S(a) {
    var b = null !== a.alternate && a.alternate.child === a.child, c = 0, d = 0;
    if (b) for(var e = a.child; null !== e;)c |= e.lanes | e.childLanes, d |= e.subtreeFlags & 14680064, d |= e.flags & 14680064, e.return = a, e = e.sibling;
    else for(e = a.child; null !== e;)c |= e.lanes | e.childLanes, d |= e.subtreeFlags, d |= e.flags, e.return = a, e = e.sibling;
    a.subtreeFlags |= d;
    a.childLanes = c;
    return b;
}
function $cf563b86f33a2bc2$var$Fj(a, b, c) {
    var d = b.pendingProps;
    $cf563b86f33a2bc2$var$wg(b);
    switch(b.tag){
        case 2:
        case 16:
        case 15:
        case 0:
        case 11:
        case 7:
        case 8:
        case 12:
        case 9:
        case 14:
            return $cf563b86f33a2bc2$var$S(b), null;
        case 1:
            return $cf563b86f33a2bc2$var$Zf(b.type) && $cf563b86f33a2bc2$var$$f(), $cf563b86f33a2bc2$var$S(b), null;
        case 3:
            d = b.stateNode;
            $cf563b86f33a2bc2$var$Jh();
            $cf563b86f33a2bc2$var$E($cf563b86f33a2bc2$var$Wf);
            $cf563b86f33a2bc2$var$E($cf563b86f33a2bc2$var$H);
            $cf563b86f33a2bc2$var$Oh();
            d.pendingContext && (d.context = d.pendingContext, d.pendingContext = null);
            if (null === a || null === a.child) $cf563b86f33a2bc2$var$Gg(b) ? b.flags |= 4 : null === a || a.memoizedState.isDehydrated && 0 === (b.flags & 256) || (b.flags |= 1024, null !== $cf563b86f33a2bc2$var$zg && ($cf563b86f33a2bc2$var$Gj($cf563b86f33a2bc2$var$zg), $cf563b86f33a2bc2$var$zg = null));
            $cf563b86f33a2bc2$var$Bj(a, b);
            $cf563b86f33a2bc2$var$S(b);
            return null;
        case 5:
            $cf563b86f33a2bc2$var$Lh(b);
            var e = $cf563b86f33a2bc2$var$Hh($cf563b86f33a2bc2$var$Gh.current);
            c = b.type;
            if (null !== a && null != b.stateNode) $cf563b86f33a2bc2$var$Cj(a, b, c, d, e), a.ref !== b.ref && (b.flags |= 512, b.flags |= 2097152);
            else {
                if (!d) {
                    if (null === b.stateNode) throw Error($cf563b86f33a2bc2$var$p(166));
                    $cf563b86f33a2bc2$var$S(b);
                    return null;
                }
                a = $cf563b86f33a2bc2$var$Hh($cf563b86f33a2bc2$var$Eh.current);
                if ($cf563b86f33a2bc2$var$Gg(b)) {
                    d = b.stateNode;
                    c = b.type;
                    var f = b.memoizedProps;
                    d[$cf563b86f33a2bc2$var$Of] = b;
                    d[$cf563b86f33a2bc2$var$Pf] = f;
                    a = 0 !== (b.mode & 1);
                    switch(c){
                        case "dialog":
                            $cf563b86f33a2bc2$var$D("cancel", d);
                            $cf563b86f33a2bc2$var$D("close", d);
                            break;
                        case "iframe":
                        case "object":
                        case "embed":
                            $cf563b86f33a2bc2$var$D("load", d);
                            break;
                        case "video":
                        case "audio":
                            for(e = 0; e < $cf563b86f33a2bc2$var$lf.length; e++)$cf563b86f33a2bc2$var$D($cf563b86f33a2bc2$var$lf[e], d);
                            break;
                        case "source":
                            $cf563b86f33a2bc2$var$D("error", d);
                            break;
                        case "img":
                        case "image":
                        case "link":
                            $cf563b86f33a2bc2$var$D("error", d);
                            $cf563b86f33a2bc2$var$D("load", d);
                            break;
                        case "details":
                            $cf563b86f33a2bc2$var$D("toggle", d);
                            break;
                        case "input":
                            $cf563b86f33a2bc2$var$Za(d, f);
                            $cf563b86f33a2bc2$var$D("invalid", d);
                            break;
                        case "select":
                            d._wrapperState = {
                                wasMultiple: !!f.multiple
                            };
                            $cf563b86f33a2bc2$var$D("invalid", d);
                            break;
                        case "textarea":
                            $cf563b86f33a2bc2$var$hb(d, f), $cf563b86f33a2bc2$var$D("invalid", d);
                    }
                    $cf563b86f33a2bc2$var$ub(c, f);
                    e = null;
                    for(var g in f)if (f.hasOwnProperty(g)) {
                        var h = f[g];
                        "children" === g ? "string" === typeof h ? d.textContent !== h && (!0 !== f.suppressHydrationWarning && $cf563b86f33a2bc2$var$Af(d.textContent, h, a), e = [
                            "children",
                            h
                        ]) : "number" === typeof h && d.textContent !== "" + h && (!0 !== f.suppressHydrationWarning && $cf563b86f33a2bc2$var$Af(d.textContent, h, a), e = [
                            "children",
                            "" + h
                        ]) : $cf563b86f33a2bc2$var$ea.hasOwnProperty(g) && null != h && "onScroll" === g && $cf563b86f33a2bc2$var$D("scroll", d);
                    }
                    switch(c){
                        case "input":
                            $cf563b86f33a2bc2$var$Va(d);
                            $cf563b86f33a2bc2$var$db(d, f, !0);
                            break;
                        case "textarea":
                            $cf563b86f33a2bc2$var$Va(d);
                            $cf563b86f33a2bc2$var$jb(d);
                            break;
                        case "select":
                        case "option":
                            break;
                        default:
                            "function" === typeof f.onClick && (d.onclick = $cf563b86f33a2bc2$var$Bf);
                    }
                    d = e;
                    b.updateQueue = d;
                    null !== d && (b.flags |= 4);
                } else {
                    g = 9 === e.nodeType ? e : e.ownerDocument;
                    "http://www.w3.org/1999/xhtml" === a && (a = $cf563b86f33a2bc2$var$kb(c));
                    "http://www.w3.org/1999/xhtml" === a ? "script" === c ? (a = g.createElement("div"), a.innerHTML = "<script></script>", a = a.removeChild(a.firstChild)) : "string" === typeof d.is ? a = g.createElement(c, {
                        is: d.is
                    }) : (a = g.createElement(c), "select" === c && (g = a, d.multiple ? g.multiple = !0 : d.size && (g.size = d.size))) : a = g.createElementNS(a, c);
                    a[$cf563b86f33a2bc2$var$Of] = b;
                    a[$cf563b86f33a2bc2$var$Pf] = d;
                    $cf563b86f33a2bc2$var$Aj(a, b, !1, !1);
                    b.stateNode = a;
                    a: {
                        g = $cf563b86f33a2bc2$var$vb(c, d);
                        switch(c){
                            case "dialog":
                                $cf563b86f33a2bc2$var$D("cancel", a);
                                $cf563b86f33a2bc2$var$D("close", a);
                                e = d;
                                break;
                            case "iframe":
                            case "object":
                            case "embed":
                                $cf563b86f33a2bc2$var$D("load", a);
                                e = d;
                                break;
                            case "video":
                            case "audio":
                                for(e = 0; e < $cf563b86f33a2bc2$var$lf.length; e++)$cf563b86f33a2bc2$var$D($cf563b86f33a2bc2$var$lf[e], a);
                                e = d;
                                break;
                            case "source":
                                $cf563b86f33a2bc2$var$D("error", a);
                                e = d;
                                break;
                            case "img":
                            case "image":
                            case "link":
                                $cf563b86f33a2bc2$var$D("error", a);
                                $cf563b86f33a2bc2$var$D("load", a);
                                e = d;
                                break;
                            case "details":
                                $cf563b86f33a2bc2$var$D("toggle", a);
                                e = d;
                                break;
                            case "input":
                                $cf563b86f33a2bc2$var$Za(a, d);
                                e = $cf563b86f33a2bc2$var$Ya(a, d);
                                $cf563b86f33a2bc2$var$D("invalid", a);
                                break;
                            case "option":
                                e = d;
                                break;
                            case "select":
                                a._wrapperState = {
                                    wasMultiple: !!d.multiple
                                };
                                e = $cf563b86f33a2bc2$var$A({}, d, {
                                    value: void 0
                                });
                                $cf563b86f33a2bc2$var$D("invalid", a);
                                break;
                            case "textarea":
                                $cf563b86f33a2bc2$var$hb(a, d);
                                e = $cf563b86f33a2bc2$var$gb(a, d);
                                $cf563b86f33a2bc2$var$D("invalid", a);
                                break;
                            default:
                                e = d;
                        }
                        $cf563b86f33a2bc2$var$ub(c, e);
                        h = e;
                        for(f in h)if (h.hasOwnProperty(f)) {
                            var k = h[f];
                            "style" === f ? $cf563b86f33a2bc2$var$sb(a, k) : "dangerouslySetInnerHTML" === f ? (k = k ? k.__html : void 0, null != k && $cf563b86f33a2bc2$var$nb(a, k)) : "children" === f ? "string" === typeof k ? ("textarea" !== c || "" !== k) && $cf563b86f33a2bc2$var$ob(a, k) : "number" === typeof k && $cf563b86f33a2bc2$var$ob(a, "" + k) : "suppressContentEditableWarning" !== f && "suppressHydrationWarning" !== f && "autoFocus" !== f && ($cf563b86f33a2bc2$var$ea.hasOwnProperty(f) ? null != k && "onScroll" === f && $cf563b86f33a2bc2$var$D("scroll", a) : null != k && $cf563b86f33a2bc2$var$ta(a, f, k, g));
                        }
                        switch(c){
                            case "input":
                                $cf563b86f33a2bc2$var$Va(a);
                                $cf563b86f33a2bc2$var$db(a, d, !1);
                                break;
                            case "textarea":
                                $cf563b86f33a2bc2$var$Va(a);
                                $cf563b86f33a2bc2$var$jb(a);
                                break;
                            case "option":
                                null != d.value && a.setAttribute("value", "" + $cf563b86f33a2bc2$var$Sa(d.value));
                                break;
                            case "select":
                                a.multiple = !!d.multiple;
                                f = d.value;
                                null != f ? $cf563b86f33a2bc2$var$fb(a, !!d.multiple, f, !1) : null != d.defaultValue && $cf563b86f33a2bc2$var$fb(a, !!d.multiple, d.defaultValue, !0);
                                break;
                            default:
                                "function" === typeof e.onClick && (a.onclick = $cf563b86f33a2bc2$var$Bf);
                        }
                        switch(c){
                            case "button":
                            case "input":
                            case "select":
                            case "textarea":
                                d = !!d.autoFocus;
                                break a;
                            case "img":
                                d = !0;
                                break a;
                            default:
                                d = !1;
                        }
                    }
                    d && (b.flags |= 4);
                }
                null !== b.ref && (b.flags |= 512, b.flags |= 2097152);
            }
            $cf563b86f33a2bc2$var$S(b);
            return null;
        case 6:
            if (a && null != b.stateNode) $cf563b86f33a2bc2$var$Dj(a, b, a.memoizedProps, d);
            else {
                if ("string" !== typeof d && null === b.stateNode) throw Error($cf563b86f33a2bc2$var$p(166));
                c = $cf563b86f33a2bc2$var$Hh($cf563b86f33a2bc2$var$Gh.current);
                $cf563b86f33a2bc2$var$Hh($cf563b86f33a2bc2$var$Eh.current);
                if ($cf563b86f33a2bc2$var$Gg(b)) {
                    d = b.stateNode;
                    c = b.memoizedProps;
                    d[$cf563b86f33a2bc2$var$Of] = b;
                    if (f = d.nodeValue !== c) {
                        if (a = $cf563b86f33a2bc2$var$xg, null !== a) switch(a.tag){
                            case 3:
                                $cf563b86f33a2bc2$var$Af(d.nodeValue, c, 0 !== (a.mode & 1));
                                break;
                            case 5:
                                !0 !== a.memoizedProps.suppressHydrationWarning && $cf563b86f33a2bc2$var$Af(d.nodeValue, c, 0 !== (a.mode & 1));
                        }
                    }
                    f && (b.flags |= 4);
                } else d = (9 === c.nodeType ? c : c.ownerDocument).createTextNode(d), d[$cf563b86f33a2bc2$var$Of] = b, b.stateNode = d;
            }
            $cf563b86f33a2bc2$var$S(b);
            return null;
        case 13:
            $cf563b86f33a2bc2$var$E($cf563b86f33a2bc2$var$M);
            d = b.memoizedState;
            if (null === a || null !== a.memoizedState && null !== a.memoizedState.dehydrated) {
                if ($cf563b86f33a2bc2$var$I && null !== $cf563b86f33a2bc2$var$yg && 0 !== (b.mode & 1) && 0 === (b.flags & 128)) $cf563b86f33a2bc2$var$Hg(), $cf563b86f33a2bc2$var$Ig(), b.flags |= 98560, f = !1;
                else if (f = $cf563b86f33a2bc2$var$Gg(b), null !== d && null !== d.dehydrated) {
                    if (null === a) {
                        if (!f) throw Error($cf563b86f33a2bc2$var$p(318));
                        f = b.memoizedState;
                        f = null !== f ? f.dehydrated : null;
                        if (!f) throw Error($cf563b86f33a2bc2$var$p(317));
                        f[$cf563b86f33a2bc2$var$Of] = b;
                    } else $cf563b86f33a2bc2$var$Ig(), 0 === (b.flags & 128) && (b.memoizedState = null), b.flags |= 4;
                    $cf563b86f33a2bc2$var$S(b);
                    f = !1;
                } else null !== $cf563b86f33a2bc2$var$zg && ($cf563b86f33a2bc2$var$Gj($cf563b86f33a2bc2$var$zg), $cf563b86f33a2bc2$var$zg = null), f = !0;
                if (!f) return b.flags & 65536 ? b : null;
            }
            if (0 !== (b.flags & 128)) return b.lanes = c, b;
            d = null !== d;
            d !== (null !== a && null !== a.memoizedState) && d && (b.child.flags |= 8192, 0 !== (b.mode & 1) && (null === a || 0 !== ($cf563b86f33a2bc2$var$M.current & 1) ? 0 === $cf563b86f33a2bc2$var$T && ($cf563b86f33a2bc2$var$T = 3) : $cf563b86f33a2bc2$var$uj()));
            null !== b.updateQueue && (b.flags |= 4);
            $cf563b86f33a2bc2$var$S(b);
            return null;
        case 4:
            return $cf563b86f33a2bc2$var$Jh(), $cf563b86f33a2bc2$var$Bj(a, b), null === a && $cf563b86f33a2bc2$var$sf(b.stateNode.containerInfo), $cf563b86f33a2bc2$var$S(b), null;
        case 10:
            return $cf563b86f33a2bc2$var$Rg(b.type._context), $cf563b86f33a2bc2$var$S(b), null;
        case 17:
            return $cf563b86f33a2bc2$var$Zf(b.type) && $cf563b86f33a2bc2$var$$f(), $cf563b86f33a2bc2$var$S(b), null;
        case 19:
            $cf563b86f33a2bc2$var$E($cf563b86f33a2bc2$var$M);
            f = b.memoizedState;
            if (null === f) return $cf563b86f33a2bc2$var$S(b), null;
            d = 0 !== (b.flags & 128);
            g = f.rendering;
            if (null === g) {
                if (d) $cf563b86f33a2bc2$var$Ej(f, !1);
                else {
                    if (0 !== $cf563b86f33a2bc2$var$T || null !== a && 0 !== (a.flags & 128)) for(a = b.child; null !== a;){
                        g = $cf563b86f33a2bc2$var$Mh(a);
                        if (null !== g) {
                            b.flags |= 128;
                            $cf563b86f33a2bc2$var$Ej(f, !1);
                            d = g.updateQueue;
                            null !== d && (b.updateQueue = d, b.flags |= 4);
                            b.subtreeFlags = 0;
                            d = c;
                            for(c = b.child; null !== c;)f = c, a = d, f.flags &= 14680066, g = f.alternate, null === g ? (f.childLanes = 0, f.lanes = a, f.child = null, f.subtreeFlags = 0, f.memoizedProps = null, f.memoizedState = null, f.updateQueue = null, f.dependencies = null, f.stateNode = null) : (f.childLanes = g.childLanes, f.lanes = g.lanes, f.child = g.child, f.subtreeFlags = 0, f.deletions = null, f.memoizedProps = g.memoizedProps, f.memoizedState = g.memoizedState, f.updateQueue = g.updateQueue, f.type = g.type, a = g.dependencies, f.dependencies = null === a ? null : {
                                lanes: a.lanes,
                                firstContext: a.firstContext
                            }), c = c.sibling;
                            $cf563b86f33a2bc2$var$G($cf563b86f33a2bc2$var$M, $cf563b86f33a2bc2$var$M.current & 1 | 2);
                            return b.child;
                        }
                        a = a.sibling;
                    }
                    null !== f.tail && $cf563b86f33a2bc2$var$B() > $cf563b86f33a2bc2$var$Hj && (b.flags |= 128, d = !0, $cf563b86f33a2bc2$var$Ej(f, !1), b.lanes = 4194304);
                }
            } else {
                if (!d) {
                    if (a = $cf563b86f33a2bc2$var$Mh(g), null !== a) {
                        if (b.flags |= 128, d = !0, c = a.updateQueue, null !== c && (b.updateQueue = c, b.flags |= 4), $cf563b86f33a2bc2$var$Ej(f, !0), null === f.tail && "hidden" === f.tailMode && !g.alternate && !$cf563b86f33a2bc2$var$I) return $cf563b86f33a2bc2$var$S(b), null;
                    } else 2 * $cf563b86f33a2bc2$var$B() - f.renderingStartTime > $cf563b86f33a2bc2$var$Hj && 1073741824 !== c && (b.flags |= 128, d = !0, $cf563b86f33a2bc2$var$Ej(f, !1), b.lanes = 4194304);
                }
                f.isBackwards ? (g.sibling = b.child, b.child = g) : (c = f.last, null !== c ? c.sibling = g : b.child = g, f.last = g);
            }
            if (null !== f.tail) return b = f.tail, f.rendering = b, f.tail = b.sibling, f.renderingStartTime = $cf563b86f33a2bc2$var$B(), b.sibling = null, c = $cf563b86f33a2bc2$var$M.current, $cf563b86f33a2bc2$var$G($cf563b86f33a2bc2$var$M, d ? c & 1 | 2 : c & 1), b;
            $cf563b86f33a2bc2$var$S(b);
            return null;
        case 22:
        case 23:
            return $cf563b86f33a2bc2$var$Ij(), d = null !== b.memoizedState, null !== a && null !== a.memoizedState !== d && (b.flags |= 8192), d && 0 !== (b.mode & 1) ? 0 !== ($cf563b86f33a2bc2$var$gj & 1073741824) && ($cf563b86f33a2bc2$var$S(b), b.subtreeFlags & 6 && (b.flags |= 8192)) : $cf563b86f33a2bc2$var$S(b), null;
        case 24:
            return null;
        case 25:
            return null;
    }
    throw Error($cf563b86f33a2bc2$var$p(156, b.tag));
}
function $cf563b86f33a2bc2$var$Jj(a, b) {
    $cf563b86f33a2bc2$var$wg(b);
    switch(b.tag){
        case 1:
            return $cf563b86f33a2bc2$var$Zf(b.type) && $cf563b86f33a2bc2$var$$f(), a = b.flags, a & 65536 ? (b.flags = a & -65537 | 128, b) : null;
        case 3:
            return $cf563b86f33a2bc2$var$Jh(), $cf563b86f33a2bc2$var$E($cf563b86f33a2bc2$var$Wf), $cf563b86f33a2bc2$var$E($cf563b86f33a2bc2$var$H), $cf563b86f33a2bc2$var$Oh(), a = b.flags, 0 !== (a & 65536) && 0 === (a & 128) ? (b.flags = a & -65537 | 128, b) : null;
        case 5:
            return $cf563b86f33a2bc2$var$Lh(b), null;
        case 13:
            $cf563b86f33a2bc2$var$E($cf563b86f33a2bc2$var$M);
            a = b.memoizedState;
            if (null !== a && null !== a.dehydrated) {
                if (null === b.alternate) throw Error($cf563b86f33a2bc2$var$p(340));
                $cf563b86f33a2bc2$var$Ig();
            }
            a = b.flags;
            return a & 65536 ? (b.flags = a & -65537 | 128, b) : null;
        case 19:
            return $cf563b86f33a2bc2$var$E($cf563b86f33a2bc2$var$M), null;
        case 4:
            return $cf563b86f33a2bc2$var$Jh(), null;
        case 10:
            return $cf563b86f33a2bc2$var$Rg(b.type._context), null;
        case 22:
        case 23:
            return $cf563b86f33a2bc2$var$Ij(), null;
        case 24:
            return null;
        default:
            return null;
    }
}
var $cf563b86f33a2bc2$var$Kj = !1, $cf563b86f33a2bc2$var$U = !1, $cf563b86f33a2bc2$var$Lj = "function" === typeof WeakSet ? WeakSet : Set, $cf563b86f33a2bc2$var$V = null;
function $cf563b86f33a2bc2$var$Mj(a, b) {
    var c = a.ref;
    if (null !== c) {
        if ("function" === typeof c) try {
            c(null);
        } catch (d) {
            $cf563b86f33a2bc2$var$W(a, b, d);
        }
        else c.current = null;
    }
}
function $cf563b86f33a2bc2$var$Nj(a, b, c) {
    try {
        c();
    } catch (d) {
        $cf563b86f33a2bc2$var$W(a, b, d);
    }
}
var $cf563b86f33a2bc2$var$Oj = !1;
function $cf563b86f33a2bc2$var$Pj(a, b) {
    $cf563b86f33a2bc2$var$Cf = $cf563b86f33a2bc2$var$dd;
    a = $cf563b86f33a2bc2$var$Me();
    if ($cf563b86f33a2bc2$var$Ne(a)) {
        if ("selectionStart" in a) var c = {
            start: a.selectionStart,
            end: a.selectionEnd
        };
        else a: {
            c = (c = a.ownerDocument) && c.defaultView || window;
            var d = c.getSelection && c.getSelection();
            if (d && 0 !== d.rangeCount) {
                c = d.anchorNode;
                var e = d.anchorOffset, f = d.focusNode;
                d = d.focusOffset;
                try {
                    c.nodeType, f.nodeType;
                } catch (F) {
                    c = null;
                    break a;
                }
                var g = 0, h = -1, k = -1, l = 0, m = 0, q = a, r = null;
                b: for(;;){
                    for(var y;;){
                        q !== c || 0 !== e && 3 !== q.nodeType || (h = g + e);
                        q !== f || 0 !== d && 3 !== q.nodeType || (k = g + d);
                        3 === q.nodeType && (g += q.nodeValue.length);
                        if (null === (y = q.firstChild)) break;
                        r = q;
                        q = y;
                    }
                    for(;;){
                        if (q === a) break b;
                        r === c && ++l === e && (h = g);
                        r === f && ++m === d && (k = g);
                        if (null !== (y = q.nextSibling)) break;
                        q = r;
                        r = q.parentNode;
                    }
                    q = y;
                }
                c = -1 === h || -1 === k ? null : {
                    start: h,
                    end: k
                };
            } else c = null;
        }
        c = c || {
            start: 0,
            end: 0
        };
    } else c = null;
    $cf563b86f33a2bc2$var$Df = {
        focusedElem: a,
        selectionRange: c
    };
    $cf563b86f33a2bc2$var$dd = !1;
    for($cf563b86f33a2bc2$var$V = b; null !== $cf563b86f33a2bc2$var$V;)if (b = $cf563b86f33a2bc2$var$V, a = b.child, 0 !== (b.subtreeFlags & 1028) && null !== a) a.return = b, $cf563b86f33a2bc2$var$V = a;
    else for(; null !== $cf563b86f33a2bc2$var$V;){
        b = $cf563b86f33a2bc2$var$V;
        try {
            var n = b.alternate;
            if (0 !== (b.flags & 1024)) switch(b.tag){
                case 0:
                case 11:
                case 15:
                    break;
                case 1:
                    if (null !== n) {
                        var t = n.memoizedProps, J = n.memoizedState, x = b.stateNode, w = x.getSnapshotBeforeUpdate(b.elementType === b.type ? t : $cf563b86f33a2bc2$var$Lg(b.type, t), J);
                        x.__reactInternalSnapshotBeforeUpdate = w;
                    }
                    break;
                case 3:
                    var u = b.stateNode.containerInfo;
                    1 === u.nodeType ? u.textContent = "" : 9 === u.nodeType && u.documentElement && u.removeChild(u.documentElement);
                    break;
                case 5:
                case 6:
                case 4:
                case 17:
                    break;
                default:
                    throw Error($cf563b86f33a2bc2$var$p(163));
            }
        } catch (F) {
            $cf563b86f33a2bc2$var$W(b, b.return, F);
        }
        a = b.sibling;
        if (null !== a) {
            a.return = b.return;
            $cf563b86f33a2bc2$var$V = a;
            break;
        }
        $cf563b86f33a2bc2$var$V = b.return;
    }
    n = $cf563b86f33a2bc2$var$Oj;
    $cf563b86f33a2bc2$var$Oj = !1;
    return n;
}
function $cf563b86f33a2bc2$var$Qj(a, b, c) {
    var d = b.updateQueue;
    d = null !== d ? d.lastEffect : null;
    if (null !== d) {
        var e = d = d.next;
        do {
            if ((e.tag & a) === a) {
                var f = e.destroy;
                e.destroy = void 0;
                void 0 !== f && $cf563b86f33a2bc2$var$Nj(b, c, f);
            }
            e = e.next;
        }while (e !== d);
    }
}
function $cf563b86f33a2bc2$var$Rj(a, b) {
    b = b.updateQueue;
    b = null !== b ? b.lastEffect : null;
    if (null !== b) {
        var c = b = b.next;
        do {
            if ((c.tag & a) === a) {
                var d = c.create;
                c.destroy = d();
            }
            c = c.next;
        }while (c !== b);
    }
}
function $cf563b86f33a2bc2$var$Sj(a) {
    var b = a.ref;
    if (null !== b) {
        var c = a.stateNode;
        switch(a.tag){
            case 5:
                a = c;
                break;
            default:
                a = c;
        }
        "function" === typeof b ? b(a) : b.current = a;
    }
}
function $cf563b86f33a2bc2$var$Tj(a) {
    var b = a.alternate;
    null !== b && (a.alternate = null, $cf563b86f33a2bc2$var$Tj(b));
    a.child = null;
    a.deletions = null;
    a.sibling = null;
    5 === a.tag && (b = a.stateNode, null !== b && (delete b[$cf563b86f33a2bc2$var$Of], delete b[$cf563b86f33a2bc2$var$Pf], delete b[$cf563b86f33a2bc2$var$of], delete b[$cf563b86f33a2bc2$var$Qf], delete b[$cf563b86f33a2bc2$var$Rf]));
    a.stateNode = null;
    a.return = null;
    a.dependencies = null;
    a.memoizedProps = null;
    a.memoizedState = null;
    a.pendingProps = null;
    a.stateNode = null;
    a.updateQueue = null;
}
function $cf563b86f33a2bc2$var$Uj(a) {
    return 5 === a.tag || 3 === a.tag || 4 === a.tag;
}
function $cf563b86f33a2bc2$var$Vj(a) {
    a: for(;;){
        for(; null === a.sibling;){
            if (null === a.return || $cf563b86f33a2bc2$var$Uj(a.return)) return null;
            a = a.return;
        }
        a.sibling.return = a.return;
        for(a = a.sibling; 5 !== a.tag && 6 !== a.tag && 18 !== a.tag;){
            if (a.flags & 2) continue a;
            if (null === a.child || 4 === a.tag) continue a;
            else a.child.return = a, a = a.child;
        }
        if (!(a.flags & 2)) return a.stateNode;
    }
}
function $cf563b86f33a2bc2$var$Wj(a, b, c) {
    var d = a.tag;
    if (5 === d || 6 === d) a = a.stateNode, b ? 8 === c.nodeType ? c.parentNode.insertBefore(a, b) : c.insertBefore(a, b) : (8 === c.nodeType ? (b = c.parentNode, b.insertBefore(a, c)) : (b = c, b.appendChild(a)), c = c._reactRootContainer, null !== c && void 0 !== c || null !== b.onclick || (b.onclick = $cf563b86f33a2bc2$var$Bf));
    else if (4 !== d && (a = a.child, null !== a)) for($cf563b86f33a2bc2$var$Wj(a, b, c), a = a.sibling; null !== a;)$cf563b86f33a2bc2$var$Wj(a, b, c), a = a.sibling;
}
function $cf563b86f33a2bc2$var$Xj(a, b, c) {
    var d = a.tag;
    if (5 === d || 6 === d) a = a.stateNode, b ? c.insertBefore(a, b) : c.appendChild(a);
    else if (4 !== d && (a = a.child, null !== a)) for($cf563b86f33a2bc2$var$Xj(a, b, c), a = a.sibling; null !== a;)$cf563b86f33a2bc2$var$Xj(a, b, c), a = a.sibling;
}
var $cf563b86f33a2bc2$var$X = null, $cf563b86f33a2bc2$var$Yj = !1;
function $cf563b86f33a2bc2$var$Zj(a, b, c) {
    for(c = c.child; null !== c;)$cf563b86f33a2bc2$var$ak(a, b, c), c = c.sibling;
}
function $cf563b86f33a2bc2$var$ak(a, b, c) {
    if ($cf563b86f33a2bc2$var$lc && "function" === typeof $cf563b86f33a2bc2$var$lc.onCommitFiberUnmount) try {
        $cf563b86f33a2bc2$var$lc.onCommitFiberUnmount($cf563b86f33a2bc2$var$kc, c);
    } catch (h) {}
    switch(c.tag){
        case 5:
            $cf563b86f33a2bc2$var$U || $cf563b86f33a2bc2$var$Mj(c, b);
        case 6:
            var d = $cf563b86f33a2bc2$var$X, e = $cf563b86f33a2bc2$var$Yj;
            $cf563b86f33a2bc2$var$X = null;
            $cf563b86f33a2bc2$var$Zj(a, b, c);
            $cf563b86f33a2bc2$var$X = d;
            $cf563b86f33a2bc2$var$Yj = e;
            null !== $cf563b86f33a2bc2$var$X && ($cf563b86f33a2bc2$var$Yj ? (a = $cf563b86f33a2bc2$var$X, c = c.stateNode, 8 === a.nodeType ? a.parentNode.removeChild(c) : a.removeChild(c)) : $cf563b86f33a2bc2$var$X.removeChild(c.stateNode));
            break;
        case 18:
            null !== $cf563b86f33a2bc2$var$X && ($cf563b86f33a2bc2$var$Yj ? (a = $cf563b86f33a2bc2$var$X, c = c.stateNode, 8 === a.nodeType ? $cf563b86f33a2bc2$var$Kf(a.parentNode, c) : 1 === a.nodeType && $cf563b86f33a2bc2$var$Kf(a, c), $cf563b86f33a2bc2$var$bd(a)) : $cf563b86f33a2bc2$var$Kf($cf563b86f33a2bc2$var$X, c.stateNode));
            break;
        case 4:
            d = $cf563b86f33a2bc2$var$X;
            e = $cf563b86f33a2bc2$var$Yj;
            $cf563b86f33a2bc2$var$X = c.stateNode.containerInfo;
            $cf563b86f33a2bc2$var$Yj = !0;
            $cf563b86f33a2bc2$var$Zj(a, b, c);
            $cf563b86f33a2bc2$var$X = d;
            $cf563b86f33a2bc2$var$Yj = e;
            break;
        case 0:
        case 11:
        case 14:
        case 15:
            if (!$cf563b86f33a2bc2$var$U && (d = c.updateQueue, null !== d && (d = d.lastEffect, null !== d))) {
                e = d = d.next;
                do {
                    var f = e, g = f.destroy;
                    f = f.tag;
                    void 0 !== g && (0 !== (f & 2) ? $cf563b86f33a2bc2$var$Nj(c, b, g) : 0 !== (f & 4) && $cf563b86f33a2bc2$var$Nj(c, b, g));
                    e = e.next;
                }while (e !== d);
            }
            $cf563b86f33a2bc2$var$Zj(a, b, c);
            break;
        case 1:
            if (!$cf563b86f33a2bc2$var$U && ($cf563b86f33a2bc2$var$Mj(c, b), d = c.stateNode, "function" === typeof d.componentWillUnmount)) try {
                d.props = c.memoizedProps, d.state = c.memoizedState, d.componentWillUnmount();
            } catch (h) {
                $cf563b86f33a2bc2$var$W(c, b, h);
            }
            $cf563b86f33a2bc2$var$Zj(a, b, c);
            break;
        case 21:
            $cf563b86f33a2bc2$var$Zj(a, b, c);
            break;
        case 22:
            c.mode & 1 ? ($cf563b86f33a2bc2$var$U = (d = $cf563b86f33a2bc2$var$U) || null !== c.memoizedState, $cf563b86f33a2bc2$var$Zj(a, b, c), $cf563b86f33a2bc2$var$U = d) : $cf563b86f33a2bc2$var$Zj(a, b, c);
            break;
        default:
            $cf563b86f33a2bc2$var$Zj(a, b, c);
    }
}
function $cf563b86f33a2bc2$var$bk(a) {
    var b = a.updateQueue;
    if (null !== b) {
        a.updateQueue = null;
        var c = a.stateNode;
        null === c && (c = a.stateNode = new $cf563b86f33a2bc2$var$Lj);
        b.forEach(function(b) {
            var d = $cf563b86f33a2bc2$var$ck.bind(null, a, b);
            c.has(b) || (c.add(b), b.then(d, d));
        });
    }
}
function $cf563b86f33a2bc2$var$dk(a, b) {
    var c = b.deletions;
    if (null !== c) for(var d = 0; d < c.length; d++){
        var e = c[d];
        try {
            var f = a, g = b, h = g;
            a: for(; null !== h;){
                switch(h.tag){
                    case 5:
                        $cf563b86f33a2bc2$var$X = h.stateNode;
                        $cf563b86f33a2bc2$var$Yj = !1;
                        break a;
                    case 3:
                        $cf563b86f33a2bc2$var$X = h.stateNode.containerInfo;
                        $cf563b86f33a2bc2$var$Yj = !0;
                        break a;
                    case 4:
                        $cf563b86f33a2bc2$var$X = h.stateNode.containerInfo;
                        $cf563b86f33a2bc2$var$Yj = !0;
                        break a;
                }
                h = h.return;
            }
            if (null === $cf563b86f33a2bc2$var$X) throw Error($cf563b86f33a2bc2$var$p(160));
            $cf563b86f33a2bc2$var$ak(f, g, e);
            $cf563b86f33a2bc2$var$X = null;
            $cf563b86f33a2bc2$var$Yj = !1;
            var k = e.alternate;
            null !== k && (k.return = null);
            e.return = null;
        } catch (l) {
            $cf563b86f33a2bc2$var$W(e, b, l);
        }
    }
    if (b.subtreeFlags & 12854) for(b = b.child; null !== b;)$cf563b86f33a2bc2$var$ek(b, a), b = b.sibling;
}
function $cf563b86f33a2bc2$var$ek(a, b) {
    var c = a.alternate, d = a.flags;
    switch(a.tag){
        case 0:
        case 11:
        case 14:
        case 15:
            $cf563b86f33a2bc2$var$dk(b, a);
            $cf563b86f33a2bc2$var$fk(a);
            if (d & 4) {
                try {
                    $cf563b86f33a2bc2$var$Qj(3, a, a.return), $cf563b86f33a2bc2$var$Rj(3, a);
                } catch (t) {
                    $cf563b86f33a2bc2$var$W(a, a.return, t);
                }
                try {
                    $cf563b86f33a2bc2$var$Qj(5, a, a.return);
                } catch (t) {
                    $cf563b86f33a2bc2$var$W(a, a.return, t);
                }
            }
            break;
        case 1:
            $cf563b86f33a2bc2$var$dk(b, a);
            $cf563b86f33a2bc2$var$fk(a);
            d & 512 && null !== c && $cf563b86f33a2bc2$var$Mj(c, c.return);
            break;
        case 5:
            $cf563b86f33a2bc2$var$dk(b, a);
            $cf563b86f33a2bc2$var$fk(a);
            d & 512 && null !== c && $cf563b86f33a2bc2$var$Mj(c, c.return);
            if (a.flags & 32) {
                var e = a.stateNode;
                try {
                    $cf563b86f33a2bc2$var$ob(e, "");
                } catch (t) {
                    $cf563b86f33a2bc2$var$W(a, a.return, t);
                }
            }
            if (d & 4 && (e = a.stateNode, null != e)) {
                var f = a.memoizedProps, g = null !== c ? c.memoizedProps : f, h = a.type, k = a.updateQueue;
                a.updateQueue = null;
                if (null !== k) try {
                    "input" === h && "radio" === f.type && null != f.name && $cf563b86f33a2bc2$var$ab(e, f);
                    $cf563b86f33a2bc2$var$vb(h, g);
                    var l = $cf563b86f33a2bc2$var$vb(h, f);
                    for(g = 0; g < k.length; g += 2){
                        var m = k[g], q = k[g + 1];
                        "style" === m ? $cf563b86f33a2bc2$var$sb(e, q) : "dangerouslySetInnerHTML" === m ? $cf563b86f33a2bc2$var$nb(e, q) : "children" === m ? $cf563b86f33a2bc2$var$ob(e, q) : $cf563b86f33a2bc2$var$ta(e, m, q, l);
                    }
                    switch(h){
                        case "input":
                            $cf563b86f33a2bc2$var$bb(e, f);
                            break;
                        case "textarea":
                            $cf563b86f33a2bc2$var$ib(e, f);
                            break;
                        case "select":
                            var r = e._wrapperState.wasMultiple;
                            e._wrapperState.wasMultiple = !!f.multiple;
                            var y = f.value;
                            null != y ? $cf563b86f33a2bc2$var$fb(e, !!f.multiple, y, !1) : r !== !!f.multiple && (null != f.defaultValue ? $cf563b86f33a2bc2$var$fb(e, !!f.multiple, f.defaultValue, !0) : $cf563b86f33a2bc2$var$fb(e, !!f.multiple, f.multiple ? [] : "", !1));
                    }
                    e[$cf563b86f33a2bc2$var$Pf] = f;
                } catch (t) {
                    $cf563b86f33a2bc2$var$W(a, a.return, t);
                }
            }
            break;
        case 6:
            $cf563b86f33a2bc2$var$dk(b, a);
            $cf563b86f33a2bc2$var$fk(a);
            if (d & 4) {
                if (null === a.stateNode) throw Error($cf563b86f33a2bc2$var$p(162));
                e = a.stateNode;
                f = a.memoizedProps;
                try {
                    e.nodeValue = f;
                } catch (t) {
                    $cf563b86f33a2bc2$var$W(a, a.return, t);
                }
            }
            break;
        case 3:
            $cf563b86f33a2bc2$var$dk(b, a);
            $cf563b86f33a2bc2$var$fk(a);
            if (d & 4 && null !== c && c.memoizedState.isDehydrated) try {
                $cf563b86f33a2bc2$var$bd(b.containerInfo);
            } catch (t) {
                $cf563b86f33a2bc2$var$W(a, a.return, t);
            }
            break;
        case 4:
            $cf563b86f33a2bc2$var$dk(b, a);
            $cf563b86f33a2bc2$var$fk(a);
            break;
        case 13:
            $cf563b86f33a2bc2$var$dk(b, a);
            $cf563b86f33a2bc2$var$fk(a);
            e = a.child;
            e.flags & 8192 && (f = null !== e.memoizedState, e.stateNode.isHidden = f, !f || null !== e.alternate && null !== e.alternate.memoizedState || ($cf563b86f33a2bc2$var$gk = $cf563b86f33a2bc2$var$B()));
            d & 4 && $cf563b86f33a2bc2$var$bk(a);
            break;
        case 22:
            m = null !== c && null !== c.memoizedState;
            a.mode & 1 ? ($cf563b86f33a2bc2$var$U = (l = $cf563b86f33a2bc2$var$U) || m, $cf563b86f33a2bc2$var$dk(b, a), $cf563b86f33a2bc2$var$U = l) : $cf563b86f33a2bc2$var$dk(b, a);
            $cf563b86f33a2bc2$var$fk(a);
            if (d & 8192) {
                l = null !== a.memoizedState;
                if ((a.stateNode.isHidden = l) && !m && 0 !== (a.mode & 1)) for($cf563b86f33a2bc2$var$V = a, m = a.child; null !== m;){
                    for(q = $cf563b86f33a2bc2$var$V = m; null !== $cf563b86f33a2bc2$var$V;){
                        r = $cf563b86f33a2bc2$var$V;
                        y = r.child;
                        switch(r.tag){
                            case 0:
                            case 11:
                            case 14:
                            case 15:
                                $cf563b86f33a2bc2$var$Qj(4, r, r.return);
                                break;
                            case 1:
                                $cf563b86f33a2bc2$var$Mj(r, r.return);
                                var n = r.stateNode;
                                if ("function" === typeof n.componentWillUnmount) {
                                    d = r;
                                    c = r.return;
                                    try {
                                        b = d, n.props = b.memoizedProps, n.state = b.memoizedState, n.componentWillUnmount();
                                    } catch (t) {
                                        $cf563b86f33a2bc2$var$W(d, c, t);
                                    }
                                }
                                break;
                            case 5:
                                $cf563b86f33a2bc2$var$Mj(r, r.return);
                                break;
                            case 22:
                                if (null !== r.memoizedState) {
                                    $cf563b86f33a2bc2$var$hk(q);
                                    continue;
                                }
                        }
                        null !== y ? (y.return = r, $cf563b86f33a2bc2$var$V = y) : $cf563b86f33a2bc2$var$hk(q);
                    }
                    m = m.sibling;
                }
                a: for(m = null, q = a;;){
                    if (5 === q.tag) {
                        if (null === m) {
                            m = q;
                            try {
                                e = q.stateNode, l ? (f = e.style, "function" === typeof f.setProperty ? f.setProperty("display", "none", "important") : f.display = "none") : (h = q.stateNode, k = q.memoizedProps.style, g = void 0 !== k && null !== k && k.hasOwnProperty("display") ? k.display : null, h.style.display = $cf563b86f33a2bc2$var$rb("display", g));
                            } catch (t) {
                                $cf563b86f33a2bc2$var$W(a, a.return, t);
                            }
                        }
                    } else if (6 === q.tag) {
                        if (null === m) try {
                            q.stateNode.nodeValue = l ? "" : q.memoizedProps;
                        } catch (t) {
                            $cf563b86f33a2bc2$var$W(a, a.return, t);
                        }
                    } else if ((22 !== q.tag && 23 !== q.tag || null === q.memoizedState || q === a) && null !== q.child) {
                        q.child.return = q;
                        q = q.child;
                        continue;
                    }
                    if (q === a) break a;
                    for(; null === q.sibling;){
                        if (null === q.return || q.return === a) break a;
                        m === q && (m = null);
                        q = q.return;
                    }
                    m === q && (m = null);
                    q.sibling.return = q.return;
                    q = q.sibling;
                }
            }
            break;
        case 19:
            $cf563b86f33a2bc2$var$dk(b, a);
            $cf563b86f33a2bc2$var$fk(a);
            d & 4 && $cf563b86f33a2bc2$var$bk(a);
            break;
        case 21:
            break;
        default:
            $cf563b86f33a2bc2$var$dk(b, a), $cf563b86f33a2bc2$var$fk(a);
    }
}
function $cf563b86f33a2bc2$var$fk(a) {
    var b = a.flags;
    if (b & 2) {
        try {
            a: {
                for(var c = a.return; null !== c;){
                    if ($cf563b86f33a2bc2$var$Uj(c)) {
                        var d = c;
                        break a;
                    }
                    c = c.return;
                }
                throw Error($cf563b86f33a2bc2$var$p(160));
            }
            switch(d.tag){
                case 5:
                    var e = d.stateNode;
                    d.flags & 32 && ($cf563b86f33a2bc2$var$ob(e, ""), d.flags &= -33);
                    var f = $cf563b86f33a2bc2$var$Vj(a);
                    $cf563b86f33a2bc2$var$Xj(a, f, e);
                    break;
                case 3:
                case 4:
                    var g = d.stateNode.containerInfo, h = $cf563b86f33a2bc2$var$Vj(a);
                    $cf563b86f33a2bc2$var$Wj(a, h, g);
                    break;
                default:
                    throw Error($cf563b86f33a2bc2$var$p(161));
            }
        } catch (k) {
            $cf563b86f33a2bc2$var$W(a, a.return, k);
        }
        a.flags &= -3;
    }
    b & 4096 && (a.flags &= -4097);
}
function $cf563b86f33a2bc2$var$ik(a, b, c) {
    $cf563b86f33a2bc2$var$V = a;
    $cf563b86f33a2bc2$var$jk(a, b, c);
}
function $cf563b86f33a2bc2$var$jk(a, b, c) {
    for(var d = 0 !== (a.mode & 1); null !== $cf563b86f33a2bc2$var$V;){
        var e = $cf563b86f33a2bc2$var$V, f = e.child;
        if (22 === e.tag && d) {
            var g = null !== e.memoizedState || $cf563b86f33a2bc2$var$Kj;
            if (!g) {
                var h = e.alternate, k = null !== h && null !== h.memoizedState || $cf563b86f33a2bc2$var$U;
                h = $cf563b86f33a2bc2$var$Kj;
                var l = $cf563b86f33a2bc2$var$U;
                $cf563b86f33a2bc2$var$Kj = g;
                if (($cf563b86f33a2bc2$var$U = k) && !l) for($cf563b86f33a2bc2$var$V = e; null !== $cf563b86f33a2bc2$var$V;)g = $cf563b86f33a2bc2$var$V, k = g.child, 22 === g.tag && null !== g.memoizedState ? $cf563b86f33a2bc2$var$kk(e) : null !== k ? (k.return = g, $cf563b86f33a2bc2$var$V = k) : $cf563b86f33a2bc2$var$kk(e);
                for(; null !== f;)$cf563b86f33a2bc2$var$V = f, $cf563b86f33a2bc2$var$jk(f, b, c), f = f.sibling;
                $cf563b86f33a2bc2$var$V = e;
                $cf563b86f33a2bc2$var$Kj = h;
                $cf563b86f33a2bc2$var$U = l;
            }
            $cf563b86f33a2bc2$var$lk(a, b, c);
        } else 0 !== (e.subtreeFlags & 8772) && null !== f ? (f.return = e, $cf563b86f33a2bc2$var$V = f) : $cf563b86f33a2bc2$var$lk(a, b, c);
    }
}
function $cf563b86f33a2bc2$var$lk(a) {
    for(; null !== $cf563b86f33a2bc2$var$V;){
        var b = $cf563b86f33a2bc2$var$V;
        if (0 !== (b.flags & 8772)) {
            var c = b.alternate;
            try {
                if (0 !== (b.flags & 8772)) switch(b.tag){
                    case 0:
                    case 11:
                    case 15:
                        $cf563b86f33a2bc2$var$U || $cf563b86f33a2bc2$var$Rj(5, b);
                        break;
                    case 1:
                        var d = b.stateNode;
                        if (b.flags & 4 && !$cf563b86f33a2bc2$var$U) {
                            if (null === c) d.componentDidMount();
                            else {
                                var e = b.elementType === b.type ? c.memoizedProps : $cf563b86f33a2bc2$var$Lg(b.type, c.memoizedProps);
                                d.componentDidUpdate(e, c.memoizedState, d.__reactInternalSnapshotBeforeUpdate);
                            }
                        }
                        var f = b.updateQueue;
                        null !== f && $cf563b86f33a2bc2$var$ih(b, f, d);
                        break;
                    case 3:
                        var g = b.updateQueue;
                        if (null !== g) {
                            c = null;
                            if (null !== b.child) switch(b.child.tag){
                                case 5:
                                    c = b.child.stateNode;
                                    break;
                                case 1:
                                    c = b.child.stateNode;
                            }
                            $cf563b86f33a2bc2$var$ih(b, g, c);
                        }
                        break;
                    case 5:
                        var h = b.stateNode;
                        if (null === c && b.flags & 4) {
                            c = h;
                            var k = b.memoizedProps;
                            switch(b.type){
                                case "button":
                                case "input":
                                case "select":
                                case "textarea":
                                    k.autoFocus && c.focus();
                                    break;
                                case "img":
                                    k.src && (c.src = k.src);
                            }
                        }
                        break;
                    case 6:
                        break;
                    case 4:
                        break;
                    case 12:
                        break;
                    case 13:
                        if (null === b.memoizedState) {
                            var l = b.alternate;
                            if (null !== l) {
                                var m = l.memoizedState;
                                if (null !== m) {
                                    var q = m.dehydrated;
                                    null !== q && $cf563b86f33a2bc2$var$bd(q);
                                }
                            }
                        }
                        break;
                    case 19:
                    case 17:
                    case 21:
                    case 22:
                    case 23:
                    case 25:
                        break;
                    default:
                        throw Error($cf563b86f33a2bc2$var$p(163));
                }
                $cf563b86f33a2bc2$var$U || b.flags & 512 && $cf563b86f33a2bc2$var$Sj(b);
            } catch (r) {
                $cf563b86f33a2bc2$var$W(b, b.return, r);
            }
        }
        if (b === a) {
            $cf563b86f33a2bc2$var$V = null;
            break;
        }
        c = b.sibling;
        if (null !== c) {
            c.return = b.return;
            $cf563b86f33a2bc2$var$V = c;
            break;
        }
        $cf563b86f33a2bc2$var$V = b.return;
    }
}
function $cf563b86f33a2bc2$var$hk(a) {
    for(; null !== $cf563b86f33a2bc2$var$V;){
        var b = $cf563b86f33a2bc2$var$V;
        if (b === a) {
            $cf563b86f33a2bc2$var$V = null;
            break;
        }
        var c = b.sibling;
        if (null !== c) {
            c.return = b.return;
            $cf563b86f33a2bc2$var$V = c;
            break;
        }
        $cf563b86f33a2bc2$var$V = b.return;
    }
}
function $cf563b86f33a2bc2$var$kk(a) {
    for(; null !== $cf563b86f33a2bc2$var$V;){
        var b = $cf563b86f33a2bc2$var$V;
        try {
            switch(b.tag){
                case 0:
                case 11:
                case 15:
                    var c = b.return;
                    try {
                        $cf563b86f33a2bc2$var$Rj(4, b);
                    } catch (k) {
                        $cf563b86f33a2bc2$var$W(b, c, k);
                    }
                    break;
                case 1:
                    var d = b.stateNode;
                    if ("function" === typeof d.componentDidMount) {
                        var e = b.return;
                        try {
                            d.componentDidMount();
                        } catch (k) {
                            $cf563b86f33a2bc2$var$W(b, e, k);
                        }
                    }
                    var f = b.return;
                    try {
                        $cf563b86f33a2bc2$var$Sj(b);
                    } catch (k) {
                        $cf563b86f33a2bc2$var$W(b, f, k);
                    }
                    break;
                case 5:
                    var g = b.return;
                    try {
                        $cf563b86f33a2bc2$var$Sj(b);
                    } catch (k) {
                        $cf563b86f33a2bc2$var$W(b, g, k);
                    }
            }
        } catch (k) {
            $cf563b86f33a2bc2$var$W(b, b.return, k);
        }
        if (b === a) {
            $cf563b86f33a2bc2$var$V = null;
            break;
        }
        var h = b.sibling;
        if (null !== h) {
            h.return = b.return;
            $cf563b86f33a2bc2$var$V = h;
            break;
        }
        $cf563b86f33a2bc2$var$V = b.return;
    }
}
var $cf563b86f33a2bc2$var$mk = Math.ceil, $cf563b86f33a2bc2$var$nk = $cf563b86f33a2bc2$var$ua.ReactCurrentDispatcher, $cf563b86f33a2bc2$var$ok = $cf563b86f33a2bc2$var$ua.ReactCurrentOwner, $cf563b86f33a2bc2$var$pk = $cf563b86f33a2bc2$var$ua.ReactCurrentBatchConfig, $cf563b86f33a2bc2$var$K = 0, $cf563b86f33a2bc2$var$R = null, $cf563b86f33a2bc2$var$Y = null, $cf563b86f33a2bc2$var$Z = 0, $cf563b86f33a2bc2$var$gj = 0, $cf563b86f33a2bc2$var$fj = $cf563b86f33a2bc2$var$Uf(0), $cf563b86f33a2bc2$var$T = 0, $cf563b86f33a2bc2$var$qk = null, $cf563b86f33a2bc2$var$hh = 0, $cf563b86f33a2bc2$var$rk = 0, $cf563b86f33a2bc2$var$sk = 0, $cf563b86f33a2bc2$var$tk = null, $cf563b86f33a2bc2$var$uk = null, $cf563b86f33a2bc2$var$gk = 0, $cf563b86f33a2bc2$var$Hj = Infinity, $cf563b86f33a2bc2$var$vk = null, $cf563b86f33a2bc2$var$Pi = !1, $cf563b86f33a2bc2$var$Qi = null, $cf563b86f33a2bc2$var$Si = null, $cf563b86f33a2bc2$var$wk = !1, $cf563b86f33a2bc2$var$xk = null, $cf563b86f33a2bc2$var$yk = 0, $cf563b86f33a2bc2$var$zk = 0, $cf563b86f33a2bc2$var$Ak = null, $cf563b86f33a2bc2$var$Bk = -1, $cf563b86f33a2bc2$var$Ck = 0;
function $cf563b86f33a2bc2$var$L() {
    return 0 !== ($cf563b86f33a2bc2$var$K & 6) ? $cf563b86f33a2bc2$var$B() : -1 !== $cf563b86f33a2bc2$var$Bk ? $cf563b86f33a2bc2$var$Bk : $cf563b86f33a2bc2$var$Bk = $cf563b86f33a2bc2$var$B();
}
function $cf563b86f33a2bc2$var$lh(a) {
    if (0 === (a.mode & 1)) return 1;
    if (0 !== ($cf563b86f33a2bc2$var$K & 2) && 0 !== $cf563b86f33a2bc2$var$Z) return $cf563b86f33a2bc2$var$Z & -$cf563b86f33a2bc2$var$Z;
    if (null !== $cf563b86f33a2bc2$var$Kg.transition) return 0 === $cf563b86f33a2bc2$var$Ck && ($cf563b86f33a2bc2$var$Ck = $cf563b86f33a2bc2$var$yc()), $cf563b86f33a2bc2$var$Ck;
    a = $cf563b86f33a2bc2$var$C;
    if (0 !== a) return a;
    a = window.event;
    a = void 0 === a ? 16 : $cf563b86f33a2bc2$var$jd(a.type);
    return a;
}
function $cf563b86f33a2bc2$var$mh(a, b, c, d) {
    if (50 < $cf563b86f33a2bc2$var$zk) throw $cf563b86f33a2bc2$var$zk = 0, $cf563b86f33a2bc2$var$Ak = null, Error($cf563b86f33a2bc2$var$p(185));
    $cf563b86f33a2bc2$var$Ac(a, c, d);
    if (0 === ($cf563b86f33a2bc2$var$K & 2) || a !== $cf563b86f33a2bc2$var$R) a === $cf563b86f33a2bc2$var$R && (0 === ($cf563b86f33a2bc2$var$K & 2) && ($cf563b86f33a2bc2$var$rk |= c), 4 === $cf563b86f33a2bc2$var$T && $cf563b86f33a2bc2$var$Dk(a, $cf563b86f33a2bc2$var$Z)), $cf563b86f33a2bc2$var$Ek(a, d), 1 === c && 0 === $cf563b86f33a2bc2$var$K && 0 === (b.mode & 1) && ($cf563b86f33a2bc2$var$Hj = $cf563b86f33a2bc2$var$B() + 500, $cf563b86f33a2bc2$var$fg && $cf563b86f33a2bc2$var$jg());
}
function $cf563b86f33a2bc2$var$Ek(a, b) {
    var c = a.callbackNode;
    $cf563b86f33a2bc2$var$wc(a, b);
    var d = $cf563b86f33a2bc2$var$uc(a, a === $cf563b86f33a2bc2$var$R ? $cf563b86f33a2bc2$var$Z : 0);
    if (0 === d) null !== c && $cf563b86f33a2bc2$var$bc(c), a.callbackNode = null, a.callbackPriority = 0;
    else if (b = d & -d, a.callbackPriority !== b) {
        null != c && $cf563b86f33a2bc2$var$bc(c);
        if (1 === b) 0 === a.tag ? $cf563b86f33a2bc2$var$ig($cf563b86f33a2bc2$var$Fk.bind(null, a)) : $cf563b86f33a2bc2$var$hg($cf563b86f33a2bc2$var$Fk.bind(null, a)), $cf563b86f33a2bc2$var$Jf(function() {
            0 === ($cf563b86f33a2bc2$var$K & 6) && $cf563b86f33a2bc2$var$jg();
        }), c = null;
        else {
            switch($cf563b86f33a2bc2$var$Dc(d)){
                case 1:
                    c = $cf563b86f33a2bc2$var$fc;
                    break;
                case 4:
                    c = $cf563b86f33a2bc2$var$gc;
                    break;
                case 16:
                    c = $cf563b86f33a2bc2$var$hc;
                    break;
                case 536870912:
                    c = $cf563b86f33a2bc2$var$jc;
                    break;
                default:
                    c = $cf563b86f33a2bc2$var$hc;
            }
            c = $cf563b86f33a2bc2$var$Gk(c, $cf563b86f33a2bc2$var$Hk.bind(null, a));
        }
        a.callbackPriority = b;
        a.callbackNode = c;
    }
}
function $cf563b86f33a2bc2$var$Hk(a, b) {
    $cf563b86f33a2bc2$var$Bk = -1;
    $cf563b86f33a2bc2$var$Ck = 0;
    if (0 !== ($cf563b86f33a2bc2$var$K & 6)) throw Error($cf563b86f33a2bc2$var$p(327));
    var c = a.callbackNode;
    if ($cf563b86f33a2bc2$var$Ik() && a.callbackNode !== c) return null;
    var d = $cf563b86f33a2bc2$var$uc(a, a === $cf563b86f33a2bc2$var$R ? $cf563b86f33a2bc2$var$Z : 0);
    if (0 === d) return null;
    if (0 !== (d & 30) || 0 !== (d & a.expiredLanes) || b) b = $cf563b86f33a2bc2$var$Jk(a, d);
    else {
        b = d;
        var e = $cf563b86f33a2bc2$var$K;
        $cf563b86f33a2bc2$var$K |= 2;
        var f = $cf563b86f33a2bc2$var$Kk();
        if ($cf563b86f33a2bc2$var$R !== a || $cf563b86f33a2bc2$var$Z !== b) $cf563b86f33a2bc2$var$vk = null, $cf563b86f33a2bc2$var$Hj = $cf563b86f33a2bc2$var$B() + 500, $cf563b86f33a2bc2$var$Lk(a, b);
        for(;;)try {
            $cf563b86f33a2bc2$var$Mk();
            break;
        } catch (h) {
            $cf563b86f33a2bc2$var$Nk(a, h);
        }
        $cf563b86f33a2bc2$var$Qg();
        $cf563b86f33a2bc2$var$nk.current = f;
        $cf563b86f33a2bc2$var$K = e;
        null !== $cf563b86f33a2bc2$var$Y ? b = 0 : ($cf563b86f33a2bc2$var$R = null, $cf563b86f33a2bc2$var$Z = 0, b = $cf563b86f33a2bc2$var$T);
    }
    if (0 !== b) {
        2 === b && (e = $cf563b86f33a2bc2$var$xc(a), 0 !== e && (d = e, b = $cf563b86f33a2bc2$var$Ok(a, e)));
        if (1 === b) throw c = $cf563b86f33a2bc2$var$qk, $cf563b86f33a2bc2$var$Lk(a, 0), $cf563b86f33a2bc2$var$Dk(a, d), $cf563b86f33a2bc2$var$Ek(a, $cf563b86f33a2bc2$var$B()), c;
        if (6 === b) $cf563b86f33a2bc2$var$Dk(a, d);
        else {
            e = a.current.alternate;
            if (0 === (d & 30) && !$cf563b86f33a2bc2$var$Pk(e) && (b = $cf563b86f33a2bc2$var$Jk(a, d), 2 === b && (f = $cf563b86f33a2bc2$var$xc(a), 0 !== f && (d = f, b = $cf563b86f33a2bc2$var$Ok(a, f))), 1 === b)) throw c = $cf563b86f33a2bc2$var$qk, $cf563b86f33a2bc2$var$Lk(a, 0), $cf563b86f33a2bc2$var$Dk(a, d), $cf563b86f33a2bc2$var$Ek(a, $cf563b86f33a2bc2$var$B()), c;
            a.finishedWork = e;
            a.finishedLanes = d;
            switch(b){
                case 0:
                case 1:
                    throw Error($cf563b86f33a2bc2$var$p(345));
                case 2:
                    $cf563b86f33a2bc2$var$Qk(a, $cf563b86f33a2bc2$var$uk, $cf563b86f33a2bc2$var$vk);
                    break;
                case 3:
                    $cf563b86f33a2bc2$var$Dk(a, d);
                    if ((d & 130023424) === d && (b = $cf563b86f33a2bc2$var$gk + 500 - $cf563b86f33a2bc2$var$B(), 10 < b)) {
                        if (0 !== $cf563b86f33a2bc2$var$uc(a, 0)) break;
                        e = a.suspendedLanes;
                        if ((e & d) !== d) {
                            $cf563b86f33a2bc2$var$L();
                            a.pingedLanes |= a.suspendedLanes & e;
                            break;
                        }
                        a.timeoutHandle = $cf563b86f33a2bc2$var$Ff($cf563b86f33a2bc2$var$Qk.bind(null, a, $cf563b86f33a2bc2$var$uk, $cf563b86f33a2bc2$var$vk), b);
                        break;
                    }
                    $cf563b86f33a2bc2$var$Qk(a, $cf563b86f33a2bc2$var$uk, $cf563b86f33a2bc2$var$vk);
                    break;
                case 4:
                    $cf563b86f33a2bc2$var$Dk(a, d);
                    if ((d & 4194240) === d) break;
                    b = a.eventTimes;
                    for(e = -1; 0 < d;){
                        var g = 31 - $cf563b86f33a2bc2$var$oc(d);
                        f = 1 << g;
                        g = b[g];
                        g > e && (e = g);
                        d &= ~f;
                    }
                    d = e;
                    d = $cf563b86f33a2bc2$var$B() - d;
                    d = (120 > d ? 120 : 480 > d ? 480 : 1080 > d ? 1080 : 1920 > d ? 1920 : 3E3 > d ? 3E3 : 4320 > d ? 4320 : 1960 * $cf563b86f33a2bc2$var$mk(d / 1960)) - d;
                    if (10 < d) {
                        a.timeoutHandle = $cf563b86f33a2bc2$var$Ff($cf563b86f33a2bc2$var$Qk.bind(null, a, $cf563b86f33a2bc2$var$uk, $cf563b86f33a2bc2$var$vk), d);
                        break;
                    }
                    $cf563b86f33a2bc2$var$Qk(a, $cf563b86f33a2bc2$var$uk, $cf563b86f33a2bc2$var$vk);
                    break;
                case 5:
                    $cf563b86f33a2bc2$var$Qk(a, $cf563b86f33a2bc2$var$uk, $cf563b86f33a2bc2$var$vk);
                    break;
                default:
                    throw Error($cf563b86f33a2bc2$var$p(329));
            }
        }
    }
    $cf563b86f33a2bc2$var$Ek(a, $cf563b86f33a2bc2$var$B());
    return a.callbackNode === c ? $cf563b86f33a2bc2$var$Hk.bind(null, a) : null;
}
function $cf563b86f33a2bc2$var$Ok(a, b) {
    var c = $cf563b86f33a2bc2$var$tk;
    a.current.memoizedState.isDehydrated && ($cf563b86f33a2bc2$var$Lk(a, b).flags |= 256);
    a = $cf563b86f33a2bc2$var$Jk(a, b);
    2 !== a && (b = $cf563b86f33a2bc2$var$uk, $cf563b86f33a2bc2$var$uk = c, null !== b && $cf563b86f33a2bc2$var$Gj(b));
    return a;
}
function $cf563b86f33a2bc2$var$Gj(a) {
    null === $cf563b86f33a2bc2$var$uk ? $cf563b86f33a2bc2$var$uk = a : $cf563b86f33a2bc2$var$uk.push.apply($cf563b86f33a2bc2$var$uk, a);
}
function $cf563b86f33a2bc2$var$Pk(a) {
    for(var b = a;;){
        if (b.flags & 16384) {
            var c = b.updateQueue;
            if (null !== c && (c = c.stores, null !== c)) for(var d = 0; d < c.length; d++){
                var e = c[d], f = e.getSnapshot;
                e = e.value;
                try {
                    if (!$cf563b86f33a2bc2$var$He(f(), e)) return !1;
                } catch (g) {
                    return !1;
                }
            }
        }
        c = b.child;
        if (b.subtreeFlags & 16384 && null !== c) c.return = b, b = c;
        else {
            if (b === a) break;
            for(; null === b.sibling;){
                if (null === b.return || b.return === a) return !0;
                b = b.return;
            }
            b.sibling.return = b.return;
            b = b.sibling;
        }
    }
    return !0;
}
function $cf563b86f33a2bc2$var$Dk(a, b) {
    b &= ~$cf563b86f33a2bc2$var$sk;
    b &= ~$cf563b86f33a2bc2$var$rk;
    a.suspendedLanes |= b;
    a.pingedLanes &= ~b;
    for(a = a.expirationTimes; 0 < b;){
        var c = 31 - $cf563b86f33a2bc2$var$oc(b), d = 1 << c;
        a[c] = -1;
        b &= ~d;
    }
}
function $cf563b86f33a2bc2$var$Fk(a) {
    if (0 !== ($cf563b86f33a2bc2$var$K & 6)) throw Error($cf563b86f33a2bc2$var$p(327));
    $cf563b86f33a2bc2$var$Ik();
    var b = $cf563b86f33a2bc2$var$uc(a, 0);
    if (0 === (b & 1)) return $cf563b86f33a2bc2$var$Ek(a, $cf563b86f33a2bc2$var$B()), null;
    var c = $cf563b86f33a2bc2$var$Jk(a, b);
    if (0 !== a.tag && 2 === c) {
        var d = $cf563b86f33a2bc2$var$xc(a);
        0 !== d && (b = d, c = $cf563b86f33a2bc2$var$Ok(a, d));
    }
    if (1 === c) throw c = $cf563b86f33a2bc2$var$qk, $cf563b86f33a2bc2$var$Lk(a, 0), $cf563b86f33a2bc2$var$Dk(a, b), $cf563b86f33a2bc2$var$Ek(a, $cf563b86f33a2bc2$var$B()), c;
    if (6 === c) throw Error($cf563b86f33a2bc2$var$p(345));
    a.finishedWork = a.current.alternate;
    a.finishedLanes = b;
    $cf563b86f33a2bc2$var$Qk(a, $cf563b86f33a2bc2$var$uk, $cf563b86f33a2bc2$var$vk);
    $cf563b86f33a2bc2$var$Ek(a, $cf563b86f33a2bc2$var$B());
    return null;
}
function $cf563b86f33a2bc2$var$Rk(a, b) {
    var c = $cf563b86f33a2bc2$var$K;
    $cf563b86f33a2bc2$var$K |= 1;
    try {
        return a(b);
    } finally{
        $cf563b86f33a2bc2$var$K = c, 0 === $cf563b86f33a2bc2$var$K && ($cf563b86f33a2bc2$var$Hj = $cf563b86f33a2bc2$var$B() + 500, $cf563b86f33a2bc2$var$fg && $cf563b86f33a2bc2$var$jg());
    }
}
function $cf563b86f33a2bc2$var$Sk(a) {
    null !== $cf563b86f33a2bc2$var$xk && 0 === $cf563b86f33a2bc2$var$xk.tag && 0 === ($cf563b86f33a2bc2$var$K & 6) && $cf563b86f33a2bc2$var$Ik();
    var b = $cf563b86f33a2bc2$var$K;
    $cf563b86f33a2bc2$var$K |= 1;
    var c = $cf563b86f33a2bc2$var$pk.transition, d = $cf563b86f33a2bc2$var$C;
    try {
        if ($cf563b86f33a2bc2$var$pk.transition = null, $cf563b86f33a2bc2$var$C = 1, a) return a();
    } finally{
        $cf563b86f33a2bc2$var$C = d, $cf563b86f33a2bc2$var$pk.transition = c, $cf563b86f33a2bc2$var$K = b, 0 === ($cf563b86f33a2bc2$var$K & 6) && $cf563b86f33a2bc2$var$jg();
    }
}
function $cf563b86f33a2bc2$var$Ij() {
    $cf563b86f33a2bc2$var$gj = $cf563b86f33a2bc2$var$fj.current;
    $cf563b86f33a2bc2$var$E($cf563b86f33a2bc2$var$fj);
}
function $cf563b86f33a2bc2$var$Lk(a, b) {
    a.finishedWork = null;
    a.finishedLanes = 0;
    var c = a.timeoutHandle;
    -1 !== c && (a.timeoutHandle = -1, $cf563b86f33a2bc2$var$Gf(c));
    if (null !== $cf563b86f33a2bc2$var$Y) for(c = $cf563b86f33a2bc2$var$Y.return; null !== c;){
        var d = c;
        $cf563b86f33a2bc2$var$wg(d);
        switch(d.tag){
            case 1:
                d = d.type.childContextTypes;
                null !== d && void 0 !== d && $cf563b86f33a2bc2$var$$f();
                break;
            case 3:
                $cf563b86f33a2bc2$var$Jh();
                $cf563b86f33a2bc2$var$E($cf563b86f33a2bc2$var$Wf);
                $cf563b86f33a2bc2$var$E($cf563b86f33a2bc2$var$H);
                $cf563b86f33a2bc2$var$Oh();
                break;
            case 5:
                $cf563b86f33a2bc2$var$Lh(d);
                break;
            case 4:
                $cf563b86f33a2bc2$var$Jh();
                break;
            case 13:
                $cf563b86f33a2bc2$var$E($cf563b86f33a2bc2$var$M);
                break;
            case 19:
                $cf563b86f33a2bc2$var$E($cf563b86f33a2bc2$var$M);
                break;
            case 10:
                $cf563b86f33a2bc2$var$Rg(d.type._context);
                break;
            case 22:
            case 23:
                $cf563b86f33a2bc2$var$Ij();
        }
        c = c.return;
    }
    $cf563b86f33a2bc2$var$R = a;
    $cf563b86f33a2bc2$var$Y = a = $cf563b86f33a2bc2$var$wh(a.current, null);
    $cf563b86f33a2bc2$var$Z = $cf563b86f33a2bc2$var$gj = b;
    $cf563b86f33a2bc2$var$T = 0;
    $cf563b86f33a2bc2$var$qk = null;
    $cf563b86f33a2bc2$var$sk = $cf563b86f33a2bc2$var$rk = $cf563b86f33a2bc2$var$hh = 0;
    $cf563b86f33a2bc2$var$uk = $cf563b86f33a2bc2$var$tk = null;
    if (null !== $cf563b86f33a2bc2$var$Wg) {
        for(b = 0; b < $cf563b86f33a2bc2$var$Wg.length; b++)if (c = $cf563b86f33a2bc2$var$Wg[b], d = c.interleaved, null !== d) {
            c.interleaved = null;
            var e = d.next, f = c.pending;
            if (null !== f) {
                var g = f.next;
                f.next = e;
                d.next = g;
            }
            c.pending = d;
        }
        $cf563b86f33a2bc2$var$Wg = null;
    }
    return a;
}
function $cf563b86f33a2bc2$var$Nk(a, b) {
    do {
        var c = $cf563b86f33a2bc2$var$Y;
        try {
            $cf563b86f33a2bc2$var$Qg();
            $cf563b86f33a2bc2$var$Ph.current = $cf563b86f33a2bc2$var$ai;
            if ($cf563b86f33a2bc2$var$Sh) {
                for(var d = $cf563b86f33a2bc2$var$N.memoizedState; null !== d;){
                    var e = d.queue;
                    null !== e && (e.pending = null);
                    d = d.next;
                }
                $cf563b86f33a2bc2$var$Sh = !1;
            }
            $cf563b86f33a2bc2$var$Rh = 0;
            $cf563b86f33a2bc2$var$P = $cf563b86f33a2bc2$var$O = $cf563b86f33a2bc2$var$N = null;
            $cf563b86f33a2bc2$var$Th = !1;
            $cf563b86f33a2bc2$var$Uh = 0;
            $cf563b86f33a2bc2$var$ok.current = null;
            if (null === c || null === c.return) {
                $cf563b86f33a2bc2$var$T = 1;
                $cf563b86f33a2bc2$var$qk = b;
                $cf563b86f33a2bc2$var$Y = null;
                break;
            }
            a: {
                var f = a, g = c.return, h = c, k = b;
                b = $cf563b86f33a2bc2$var$Z;
                h.flags |= 32768;
                if (null !== k && "object" === typeof k && "function" === typeof k.then) {
                    var l = k, m = h, q = m.tag;
                    if (0 === (m.mode & 1) && (0 === q || 11 === q || 15 === q)) {
                        var r = m.alternate;
                        r ? (m.updateQueue = r.updateQueue, m.memoizedState = r.memoizedState, m.lanes = r.lanes) : (m.updateQueue = null, m.memoizedState = null);
                    }
                    var y = $cf563b86f33a2bc2$var$Vi(g);
                    if (null !== y) {
                        y.flags &= -257;
                        $cf563b86f33a2bc2$var$Wi(y, g, h, f, b);
                        y.mode & 1 && $cf563b86f33a2bc2$var$Ti(f, l, b);
                        b = y;
                        k = l;
                        var n = b.updateQueue;
                        if (null === n) {
                            var t = new Set;
                            t.add(k);
                            b.updateQueue = t;
                        } else n.add(k);
                        break a;
                    } else {
                        if (0 === (b & 1)) {
                            $cf563b86f33a2bc2$var$Ti(f, l, b);
                            $cf563b86f33a2bc2$var$uj();
                            break a;
                        }
                        k = Error($cf563b86f33a2bc2$var$p(426));
                    }
                } else if ($cf563b86f33a2bc2$var$I && h.mode & 1) {
                    var J = $cf563b86f33a2bc2$var$Vi(g);
                    if (null !== J) {
                        0 === (J.flags & 65536) && (J.flags |= 256);
                        $cf563b86f33a2bc2$var$Wi(J, g, h, f, b);
                        $cf563b86f33a2bc2$var$Jg($cf563b86f33a2bc2$var$Ki(k, h));
                        break a;
                    }
                }
                f = k = $cf563b86f33a2bc2$var$Ki(k, h);
                4 !== $cf563b86f33a2bc2$var$T && ($cf563b86f33a2bc2$var$T = 2);
                null === $cf563b86f33a2bc2$var$tk ? $cf563b86f33a2bc2$var$tk = [
                    f
                ] : $cf563b86f33a2bc2$var$tk.push(f);
                f = g;
                do {
                    switch(f.tag){
                        case 3:
                            f.flags |= 65536;
                            b &= -b;
                            f.lanes |= b;
                            var x = $cf563b86f33a2bc2$var$Oi(f, k, b);
                            $cf563b86f33a2bc2$var$fh(f, x);
                            break a;
                        case 1:
                            h = k;
                            var w = f.type, u = f.stateNode;
                            if (0 === (f.flags & 128) && ("function" === typeof w.getDerivedStateFromError || null !== u && "function" === typeof u.componentDidCatch && (null === $cf563b86f33a2bc2$var$Si || !$cf563b86f33a2bc2$var$Si.has(u)))) {
                                f.flags |= 65536;
                                b &= -b;
                                f.lanes |= b;
                                var F = $cf563b86f33a2bc2$var$Ri(f, h, b);
                                $cf563b86f33a2bc2$var$fh(f, F);
                                break a;
                            }
                    }
                    f = f.return;
                }while (null !== f);
            }
            $cf563b86f33a2bc2$var$Tk(c);
        } catch (na) {
            b = na;
            $cf563b86f33a2bc2$var$Y === c && null !== c && ($cf563b86f33a2bc2$var$Y = c = c.return);
            continue;
        }
        break;
    }while (1);
}
function $cf563b86f33a2bc2$var$Kk() {
    var a = $cf563b86f33a2bc2$var$nk.current;
    $cf563b86f33a2bc2$var$nk.current = $cf563b86f33a2bc2$var$ai;
    return null === a ? $cf563b86f33a2bc2$var$ai : a;
}
function $cf563b86f33a2bc2$var$uj() {
    if (0 === $cf563b86f33a2bc2$var$T || 3 === $cf563b86f33a2bc2$var$T || 2 === $cf563b86f33a2bc2$var$T) $cf563b86f33a2bc2$var$T = 4;
    null === $cf563b86f33a2bc2$var$R || 0 === ($cf563b86f33a2bc2$var$hh & 268435455) && 0 === ($cf563b86f33a2bc2$var$rk & 268435455) || $cf563b86f33a2bc2$var$Dk($cf563b86f33a2bc2$var$R, $cf563b86f33a2bc2$var$Z);
}
function $cf563b86f33a2bc2$var$Jk(a, b) {
    var c = $cf563b86f33a2bc2$var$K;
    $cf563b86f33a2bc2$var$K |= 2;
    var d = $cf563b86f33a2bc2$var$Kk();
    if ($cf563b86f33a2bc2$var$R !== a || $cf563b86f33a2bc2$var$Z !== b) $cf563b86f33a2bc2$var$vk = null, $cf563b86f33a2bc2$var$Lk(a, b);
    for(;;)try {
        $cf563b86f33a2bc2$var$Uk();
        break;
    } catch (e) {
        $cf563b86f33a2bc2$var$Nk(a, e);
    }
    $cf563b86f33a2bc2$var$Qg();
    $cf563b86f33a2bc2$var$K = c;
    $cf563b86f33a2bc2$var$nk.current = d;
    if (null !== $cf563b86f33a2bc2$var$Y) throw Error($cf563b86f33a2bc2$var$p(261));
    $cf563b86f33a2bc2$var$R = null;
    $cf563b86f33a2bc2$var$Z = 0;
    return $cf563b86f33a2bc2$var$T;
}
function $cf563b86f33a2bc2$var$Uk() {
    for(; null !== $cf563b86f33a2bc2$var$Y;)$cf563b86f33a2bc2$var$Vk($cf563b86f33a2bc2$var$Y);
}
function $cf563b86f33a2bc2$var$Mk() {
    for(; null !== $cf563b86f33a2bc2$var$Y && !$cf563b86f33a2bc2$var$cc();)$cf563b86f33a2bc2$var$Vk($cf563b86f33a2bc2$var$Y);
}
function $cf563b86f33a2bc2$var$Vk(a) {
    var b = $cf563b86f33a2bc2$var$Wk(a.alternate, a, $cf563b86f33a2bc2$var$gj);
    a.memoizedProps = a.pendingProps;
    null === b ? $cf563b86f33a2bc2$var$Tk(a) : $cf563b86f33a2bc2$var$Y = b;
    $cf563b86f33a2bc2$var$ok.current = null;
}
function $cf563b86f33a2bc2$var$Tk(a) {
    var b = a;
    do {
        var c = b.alternate;
        a = b.return;
        if (0 === (b.flags & 32768)) {
            if (c = $cf563b86f33a2bc2$var$Fj(c, b, $cf563b86f33a2bc2$var$gj), null !== c) {
                $cf563b86f33a2bc2$var$Y = c;
                return;
            }
        } else {
            c = $cf563b86f33a2bc2$var$Jj(c, b);
            if (null !== c) {
                c.flags &= 32767;
                $cf563b86f33a2bc2$var$Y = c;
                return;
            }
            if (null !== a) a.flags |= 32768, a.subtreeFlags = 0, a.deletions = null;
            else {
                $cf563b86f33a2bc2$var$T = 6;
                $cf563b86f33a2bc2$var$Y = null;
                return;
            }
        }
        b = b.sibling;
        if (null !== b) {
            $cf563b86f33a2bc2$var$Y = b;
            return;
        }
        $cf563b86f33a2bc2$var$Y = b = a;
    }while (null !== b);
    0 === $cf563b86f33a2bc2$var$T && ($cf563b86f33a2bc2$var$T = 5);
}
function $cf563b86f33a2bc2$var$Qk(a, b, c) {
    var d = $cf563b86f33a2bc2$var$C, e = $cf563b86f33a2bc2$var$pk.transition;
    try {
        $cf563b86f33a2bc2$var$pk.transition = null, $cf563b86f33a2bc2$var$C = 1, $cf563b86f33a2bc2$var$Xk(a, b, c, d);
    } finally{
        $cf563b86f33a2bc2$var$pk.transition = e, $cf563b86f33a2bc2$var$C = d;
    }
    return null;
}
function $cf563b86f33a2bc2$var$Xk(a, b, c, d) {
    do $cf563b86f33a2bc2$var$Ik();
    while (null !== $cf563b86f33a2bc2$var$xk);
    if (0 !== ($cf563b86f33a2bc2$var$K & 6)) throw Error($cf563b86f33a2bc2$var$p(327));
    c = a.finishedWork;
    var e = a.finishedLanes;
    if (null === c) return null;
    a.finishedWork = null;
    a.finishedLanes = 0;
    if (c === a.current) throw Error($cf563b86f33a2bc2$var$p(177));
    a.callbackNode = null;
    a.callbackPriority = 0;
    var f = c.lanes | c.childLanes;
    $cf563b86f33a2bc2$var$Bc(a, f);
    a === $cf563b86f33a2bc2$var$R && ($cf563b86f33a2bc2$var$Y = $cf563b86f33a2bc2$var$R = null, $cf563b86f33a2bc2$var$Z = 0);
    0 === (c.subtreeFlags & 2064) && 0 === (c.flags & 2064) || $cf563b86f33a2bc2$var$wk || ($cf563b86f33a2bc2$var$wk = !0, $cf563b86f33a2bc2$var$Gk($cf563b86f33a2bc2$var$hc, function() {
        $cf563b86f33a2bc2$var$Ik();
        return null;
    }));
    f = 0 !== (c.flags & 15990);
    if (0 !== (c.subtreeFlags & 15990) || f) {
        f = $cf563b86f33a2bc2$var$pk.transition;
        $cf563b86f33a2bc2$var$pk.transition = null;
        var g = $cf563b86f33a2bc2$var$C;
        $cf563b86f33a2bc2$var$C = 1;
        var h = $cf563b86f33a2bc2$var$K;
        $cf563b86f33a2bc2$var$K |= 4;
        $cf563b86f33a2bc2$var$ok.current = null;
        $cf563b86f33a2bc2$var$Pj(a, c);
        $cf563b86f33a2bc2$var$ek(c, a);
        $cf563b86f33a2bc2$var$Oe($cf563b86f33a2bc2$var$Df);
        $cf563b86f33a2bc2$var$dd = !!$cf563b86f33a2bc2$var$Cf;
        $cf563b86f33a2bc2$var$Df = $cf563b86f33a2bc2$var$Cf = null;
        a.current = c;
        $cf563b86f33a2bc2$var$ik(c, a, e);
        $cf563b86f33a2bc2$var$dc();
        $cf563b86f33a2bc2$var$K = h;
        $cf563b86f33a2bc2$var$C = g;
        $cf563b86f33a2bc2$var$pk.transition = f;
    } else a.current = c;
    $cf563b86f33a2bc2$var$wk && ($cf563b86f33a2bc2$var$wk = !1, $cf563b86f33a2bc2$var$xk = a, $cf563b86f33a2bc2$var$yk = e);
    f = a.pendingLanes;
    0 === f && ($cf563b86f33a2bc2$var$Si = null);
    $cf563b86f33a2bc2$var$mc(c.stateNode, d);
    $cf563b86f33a2bc2$var$Ek(a, $cf563b86f33a2bc2$var$B());
    if (null !== b) for(d = a.onRecoverableError, c = 0; c < b.length; c++)e = b[c], d(e.value, {
        componentStack: e.stack,
        digest: e.digest
    });
    if ($cf563b86f33a2bc2$var$Pi) throw $cf563b86f33a2bc2$var$Pi = !1, a = $cf563b86f33a2bc2$var$Qi, $cf563b86f33a2bc2$var$Qi = null, a;
    0 !== ($cf563b86f33a2bc2$var$yk & 1) && 0 !== a.tag && $cf563b86f33a2bc2$var$Ik();
    f = a.pendingLanes;
    0 !== (f & 1) ? a === $cf563b86f33a2bc2$var$Ak ? $cf563b86f33a2bc2$var$zk++ : ($cf563b86f33a2bc2$var$zk = 0, $cf563b86f33a2bc2$var$Ak = a) : $cf563b86f33a2bc2$var$zk = 0;
    $cf563b86f33a2bc2$var$jg();
    return null;
}
function $cf563b86f33a2bc2$var$Ik() {
    if (null !== $cf563b86f33a2bc2$var$xk) {
        var a = $cf563b86f33a2bc2$var$Dc($cf563b86f33a2bc2$var$yk), b = $cf563b86f33a2bc2$var$pk.transition, c = $cf563b86f33a2bc2$var$C;
        try {
            $cf563b86f33a2bc2$var$pk.transition = null;
            $cf563b86f33a2bc2$var$C = 16 > a ? 16 : a;
            if (null === $cf563b86f33a2bc2$var$xk) var d = !1;
            else {
                a = $cf563b86f33a2bc2$var$xk;
                $cf563b86f33a2bc2$var$xk = null;
                $cf563b86f33a2bc2$var$yk = 0;
                if (0 !== ($cf563b86f33a2bc2$var$K & 6)) throw Error($cf563b86f33a2bc2$var$p(331));
                var e = $cf563b86f33a2bc2$var$K;
                $cf563b86f33a2bc2$var$K |= 4;
                for($cf563b86f33a2bc2$var$V = a.current; null !== $cf563b86f33a2bc2$var$V;){
                    var f = $cf563b86f33a2bc2$var$V, g = f.child;
                    if (0 !== ($cf563b86f33a2bc2$var$V.flags & 16)) {
                        var h = f.deletions;
                        if (null !== h) {
                            for(var k = 0; k < h.length; k++){
                                var l = h[k];
                                for($cf563b86f33a2bc2$var$V = l; null !== $cf563b86f33a2bc2$var$V;){
                                    var m = $cf563b86f33a2bc2$var$V;
                                    switch(m.tag){
                                        case 0:
                                        case 11:
                                        case 15:
                                            $cf563b86f33a2bc2$var$Qj(8, m, f);
                                    }
                                    var q = m.child;
                                    if (null !== q) q.return = m, $cf563b86f33a2bc2$var$V = q;
                                    else for(; null !== $cf563b86f33a2bc2$var$V;){
                                        m = $cf563b86f33a2bc2$var$V;
                                        var r = m.sibling, y = m.return;
                                        $cf563b86f33a2bc2$var$Tj(m);
                                        if (m === l) {
                                            $cf563b86f33a2bc2$var$V = null;
                                            break;
                                        }
                                        if (null !== r) {
                                            r.return = y;
                                            $cf563b86f33a2bc2$var$V = r;
                                            break;
                                        }
                                        $cf563b86f33a2bc2$var$V = y;
                                    }
                                }
                            }
                            var n = f.alternate;
                            if (null !== n) {
                                var t = n.child;
                                if (null !== t) {
                                    n.child = null;
                                    do {
                                        var J = t.sibling;
                                        t.sibling = null;
                                        t = J;
                                    }while (null !== t);
                                }
                            }
                            $cf563b86f33a2bc2$var$V = f;
                        }
                    }
                    if (0 !== (f.subtreeFlags & 2064) && null !== g) g.return = f, $cf563b86f33a2bc2$var$V = g;
                    else b: for(; null !== $cf563b86f33a2bc2$var$V;){
                        f = $cf563b86f33a2bc2$var$V;
                        if (0 !== (f.flags & 2048)) switch(f.tag){
                            case 0:
                            case 11:
                            case 15:
                                $cf563b86f33a2bc2$var$Qj(9, f, f.return);
                        }
                        var x = f.sibling;
                        if (null !== x) {
                            x.return = f.return;
                            $cf563b86f33a2bc2$var$V = x;
                            break b;
                        }
                        $cf563b86f33a2bc2$var$V = f.return;
                    }
                }
                var w = a.current;
                for($cf563b86f33a2bc2$var$V = w; null !== $cf563b86f33a2bc2$var$V;){
                    g = $cf563b86f33a2bc2$var$V;
                    var u = g.child;
                    if (0 !== (g.subtreeFlags & 2064) && null !== u) u.return = g, $cf563b86f33a2bc2$var$V = u;
                    else b: for(g = w; null !== $cf563b86f33a2bc2$var$V;){
                        h = $cf563b86f33a2bc2$var$V;
                        if (0 !== (h.flags & 2048)) try {
                            switch(h.tag){
                                case 0:
                                case 11:
                                case 15:
                                    $cf563b86f33a2bc2$var$Rj(9, h);
                            }
                        } catch (na) {
                            $cf563b86f33a2bc2$var$W(h, h.return, na);
                        }
                        if (h === g) {
                            $cf563b86f33a2bc2$var$V = null;
                            break b;
                        }
                        var F = h.sibling;
                        if (null !== F) {
                            F.return = h.return;
                            $cf563b86f33a2bc2$var$V = F;
                            break b;
                        }
                        $cf563b86f33a2bc2$var$V = h.return;
                    }
                }
                $cf563b86f33a2bc2$var$K = e;
                $cf563b86f33a2bc2$var$jg();
                if ($cf563b86f33a2bc2$var$lc && "function" === typeof $cf563b86f33a2bc2$var$lc.onPostCommitFiberRoot) try {
                    $cf563b86f33a2bc2$var$lc.onPostCommitFiberRoot($cf563b86f33a2bc2$var$kc, a);
                } catch (na) {}
                d = !0;
            }
            return d;
        } finally{
            $cf563b86f33a2bc2$var$C = c, $cf563b86f33a2bc2$var$pk.transition = b;
        }
    }
    return !1;
}
function $cf563b86f33a2bc2$var$Yk(a, b, c) {
    b = $cf563b86f33a2bc2$var$Ki(c, b);
    b = $cf563b86f33a2bc2$var$Oi(a, b, 1);
    a = $cf563b86f33a2bc2$var$dh(a, b, 1);
    b = $cf563b86f33a2bc2$var$L();
    null !== a && ($cf563b86f33a2bc2$var$Ac(a, 1, b), $cf563b86f33a2bc2$var$Ek(a, b));
}
function $cf563b86f33a2bc2$var$W(a, b, c) {
    if (3 === a.tag) $cf563b86f33a2bc2$var$Yk(a, a, c);
    else for(; null !== b;){
        if (3 === b.tag) {
            $cf563b86f33a2bc2$var$Yk(b, a, c);
            break;
        } else if (1 === b.tag) {
            var d = b.stateNode;
            if ("function" === typeof b.type.getDerivedStateFromError || "function" === typeof d.componentDidCatch && (null === $cf563b86f33a2bc2$var$Si || !$cf563b86f33a2bc2$var$Si.has(d))) {
                a = $cf563b86f33a2bc2$var$Ki(c, a);
                a = $cf563b86f33a2bc2$var$Ri(b, a, 1);
                b = $cf563b86f33a2bc2$var$dh(b, a, 1);
                a = $cf563b86f33a2bc2$var$L();
                null !== b && ($cf563b86f33a2bc2$var$Ac(b, 1, a), $cf563b86f33a2bc2$var$Ek(b, a));
                break;
            }
        }
        b = b.return;
    }
}
function $cf563b86f33a2bc2$var$Ui(a, b, c) {
    var d = a.pingCache;
    null !== d && d.delete(b);
    b = $cf563b86f33a2bc2$var$L();
    a.pingedLanes |= a.suspendedLanes & c;
    $cf563b86f33a2bc2$var$R === a && ($cf563b86f33a2bc2$var$Z & c) === c && (4 === $cf563b86f33a2bc2$var$T || 3 === $cf563b86f33a2bc2$var$T && ($cf563b86f33a2bc2$var$Z & 130023424) === $cf563b86f33a2bc2$var$Z && 500 > $cf563b86f33a2bc2$var$B() - $cf563b86f33a2bc2$var$gk ? $cf563b86f33a2bc2$var$Lk(a, 0) : $cf563b86f33a2bc2$var$sk |= c);
    $cf563b86f33a2bc2$var$Ek(a, b);
}
function $cf563b86f33a2bc2$var$Zk(a, b) {
    0 === b && (0 === (a.mode & 1) ? b = 1 : (b = $cf563b86f33a2bc2$var$sc, $cf563b86f33a2bc2$var$sc <<= 1, 0 === ($cf563b86f33a2bc2$var$sc & 130023424) && ($cf563b86f33a2bc2$var$sc = 4194304)));
    var c = $cf563b86f33a2bc2$var$L();
    a = $cf563b86f33a2bc2$var$Zg(a, b);
    null !== a && ($cf563b86f33a2bc2$var$Ac(a, b, c), $cf563b86f33a2bc2$var$Ek(a, c));
}
function $cf563b86f33a2bc2$var$vj(a) {
    var b = a.memoizedState, c = 0;
    null !== b && (c = b.retryLane);
    $cf563b86f33a2bc2$var$Zk(a, c);
}
function $cf563b86f33a2bc2$var$ck(a, b) {
    var c = 0;
    switch(a.tag){
        case 13:
            var d = a.stateNode;
            var e = a.memoizedState;
            null !== e && (c = e.retryLane);
            break;
        case 19:
            d = a.stateNode;
            break;
        default:
            throw Error($cf563b86f33a2bc2$var$p(314));
    }
    null !== d && d.delete(b);
    $cf563b86f33a2bc2$var$Zk(a, c);
}
var $cf563b86f33a2bc2$var$Wk;
$cf563b86f33a2bc2$var$Wk = function(a, b, c) {
    if (null !== a) {
        if (a.memoizedProps !== b.pendingProps || $cf563b86f33a2bc2$var$Wf.current) $cf563b86f33a2bc2$var$Ug = !0;
        else {
            if (0 === (a.lanes & c) && 0 === (b.flags & 128)) return $cf563b86f33a2bc2$var$Ug = !1, $cf563b86f33a2bc2$var$zj(a, b, c);
            $cf563b86f33a2bc2$var$Ug = 0 !== (a.flags & 131072) ? !0 : !1;
        }
    } else $cf563b86f33a2bc2$var$Ug = !1, $cf563b86f33a2bc2$var$I && 0 !== (b.flags & 1048576) && $cf563b86f33a2bc2$var$ug(b, $cf563b86f33a2bc2$var$ng, b.index);
    b.lanes = 0;
    switch(b.tag){
        case 2:
            var d = b.type;
            $cf563b86f33a2bc2$var$jj(a, b);
            a = b.pendingProps;
            var e = $cf563b86f33a2bc2$var$Yf(b, $cf563b86f33a2bc2$var$H.current);
            $cf563b86f33a2bc2$var$Tg(b, c);
            e = $cf563b86f33a2bc2$var$Xh(null, b, d, a, e, c);
            var f = $cf563b86f33a2bc2$var$bi();
            b.flags |= 1;
            "object" === typeof e && null !== e && "function" === typeof e.render && void 0 === e.$$typeof ? (b.tag = 1, b.memoizedState = null, b.updateQueue = null, $cf563b86f33a2bc2$var$Zf(d) ? (f = !0, $cf563b86f33a2bc2$var$cg(b)) : f = !1, b.memoizedState = null !== e.state && void 0 !== e.state ? e.state : null, $cf563b86f33a2bc2$var$ah(b), e.updater = $cf563b86f33a2bc2$var$nh, b.stateNode = e, e._reactInternals = b, $cf563b86f33a2bc2$var$rh(b, d, a, c), b = $cf563b86f33a2bc2$var$kj(null, b, d, !0, f, c)) : (b.tag = 0, $cf563b86f33a2bc2$var$I && f && $cf563b86f33a2bc2$var$vg(b), $cf563b86f33a2bc2$var$Yi(null, b, e, c), b = b.child);
            return b;
        case 16:
            d = b.elementType;
            a: {
                $cf563b86f33a2bc2$var$jj(a, b);
                a = b.pendingProps;
                e = d._init;
                d = e(d._payload);
                b.type = d;
                e = b.tag = $cf563b86f33a2bc2$var$$k(d);
                a = $cf563b86f33a2bc2$var$Lg(d, a);
                switch(e){
                    case 0:
                        b = $cf563b86f33a2bc2$var$dj(null, b, d, a, c);
                        break a;
                    case 1:
                        b = $cf563b86f33a2bc2$var$ij(null, b, d, a, c);
                        break a;
                    case 11:
                        b = $cf563b86f33a2bc2$var$Zi(null, b, d, a, c);
                        break a;
                    case 14:
                        b = $cf563b86f33a2bc2$var$aj(null, b, d, $cf563b86f33a2bc2$var$Lg(d.type, a), c);
                        break a;
                }
                throw Error($cf563b86f33a2bc2$var$p(306, d, ""));
            }
            return b;
        case 0:
            return d = b.type, e = b.pendingProps, e = b.elementType === d ? e : $cf563b86f33a2bc2$var$Lg(d, e), $cf563b86f33a2bc2$var$dj(a, b, d, e, c);
        case 1:
            return d = b.type, e = b.pendingProps, e = b.elementType === d ? e : $cf563b86f33a2bc2$var$Lg(d, e), $cf563b86f33a2bc2$var$ij(a, b, d, e, c);
        case 3:
            a: {
                $cf563b86f33a2bc2$var$lj(b);
                if (null === a) throw Error($cf563b86f33a2bc2$var$p(387));
                d = b.pendingProps;
                f = b.memoizedState;
                e = f.element;
                $cf563b86f33a2bc2$var$bh(a, b);
                $cf563b86f33a2bc2$var$gh(b, d, null, c);
                var g = b.memoizedState;
                d = g.element;
                if (f.isDehydrated) {
                    if (f = {
                        element: d,
                        isDehydrated: !1,
                        cache: g.cache,
                        pendingSuspenseBoundaries: g.pendingSuspenseBoundaries,
                        transitions: g.transitions
                    }, b.updateQueue.baseState = f, b.memoizedState = f, b.flags & 256) {
                        e = $cf563b86f33a2bc2$var$Ki(Error($cf563b86f33a2bc2$var$p(423)), b);
                        b = $cf563b86f33a2bc2$var$mj(a, b, d, c, e);
                        break a;
                    } else if (d !== e) {
                        e = $cf563b86f33a2bc2$var$Ki(Error($cf563b86f33a2bc2$var$p(424)), b);
                        b = $cf563b86f33a2bc2$var$mj(a, b, d, c, e);
                        break a;
                    } else for($cf563b86f33a2bc2$var$yg = $cf563b86f33a2bc2$var$Lf(b.stateNode.containerInfo.firstChild), $cf563b86f33a2bc2$var$xg = b, $cf563b86f33a2bc2$var$I = !0, $cf563b86f33a2bc2$var$zg = null, c = $cf563b86f33a2bc2$var$Ch(b, null, d, c), b.child = c; c;)c.flags = c.flags & -3 | 4096, c = c.sibling;
                } else {
                    $cf563b86f33a2bc2$var$Ig();
                    if (d === e) {
                        b = $cf563b86f33a2bc2$var$$i(a, b, c);
                        break a;
                    }
                    $cf563b86f33a2bc2$var$Yi(a, b, d, c);
                }
                b = b.child;
            }
            return b;
        case 5:
            return $cf563b86f33a2bc2$var$Kh(b), null === a && $cf563b86f33a2bc2$var$Eg(b), d = b.type, e = b.pendingProps, f = null !== a ? a.memoizedProps : null, g = e.children, $cf563b86f33a2bc2$var$Ef(d, e) ? g = null : null !== f && $cf563b86f33a2bc2$var$Ef(d, f) && (b.flags |= 32), $cf563b86f33a2bc2$var$hj(a, b), $cf563b86f33a2bc2$var$Yi(a, b, g, c), b.child;
        case 6:
            return null === a && $cf563b86f33a2bc2$var$Eg(b), null;
        case 13:
            return $cf563b86f33a2bc2$var$pj(a, b, c);
        case 4:
            return $cf563b86f33a2bc2$var$Ih(b, b.stateNode.containerInfo), d = b.pendingProps, null === a ? b.child = $cf563b86f33a2bc2$var$Bh(b, null, d, c) : $cf563b86f33a2bc2$var$Yi(a, b, d, c), b.child;
        case 11:
            return d = b.type, e = b.pendingProps, e = b.elementType === d ? e : $cf563b86f33a2bc2$var$Lg(d, e), $cf563b86f33a2bc2$var$Zi(a, b, d, e, c);
        case 7:
            return $cf563b86f33a2bc2$var$Yi(a, b, b.pendingProps, c), b.child;
        case 8:
            return $cf563b86f33a2bc2$var$Yi(a, b, b.pendingProps.children, c), b.child;
        case 12:
            return $cf563b86f33a2bc2$var$Yi(a, b, b.pendingProps.children, c), b.child;
        case 10:
            a: {
                d = b.type._context;
                e = b.pendingProps;
                f = b.memoizedProps;
                g = e.value;
                $cf563b86f33a2bc2$var$G($cf563b86f33a2bc2$var$Mg, d._currentValue);
                d._currentValue = g;
                if (null !== f) {
                    if ($cf563b86f33a2bc2$var$He(f.value, g)) {
                        if (f.children === e.children && !$cf563b86f33a2bc2$var$Wf.current) {
                            b = $cf563b86f33a2bc2$var$$i(a, b, c);
                            break a;
                        }
                    } else for(f = b.child, null !== f && (f.return = b); null !== f;){
                        var h = f.dependencies;
                        if (null !== h) {
                            g = f.child;
                            for(var k = h.firstContext; null !== k;){
                                if (k.context === d) {
                                    if (1 === f.tag) {
                                        k = $cf563b86f33a2bc2$var$ch(-1, c & -c);
                                        k.tag = 2;
                                        var l = f.updateQueue;
                                        if (null !== l) {
                                            l = l.shared;
                                            var m = l.pending;
                                            null === m ? k.next = k : (k.next = m.next, m.next = k);
                                            l.pending = k;
                                        }
                                    }
                                    f.lanes |= c;
                                    k = f.alternate;
                                    null !== k && (k.lanes |= c);
                                    $cf563b86f33a2bc2$var$Sg(f.return, c, b);
                                    h.lanes |= c;
                                    break;
                                }
                                k = k.next;
                            }
                        } else if (10 === f.tag) g = f.type === b.type ? null : f.child;
                        else if (18 === f.tag) {
                            g = f.return;
                            if (null === g) throw Error($cf563b86f33a2bc2$var$p(341));
                            g.lanes |= c;
                            h = g.alternate;
                            null !== h && (h.lanes |= c);
                            $cf563b86f33a2bc2$var$Sg(g, c, b);
                            g = f.sibling;
                        } else g = f.child;
                        if (null !== g) g.return = f;
                        else for(g = f; null !== g;){
                            if (g === b) {
                                g = null;
                                break;
                            }
                            f = g.sibling;
                            if (null !== f) {
                                f.return = g.return;
                                g = f;
                                break;
                            }
                            g = g.return;
                        }
                        f = g;
                    }
                }
                $cf563b86f33a2bc2$var$Yi(a, b, e.children, c);
                b = b.child;
            }
            return b;
        case 9:
            return e = b.type, d = b.pendingProps.children, $cf563b86f33a2bc2$var$Tg(b, c), e = $cf563b86f33a2bc2$var$Vg(e), d = d(e), b.flags |= 1, $cf563b86f33a2bc2$var$Yi(a, b, d, c), b.child;
        case 14:
            return d = b.type, e = $cf563b86f33a2bc2$var$Lg(d, b.pendingProps), e = $cf563b86f33a2bc2$var$Lg(d.type, e), $cf563b86f33a2bc2$var$aj(a, b, d, e, c);
        case 15:
            return $cf563b86f33a2bc2$var$cj(a, b, b.type, b.pendingProps, c);
        case 17:
            return d = b.type, e = b.pendingProps, e = b.elementType === d ? e : $cf563b86f33a2bc2$var$Lg(d, e), $cf563b86f33a2bc2$var$jj(a, b), b.tag = 1, $cf563b86f33a2bc2$var$Zf(d) ? (a = !0, $cf563b86f33a2bc2$var$cg(b)) : a = !1, $cf563b86f33a2bc2$var$Tg(b, c), $cf563b86f33a2bc2$var$ph(b, d, e), $cf563b86f33a2bc2$var$rh(b, d, e, c), $cf563b86f33a2bc2$var$kj(null, b, d, !0, a, c);
        case 19:
            return $cf563b86f33a2bc2$var$yj(a, b, c);
        case 22:
            return $cf563b86f33a2bc2$var$ej(a, b, c);
    }
    throw Error($cf563b86f33a2bc2$var$p(156, b.tag));
};
function $cf563b86f33a2bc2$var$Gk(a, b) {
    return $cf563b86f33a2bc2$var$ac(a, b);
}
function $cf563b86f33a2bc2$var$al(a, b, c, d) {
    this.tag = a;
    this.key = c;
    this.sibling = this.child = this.return = this.stateNode = this.type = this.elementType = null;
    this.index = 0;
    this.ref = null;
    this.pendingProps = b;
    this.dependencies = this.memoizedState = this.updateQueue = this.memoizedProps = null;
    this.mode = d;
    this.subtreeFlags = this.flags = 0;
    this.deletions = null;
    this.childLanes = this.lanes = 0;
    this.alternate = null;
}
function $cf563b86f33a2bc2$var$Bg(a, b, c, d) {
    return new $cf563b86f33a2bc2$var$al(a, b, c, d);
}
function $cf563b86f33a2bc2$var$bj(a) {
    a = a.prototype;
    return !(!a || !a.isReactComponent);
}
function $cf563b86f33a2bc2$var$$k(a) {
    if ("function" === typeof a) return $cf563b86f33a2bc2$var$bj(a) ? 1 : 0;
    if (void 0 !== a && null !== a) {
        a = a.$$typeof;
        if (a === $cf563b86f33a2bc2$var$Da) return 11;
        if (a === $cf563b86f33a2bc2$var$Ga) return 14;
    }
    return 2;
}
function $cf563b86f33a2bc2$var$wh(a, b) {
    var c = a.alternate;
    null === c ? (c = $cf563b86f33a2bc2$var$Bg(a.tag, b, a.key, a.mode), c.elementType = a.elementType, c.type = a.type, c.stateNode = a.stateNode, c.alternate = a, a.alternate = c) : (c.pendingProps = b, c.type = a.type, c.flags = 0, c.subtreeFlags = 0, c.deletions = null);
    c.flags = a.flags & 14680064;
    c.childLanes = a.childLanes;
    c.lanes = a.lanes;
    c.child = a.child;
    c.memoizedProps = a.memoizedProps;
    c.memoizedState = a.memoizedState;
    c.updateQueue = a.updateQueue;
    b = a.dependencies;
    c.dependencies = null === b ? null : {
        lanes: b.lanes,
        firstContext: b.firstContext
    };
    c.sibling = a.sibling;
    c.index = a.index;
    c.ref = a.ref;
    return c;
}
function $cf563b86f33a2bc2$var$yh(a, b, c, d, e, f) {
    var g = 2;
    d = a;
    if ("function" === typeof a) $cf563b86f33a2bc2$var$bj(a) && (g = 1);
    else if ("string" === typeof a) g = 5;
    else a: switch(a){
        case $cf563b86f33a2bc2$var$ya:
            return $cf563b86f33a2bc2$var$Ah(c.children, e, f, b);
        case $cf563b86f33a2bc2$var$za:
            g = 8;
            e |= 8;
            break;
        case $cf563b86f33a2bc2$var$Aa:
            return a = $cf563b86f33a2bc2$var$Bg(12, c, b, e | 2), a.elementType = $cf563b86f33a2bc2$var$Aa, a.lanes = f, a;
        case $cf563b86f33a2bc2$var$Ea:
            return a = $cf563b86f33a2bc2$var$Bg(13, c, b, e), a.elementType = $cf563b86f33a2bc2$var$Ea, a.lanes = f, a;
        case $cf563b86f33a2bc2$var$Fa:
            return a = $cf563b86f33a2bc2$var$Bg(19, c, b, e), a.elementType = $cf563b86f33a2bc2$var$Fa, a.lanes = f, a;
        case $cf563b86f33a2bc2$var$Ia:
            return $cf563b86f33a2bc2$var$qj(c, e, f, b);
        default:
            if ("object" === typeof a && null !== a) switch(a.$$typeof){
                case $cf563b86f33a2bc2$var$Ba:
                    g = 10;
                    break a;
                case $cf563b86f33a2bc2$var$Ca:
                    g = 9;
                    break a;
                case $cf563b86f33a2bc2$var$Da:
                    g = 11;
                    break a;
                case $cf563b86f33a2bc2$var$Ga:
                    g = 14;
                    break a;
                case $cf563b86f33a2bc2$var$Ha:
                    g = 16;
                    d = null;
                    break a;
            }
            throw Error($cf563b86f33a2bc2$var$p(130, null == a ? a : typeof a, ""));
    }
    b = $cf563b86f33a2bc2$var$Bg(g, c, b, e);
    b.elementType = a;
    b.type = d;
    b.lanes = f;
    return b;
}
function $cf563b86f33a2bc2$var$Ah(a, b, c, d) {
    a = $cf563b86f33a2bc2$var$Bg(7, a, d, b);
    a.lanes = c;
    return a;
}
function $cf563b86f33a2bc2$var$qj(a, b, c, d) {
    a = $cf563b86f33a2bc2$var$Bg(22, a, d, b);
    a.elementType = $cf563b86f33a2bc2$var$Ia;
    a.lanes = c;
    a.stateNode = {
        isHidden: !1
    };
    return a;
}
function $cf563b86f33a2bc2$var$xh(a, b, c) {
    a = $cf563b86f33a2bc2$var$Bg(6, a, null, b);
    a.lanes = c;
    return a;
}
function $cf563b86f33a2bc2$var$zh(a, b, c) {
    b = $cf563b86f33a2bc2$var$Bg(4, null !== a.children ? a.children : [], a.key, b);
    b.lanes = c;
    b.stateNode = {
        containerInfo: a.containerInfo,
        pendingChildren: null,
        implementation: a.implementation
    };
    return b;
}
function $cf563b86f33a2bc2$var$bl(a, b, c, d, e) {
    this.tag = b;
    this.containerInfo = a;
    this.finishedWork = this.pingCache = this.current = this.pendingChildren = null;
    this.timeoutHandle = -1;
    this.callbackNode = this.pendingContext = this.context = null;
    this.callbackPriority = 0;
    this.eventTimes = $cf563b86f33a2bc2$var$zc(0);
    this.expirationTimes = $cf563b86f33a2bc2$var$zc(-1);
    this.entangledLanes = this.finishedLanes = this.mutableReadLanes = this.expiredLanes = this.pingedLanes = this.suspendedLanes = this.pendingLanes = 0;
    this.entanglements = $cf563b86f33a2bc2$var$zc(0);
    this.identifierPrefix = d;
    this.onRecoverableError = e;
    this.mutableSourceEagerHydrationData = null;
}
function $cf563b86f33a2bc2$var$cl(a, b, c, d, e, f, g, h, k) {
    a = new $cf563b86f33a2bc2$var$bl(a, b, c, h, k);
    1 === b ? (b = 1, !0 === f && (b |= 8)) : b = 0;
    f = $cf563b86f33a2bc2$var$Bg(3, null, null, b);
    a.current = f;
    f.stateNode = a;
    f.memoizedState = {
        element: d,
        isDehydrated: c,
        cache: null,
        transitions: null,
        pendingSuspenseBoundaries: null
    };
    $cf563b86f33a2bc2$var$ah(f);
    return a;
}
function $cf563b86f33a2bc2$var$dl(a, b, c) {
    var d = 3 < arguments.length && void 0 !== arguments[3] ? arguments[3] : null;
    return {
        $$typeof: $cf563b86f33a2bc2$var$wa,
        key: null == d ? null : "" + d,
        children: a,
        containerInfo: b,
        implementation: c
    };
}
function $cf563b86f33a2bc2$var$el(a) {
    if (!a) return $cf563b86f33a2bc2$var$Vf;
    a = a._reactInternals;
    a: {
        if ($cf563b86f33a2bc2$var$Vb(a) !== a || 1 !== a.tag) throw Error($cf563b86f33a2bc2$var$p(170));
        var b = a;
        do {
            switch(b.tag){
                case 3:
                    b = b.stateNode.context;
                    break a;
                case 1:
                    if ($cf563b86f33a2bc2$var$Zf(b.type)) {
                        b = b.stateNode.__reactInternalMemoizedMergedChildContext;
                        break a;
                    }
            }
            b = b.return;
        }while (null !== b);
        throw Error($cf563b86f33a2bc2$var$p(171));
    }
    if (1 === a.tag) {
        var c = a.type;
        if ($cf563b86f33a2bc2$var$Zf(c)) return $cf563b86f33a2bc2$var$bg(a, c, b);
    }
    return b;
}
function $cf563b86f33a2bc2$var$fl(a, b, c, d, e, f, g, h, k) {
    a = $cf563b86f33a2bc2$var$cl(c, d, !0, a, e, f, g, h, k);
    a.context = $cf563b86f33a2bc2$var$el(null);
    c = a.current;
    d = $cf563b86f33a2bc2$var$L();
    e = $cf563b86f33a2bc2$var$lh(c);
    f = $cf563b86f33a2bc2$var$ch(d, e);
    f.callback = void 0 !== b && null !== b ? b : null;
    $cf563b86f33a2bc2$var$dh(c, f, e);
    a.current.lanes = e;
    $cf563b86f33a2bc2$var$Ac(a, e, d);
    $cf563b86f33a2bc2$var$Ek(a, d);
    return a;
}
function $cf563b86f33a2bc2$var$gl(a, b, c, d) {
    var e = b.current, f = $cf563b86f33a2bc2$var$L(), g = $cf563b86f33a2bc2$var$lh(e);
    c = $cf563b86f33a2bc2$var$el(c);
    null === b.context ? b.context = c : b.pendingContext = c;
    b = $cf563b86f33a2bc2$var$ch(f, g);
    b.payload = {
        element: a
    };
    d = void 0 === d ? null : d;
    null !== d && (b.callback = d);
    a = $cf563b86f33a2bc2$var$dh(e, b, g);
    null !== a && ($cf563b86f33a2bc2$var$mh(a, e, g, f), $cf563b86f33a2bc2$var$eh(a, e, g));
    return g;
}
function $cf563b86f33a2bc2$var$hl(a) {
    a = a.current;
    if (!a.child) return null;
    switch(a.child.tag){
        case 5:
            return a.child.stateNode;
        default:
            return a.child.stateNode;
    }
}
function $cf563b86f33a2bc2$var$il(a, b) {
    a = a.memoizedState;
    if (null !== a && null !== a.dehydrated) {
        var c = a.retryLane;
        a.retryLane = 0 !== c && c < b ? c : b;
    }
}
function $cf563b86f33a2bc2$var$jl(a, b) {
    $cf563b86f33a2bc2$var$il(a, b);
    (a = a.alternate) && $cf563b86f33a2bc2$var$il(a, b);
}
function $cf563b86f33a2bc2$var$kl() {
    return null;
}
var $cf563b86f33a2bc2$var$ll = "function" === typeof reportError ? reportError : function(a) {
    console.error(a);
};
function $cf563b86f33a2bc2$var$ml(a) {
    this._internalRoot = a;
}
$cf563b86f33a2bc2$var$nl.prototype.render = $cf563b86f33a2bc2$var$ml.prototype.render = function(a) {
    var b = this._internalRoot;
    if (null === b) throw Error($cf563b86f33a2bc2$var$p(409));
    $cf563b86f33a2bc2$var$gl(a, b, null, null);
};
$cf563b86f33a2bc2$var$nl.prototype.unmount = $cf563b86f33a2bc2$var$ml.prototype.unmount = function() {
    var a = this._internalRoot;
    if (null !== a) {
        this._internalRoot = null;
        var b = a.containerInfo;
        $cf563b86f33a2bc2$var$Sk(function() {
            $cf563b86f33a2bc2$var$gl(null, a, null, null);
        });
        b[$cf563b86f33a2bc2$var$uf] = null;
    }
};
function $cf563b86f33a2bc2$var$nl(a) {
    this._internalRoot = a;
}
$cf563b86f33a2bc2$var$nl.prototype.unstable_scheduleHydration = function(a) {
    if (a) {
        var b = $cf563b86f33a2bc2$var$Hc();
        a = {
            blockedOn: null,
            target: a,
            priority: b
        };
        for(var c = 0; c < $cf563b86f33a2bc2$var$Qc.length && 0 !== b && b < $cf563b86f33a2bc2$var$Qc[c].priority; c++);
        $cf563b86f33a2bc2$var$Qc.splice(c, 0, a);
        0 === c && $cf563b86f33a2bc2$var$Vc(a);
    }
};
function $cf563b86f33a2bc2$var$ol(a) {
    return !(!a || 1 !== a.nodeType && 9 !== a.nodeType && 11 !== a.nodeType);
}
function $cf563b86f33a2bc2$var$pl(a) {
    return !(!a || 1 !== a.nodeType && 9 !== a.nodeType && 11 !== a.nodeType && (8 !== a.nodeType || " react-mount-point-unstable " !== a.nodeValue));
}
function $cf563b86f33a2bc2$var$ql() {}
function $cf563b86f33a2bc2$var$rl(a, b, c, d, e) {
    if (e) {
        if ("function" === typeof d) {
            var f = d;
            d = function() {
                var a = $cf563b86f33a2bc2$var$hl(g);
                f.call(a);
            };
        }
        var g = $cf563b86f33a2bc2$var$fl(b, d, a, 0, null, !1, !1, "", $cf563b86f33a2bc2$var$ql);
        a._reactRootContainer = g;
        a[$cf563b86f33a2bc2$var$uf] = g.current;
        $cf563b86f33a2bc2$var$sf(8 === a.nodeType ? a.parentNode : a);
        $cf563b86f33a2bc2$var$Sk();
        return g;
    }
    for(; e = a.lastChild;)a.removeChild(e);
    if ("function" === typeof d) {
        var h = d;
        d = function() {
            var a = $cf563b86f33a2bc2$var$hl(k);
            h.call(a);
        };
    }
    var k = $cf563b86f33a2bc2$var$cl(a, 0, !1, null, null, !1, !1, "", $cf563b86f33a2bc2$var$ql);
    a._reactRootContainer = k;
    a[$cf563b86f33a2bc2$var$uf] = k.current;
    $cf563b86f33a2bc2$var$sf(8 === a.nodeType ? a.parentNode : a);
    $cf563b86f33a2bc2$var$Sk(function() {
        $cf563b86f33a2bc2$var$gl(b, k, c, d);
    });
    return k;
}
function $cf563b86f33a2bc2$var$sl(a, b, c, d, e) {
    var f = c._reactRootContainer;
    if (f) {
        var g = f;
        if ("function" === typeof e) {
            var h = e;
            e = function() {
                var a = $cf563b86f33a2bc2$var$hl(g);
                h.call(a);
            };
        }
        $cf563b86f33a2bc2$var$gl(b, g, a, e);
    } else g = $cf563b86f33a2bc2$var$rl(c, b, a, e, d);
    return $cf563b86f33a2bc2$var$hl(g);
}
$cf563b86f33a2bc2$var$Ec = function(a) {
    switch(a.tag){
        case 3:
            var b = a.stateNode;
            if (b.current.memoizedState.isDehydrated) {
                var c = $cf563b86f33a2bc2$var$tc(b.pendingLanes);
                0 !== c && ($cf563b86f33a2bc2$var$Cc(b, c | 1), $cf563b86f33a2bc2$var$Ek(b, $cf563b86f33a2bc2$var$B()), 0 === ($cf563b86f33a2bc2$var$K & 6) && ($cf563b86f33a2bc2$var$Hj = $cf563b86f33a2bc2$var$B() + 500, $cf563b86f33a2bc2$var$jg()));
            }
            break;
        case 13:
            $cf563b86f33a2bc2$var$Sk(function() {
                var b = $cf563b86f33a2bc2$var$Zg(a, 1);
                if (null !== b) {
                    var c = $cf563b86f33a2bc2$var$L();
                    $cf563b86f33a2bc2$var$mh(b, a, 1, c);
                }
            }), $cf563b86f33a2bc2$var$jl(a, 1);
    }
};
$cf563b86f33a2bc2$var$Fc = function(a) {
    if (13 === a.tag) {
        var b = $cf563b86f33a2bc2$var$Zg(a, 134217728);
        if (null !== b) {
            var c = $cf563b86f33a2bc2$var$L();
            $cf563b86f33a2bc2$var$mh(b, a, 134217728, c);
        }
        $cf563b86f33a2bc2$var$jl(a, 134217728);
    }
};
$cf563b86f33a2bc2$var$Gc = function(a) {
    if (13 === a.tag) {
        var b = $cf563b86f33a2bc2$var$lh(a), c = $cf563b86f33a2bc2$var$Zg(a, b);
        if (null !== c) {
            var d = $cf563b86f33a2bc2$var$L();
            $cf563b86f33a2bc2$var$mh(c, a, b, d);
        }
        $cf563b86f33a2bc2$var$jl(a, b);
    }
};
$cf563b86f33a2bc2$var$Hc = function() {
    return $cf563b86f33a2bc2$var$C;
};
$cf563b86f33a2bc2$var$Ic = function(a, b) {
    var c = $cf563b86f33a2bc2$var$C;
    try {
        return $cf563b86f33a2bc2$var$C = a, b();
    } finally{
        $cf563b86f33a2bc2$var$C = c;
    }
};
$cf563b86f33a2bc2$var$yb = function(a, b, c) {
    switch(b){
        case "input":
            $cf563b86f33a2bc2$var$bb(a, c);
            b = c.name;
            if ("radio" === c.type && null != b) {
                for(c = a; c.parentNode;)c = c.parentNode;
                c = c.querySelectorAll("input[name=" + JSON.stringify("" + b) + '][type="radio"]');
                for(b = 0; b < c.length; b++){
                    var d = c[b];
                    if (d !== a && d.form === a.form) {
                        var e = $cf563b86f33a2bc2$var$Db(d);
                        if (!e) throw Error($cf563b86f33a2bc2$var$p(90));
                        $cf563b86f33a2bc2$var$Wa(d);
                        $cf563b86f33a2bc2$var$bb(d, e);
                    }
                }
            }
            break;
        case "textarea":
            $cf563b86f33a2bc2$var$ib(a, c);
            break;
        case "select":
            b = c.value, null != b && $cf563b86f33a2bc2$var$fb(a, !!c.multiple, b, !1);
    }
};
$cf563b86f33a2bc2$var$Gb = $cf563b86f33a2bc2$var$Rk;
$cf563b86f33a2bc2$var$Hb = $cf563b86f33a2bc2$var$Sk;
var $cf563b86f33a2bc2$var$tl = {
    usingClientEntryPoint: !1,
    Events: [
        $cf563b86f33a2bc2$var$Cb,
        $cf563b86f33a2bc2$var$ue,
        $cf563b86f33a2bc2$var$Db,
        $cf563b86f33a2bc2$var$Eb,
        $cf563b86f33a2bc2$var$Fb,
        $cf563b86f33a2bc2$var$Rk
    ]
}, $cf563b86f33a2bc2$var$ul = {
    findFiberByHostInstance: $cf563b86f33a2bc2$var$Wc,
    bundleType: 0,
    version: "18.2.0",
    rendererPackageName: "react-dom"
};
var $cf563b86f33a2bc2$var$vl = {
    bundleType: $cf563b86f33a2bc2$var$ul.bundleType,
    version: $cf563b86f33a2bc2$var$ul.version,
    rendererPackageName: $cf563b86f33a2bc2$var$ul.rendererPackageName,
    rendererConfig: $cf563b86f33a2bc2$var$ul.rendererConfig,
    overrideHookState: null,
    overrideHookStateDeletePath: null,
    overrideHookStateRenamePath: null,
    overrideProps: null,
    overridePropsDeletePath: null,
    overridePropsRenamePath: null,
    setErrorHandler: null,
    setSuspenseHandler: null,
    scheduleUpdate: null,
    currentDispatcherRef: $cf563b86f33a2bc2$var$ua.ReactCurrentDispatcher,
    findHostInstanceByFiber: function(a) {
        a = $cf563b86f33a2bc2$var$Zb(a);
        return null === a ? null : a.stateNode;
    },
    findFiberByHostInstance: $cf563b86f33a2bc2$var$ul.findFiberByHostInstance || $cf563b86f33a2bc2$var$kl,
    findHostInstancesForRefresh: null,
    scheduleRefresh: null,
    scheduleRoot: null,
    setRefreshHandler: null,
    getCurrentFiber: null,
    reconcilerVersion: "18.2.0-next-9e3b772b8-20220608"
};
if ("undefined" !== typeof __REACT_DEVTOOLS_GLOBAL_HOOK__) {
    var $cf563b86f33a2bc2$var$wl = __REACT_DEVTOOLS_GLOBAL_HOOK__;
    if (!$cf563b86f33a2bc2$var$wl.isDisabled && $cf563b86f33a2bc2$var$wl.supportsFiber) try {
        $cf563b86f33a2bc2$var$kc = $cf563b86f33a2bc2$var$wl.inject($cf563b86f33a2bc2$var$vl), $cf563b86f33a2bc2$var$lc = $cf563b86f33a2bc2$var$wl;
    } catch (a) {}
}
$cf563b86f33a2bc2$export$ae55be85d98224ed = $cf563b86f33a2bc2$var$tl;
$cf563b86f33a2bc2$export$d39a5bbd09211389 = function(a, b) {
    var c = 2 < arguments.length && void 0 !== arguments[2] ? arguments[2] : null;
    if (!$cf563b86f33a2bc2$var$ol(b)) throw Error($cf563b86f33a2bc2$var$p(200));
    return $cf563b86f33a2bc2$var$dl(a, b, null, c);
};
$cf563b86f33a2bc2$export$882461b6382ed46c = function(a, b) {
    if (!$cf563b86f33a2bc2$var$ol(a)) throw Error($cf563b86f33a2bc2$var$p(299));
    var c = !1, d = "", e = $cf563b86f33a2bc2$var$ll;
    null !== b && void 0 !== b && (!0 === b.unstable_strictMode && (c = !0), void 0 !== b.identifierPrefix && (d = b.identifierPrefix), void 0 !== b.onRecoverableError && (e = b.onRecoverableError));
    b = $cf563b86f33a2bc2$var$cl(a, 1, !1, null, null, c, !1, d, e);
    a[$cf563b86f33a2bc2$var$uf] = b.current;
    $cf563b86f33a2bc2$var$sf(8 === a.nodeType ? a.parentNode : a);
    return new $cf563b86f33a2bc2$var$ml(b);
};
$cf563b86f33a2bc2$export$466bfc07425424d5 = function(a) {
    if (null == a) return null;
    if (1 === a.nodeType) return a;
    var b = a._reactInternals;
    if (void 0 === b) {
        if ("function" === typeof a.render) throw Error($cf563b86f33a2bc2$var$p(188));
        a = Object.keys(a).join(",");
        throw Error($cf563b86f33a2bc2$var$p(268, a));
    }
    a = $cf563b86f33a2bc2$var$Zb(b);
    a = null === a ? null : a.stateNode;
    return a;
};
$cf563b86f33a2bc2$export$cd75ccfd720a3cd4 = function(a) {
    return $cf563b86f33a2bc2$var$Sk(a);
};
$cf563b86f33a2bc2$export$fa8d919ba61d84db = function(a, b, c) {
    if (!$cf563b86f33a2bc2$var$pl(b)) throw Error($cf563b86f33a2bc2$var$p(200));
    return $cf563b86f33a2bc2$var$sl(null, a, b, !0, c);
};
$cf563b86f33a2bc2$export$757ceba2d55c277e = function(a, b, c) {
    if (!$cf563b86f33a2bc2$var$ol(a)) throw Error($cf563b86f33a2bc2$var$p(405));
    var d = null != c && c.hydratedSources || null, e = !1, f = "", g = $cf563b86f33a2bc2$var$ll;
    null !== c && void 0 !== c && (!0 === c.unstable_strictMode && (e = !0), void 0 !== c.identifierPrefix && (f = c.identifierPrefix), void 0 !== c.onRecoverableError && (g = c.onRecoverableError));
    b = $cf563b86f33a2bc2$var$fl(b, null, a, 1, null != c ? c : null, e, !1, f, g);
    a[$cf563b86f33a2bc2$var$uf] = b.current;
    $cf563b86f33a2bc2$var$sf(a);
    if (d) for(a = 0; a < d.length; a++)c = d[a], e = c._getVersion, e = e(c._source), null == b.mutableSourceEagerHydrationData ? b.mutableSourceEagerHydrationData = [
        c,
        e
    ] : b.mutableSourceEagerHydrationData.push(c, e);
    return new $cf563b86f33a2bc2$var$nl(b);
};
$cf563b86f33a2bc2$export$b3890eb0ae9dca99 = function(a, b, c) {
    if (!$cf563b86f33a2bc2$var$pl(b)) throw Error($cf563b86f33a2bc2$var$p(200));
    return $cf563b86f33a2bc2$var$sl(null, a, b, !1, c);
};
$cf563b86f33a2bc2$export$502457920280e6be = function(a) {
    if (!$cf563b86f33a2bc2$var$pl(a)) throw Error($cf563b86f33a2bc2$var$p(40));
    return a._reactRootContainer ? ($cf563b86f33a2bc2$var$Sk(function() {
        $cf563b86f33a2bc2$var$sl(null, null, a, !1, function() {
            a._reactRootContainer = null;
            a[$cf563b86f33a2bc2$var$uf] = null;
        });
    }), !0) : !1;
};
$cf563b86f33a2bc2$export$c78a37762a8d58e1 = $cf563b86f33a2bc2$var$Rk;
$cf563b86f33a2bc2$export$dc54d992c10e8a18 = function(a, b, c, d) {
    if (!$cf563b86f33a2bc2$var$pl(c)) throw Error($cf563b86f33a2bc2$var$p(200));
    if (null == a || void 0 === a._reactInternals) throw Error($cf563b86f33a2bc2$var$p(38));
    return $cf563b86f33a2bc2$var$sl(a, b, c, !1, d);
};
$cf563b86f33a2bc2$export$83d89fbfd8236492 = "18.2.0-next-9e3b772b8-20220608";

});
parcelRequire.register("aYOb9", function(module, exports) {
"use strict";

module.exports = (parcelRequire("lOTPV"));

});
parcelRequire.register("lOTPV", function(module, exports) {

$parcel$export(module.exports, "unstable_now", function () { return $fe299472ab10ed75$export$c4744153514ff05d; }, function (v) { return $fe299472ab10ed75$export$c4744153514ff05d = v; });
$parcel$export(module.exports, "unstable_IdlePriority", function () { return $fe299472ab10ed75$export$3e506c1ccc9cc1a7; }, function (v) { return $fe299472ab10ed75$export$3e506c1ccc9cc1a7 = v; });
$parcel$export(module.exports, "unstable_ImmediatePriority", function () { return $fe299472ab10ed75$export$e26fe2ed2fa76875; }, function (v) { return $fe299472ab10ed75$export$e26fe2ed2fa76875 = v; });
$parcel$export(module.exports, "unstable_LowPriority", function () { return $fe299472ab10ed75$export$502329bbf4b505b1; }, function (v) { return $fe299472ab10ed75$export$502329bbf4b505b1 = v; });
$parcel$export(module.exports, "unstable_NormalPriority", function () { return $fe299472ab10ed75$export$6e3807111c4874c4; }, function (v) { return $fe299472ab10ed75$export$6e3807111c4874c4 = v; });
$parcel$export(module.exports, "unstable_Profiling", function () { return $fe299472ab10ed75$export$c27134553091fb3a; }, function (v) { return $fe299472ab10ed75$export$c27134553091fb3a = v; });
$parcel$export(module.exports, "unstable_UserBlockingPriority", function () { return $fe299472ab10ed75$export$33ee1acdc04fd2a2; }, function (v) { return $fe299472ab10ed75$export$33ee1acdc04fd2a2 = v; });
$parcel$export(module.exports, "unstable_cancelCallback", function () { return $fe299472ab10ed75$export$b00a404bbd5edef2; }, function (v) { return $fe299472ab10ed75$export$b00a404bbd5edef2 = v; });
$parcel$export(module.exports, "unstable_continueExecution", function () { return $fe299472ab10ed75$export$8352ce38b91d0c62; }, function (v) { return $fe299472ab10ed75$export$8352ce38b91d0c62 = v; });
$parcel$export(module.exports, "unstable_forceFrameRate", function () { return $fe299472ab10ed75$export$d66a1c1c77bd778b; }, function (v) { return $fe299472ab10ed75$export$d66a1c1c77bd778b = v; });
$parcel$export(module.exports, "unstable_getCurrentPriorityLevel", function () { return $fe299472ab10ed75$export$d3dfb8e4810cb555; }, function (v) { return $fe299472ab10ed75$export$d3dfb8e4810cb555 = v; });
$parcel$export(module.exports, "unstable_getFirstCallbackNode", function () { return $fe299472ab10ed75$export$839f9183b0465a69; }, function (v) { return $fe299472ab10ed75$export$839f9183b0465a69 = v; });
$parcel$export(module.exports, "unstable_next", function () { return $fe299472ab10ed75$export$72fdf0e06517287b; }, function (v) { return $fe299472ab10ed75$export$72fdf0e06517287b = v; });
$parcel$export(module.exports, "unstable_pauseExecution", function () { return $fe299472ab10ed75$export$4b844e58a3e414b4; }, function (v) { return $fe299472ab10ed75$export$4b844e58a3e414b4 = v; });
$parcel$export(module.exports, "unstable_requestPaint", function () { return $fe299472ab10ed75$export$816d2913ae6b83b1; }, function (v) { return $fe299472ab10ed75$export$816d2913ae6b83b1 = v; });
$parcel$export(module.exports, "unstable_runWithPriority", function () { return $fe299472ab10ed75$export$61bcfe829111a1d0; }, function (v) { return $fe299472ab10ed75$export$61bcfe829111a1d0 = v; });
$parcel$export(module.exports, "unstable_scheduleCallback", function () { return $fe299472ab10ed75$export$7ee8c9beb337bc3f; }, function (v) { return $fe299472ab10ed75$export$7ee8c9beb337bc3f = v; });
$parcel$export(module.exports, "unstable_shouldYield", function () { return $fe299472ab10ed75$export$b5836b71941fa3ed; }, function (v) { return $fe299472ab10ed75$export$b5836b71941fa3ed = v; });
$parcel$export(module.exports, "unstable_wrapCallback", function () { return $fe299472ab10ed75$export$cf845f2c119da08a; }, function (v) { return $fe299472ab10ed75$export$cf845f2c119da08a = v; });
/**
 * @license React
 * scheduler.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ var $fe299472ab10ed75$export$c4744153514ff05d;
var $fe299472ab10ed75$export$3e506c1ccc9cc1a7;
var $fe299472ab10ed75$export$e26fe2ed2fa76875;
var $fe299472ab10ed75$export$502329bbf4b505b1;
var $fe299472ab10ed75$export$6e3807111c4874c4;
var $fe299472ab10ed75$export$c27134553091fb3a;
var $fe299472ab10ed75$export$33ee1acdc04fd2a2;
var $fe299472ab10ed75$export$b00a404bbd5edef2;
var $fe299472ab10ed75$export$8352ce38b91d0c62;
var $fe299472ab10ed75$export$d66a1c1c77bd778b;
var $fe299472ab10ed75$export$d3dfb8e4810cb555;
var $fe299472ab10ed75$export$839f9183b0465a69;
var $fe299472ab10ed75$export$72fdf0e06517287b;
var $fe299472ab10ed75$export$4b844e58a3e414b4;
var $fe299472ab10ed75$export$816d2913ae6b83b1;
var $fe299472ab10ed75$export$61bcfe829111a1d0;
var $fe299472ab10ed75$export$7ee8c9beb337bc3f;
var $fe299472ab10ed75$export$b5836b71941fa3ed;
var $fe299472ab10ed75$export$cf845f2c119da08a;
"use strict";
function $fe299472ab10ed75$var$f(a, b) {
    var c = a.length;
    a.push(b);
    a: for(; 0 < c;){
        var d = c - 1 >>> 1, e = a[d];
        if (0 < $fe299472ab10ed75$var$g(e, b)) a[d] = b, a[c] = e, c = d;
        else break a;
    }
}
function $fe299472ab10ed75$var$h(a) {
    return 0 === a.length ? null : a[0];
}
function $fe299472ab10ed75$var$k(a) {
    if (0 === a.length) return null;
    var b = a[0], c = a.pop();
    if (c !== b) {
        a[0] = c;
        a: for(var d = 0, e = a.length, w = e >>> 1; d < w;){
            var m = 2 * (d + 1) - 1, C = a[m], n = m + 1, x = a[n];
            if (0 > $fe299472ab10ed75$var$g(C, c)) n < e && 0 > $fe299472ab10ed75$var$g(x, C) ? (a[d] = x, a[n] = c, d = n) : (a[d] = C, a[m] = c, d = m);
            else if (n < e && 0 > $fe299472ab10ed75$var$g(x, c)) a[d] = x, a[n] = c, d = n;
            else break a;
        }
    }
    return b;
}
function $fe299472ab10ed75$var$g(a, b) {
    var c = a.sortIndex - b.sortIndex;
    return 0 !== c ? c : a.id - b.id;
}
if ("object" === typeof performance && "function" === typeof performance.now) {
    var $fe299472ab10ed75$var$l = performance;
    $fe299472ab10ed75$export$c4744153514ff05d = function() {
        return $fe299472ab10ed75$var$l.now();
    };
} else {
    var $fe299472ab10ed75$var$p = Date, $fe299472ab10ed75$var$q = $fe299472ab10ed75$var$p.now();
    $fe299472ab10ed75$export$c4744153514ff05d = function() {
        return $fe299472ab10ed75$var$p.now() - $fe299472ab10ed75$var$q;
    };
}
var $fe299472ab10ed75$var$r = [], $fe299472ab10ed75$var$t = [], $fe299472ab10ed75$var$u = 1, $fe299472ab10ed75$var$v = null, $fe299472ab10ed75$var$y = 3, $fe299472ab10ed75$var$z = !1, $fe299472ab10ed75$var$A = !1, $fe299472ab10ed75$var$B = !1, $fe299472ab10ed75$var$D = "function" === typeof setTimeout ? setTimeout : null, $fe299472ab10ed75$var$E = "function" === typeof clearTimeout ? clearTimeout : null, $fe299472ab10ed75$var$F = "undefined" !== typeof setImmediate ? setImmediate : null;
"undefined" !== typeof navigator && void 0 !== navigator.scheduling && void 0 !== navigator.scheduling.isInputPending && navigator.scheduling.isInputPending.bind(navigator.scheduling);
function $fe299472ab10ed75$var$G(a) {
    for(var b = $fe299472ab10ed75$var$h($fe299472ab10ed75$var$t); null !== b;){
        if (null === b.callback) $fe299472ab10ed75$var$k($fe299472ab10ed75$var$t);
        else if (b.startTime <= a) $fe299472ab10ed75$var$k($fe299472ab10ed75$var$t), b.sortIndex = b.expirationTime, $fe299472ab10ed75$var$f($fe299472ab10ed75$var$r, b);
        else break;
        b = $fe299472ab10ed75$var$h($fe299472ab10ed75$var$t);
    }
}
function $fe299472ab10ed75$var$H(a) {
    $fe299472ab10ed75$var$B = !1;
    $fe299472ab10ed75$var$G(a);
    if (!$fe299472ab10ed75$var$A) {
        if (null !== $fe299472ab10ed75$var$h($fe299472ab10ed75$var$r)) $fe299472ab10ed75$var$A = !0, $fe299472ab10ed75$var$I($fe299472ab10ed75$var$J);
        else {
            var b = $fe299472ab10ed75$var$h($fe299472ab10ed75$var$t);
            null !== b && $fe299472ab10ed75$var$K($fe299472ab10ed75$var$H, b.startTime - a);
        }
    }
}
function $fe299472ab10ed75$var$J(a, b) {
    $fe299472ab10ed75$var$A = !1;
    $fe299472ab10ed75$var$B && ($fe299472ab10ed75$var$B = !1, $fe299472ab10ed75$var$E($fe299472ab10ed75$var$L), $fe299472ab10ed75$var$L = -1);
    $fe299472ab10ed75$var$z = !0;
    var c = $fe299472ab10ed75$var$y;
    try {
        $fe299472ab10ed75$var$G(b);
        for($fe299472ab10ed75$var$v = $fe299472ab10ed75$var$h($fe299472ab10ed75$var$r); null !== $fe299472ab10ed75$var$v && (!($fe299472ab10ed75$var$v.expirationTime > b) || a && !$fe299472ab10ed75$var$M());){
            var d = $fe299472ab10ed75$var$v.callback;
            if ("function" === typeof d) {
                $fe299472ab10ed75$var$v.callback = null;
                $fe299472ab10ed75$var$y = $fe299472ab10ed75$var$v.priorityLevel;
                var e = d($fe299472ab10ed75$var$v.expirationTime <= b);
                b = $fe299472ab10ed75$export$c4744153514ff05d();
                "function" === typeof e ? $fe299472ab10ed75$var$v.callback = e : $fe299472ab10ed75$var$v === $fe299472ab10ed75$var$h($fe299472ab10ed75$var$r) && $fe299472ab10ed75$var$k($fe299472ab10ed75$var$r);
                $fe299472ab10ed75$var$G(b);
            } else $fe299472ab10ed75$var$k($fe299472ab10ed75$var$r);
            $fe299472ab10ed75$var$v = $fe299472ab10ed75$var$h($fe299472ab10ed75$var$r);
        }
        if (null !== $fe299472ab10ed75$var$v) var w = !0;
        else {
            var m = $fe299472ab10ed75$var$h($fe299472ab10ed75$var$t);
            null !== m && $fe299472ab10ed75$var$K($fe299472ab10ed75$var$H, m.startTime - b);
            w = !1;
        }
        return w;
    } finally{
        $fe299472ab10ed75$var$v = null, $fe299472ab10ed75$var$y = c, $fe299472ab10ed75$var$z = !1;
    }
}
var $fe299472ab10ed75$var$N = !1, $fe299472ab10ed75$var$O = null, $fe299472ab10ed75$var$L = -1, $fe299472ab10ed75$var$P = 5, $fe299472ab10ed75$var$Q = -1;
function $fe299472ab10ed75$var$M() {
    return $fe299472ab10ed75$export$c4744153514ff05d() - $fe299472ab10ed75$var$Q < $fe299472ab10ed75$var$P ? !1 : !0;
}
function $fe299472ab10ed75$var$R() {
    if (null !== $fe299472ab10ed75$var$O) {
        var a = $fe299472ab10ed75$export$c4744153514ff05d();
        $fe299472ab10ed75$var$Q = a;
        var b = !0;
        try {
            b = $fe299472ab10ed75$var$O(!0, a);
        } finally{
            b ? $fe299472ab10ed75$var$S() : ($fe299472ab10ed75$var$N = !1, $fe299472ab10ed75$var$O = null);
        }
    } else $fe299472ab10ed75$var$N = !1;
}
var $fe299472ab10ed75$var$S;
if ("function" === typeof $fe299472ab10ed75$var$F) $fe299472ab10ed75$var$S = function() {
    $fe299472ab10ed75$var$F($fe299472ab10ed75$var$R);
};
else if ("undefined" !== typeof MessageChannel) {
    var $fe299472ab10ed75$var$T = new MessageChannel, $fe299472ab10ed75$var$U = $fe299472ab10ed75$var$T.port2;
    $fe299472ab10ed75$var$T.port1.onmessage = $fe299472ab10ed75$var$R;
    $fe299472ab10ed75$var$S = function() {
        $fe299472ab10ed75$var$U.postMessage(null);
    };
} else $fe299472ab10ed75$var$S = function() {
    $fe299472ab10ed75$var$D($fe299472ab10ed75$var$R, 0);
};
function $fe299472ab10ed75$var$I(a) {
    $fe299472ab10ed75$var$O = a;
    $fe299472ab10ed75$var$N || ($fe299472ab10ed75$var$N = !0, $fe299472ab10ed75$var$S());
}
function $fe299472ab10ed75$var$K(a, b) {
    $fe299472ab10ed75$var$L = $fe299472ab10ed75$var$D(function() {
        a($fe299472ab10ed75$export$c4744153514ff05d());
    }, b);
}
$fe299472ab10ed75$export$3e506c1ccc9cc1a7 = 5;
$fe299472ab10ed75$export$e26fe2ed2fa76875 = 1;
$fe299472ab10ed75$export$502329bbf4b505b1 = 4;
$fe299472ab10ed75$export$6e3807111c4874c4 = 3;
$fe299472ab10ed75$export$c27134553091fb3a = null;
$fe299472ab10ed75$export$33ee1acdc04fd2a2 = 2;
$fe299472ab10ed75$export$b00a404bbd5edef2 = function(a) {
    a.callback = null;
};
$fe299472ab10ed75$export$8352ce38b91d0c62 = function() {
    $fe299472ab10ed75$var$A || $fe299472ab10ed75$var$z || ($fe299472ab10ed75$var$A = !0, $fe299472ab10ed75$var$I($fe299472ab10ed75$var$J));
};
$fe299472ab10ed75$export$d66a1c1c77bd778b = function(a) {
    0 > a || 125 < a ? console.error("forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported") : $fe299472ab10ed75$var$P = 0 < a ? Math.floor(1E3 / a) : 5;
};
$fe299472ab10ed75$export$d3dfb8e4810cb555 = function() {
    return $fe299472ab10ed75$var$y;
};
$fe299472ab10ed75$export$839f9183b0465a69 = function() {
    return $fe299472ab10ed75$var$h($fe299472ab10ed75$var$r);
};
$fe299472ab10ed75$export$72fdf0e06517287b = function(a) {
    switch($fe299472ab10ed75$var$y){
        case 1:
        case 2:
        case 3:
            var b = 3;
            break;
        default:
            b = $fe299472ab10ed75$var$y;
    }
    var c = $fe299472ab10ed75$var$y;
    $fe299472ab10ed75$var$y = b;
    try {
        return a();
    } finally{
        $fe299472ab10ed75$var$y = c;
    }
};
$fe299472ab10ed75$export$4b844e58a3e414b4 = function() {};
$fe299472ab10ed75$export$816d2913ae6b83b1 = function() {};
$fe299472ab10ed75$export$61bcfe829111a1d0 = function(a, b) {
    switch(a){
        case 1:
        case 2:
        case 3:
        case 4:
        case 5:
            break;
        default:
            a = 3;
    }
    var c = $fe299472ab10ed75$var$y;
    $fe299472ab10ed75$var$y = a;
    try {
        return b();
    } finally{
        $fe299472ab10ed75$var$y = c;
    }
};
$fe299472ab10ed75$export$7ee8c9beb337bc3f = function(a, b, c) {
    var d = $fe299472ab10ed75$export$c4744153514ff05d();
    "object" === typeof c && null !== c ? (c = c.delay, c = "number" === typeof c && 0 < c ? d + c : d) : c = d;
    switch(a){
        case 1:
            var e = -1;
            break;
        case 2:
            e = 250;
            break;
        case 5:
            e = 1073741823;
            break;
        case 4:
            e = 1E4;
            break;
        default:
            e = 5E3;
    }
    e = c + e;
    a = {
        id: $fe299472ab10ed75$var$u++,
        callback: b,
        priorityLevel: a,
        startTime: c,
        expirationTime: e,
        sortIndex: -1
    };
    c > d ? (a.sortIndex = c, $fe299472ab10ed75$var$f($fe299472ab10ed75$var$t, a), null === $fe299472ab10ed75$var$h($fe299472ab10ed75$var$r) && a === $fe299472ab10ed75$var$h($fe299472ab10ed75$var$t) && ($fe299472ab10ed75$var$B ? ($fe299472ab10ed75$var$E($fe299472ab10ed75$var$L), $fe299472ab10ed75$var$L = -1) : $fe299472ab10ed75$var$B = !0, $fe299472ab10ed75$var$K($fe299472ab10ed75$var$H, c - d))) : (a.sortIndex = e, $fe299472ab10ed75$var$f($fe299472ab10ed75$var$r, a), $fe299472ab10ed75$var$A || $fe299472ab10ed75$var$z || ($fe299472ab10ed75$var$A = !0, $fe299472ab10ed75$var$I($fe299472ab10ed75$var$J)));
    return a;
};
$fe299472ab10ed75$export$b5836b71941fa3ed = $fe299472ab10ed75$var$M;
$fe299472ab10ed75$export$cf845f2c119da08a = function(a) {
    var b = $fe299472ab10ed75$var$y;
    return function() {
        var c = $fe299472ab10ed75$var$y;
        $fe299472ab10ed75$var$y = b;
        try {
            return a.apply(this, arguments);
        } finally{
            $fe299472ab10ed75$var$y = c;
        }
    };
};

});



parcelRequire.register("1Qyl6", function(module, exports) {

$parcel$export(module.exports, "useSyncExternalStore", function () { return $158548de040647dc$export$306c0aa65ff9ec16; }, function (v) { return $158548de040647dc$export$306c0aa65ff9ec16 = v; });
/**
 * @license React
 * use-sync-external-store-shim.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ var $158548de040647dc$export$306c0aa65ff9ec16;
"use strict";

var $laauJ = parcelRequire("laauJ");
function $158548de040647dc$var$h(a, b) {
    return a === b && (0 !== a || 1 / a === 1 / b) || a !== a && b !== b;
}
var $158548de040647dc$var$k = "function" === typeof Object.is ? Object.is : $158548de040647dc$var$h, $158548de040647dc$var$l = $laauJ.useState, $158548de040647dc$var$m = $laauJ.useEffect, $158548de040647dc$var$n = $laauJ.useLayoutEffect, $158548de040647dc$var$p = $laauJ.useDebugValue;
function $158548de040647dc$var$q(a, b) {
    var d = b(), f = $158548de040647dc$var$l({
        inst: {
            value: d,
            getSnapshot: b
        }
    }), c = f[0].inst, g = f[1];
    $158548de040647dc$var$n(function() {
        c.value = d;
        c.getSnapshot = b;
        $158548de040647dc$var$r(c) && g({
            inst: c
        });
    }, [
        a,
        d,
        b
    ]);
    $158548de040647dc$var$m(function() {
        $158548de040647dc$var$r(c) && g({
            inst: c
        });
        return a(function() {
            $158548de040647dc$var$r(c) && g({
                inst: c
            });
        });
    }, [
        a
    ]);
    $158548de040647dc$var$p(d);
    return d;
}
function $158548de040647dc$var$r(a) {
    var b = a.getSnapshot;
    a = a.value;
    try {
        var d = b();
        return !$158548de040647dc$var$k(a, d);
    } catch (f) {
        return !0;
    }
}
function $158548de040647dc$var$t(a, b) {
    return b();
}
var $158548de040647dc$var$u = "undefined" === typeof window || "undefined" === typeof window.document || "undefined" === typeof window.document.createElement ? $158548de040647dc$var$t : $158548de040647dc$var$q;
$158548de040647dc$export$306c0aa65ff9ec16 = void 0 !== $laauJ.useSyncExternalStore ? $laauJ.useSyncExternalStore : $158548de040647dc$var$u;

});

parcelRequire.register("kNLNp", function(module, exports) {

$parcel$export(module.exports, "useSyncExternalStoreWithSelector", function () { return $f24d758385f80024$export$bf730a2d8bf68b42; }, function (v) { return $f24d758385f80024$export$bf730a2d8bf68b42 = v; });
/**
 * @license React
 * use-sync-external-store-shim/with-selector.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ var $f24d758385f80024$export$bf730a2d8bf68b42;
"use strict";

var $laauJ = parcelRequire("laauJ");

var $aQq7o = parcelRequire("aQq7o");
function $f24d758385f80024$var$p(a, b) {
    return a === b && (0 !== a || 1 / a === 1 / b) || a !== a && b !== b;
}
var $f24d758385f80024$var$q = "function" === typeof Object.is ? Object.is : $f24d758385f80024$var$p, $f24d758385f80024$var$r = $aQq7o.useSyncExternalStore, $f24d758385f80024$var$t = $laauJ.useRef, $f24d758385f80024$var$u = $laauJ.useEffect, $f24d758385f80024$var$v = $laauJ.useMemo, $f24d758385f80024$var$w = $laauJ.useDebugValue;
$f24d758385f80024$export$bf730a2d8bf68b42 = function(a, b, e, l, g) {
    var c = $f24d758385f80024$var$t(null);
    if (null === c.current) {
        var f = {
            hasValue: !1,
            value: null
        };
        c.current = f;
    } else f = c.current;
    c = $f24d758385f80024$var$v(function() {
        function a(a) {
            if (!c) {
                c = !0;
                d = a;
                a = l(a);
                if (void 0 !== g && f.hasValue) {
                    var b = f.value;
                    if (g(b, a)) return k = b;
                }
                return k = a;
            }
            b = k;
            if ($f24d758385f80024$var$q(d, a)) return b;
            var e = l(a);
            if (void 0 !== g && g(b, e)) return b;
            d = a;
            return k = e;
        }
        var c = !1, d, k, m = void 0 === e ? null : e;
        return [
            function() {
                return a(b());
            },
            null === m ? void 0 : function() {
                return a(m());
            }
        ];
    }, [
        b,
        e,
        l,
        g
    ]);
    var d = $f24d758385f80024$var$r(a, c[0], c[1]);
    $f24d758385f80024$var$u(function() {
        f.hasValue = !0;
        f.value = d;
    }, [
        d
    ]);
    $f24d758385f80024$var$w(d);
    return d;
};

});
parcelRequire.register("aQq7o", function(module, exports) {
"use strict";

module.exports = (parcelRequire("1Qyl6"));

});


parcelRequire.register("c6YG3", function(module, exports) {

$parcel$export(module.exports, "AsyncMode", function () { return $8d151cce37dd81f2$export$2b8d127b894957b9; }, function (v) { return $8d151cce37dd81f2$export$2b8d127b894957b9 = v; });
$parcel$export(module.exports, "ConcurrentMode", function () { return $8d151cce37dd81f2$export$cea3a54a6425200c; }, function (v) { return $8d151cce37dd81f2$export$cea3a54a6425200c = v; });
$parcel$export(module.exports, "ContextConsumer", function () { return $8d151cce37dd81f2$export$a7c73072b1a182ae; }, function (v) { return $8d151cce37dd81f2$export$a7c73072b1a182ae = v; });
$parcel$export(module.exports, "ContextProvider", function () { return $8d151cce37dd81f2$export$9f27bc3417b4524d; }, function (v) { return $8d151cce37dd81f2$export$9f27bc3417b4524d = v; });
$parcel$export(module.exports, "Element", function () { return $8d151cce37dd81f2$export$db77ccec0bb4ccac; }, function (v) { return $8d151cce37dd81f2$export$db77ccec0bb4ccac = v; });
$parcel$export(module.exports, "ForwardRef", function () { return $8d151cce37dd81f2$export$8392c0c9d3dcbd35; }, function (v) { return $8d151cce37dd81f2$export$8392c0c9d3dcbd35 = v; });
$parcel$export(module.exports, "Fragment", function () { return $8d151cce37dd81f2$export$ffb0004e005737fa; }, function (v) { return $8d151cce37dd81f2$export$ffb0004e005737fa = v; });
$parcel$export(module.exports, "Lazy", function () { return $8d151cce37dd81f2$export$b624eff549462981; }, function (v) { return $8d151cce37dd81f2$export$b624eff549462981 = v; });
$parcel$export(module.exports, "Memo", function () { return $8d151cce37dd81f2$export$7897aa7841a5380c; }, function (v) { return $8d151cce37dd81f2$export$7897aa7841a5380c = v; });
$parcel$export(module.exports, "Portal", function () { return $8d151cce37dd81f2$export$602eac185826482c; }, function (v) { return $8d151cce37dd81f2$export$602eac185826482c = v; });
$parcel$export(module.exports, "Profiler", function () { return $8d151cce37dd81f2$export$e2c29f18771995cb; }, function (v) { return $8d151cce37dd81f2$export$e2c29f18771995cb = v; });
$parcel$export(module.exports, "StrictMode", function () { return $8d151cce37dd81f2$export$5f8d39834fd61797; }, function (v) { return $8d151cce37dd81f2$export$5f8d39834fd61797 = v; });
$parcel$export(module.exports, "Suspense", function () { return $8d151cce37dd81f2$export$74bf444e3cd11ea5; }, function (v) { return $8d151cce37dd81f2$export$74bf444e3cd11ea5 = v; });
$parcel$export(module.exports, "isAsyncMode", function () { return $8d151cce37dd81f2$export$92387174baf9b227; }, function (v) { return $8d151cce37dd81f2$export$92387174baf9b227 = v; });
$parcel$export(module.exports, "isConcurrentMode", function () { return $8d151cce37dd81f2$export$ec112efeb987d9c6; }, function (v) { return $8d151cce37dd81f2$export$ec112efeb987d9c6 = v; });
$parcel$export(module.exports, "isContextConsumer", function () { return $8d151cce37dd81f2$export$b706b080d889d2c9; }, function (v) { return $8d151cce37dd81f2$export$b706b080d889d2c9 = v; });
$parcel$export(module.exports, "isContextProvider", function () { return $8d151cce37dd81f2$export$5be5a87408f70ddc; }, function (v) { return $8d151cce37dd81f2$export$5be5a87408f70ddc = v; });
$parcel$export(module.exports, "isElement", function () { return $8d151cce37dd81f2$export$45a5e7f76e0caa8d; }, function (v) { return $8d151cce37dd81f2$export$45a5e7f76e0caa8d = v; });
$parcel$export(module.exports, "isForwardRef", function () { return $8d151cce37dd81f2$export$455c2e768291efa6; }, function (v) { return $8d151cce37dd81f2$export$455c2e768291efa6 = v; });
$parcel$export(module.exports, "isFragment", function () { return $8d151cce37dd81f2$export$9522e17588c12572; }, function (v) { return $8d151cce37dd81f2$export$9522e17588c12572 = v; });
$parcel$export(module.exports, "isLazy", function () { return $8d151cce37dd81f2$export$2110ac352bb060b9; }, function (v) { return $8d151cce37dd81f2$export$2110ac352bb060b9 = v; });
$parcel$export(module.exports, "isMemo", function () { return $8d151cce37dd81f2$export$56885ab8b9c456ab; }, function (v) { return $8d151cce37dd81f2$export$56885ab8b9c456ab = v; });
$parcel$export(module.exports, "isPortal", function () { return $8d151cce37dd81f2$export$d927fcb6adf8f9de; }, function (v) { return $8d151cce37dd81f2$export$d927fcb6adf8f9de = v; });
$parcel$export(module.exports, "isProfiler", function () { return $8d151cce37dd81f2$export$b82d16f27459e05a; }, function (v) { return $8d151cce37dd81f2$export$b82d16f27459e05a = v; });
$parcel$export(module.exports, "isStrictMode", function () { return $8d151cce37dd81f2$export$522c17b4f5e123e8; }, function (v) { return $8d151cce37dd81f2$export$522c17b4f5e123e8 = v; });
$parcel$export(module.exports, "isSuspense", function () { return $8d151cce37dd81f2$export$1aabd8a0274ecfd6; }, function (v) { return $8d151cce37dd81f2$export$1aabd8a0274ecfd6 = v; });
$parcel$export(module.exports, "isValidElementType", function () { return $8d151cce37dd81f2$export$9b621391a187a31a; }, function (v) { return $8d151cce37dd81f2$export$9b621391a187a31a = v; });
$parcel$export(module.exports, "typeOf", function () { return $8d151cce37dd81f2$export$f5bbd400c2f4426f; }, function (v) { return $8d151cce37dd81f2$export$f5bbd400c2f4426f = v; });
/** @license React v16.13.1
 * react-is.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ var $8d151cce37dd81f2$export$2b8d127b894957b9;
var $8d151cce37dd81f2$export$cea3a54a6425200c;
var $8d151cce37dd81f2$export$a7c73072b1a182ae;
var $8d151cce37dd81f2$export$9f27bc3417b4524d;
var $8d151cce37dd81f2$export$db77ccec0bb4ccac;
var $8d151cce37dd81f2$export$8392c0c9d3dcbd35;
var $8d151cce37dd81f2$export$ffb0004e005737fa;
var $8d151cce37dd81f2$export$b624eff549462981;
var $8d151cce37dd81f2$export$7897aa7841a5380c;
var $8d151cce37dd81f2$export$602eac185826482c;
var $8d151cce37dd81f2$export$e2c29f18771995cb;
var $8d151cce37dd81f2$export$5f8d39834fd61797;
var $8d151cce37dd81f2$export$74bf444e3cd11ea5;
var $8d151cce37dd81f2$export$92387174baf9b227;
var $8d151cce37dd81f2$export$ec112efeb987d9c6;
var $8d151cce37dd81f2$export$b706b080d889d2c9;
var $8d151cce37dd81f2$export$5be5a87408f70ddc;
var $8d151cce37dd81f2$export$45a5e7f76e0caa8d;
var $8d151cce37dd81f2$export$455c2e768291efa6;
var $8d151cce37dd81f2$export$9522e17588c12572;
var $8d151cce37dd81f2$export$2110ac352bb060b9;
var $8d151cce37dd81f2$export$56885ab8b9c456ab;
var $8d151cce37dd81f2$export$d927fcb6adf8f9de;
var $8d151cce37dd81f2$export$b82d16f27459e05a;
var $8d151cce37dd81f2$export$522c17b4f5e123e8;
var $8d151cce37dd81f2$export$1aabd8a0274ecfd6;
var $8d151cce37dd81f2$export$9b621391a187a31a;
var $8d151cce37dd81f2$export$f5bbd400c2f4426f;
"use strict";
var $8d151cce37dd81f2$var$b = "function" === typeof Symbol && Symbol.for, $8d151cce37dd81f2$var$c = $8d151cce37dd81f2$var$b ? Symbol.for("react.element") : 60103, $8d151cce37dd81f2$var$d = $8d151cce37dd81f2$var$b ? Symbol.for("react.portal") : 60106, $8d151cce37dd81f2$var$e = $8d151cce37dd81f2$var$b ? Symbol.for("react.fragment") : 60107, $8d151cce37dd81f2$var$f = $8d151cce37dd81f2$var$b ? Symbol.for("react.strict_mode") : 60108, $8d151cce37dd81f2$var$g = $8d151cce37dd81f2$var$b ? Symbol.for("react.profiler") : 60114, $8d151cce37dd81f2$var$h = $8d151cce37dd81f2$var$b ? Symbol.for("react.provider") : 60109, $8d151cce37dd81f2$var$k = $8d151cce37dd81f2$var$b ? Symbol.for("react.context") : 60110, $8d151cce37dd81f2$var$l = $8d151cce37dd81f2$var$b ? Symbol.for("react.async_mode") : 60111, $8d151cce37dd81f2$var$m = $8d151cce37dd81f2$var$b ? Symbol.for("react.concurrent_mode") : 60111, $8d151cce37dd81f2$var$n = $8d151cce37dd81f2$var$b ? Symbol.for("react.forward_ref") : 60112, $8d151cce37dd81f2$var$p = $8d151cce37dd81f2$var$b ? Symbol.for("react.suspense") : 60113, $8d151cce37dd81f2$var$q = $8d151cce37dd81f2$var$b ? Symbol.for("react.suspense_list") : 60120, $8d151cce37dd81f2$var$r = $8d151cce37dd81f2$var$b ? Symbol.for("react.memo") : 60115, $8d151cce37dd81f2$var$t = $8d151cce37dd81f2$var$b ? Symbol.for("react.lazy") : 60116, $8d151cce37dd81f2$var$v = $8d151cce37dd81f2$var$b ? Symbol.for("react.block") : 60121, $8d151cce37dd81f2$var$w = $8d151cce37dd81f2$var$b ? Symbol.for("react.fundamental") : 60117, $8d151cce37dd81f2$var$x = $8d151cce37dd81f2$var$b ? Symbol.for("react.responder") : 60118, $8d151cce37dd81f2$var$y = $8d151cce37dd81f2$var$b ? Symbol.for("react.scope") : 60119;
function $8d151cce37dd81f2$var$z(a) {
    if ("object" === typeof a && null !== a) {
        var u = a.$$typeof;
        switch(u){
            case $8d151cce37dd81f2$var$c:
                switch(a = a.type, a){
                    case $8d151cce37dd81f2$var$l:
                    case $8d151cce37dd81f2$var$m:
                    case $8d151cce37dd81f2$var$e:
                    case $8d151cce37dd81f2$var$g:
                    case $8d151cce37dd81f2$var$f:
                    case $8d151cce37dd81f2$var$p:
                        return a;
                    default:
                        switch(a = a && a.$$typeof, a){
                            case $8d151cce37dd81f2$var$k:
                            case $8d151cce37dd81f2$var$n:
                            case $8d151cce37dd81f2$var$t:
                            case $8d151cce37dd81f2$var$r:
                            case $8d151cce37dd81f2$var$h:
                                return a;
                            default:
                                return u;
                        }
                }
            case $8d151cce37dd81f2$var$d:
                return u;
        }
    }
}
function $8d151cce37dd81f2$var$A(a) {
    return $8d151cce37dd81f2$var$z(a) === $8d151cce37dd81f2$var$m;
}
$8d151cce37dd81f2$export$2b8d127b894957b9 = $8d151cce37dd81f2$var$l;
$8d151cce37dd81f2$export$cea3a54a6425200c = $8d151cce37dd81f2$var$m;
$8d151cce37dd81f2$export$a7c73072b1a182ae = $8d151cce37dd81f2$var$k;
$8d151cce37dd81f2$export$9f27bc3417b4524d = $8d151cce37dd81f2$var$h;
$8d151cce37dd81f2$export$db77ccec0bb4ccac = $8d151cce37dd81f2$var$c;
$8d151cce37dd81f2$export$8392c0c9d3dcbd35 = $8d151cce37dd81f2$var$n;
$8d151cce37dd81f2$export$ffb0004e005737fa = $8d151cce37dd81f2$var$e;
$8d151cce37dd81f2$export$b624eff549462981 = $8d151cce37dd81f2$var$t;
$8d151cce37dd81f2$export$7897aa7841a5380c = $8d151cce37dd81f2$var$r;
$8d151cce37dd81f2$export$602eac185826482c = $8d151cce37dd81f2$var$d;
$8d151cce37dd81f2$export$e2c29f18771995cb = $8d151cce37dd81f2$var$g;
$8d151cce37dd81f2$export$5f8d39834fd61797 = $8d151cce37dd81f2$var$f;
$8d151cce37dd81f2$export$74bf444e3cd11ea5 = $8d151cce37dd81f2$var$p;
$8d151cce37dd81f2$export$92387174baf9b227 = function(a) {
    return $8d151cce37dd81f2$var$A(a) || $8d151cce37dd81f2$var$z(a) === $8d151cce37dd81f2$var$l;
};
$8d151cce37dd81f2$export$ec112efeb987d9c6 = $8d151cce37dd81f2$var$A;
$8d151cce37dd81f2$export$b706b080d889d2c9 = function(a) {
    return $8d151cce37dd81f2$var$z(a) === $8d151cce37dd81f2$var$k;
};
$8d151cce37dd81f2$export$5be5a87408f70ddc = function(a) {
    return $8d151cce37dd81f2$var$z(a) === $8d151cce37dd81f2$var$h;
};
$8d151cce37dd81f2$export$45a5e7f76e0caa8d = function(a) {
    return "object" === typeof a && null !== a && a.$$typeof === $8d151cce37dd81f2$var$c;
};
$8d151cce37dd81f2$export$455c2e768291efa6 = function(a) {
    return $8d151cce37dd81f2$var$z(a) === $8d151cce37dd81f2$var$n;
};
$8d151cce37dd81f2$export$9522e17588c12572 = function(a) {
    return $8d151cce37dd81f2$var$z(a) === $8d151cce37dd81f2$var$e;
};
$8d151cce37dd81f2$export$2110ac352bb060b9 = function(a) {
    return $8d151cce37dd81f2$var$z(a) === $8d151cce37dd81f2$var$t;
};
$8d151cce37dd81f2$export$56885ab8b9c456ab = function(a) {
    return $8d151cce37dd81f2$var$z(a) === $8d151cce37dd81f2$var$r;
};
$8d151cce37dd81f2$export$d927fcb6adf8f9de = function(a) {
    return $8d151cce37dd81f2$var$z(a) === $8d151cce37dd81f2$var$d;
};
$8d151cce37dd81f2$export$b82d16f27459e05a = function(a) {
    return $8d151cce37dd81f2$var$z(a) === $8d151cce37dd81f2$var$g;
};
$8d151cce37dd81f2$export$522c17b4f5e123e8 = function(a) {
    return $8d151cce37dd81f2$var$z(a) === $8d151cce37dd81f2$var$f;
};
$8d151cce37dd81f2$export$1aabd8a0274ecfd6 = function(a) {
    return $8d151cce37dd81f2$var$z(a) === $8d151cce37dd81f2$var$p;
};
$8d151cce37dd81f2$export$9b621391a187a31a = function(a) {
    return "string" === typeof a || "function" === typeof a || a === $8d151cce37dd81f2$var$e || a === $8d151cce37dd81f2$var$m || a === $8d151cce37dd81f2$var$g || a === $8d151cce37dd81f2$var$f || a === $8d151cce37dd81f2$var$p || a === $8d151cce37dd81f2$var$q || "object" === typeof a && null !== a && (a.$$typeof === $8d151cce37dd81f2$var$t || a.$$typeof === $8d151cce37dd81f2$var$r || a.$$typeof === $8d151cce37dd81f2$var$h || a.$$typeof === $8d151cce37dd81f2$var$k || a.$$typeof === $8d151cce37dd81f2$var$n || a.$$typeof === $8d151cce37dd81f2$var$w || a.$$typeof === $8d151cce37dd81f2$var$x || a.$$typeof === $8d151cce37dd81f2$var$y || a.$$typeof === $8d151cce37dd81f2$var$v);
};
$8d151cce37dd81f2$export$f5bbd400c2f4426f = $8d151cce37dd81f2$var$z;

});

parcelRequire.register("elmqr", function(module, exports) {

$parcel$export(module.exports, "ContextConsumer", function () { return $02b1e0b5fde6973c$export$a7c73072b1a182ae; }, function (v) { return $02b1e0b5fde6973c$export$a7c73072b1a182ae = v; });
$parcel$export(module.exports, "ContextProvider", function () { return $02b1e0b5fde6973c$export$9f27bc3417b4524d; }, function (v) { return $02b1e0b5fde6973c$export$9f27bc3417b4524d = v; });
$parcel$export(module.exports, "Element", function () { return $02b1e0b5fde6973c$export$db77ccec0bb4ccac; }, function (v) { return $02b1e0b5fde6973c$export$db77ccec0bb4ccac = v; });
$parcel$export(module.exports, "ForwardRef", function () { return $02b1e0b5fde6973c$export$8392c0c9d3dcbd35; }, function (v) { return $02b1e0b5fde6973c$export$8392c0c9d3dcbd35 = v; });
$parcel$export(module.exports, "Fragment", function () { return $02b1e0b5fde6973c$export$ffb0004e005737fa; }, function (v) { return $02b1e0b5fde6973c$export$ffb0004e005737fa = v; });
$parcel$export(module.exports, "Lazy", function () { return $02b1e0b5fde6973c$export$b624eff549462981; }, function (v) { return $02b1e0b5fde6973c$export$b624eff549462981 = v; });
$parcel$export(module.exports, "Memo", function () { return $02b1e0b5fde6973c$export$7897aa7841a5380c; }, function (v) { return $02b1e0b5fde6973c$export$7897aa7841a5380c = v; });
$parcel$export(module.exports, "Portal", function () { return $02b1e0b5fde6973c$export$602eac185826482c; }, function (v) { return $02b1e0b5fde6973c$export$602eac185826482c = v; });
$parcel$export(module.exports, "Profiler", function () { return $02b1e0b5fde6973c$export$e2c29f18771995cb; }, function (v) { return $02b1e0b5fde6973c$export$e2c29f18771995cb = v; });
$parcel$export(module.exports, "StrictMode", function () { return $02b1e0b5fde6973c$export$5f8d39834fd61797; }, function (v) { return $02b1e0b5fde6973c$export$5f8d39834fd61797 = v; });
$parcel$export(module.exports, "Suspense", function () { return $02b1e0b5fde6973c$export$74bf444e3cd11ea5; }, function (v) { return $02b1e0b5fde6973c$export$74bf444e3cd11ea5 = v; });
$parcel$export(module.exports, "SuspenseList", function () { return $02b1e0b5fde6973c$export$998bcd577473dd93; }, function (v) { return $02b1e0b5fde6973c$export$998bcd577473dd93 = v; });
$parcel$export(module.exports, "isAsyncMode", function () { return $02b1e0b5fde6973c$export$92387174baf9b227; }, function (v) { return $02b1e0b5fde6973c$export$92387174baf9b227 = v; });
$parcel$export(module.exports, "isConcurrentMode", function () { return $02b1e0b5fde6973c$export$ec112efeb987d9c6; }, function (v) { return $02b1e0b5fde6973c$export$ec112efeb987d9c6 = v; });
$parcel$export(module.exports, "isContextConsumer", function () { return $02b1e0b5fde6973c$export$b706b080d889d2c9; }, function (v) { return $02b1e0b5fde6973c$export$b706b080d889d2c9 = v; });
$parcel$export(module.exports, "isContextProvider", function () { return $02b1e0b5fde6973c$export$5be5a87408f70ddc; }, function (v) { return $02b1e0b5fde6973c$export$5be5a87408f70ddc = v; });
$parcel$export(module.exports, "isElement", function () { return $02b1e0b5fde6973c$export$45a5e7f76e0caa8d; }, function (v) { return $02b1e0b5fde6973c$export$45a5e7f76e0caa8d = v; });
$parcel$export(module.exports, "isForwardRef", function () { return $02b1e0b5fde6973c$export$455c2e768291efa6; }, function (v) { return $02b1e0b5fde6973c$export$455c2e768291efa6 = v; });
$parcel$export(module.exports, "isFragment", function () { return $02b1e0b5fde6973c$export$9522e17588c12572; }, function (v) { return $02b1e0b5fde6973c$export$9522e17588c12572 = v; });
$parcel$export(module.exports, "isLazy", function () { return $02b1e0b5fde6973c$export$2110ac352bb060b9; }, function (v) { return $02b1e0b5fde6973c$export$2110ac352bb060b9 = v; });
$parcel$export(module.exports, "isMemo", function () { return $02b1e0b5fde6973c$export$56885ab8b9c456ab; }, function (v) { return $02b1e0b5fde6973c$export$56885ab8b9c456ab = v; });
$parcel$export(module.exports, "isPortal", function () { return $02b1e0b5fde6973c$export$d927fcb6adf8f9de; }, function (v) { return $02b1e0b5fde6973c$export$d927fcb6adf8f9de = v; });
$parcel$export(module.exports, "isProfiler", function () { return $02b1e0b5fde6973c$export$b82d16f27459e05a; }, function (v) { return $02b1e0b5fde6973c$export$b82d16f27459e05a = v; });
$parcel$export(module.exports, "isStrictMode", function () { return $02b1e0b5fde6973c$export$522c17b4f5e123e8; }, function (v) { return $02b1e0b5fde6973c$export$522c17b4f5e123e8 = v; });
$parcel$export(module.exports, "isSuspense", function () { return $02b1e0b5fde6973c$export$1aabd8a0274ecfd6; }, function (v) { return $02b1e0b5fde6973c$export$1aabd8a0274ecfd6 = v; });
$parcel$export(module.exports, "isSuspenseList", function () { return $02b1e0b5fde6973c$export$3d6c20d97e46b957; }, function (v) { return $02b1e0b5fde6973c$export$3d6c20d97e46b957 = v; });
$parcel$export(module.exports, "isValidElementType", function () { return $02b1e0b5fde6973c$export$9b621391a187a31a; }, function (v) { return $02b1e0b5fde6973c$export$9b621391a187a31a = v; });
$parcel$export(module.exports, "typeOf", function () { return $02b1e0b5fde6973c$export$f5bbd400c2f4426f; }, function (v) { return $02b1e0b5fde6973c$export$f5bbd400c2f4426f = v; });
/**
 * @license React
 * react-is.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ var $02b1e0b5fde6973c$export$a7c73072b1a182ae;
var $02b1e0b5fde6973c$export$9f27bc3417b4524d;
var $02b1e0b5fde6973c$export$db77ccec0bb4ccac;
var $02b1e0b5fde6973c$export$8392c0c9d3dcbd35;
var $02b1e0b5fde6973c$export$ffb0004e005737fa;
var $02b1e0b5fde6973c$export$b624eff549462981;
var $02b1e0b5fde6973c$export$7897aa7841a5380c;
var $02b1e0b5fde6973c$export$602eac185826482c;
var $02b1e0b5fde6973c$export$e2c29f18771995cb;
var $02b1e0b5fde6973c$export$5f8d39834fd61797;
var $02b1e0b5fde6973c$export$74bf444e3cd11ea5;
var $02b1e0b5fde6973c$export$998bcd577473dd93;
var $02b1e0b5fde6973c$export$92387174baf9b227;
var $02b1e0b5fde6973c$export$ec112efeb987d9c6;
var $02b1e0b5fde6973c$export$b706b080d889d2c9;
var $02b1e0b5fde6973c$export$5be5a87408f70ddc;
var $02b1e0b5fde6973c$export$45a5e7f76e0caa8d;
var $02b1e0b5fde6973c$export$455c2e768291efa6;
var $02b1e0b5fde6973c$export$9522e17588c12572;
var $02b1e0b5fde6973c$export$2110ac352bb060b9;
var $02b1e0b5fde6973c$export$56885ab8b9c456ab;
var $02b1e0b5fde6973c$export$d927fcb6adf8f9de;
var $02b1e0b5fde6973c$export$b82d16f27459e05a;
var $02b1e0b5fde6973c$export$522c17b4f5e123e8;
var $02b1e0b5fde6973c$export$1aabd8a0274ecfd6;
var $02b1e0b5fde6973c$export$3d6c20d97e46b957;
var $02b1e0b5fde6973c$export$9b621391a187a31a;
var $02b1e0b5fde6973c$export$f5bbd400c2f4426f;
"use strict";
var $02b1e0b5fde6973c$var$b = Symbol.for("react.element"), $02b1e0b5fde6973c$var$c = Symbol.for("react.portal"), $02b1e0b5fde6973c$var$d = Symbol.for("react.fragment"), $02b1e0b5fde6973c$var$e = Symbol.for("react.strict_mode"), $02b1e0b5fde6973c$var$f = Symbol.for("react.profiler"), $02b1e0b5fde6973c$var$g = Symbol.for("react.provider"), $02b1e0b5fde6973c$var$h = Symbol.for("react.context"), $02b1e0b5fde6973c$var$k = Symbol.for("react.server_context"), $02b1e0b5fde6973c$var$l = Symbol.for("react.forward_ref"), $02b1e0b5fde6973c$var$m = Symbol.for("react.suspense"), $02b1e0b5fde6973c$var$n = Symbol.for("react.suspense_list"), $02b1e0b5fde6973c$var$p = Symbol.for("react.memo"), $02b1e0b5fde6973c$var$q = Symbol.for("react.lazy"), $02b1e0b5fde6973c$var$t = Symbol.for("react.offscreen"), $02b1e0b5fde6973c$var$u;
$02b1e0b5fde6973c$var$u = Symbol.for("react.module.reference");
function $02b1e0b5fde6973c$var$v(a) {
    if ("object" === typeof a && null !== a) {
        var r = a.$$typeof;
        switch(r){
            case $02b1e0b5fde6973c$var$b:
                switch(a = a.type, a){
                    case $02b1e0b5fde6973c$var$d:
                    case $02b1e0b5fde6973c$var$f:
                    case $02b1e0b5fde6973c$var$e:
                    case $02b1e0b5fde6973c$var$m:
                    case $02b1e0b5fde6973c$var$n:
                        return a;
                    default:
                        switch(a = a && a.$$typeof, a){
                            case $02b1e0b5fde6973c$var$k:
                            case $02b1e0b5fde6973c$var$h:
                            case $02b1e0b5fde6973c$var$l:
                            case $02b1e0b5fde6973c$var$q:
                            case $02b1e0b5fde6973c$var$p:
                            case $02b1e0b5fde6973c$var$g:
                                return a;
                            default:
                                return r;
                        }
                }
            case $02b1e0b5fde6973c$var$c:
                return r;
        }
    }
}
$02b1e0b5fde6973c$export$a7c73072b1a182ae = $02b1e0b5fde6973c$var$h;
$02b1e0b5fde6973c$export$9f27bc3417b4524d = $02b1e0b5fde6973c$var$g;
$02b1e0b5fde6973c$export$db77ccec0bb4ccac = $02b1e0b5fde6973c$var$b;
$02b1e0b5fde6973c$export$8392c0c9d3dcbd35 = $02b1e0b5fde6973c$var$l;
$02b1e0b5fde6973c$export$ffb0004e005737fa = $02b1e0b5fde6973c$var$d;
$02b1e0b5fde6973c$export$b624eff549462981 = $02b1e0b5fde6973c$var$q;
$02b1e0b5fde6973c$export$7897aa7841a5380c = $02b1e0b5fde6973c$var$p;
$02b1e0b5fde6973c$export$602eac185826482c = $02b1e0b5fde6973c$var$c;
$02b1e0b5fde6973c$export$e2c29f18771995cb = $02b1e0b5fde6973c$var$f;
$02b1e0b5fde6973c$export$5f8d39834fd61797 = $02b1e0b5fde6973c$var$e;
$02b1e0b5fde6973c$export$74bf444e3cd11ea5 = $02b1e0b5fde6973c$var$m;
$02b1e0b5fde6973c$export$998bcd577473dd93 = $02b1e0b5fde6973c$var$n;
$02b1e0b5fde6973c$export$92387174baf9b227 = function() {
    return !1;
};
$02b1e0b5fde6973c$export$ec112efeb987d9c6 = function() {
    return !1;
};
$02b1e0b5fde6973c$export$b706b080d889d2c9 = function(a) {
    return $02b1e0b5fde6973c$var$v(a) === $02b1e0b5fde6973c$var$h;
};
$02b1e0b5fde6973c$export$5be5a87408f70ddc = function(a) {
    return $02b1e0b5fde6973c$var$v(a) === $02b1e0b5fde6973c$var$g;
};
$02b1e0b5fde6973c$export$45a5e7f76e0caa8d = function(a) {
    return "object" === typeof a && null !== a && a.$$typeof === $02b1e0b5fde6973c$var$b;
};
$02b1e0b5fde6973c$export$455c2e768291efa6 = function(a) {
    return $02b1e0b5fde6973c$var$v(a) === $02b1e0b5fde6973c$var$l;
};
$02b1e0b5fde6973c$export$9522e17588c12572 = function(a) {
    return $02b1e0b5fde6973c$var$v(a) === $02b1e0b5fde6973c$var$d;
};
$02b1e0b5fde6973c$export$2110ac352bb060b9 = function(a) {
    return $02b1e0b5fde6973c$var$v(a) === $02b1e0b5fde6973c$var$q;
};
$02b1e0b5fde6973c$export$56885ab8b9c456ab = function(a) {
    return $02b1e0b5fde6973c$var$v(a) === $02b1e0b5fde6973c$var$p;
};
$02b1e0b5fde6973c$export$d927fcb6adf8f9de = function(a) {
    return $02b1e0b5fde6973c$var$v(a) === $02b1e0b5fde6973c$var$c;
};
$02b1e0b5fde6973c$export$b82d16f27459e05a = function(a) {
    return $02b1e0b5fde6973c$var$v(a) === $02b1e0b5fde6973c$var$f;
};
$02b1e0b5fde6973c$export$522c17b4f5e123e8 = function(a) {
    return $02b1e0b5fde6973c$var$v(a) === $02b1e0b5fde6973c$var$e;
};
$02b1e0b5fde6973c$export$1aabd8a0274ecfd6 = function(a) {
    return $02b1e0b5fde6973c$var$v(a) === $02b1e0b5fde6973c$var$m;
};
$02b1e0b5fde6973c$export$3d6c20d97e46b957 = function(a) {
    return $02b1e0b5fde6973c$var$v(a) === $02b1e0b5fde6973c$var$n;
};
$02b1e0b5fde6973c$export$9b621391a187a31a = function(a) {
    return "string" === typeof a || "function" === typeof a || a === $02b1e0b5fde6973c$var$d || a === $02b1e0b5fde6973c$var$f || a === $02b1e0b5fde6973c$var$e || a === $02b1e0b5fde6973c$var$m || a === $02b1e0b5fde6973c$var$n || a === $02b1e0b5fde6973c$var$t || "object" === typeof a && null !== a && (a.$$typeof === $02b1e0b5fde6973c$var$q || a.$$typeof === $02b1e0b5fde6973c$var$p || a.$$typeof === $02b1e0b5fde6973c$var$g || a.$$typeof === $02b1e0b5fde6973c$var$h || a.$$typeof === $02b1e0b5fde6973c$var$l || a.$$typeof === $02b1e0b5fde6973c$var$u || void 0 !== a.getModuleId) ? !0 : !1;
};
$02b1e0b5fde6973c$export$f5bbd400c2f4426f = $02b1e0b5fde6973c$var$v;

});

parcelRequire.register("dM1oJ", function(module, exports) {
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ "use strict";

var $jmVPb = parcelRequire("jmVPb");
function $02967717517ba857$var$emptyFunction() {}
function $02967717517ba857$var$emptyFunctionWithReset() {}
$02967717517ba857$var$emptyFunctionWithReset.resetWarningCache = $02967717517ba857$var$emptyFunction;
module.exports = function() {
    function shim(props, propName, componentName, location, propFullName, secret) {
        if (secret === $jmVPb) // It is still safe when called from React.
        return;
        var err = new Error("Calling PropTypes validators directly is not supported by the `prop-types` package. Use PropTypes.checkPropTypes() to call them. Read more at http://fb.me/use-check-prop-types");
        err.name = "Invariant Violation";
        throw err;
    }
    shim.isRequired = shim;
    function getShim() {
        return shim;
    }
    // Important!
    // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.
    var ReactPropTypes = {
        array: shim,
        bigint: shim,
        bool: shim,
        func: shim,
        number: shim,
        object: shim,
        string: shim,
        symbol: shim,
        any: shim,
        arrayOf: getShim,
        element: shim,
        elementType: shim,
        instanceOf: getShim,
        node: shim,
        objectOf: getShim,
        oneOf: getShim,
        oneOfType: getShim,
        shape: getShim,
        exact: getShim,
        checkPropTypes: $02967717517ba857$var$emptyFunctionWithReset,
        resetWarningCache: $02967717517ba857$var$emptyFunction
    };
    ReactPropTypes.PropTypes = ReactPropTypes;
    return ReactPropTypes;
};

});
parcelRequire.register("jmVPb", function(module, exports) {
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ "use strict";
var $e19ced1f1e857504$var$ReactPropTypesSecret = "SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED";
module.exports = $e19ced1f1e857504$var$ReactPropTypesSecret;

});


parcelRequire.register("ichZR", function(module, exports) {
(function() {
    /** Used as a safe reference for `undefined` in pre-ES5 environments. */ var undefined;
    /** Used as the semantic version number. */ var VERSION = "4.17.21";
    /** Used as the size to enable large array optimizations. */ var LARGE_ARRAY_SIZE = 200;
    /** Error message constants. */ var CORE_ERROR_TEXT = "Unsupported core-js use. Try https://npms.io/search?q=ponyfill.", FUNC_ERROR_TEXT = "Expected a function", INVALID_TEMPL_VAR_ERROR_TEXT = "Invalid `variable` option passed into `_.template`";
    /** Used to stand-in for `undefined` hash values. */ var HASH_UNDEFINED = "__lodash_hash_undefined__";
    /** Used as the maximum memoize cache size. */ var MAX_MEMOIZE_SIZE = 500;
    /** Used as the internal argument placeholder. */ var PLACEHOLDER = "__lodash_placeholder__";
    /** Used to compose bitmasks for cloning. */ var CLONE_DEEP_FLAG = 1, CLONE_FLAT_FLAG = 2, CLONE_SYMBOLS_FLAG = 4;
    /** Used to compose bitmasks for value comparisons. */ var COMPARE_PARTIAL_FLAG = 1, COMPARE_UNORDERED_FLAG = 2;
    /** Used to compose bitmasks for function metadata. */ var WRAP_BIND_FLAG = 1, WRAP_BIND_KEY_FLAG = 2, WRAP_CURRY_BOUND_FLAG = 4, WRAP_CURRY_FLAG = 8, WRAP_CURRY_RIGHT_FLAG = 16, WRAP_PARTIAL_FLAG = 32, WRAP_PARTIAL_RIGHT_FLAG = 64, WRAP_ARY_FLAG = 128, WRAP_REARG_FLAG = 256, WRAP_FLIP_FLAG = 512;
    /** Used as default options for `_.truncate`. */ var DEFAULT_TRUNC_LENGTH = 30, DEFAULT_TRUNC_OMISSION = "...";
    /** Used to detect hot functions by number of calls within a span of milliseconds. */ var HOT_COUNT = 800, HOT_SPAN = 16;
    /** Used to indicate the type of lazy iteratees. */ var LAZY_FILTER_FLAG = 1, LAZY_MAP_FLAG = 2, LAZY_WHILE_FLAG = 3;
    /** Used as references for various `Number` constants. */ var INFINITY = 1 / 0, MAX_SAFE_INTEGER = 9007199254740991, MAX_INTEGER = 1.7976931348623157e+308, NAN = 0 / 0;
    /** Used as references for the maximum length and index of an array. */ var MAX_ARRAY_LENGTH = 4294967295, MAX_ARRAY_INDEX = MAX_ARRAY_LENGTH - 1, HALF_MAX_ARRAY_LENGTH = MAX_ARRAY_LENGTH >>> 1;
    /** Used to associate wrap methods with their bit flags. */ var wrapFlags = [
        [
            "ary",
            WRAP_ARY_FLAG
        ],
        [
            "bind",
            WRAP_BIND_FLAG
        ],
        [
            "bindKey",
            WRAP_BIND_KEY_FLAG
        ],
        [
            "curry",
            WRAP_CURRY_FLAG
        ],
        [
            "curryRight",
            WRAP_CURRY_RIGHT_FLAG
        ],
        [
            "flip",
            WRAP_FLIP_FLAG
        ],
        [
            "partial",
            WRAP_PARTIAL_FLAG
        ],
        [
            "partialRight",
            WRAP_PARTIAL_RIGHT_FLAG
        ],
        [
            "rearg",
            WRAP_REARG_FLAG
        ]
    ];
    /** `Object#toString` result references. */ var argsTag = "[object Arguments]", arrayTag = "[object Array]", asyncTag = "[object AsyncFunction]", boolTag = "[object Boolean]", dateTag = "[object Date]", domExcTag = "[object DOMException]", errorTag = "[object Error]", funcTag = "[object Function]", genTag = "[object GeneratorFunction]", mapTag = "[object Map]", numberTag = "[object Number]", nullTag = "[object Null]", objectTag = "[object Object]", promiseTag = "[object Promise]", proxyTag = "[object Proxy]", regexpTag = "[object RegExp]", setTag = "[object Set]", stringTag = "[object String]", symbolTag = "[object Symbol]", undefinedTag = "[object Undefined]", weakMapTag = "[object WeakMap]", weakSetTag = "[object WeakSet]";
    var arrayBufferTag = "[object ArrayBuffer]", dataViewTag = "[object DataView]", float32Tag = "[object Float32Array]", float64Tag = "[object Float64Array]", int8Tag = "[object Int8Array]", int16Tag = "[object Int16Array]", int32Tag = "[object Int32Array]", uint8Tag = "[object Uint8Array]", uint8ClampedTag = "[object Uint8ClampedArray]", uint16Tag = "[object Uint16Array]", uint32Tag = "[object Uint32Array]";
    /** Used to match empty string literals in compiled template source. */ var reEmptyStringLeading = /\b__p \+= '';/g, reEmptyStringMiddle = /\b(__p \+=) '' \+/g, reEmptyStringTrailing = /(__e\(.*?\)|\b__t\)) \+\n'';/g;
    /** Used to match HTML entities and HTML characters. */ var reEscapedHtml = /&(?:amp|lt|gt|quot|#39);/g, reUnescapedHtml = /[&<>"']/g, reHasEscapedHtml = RegExp(reEscapedHtml.source), reHasUnescapedHtml = RegExp(reUnescapedHtml.source);
    /** Used to match template delimiters. */ var reEscape = /<%-([\s\S]+?)%>/g, reEvaluate = /<%([\s\S]+?)%>/g, reInterpolate = /<%=([\s\S]+?)%>/g;
    /** Used to match property names within property paths. */ var reIsDeepProp = /\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/, reIsPlainProp = /^\w*$/, rePropName = /[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g;
    /**
   * Used to match `RegExp`
   * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).
   */ var reRegExpChar = /[\\^$.*+?()[\]{}|]/g, reHasRegExpChar = RegExp(reRegExpChar.source);
    /** Used to match leading whitespace. */ var reTrimStart = /^\s+/;
    /** Used to match a single whitespace character. */ var reWhitespace = /\s/;
    /** Used to match wrap detail comments. */ var reWrapComment = /\{(?:\n\/\* \[wrapped with .+\] \*\/)?\n?/, reWrapDetails = /\{\n\/\* \[wrapped with (.+)\] \*/, reSplitDetails = /,? & /;
    /** Used to match words composed of alphanumeric characters. */ var reAsciiWord = /[^\x00-\x2f\x3a-\x40\x5b-\x60\x7b-\x7f]+/g;
    /**
   * Used to validate the `validate` option in `_.template` variable.
   *
   * Forbids characters which could potentially change the meaning of the function argument definition:
   * - "()," (modification of function parameters)
   * - "=" (default value)
   * - "[]{}" (destructuring of function parameters)
   * - "/" (beginning of a comment)
   * - whitespace
   */ var reForbiddenIdentifierChars = /[()=,{}\[\]\/\s]/;
    /** Used to match backslashes in property paths. */ var reEscapeChar = /\\(\\)?/g;
    /**
   * Used to match
   * [ES template delimiters](http://ecma-international.org/ecma-262/7.0/#sec-template-literal-lexical-components).
   */ var reEsTemplate = /\$\{([^\\}]*(?:\\.[^\\}]*)*)\}/g;
    /** Used to match `RegExp` flags from their coerced string values. */ var reFlags = /\w*$/;
    /** Used to detect bad signed hexadecimal string values. */ var reIsBadHex = /^[-+]0x[0-9a-f]+$/i;
    /** Used to detect binary string values. */ var reIsBinary = /^0b[01]+$/i;
    /** Used to detect host constructors (Safari). */ var reIsHostCtor = /^\[object .+?Constructor\]$/;
    /** Used to detect octal string values. */ var reIsOctal = /^0o[0-7]+$/i;
    /** Used to detect unsigned integer values. */ var reIsUint = /^(?:0|[1-9]\d*)$/;
    /** Used to match Latin Unicode letters (excluding mathematical operators). */ var reLatin = /[\xc0-\xd6\xd8-\xf6\xf8-\xff\u0100-\u017f]/g;
    /** Used to ensure capturing order of template delimiters. */ var reNoMatch = /($^)/;
    /** Used to match unescaped characters in compiled string literals. */ var reUnescapedString = /['\n\r\u2028\u2029\\]/g;
    /** Used to compose unicode character classes. */ var rsAstralRange = "\ud800-\udfff", rsComboMarksRange = "\\u0300-\\u036f", reComboHalfMarksRange = "\\ufe20-\\ufe2f", rsComboSymbolsRange = "\\u20d0-\\u20ff", rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange, rsDingbatRange = "\\u2700-\\u27bf", rsLowerRange = "a-z\\xdf-\\xf6\\xf8-\\xff", rsMathOpRange = "\\xac\\xb1\\xd7\\xf7", rsNonCharRange = "\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\xbf", rsPunctuationRange = "\\u2000-\\u206f", rsSpaceRange = " \\t\\x0b\\f\\xa0\\ufeff\\n\\r\\u2028\\u2029\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000", rsUpperRange = "A-Z\\xc0-\\xd6\\xd8-\\xde", rsVarRange = "\\ufe0e\\ufe0f", rsBreakRange = rsMathOpRange + rsNonCharRange + rsPunctuationRange + rsSpaceRange;
    /** Used to compose unicode capture groups. */ var rsApos = "['’]", rsAstral = "[" + rsAstralRange + "]", rsBreak = "[" + rsBreakRange + "]", rsCombo = "[" + rsComboRange + "]", rsDigits = "\\d+", rsDingbat = "[" + rsDingbatRange + "]", rsLower = "[" + rsLowerRange + "]", rsMisc = "[^" + rsAstralRange + rsBreakRange + rsDigits + rsDingbatRange + rsLowerRange + rsUpperRange + "]", rsFitz = "\ud83c[\udffb-\udfff]", rsModifier = "(?:" + rsCombo + "|" + rsFitz + ")", rsNonAstral = "[^" + rsAstralRange + "]", rsRegional = "(?:\ud83c[\udde6-\uddff]){2}", rsSurrPair = "[\ud800-\udbff][\udc00-\udfff]", rsUpper = "[" + rsUpperRange + "]", rsZWJ = "\\u200d";
    /** Used to compose unicode regexes. */ var rsMiscLower = "(?:" + rsLower + "|" + rsMisc + ")", rsMiscUpper = "(?:" + rsUpper + "|" + rsMisc + ")", rsOptContrLower = "(?:" + rsApos + "(?:d|ll|m|re|s|t|ve))?", rsOptContrUpper = "(?:" + rsApos + "(?:D|LL|M|RE|S|T|VE))?", reOptMod = rsModifier + "?", rsOptVar = "[" + rsVarRange + "]?", rsOptJoin = "(?:" + rsZWJ + "(?:" + [
        rsNonAstral,
        rsRegional,
        rsSurrPair
    ].join("|") + ")" + rsOptVar + reOptMod + ")*", rsOrdLower = "\\d*(?:1st|2nd|3rd|(?![123])\\dth)(?=\\b|[A-Z_])", rsOrdUpper = "\\d*(?:1ST|2ND|3RD|(?![123])\\dTH)(?=\\b|[a-z_])", rsSeq = rsOptVar + reOptMod + rsOptJoin, rsEmoji = "(?:" + [
        rsDingbat,
        rsRegional,
        rsSurrPair
    ].join("|") + ")" + rsSeq, rsSymbol = "(?:" + [
        rsNonAstral + rsCombo + "?",
        rsCombo,
        rsRegional,
        rsSurrPair,
        rsAstral
    ].join("|") + ")";
    /** Used to match apostrophes. */ var reApos = RegExp(rsApos, "g");
    /**
   * Used to match [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks) and
   * [combining diacritical marks for symbols](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks_for_Symbols).
   */ var reComboMark = RegExp(rsCombo, "g");
    /** Used to match [string symbols](https://mathiasbynens.be/notes/javascript-unicode). */ var reUnicode = RegExp(rsFitz + "(?=" + rsFitz + ")|" + rsSymbol + rsSeq, "g");
    /** Used to match complex or compound words. */ var reUnicodeWord = RegExp([
        rsUpper + "?" + rsLower + "+" + rsOptContrLower + "(?=" + [
            rsBreak,
            rsUpper,
            "$"
        ].join("|") + ")",
        rsMiscUpper + "+" + rsOptContrUpper + "(?=" + [
            rsBreak,
            rsUpper + rsMiscLower,
            "$"
        ].join("|") + ")",
        rsUpper + "?" + rsMiscLower + "+" + rsOptContrLower,
        rsUpper + "+" + rsOptContrUpper,
        rsOrdUpper,
        rsOrdLower,
        rsDigits,
        rsEmoji
    ].join("|"), "g");
    /** Used to detect strings with [zero-width joiners or code points from the astral planes](http://eev.ee/blog/2015/09/12/dark-corners-of-unicode/). */ var reHasUnicode = RegExp("[" + rsZWJ + rsAstralRange + rsComboRange + rsVarRange + "]");
    /** Used to detect strings that need a more robust regexp to match words. */ var reHasUnicodeWord = /[a-z][A-Z]|[A-Z]{2}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/;
    /** Used to assign default `context` object properties. */ var contextProps = [
        "Array",
        "Buffer",
        "DataView",
        "Date",
        "Error",
        "Float32Array",
        "Float64Array",
        "Function",
        "Int8Array",
        "Int16Array",
        "Int32Array",
        "Map",
        "Math",
        "Object",
        "Promise",
        "RegExp",
        "Set",
        "String",
        "Symbol",
        "TypeError",
        "Uint8Array",
        "Uint8ClampedArray",
        "Uint16Array",
        "Uint32Array",
        "WeakMap",
        "_",
        "clearTimeout",
        "isFinite",
        "parseInt",
        "setTimeout"
    ];
    /** Used to make template sourceURLs easier to identify. */ var templateCounter = -1;
    /** Used to identify `toStringTag` values of typed arrays. */ var typedArrayTags = {};
    typedArrayTags[float32Tag] = typedArrayTags[float64Tag] = typedArrayTags[int8Tag] = typedArrayTags[int16Tag] = typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] = typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] = typedArrayTags[uint32Tag] = true;
    typedArrayTags[argsTag] = typedArrayTags[arrayTag] = typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] = typedArrayTags[dataViewTag] = typedArrayTags[dateTag] = typedArrayTags[errorTag] = typedArrayTags[funcTag] = typedArrayTags[mapTag] = typedArrayTags[numberTag] = typedArrayTags[objectTag] = typedArrayTags[regexpTag] = typedArrayTags[setTag] = typedArrayTags[stringTag] = typedArrayTags[weakMapTag] = false;
    /** Used to identify `toStringTag` values supported by `_.clone`. */ var cloneableTags = {};
    cloneableTags[argsTag] = cloneableTags[arrayTag] = cloneableTags[arrayBufferTag] = cloneableTags[dataViewTag] = cloneableTags[boolTag] = cloneableTags[dateTag] = cloneableTags[float32Tag] = cloneableTags[float64Tag] = cloneableTags[int8Tag] = cloneableTags[int16Tag] = cloneableTags[int32Tag] = cloneableTags[mapTag] = cloneableTags[numberTag] = cloneableTags[objectTag] = cloneableTags[regexpTag] = cloneableTags[setTag] = cloneableTags[stringTag] = cloneableTags[symbolTag] = cloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] = cloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;
    cloneableTags[errorTag] = cloneableTags[funcTag] = cloneableTags[weakMapTag] = false;
    /** Used to map Latin Unicode letters to basic Latin letters. */ var deburredLetters = {
        // Latin-1 Supplement block.
        "\xc0": "A",
        "\xc1": "A",
        "\xc2": "A",
        "\xc3": "A",
        "\xc4": "A",
        "\xc5": "A",
        "\xe0": "a",
        "\xe1": "a",
        "\xe2": "a",
        "\xe3": "a",
        "\xe4": "a",
        "\xe5": "a",
        "\xc7": "C",
        "\xe7": "c",
        "\xd0": "D",
        "\xf0": "d",
        "\xc8": "E",
        "\xc9": "E",
        "\xca": "E",
        "\xcb": "E",
        "\xe8": "e",
        "\xe9": "e",
        "\xea": "e",
        "\xeb": "e",
        "\xcc": "I",
        "\xcd": "I",
        "\xce": "I",
        "\xcf": "I",
        "\xec": "i",
        "\xed": "i",
        "\xee": "i",
        "\xef": "i",
        "\xd1": "N",
        "\xf1": "n",
        "\xd2": "O",
        "\xd3": "O",
        "\xd4": "O",
        "\xd5": "O",
        "\xd6": "O",
        "\xd8": "O",
        "\xf2": "o",
        "\xf3": "o",
        "\xf4": "o",
        "\xf5": "o",
        "\xf6": "o",
        "\xf8": "o",
        "\xd9": "U",
        "\xda": "U",
        "\xdb": "U",
        "\xdc": "U",
        "\xf9": "u",
        "\xfa": "u",
        "\xfb": "u",
        "\xfc": "u",
        "\xdd": "Y",
        "\xfd": "y",
        "\xff": "y",
        "\xc6": "Ae",
        "\xe6": "ae",
        "\xde": "Th",
        "\xfe": "th",
        "\xdf": "ss",
        // Latin Extended-A block.
        "Ā": "A",
        "Ă": "A",
        "Ą": "A",
        "ā": "a",
        "ă": "a",
        "ą": "a",
        "Ć": "C",
        "Ĉ": "C",
        "Ċ": "C",
        "Č": "C",
        "ć": "c",
        "ĉ": "c",
        "ċ": "c",
        "č": "c",
        "Ď": "D",
        "Đ": "D",
        "ď": "d",
        "đ": "d",
        "Ē": "E",
        "Ĕ": "E",
        "Ė": "E",
        "Ę": "E",
        "Ě": "E",
        "ē": "e",
        "ĕ": "e",
        "ė": "e",
        "ę": "e",
        "ě": "e",
        "Ĝ": "G",
        "Ğ": "G",
        "Ġ": "G",
        "Ģ": "G",
        "ĝ": "g",
        "ğ": "g",
        "ġ": "g",
        "ģ": "g",
        "Ĥ": "H",
        "Ħ": "H",
        "ĥ": "h",
        "ħ": "h",
        "Ĩ": "I",
        "Ī": "I",
        "Ĭ": "I",
        "Į": "I",
        "İ": "I",
        "ĩ": "i",
        "ī": "i",
        "ĭ": "i",
        "į": "i",
        "ı": "i",
        "Ĵ": "J",
        "ĵ": "j",
        "Ķ": "K",
        "ķ": "k",
        "ĸ": "k",
        "Ĺ": "L",
        "Ļ": "L",
        "Ľ": "L",
        "Ŀ": "L",
        "Ł": "L",
        "ĺ": "l",
        "ļ": "l",
        "ľ": "l",
        "ŀ": "l",
        "ł": "l",
        "Ń": "N",
        "Ņ": "N",
        "Ň": "N",
        "Ŋ": "N",
        "ń": "n",
        "ņ": "n",
        "ň": "n",
        "ŋ": "n",
        "Ō": "O",
        "Ŏ": "O",
        "Ő": "O",
        "ō": "o",
        "ŏ": "o",
        "ő": "o",
        "Ŕ": "R",
        "Ŗ": "R",
        "Ř": "R",
        "ŕ": "r",
        "ŗ": "r",
        "ř": "r",
        "Ś": "S",
        "Ŝ": "S",
        "Ş": "S",
        "Š": "S",
        "ś": "s",
        "ŝ": "s",
        "ş": "s",
        "š": "s",
        "Ţ": "T",
        "Ť": "T",
        "Ŧ": "T",
        "ţ": "t",
        "ť": "t",
        "ŧ": "t",
        "Ũ": "U",
        "Ū": "U",
        "Ŭ": "U",
        "Ů": "U",
        "Ű": "U",
        "Ų": "U",
        "ũ": "u",
        "ū": "u",
        "ŭ": "u",
        "ů": "u",
        "ű": "u",
        "ų": "u",
        "Ŵ": "W",
        "ŵ": "w",
        "Ŷ": "Y",
        "ŷ": "y",
        "Ÿ": "Y",
        "Ź": "Z",
        "Ż": "Z",
        "Ž": "Z",
        "ź": "z",
        "ż": "z",
        "ž": "z",
        "Ĳ": "IJ",
        "ĳ": "ij",
        "Œ": "Oe",
        "œ": "oe",
        "ŉ": "'n",
        "ſ": "s"
    };
    /** Used to map characters to HTML entities. */ var htmlEscapes = {
        "&": "&amp;",
        "<": "&lt;",
        ">": "&gt;",
        '"': "&quot;",
        "'": "&#39;"
    };
    /** Used to map HTML entities to characters. */ var htmlUnescapes = {
        "&amp;": "&",
        "&lt;": "<",
        "&gt;": ">",
        "&quot;": '"',
        "&#39;": "'"
    };
    /** Used to escape characters for inclusion in compiled string literals. */ var stringEscapes = {
        "\\": "\\",
        "'": "'",
        "\n": "n",
        "\r": "r",
        "\u2028": "u2028",
        "\u2029": "u2029"
    };
    /** Built-in method references without a dependency on `root`. */ var freeParseFloat = parseFloat, freeParseInt = parseInt;
    /** Detect free variable `global` from Node.js. */ var freeGlobal = typeof $parcel$global == "object" && $parcel$global && $parcel$global.Object === Object && $parcel$global;
    /** Detect free variable `self`. */ var freeSelf = typeof self == "object" && self && self.Object === Object && self;
    /** Used as a reference to the global object. */ var root = freeGlobal || freeSelf || Function("return this")();
    /** Detect free variable `exports`. */ var freeExports = exports && !exports.nodeType && exports;
    /** Detect free variable `module`. */ var freeModule = freeExports && true && module && !module.nodeType && module;
    /** Detect the popular CommonJS extension `module.exports`. */ var moduleExports = freeModule && freeModule.exports === freeExports;
    /** Detect free variable `process` from Node.js. */ var freeProcess = moduleExports && freeGlobal.process;
    /** Used to access faster Node.js helpers. */ var nodeUtil = function() {
        try {
            // Use `util.types` for Node.js 10+.
            var types = freeModule && freeModule.require && freeModule.require("util").types;
            if (types) return types;
            // Legacy `process.binding('util')` for Node.js < 10.
            return freeProcess && freeProcess.binding && freeProcess.binding("util");
        } catch (e) {}
    }();
    /* Node.js helper references. */ var nodeIsArrayBuffer = nodeUtil && nodeUtil.isArrayBuffer, nodeIsDate = nodeUtil && nodeUtil.isDate, nodeIsMap = nodeUtil && nodeUtil.isMap, nodeIsRegExp = nodeUtil && nodeUtil.isRegExp, nodeIsSet = nodeUtil && nodeUtil.isSet, nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;
    /*--------------------------------------------------------------------------*/ /**
   * A faster alternative to `Function#apply`, this function invokes `func`
   * with the `this` binding of `thisArg` and the arguments of `args`.
   *
   * @private
   * @param {Function} func The function to invoke.
   * @param {*} thisArg The `this` binding of `func`.
   * @param {Array} args The arguments to invoke `func` with.
   * @returns {*} Returns the result of `func`.
   */ function apply(func, thisArg, args) {
        switch(args.length){
            case 0:
                return func.call(thisArg);
            case 1:
                return func.call(thisArg, args[0]);
            case 2:
                return func.call(thisArg, args[0], args[1]);
            case 3:
                return func.call(thisArg, args[0], args[1], args[2]);
        }
        return func.apply(thisArg, args);
    }
    /**
   * A specialized version of `baseAggregator` for arrays.
   *
   * @private
   * @param {Array} [array] The array to iterate over.
   * @param {Function} setter The function to set `accumulator` values.
   * @param {Function} iteratee The iteratee to transform keys.
   * @param {Object} accumulator The initial aggregated object.
   * @returns {Function} Returns `accumulator`.
   */ function arrayAggregator(array, setter, iteratee, accumulator) {
        var index = -1, length = array == null ? 0 : array.length;
        while(++index < length){
            var value = array[index];
            setter(accumulator, value, iteratee(value), array);
        }
        return accumulator;
    }
    /**
   * A specialized version of `_.forEach` for arrays without support for
   * iteratee shorthands.
   *
   * @private
   * @param {Array} [array] The array to iterate over.
   * @param {Function} iteratee The function invoked per iteration.
   * @returns {Array} Returns `array`.
   */ function arrayEach(array, iteratee) {
        var index = -1, length = array == null ? 0 : array.length;
        while(++index < length){
            if (iteratee(array[index], index, array) === false) break;
        }
        return array;
    }
    /**
   * A specialized version of `_.forEachRight` for arrays without support for
   * iteratee shorthands.
   *
   * @private
   * @param {Array} [array] The array to iterate over.
   * @param {Function} iteratee The function invoked per iteration.
   * @returns {Array} Returns `array`.
   */ function arrayEachRight(array, iteratee) {
        var length = array == null ? 0 : array.length;
        while(length--){
            if (iteratee(array[length], length, array) === false) break;
        }
        return array;
    }
    /**
   * A specialized version of `_.every` for arrays without support for
   * iteratee shorthands.
   *
   * @private
   * @param {Array} [array] The array to iterate over.
   * @param {Function} predicate The function invoked per iteration.
   * @returns {boolean} Returns `true` if all elements pass the predicate check,
   *  else `false`.
   */ function arrayEvery(array, predicate) {
        var index = -1, length = array == null ? 0 : array.length;
        while(++index < length){
            if (!predicate(array[index], index, array)) return false;
        }
        return true;
    }
    /**
   * A specialized version of `_.filter` for arrays without support for
   * iteratee shorthands.
   *
   * @private
   * @param {Array} [array] The array to iterate over.
   * @param {Function} predicate The function invoked per iteration.
   * @returns {Array} Returns the new filtered array.
   */ function arrayFilter(array, predicate) {
        var index = -1, length = array == null ? 0 : array.length, resIndex = 0, result = [];
        while(++index < length){
            var value = array[index];
            if (predicate(value, index, array)) result[resIndex++] = value;
        }
        return result;
    }
    /**
   * A specialized version of `_.includes` for arrays without support for
   * specifying an index to search from.
   *
   * @private
   * @param {Array} [array] The array to inspect.
   * @param {*} target The value to search for.
   * @returns {boolean} Returns `true` if `target` is found, else `false`.
   */ function arrayIncludes(array, value) {
        var length = array == null ? 0 : array.length;
        return !!length && baseIndexOf(array, value, 0) > -1;
    }
    /**
   * This function is like `arrayIncludes` except that it accepts a comparator.
   *
   * @private
   * @param {Array} [array] The array to inspect.
   * @param {*} target The value to search for.
   * @param {Function} comparator The comparator invoked per element.
   * @returns {boolean} Returns `true` if `target` is found, else `false`.
   */ function arrayIncludesWith(array, value, comparator) {
        var index = -1, length = array == null ? 0 : array.length;
        while(++index < length){
            if (comparator(value, array[index])) return true;
        }
        return false;
    }
    /**
   * A specialized version of `_.map` for arrays without support for iteratee
   * shorthands.
   *
   * @private
   * @param {Array} [array] The array to iterate over.
   * @param {Function} iteratee The function invoked per iteration.
   * @returns {Array} Returns the new mapped array.
   */ function arrayMap(array, iteratee) {
        var index = -1, length = array == null ? 0 : array.length, result = Array(length);
        while(++index < length)result[index] = iteratee(array[index], index, array);
        return result;
    }
    /**
   * Appends the elements of `values` to `array`.
   *
   * @private
   * @param {Array} array The array to modify.
   * @param {Array} values The values to append.
   * @returns {Array} Returns `array`.
   */ function arrayPush(array, values) {
        var index = -1, length = values.length, offset = array.length;
        while(++index < length)array[offset + index] = values[index];
        return array;
    }
    /**
   * A specialized version of `_.reduce` for arrays without support for
   * iteratee shorthands.
   *
   * @private
   * @param {Array} [array] The array to iterate over.
   * @param {Function} iteratee The function invoked per iteration.
   * @param {*} [accumulator] The initial value.
   * @param {boolean} [initAccum] Specify using the first element of `array` as
   *  the initial value.
   * @returns {*} Returns the accumulated value.
   */ function arrayReduce(array, iteratee, accumulator, initAccum) {
        var index = -1, length = array == null ? 0 : array.length;
        if (initAccum && length) accumulator = array[++index];
        while(++index < length)accumulator = iteratee(accumulator, array[index], index, array);
        return accumulator;
    }
    /**
   * A specialized version of `_.reduceRight` for arrays without support for
   * iteratee shorthands.
   *
   * @private
   * @param {Array} [array] The array to iterate over.
   * @param {Function} iteratee The function invoked per iteration.
   * @param {*} [accumulator] The initial value.
   * @param {boolean} [initAccum] Specify using the last element of `array` as
   *  the initial value.
   * @returns {*} Returns the accumulated value.
   */ function arrayReduceRight(array, iteratee, accumulator, initAccum) {
        var length = array == null ? 0 : array.length;
        if (initAccum && length) accumulator = array[--length];
        while(length--)accumulator = iteratee(accumulator, array[length], length, array);
        return accumulator;
    }
    /**
   * A specialized version of `_.some` for arrays without support for iteratee
   * shorthands.
   *
   * @private
   * @param {Array} [array] The array to iterate over.
   * @param {Function} predicate The function invoked per iteration.
   * @returns {boolean} Returns `true` if any element passes the predicate check,
   *  else `false`.
   */ function arraySome(array, predicate) {
        var index = -1, length = array == null ? 0 : array.length;
        while(++index < length){
            if (predicate(array[index], index, array)) return true;
        }
        return false;
    }
    /**
   * Gets the size of an ASCII `string`.
   *
   * @private
   * @param {string} string The string inspect.
   * @returns {number} Returns the string size.
   */ var asciiSize = baseProperty("length");
    /**
   * Converts an ASCII `string` to an array.
   *
   * @private
   * @param {string} string The string to convert.
   * @returns {Array} Returns the converted array.
   */ function asciiToArray(string) {
        return string.split("");
    }
    /**
   * Splits an ASCII `string` into an array of its words.
   *
   * @private
   * @param {string} The string to inspect.
   * @returns {Array} Returns the words of `string`.
   */ function asciiWords(string) {
        return string.match(reAsciiWord) || [];
    }
    /**
   * The base implementation of methods like `_.findKey` and `_.findLastKey`,
   * without support for iteratee shorthands, which iterates over `collection`
   * using `eachFunc`.
   *
   * @private
   * @param {Array|Object} collection The collection to inspect.
   * @param {Function} predicate The function invoked per iteration.
   * @param {Function} eachFunc The function to iterate over `collection`.
   * @returns {*} Returns the found element or its key, else `undefined`.
   */ function baseFindKey(collection, predicate, eachFunc) {
        var result;
        eachFunc(collection, function(value, key, collection) {
            if (predicate(value, key, collection)) {
                result = key;
                return false;
            }
        });
        return result;
    }
    /**
   * The base implementation of `_.findIndex` and `_.findLastIndex` without
   * support for iteratee shorthands.
   *
   * @private
   * @param {Array} array The array to inspect.
   * @param {Function} predicate The function invoked per iteration.
   * @param {number} fromIndex The index to search from.
   * @param {boolean} [fromRight] Specify iterating from right to left.
   * @returns {number} Returns the index of the matched value, else `-1`.
   */ function baseFindIndex(array, predicate, fromIndex, fromRight) {
        var length = array.length, index = fromIndex + (fromRight ? 1 : -1);
        while(fromRight ? index-- : ++index < length){
            if (predicate(array[index], index, array)) return index;
        }
        return -1;
    }
    /**
   * The base implementation of `_.indexOf` without `fromIndex` bounds checks.
   *
   * @private
   * @param {Array} array The array to inspect.
   * @param {*} value The value to search for.
   * @param {number} fromIndex The index to search from.
   * @returns {number} Returns the index of the matched value, else `-1`.
   */ function baseIndexOf(array, value, fromIndex) {
        return value === value ? strictIndexOf(array, value, fromIndex) : baseFindIndex(array, baseIsNaN, fromIndex);
    }
    /**
   * This function is like `baseIndexOf` except that it accepts a comparator.
   *
   * @private
   * @param {Array} array The array to inspect.
   * @param {*} value The value to search for.
   * @param {number} fromIndex The index to search from.
   * @param {Function} comparator The comparator invoked per element.
   * @returns {number} Returns the index of the matched value, else `-1`.
   */ function baseIndexOfWith(array, value, fromIndex, comparator) {
        var index = fromIndex - 1, length = array.length;
        while(++index < length){
            if (comparator(array[index], value)) return index;
        }
        return -1;
    }
    /**
   * The base implementation of `_.isNaN` without support for number objects.
   *
   * @private
   * @param {*} value The value to check.
   * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.
   */ function baseIsNaN(value) {
        return value !== value;
    }
    /**
   * The base implementation of `_.mean` and `_.meanBy` without support for
   * iteratee shorthands.
   *
   * @private
   * @param {Array} array The array to iterate over.
   * @param {Function} iteratee The function invoked per iteration.
   * @returns {number} Returns the mean.
   */ function baseMean(array, iteratee) {
        var length = array == null ? 0 : array.length;
        return length ? baseSum(array, iteratee) / length : NAN;
    }
    /**
   * The base implementation of `_.property` without support for deep paths.
   *
   * @private
   * @param {string} key The key of the property to get.
   * @returns {Function} Returns the new accessor function.
   */ function baseProperty(key) {
        return function(object) {
            return object == null ? undefined : object[key];
        };
    }
    /**
   * The base implementation of `_.propertyOf` without support for deep paths.
   *
   * @private
   * @param {Object} object The object to query.
   * @returns {Function} Returns the new accessor function.
   */ function basePropertyOf(object) {
        return function(key) {
            return object == null ? undefined : object[key];
        };
    }
    /**
   * The base implementation of `_.reduce` and `_.reduceRight`, without support
   * for iteratee shorthands, which iterates over `collection` using `eachFunc`.
   *
   * @private
   * @param {Array|Object} collection The collection to iterate over.
   * @param {Function} iteratee The function invoked per iteration.
   * @param {*} accumulator The initial value.
   * @param {boolean} initAccum Specify using the first or last element of
   *  `collection` as the initial value.
   * @param {Function} eachFunc The function to iterate over `collection`.
   * @returns {*} Returns the accumulated value.
   */ function baseReduce(collection, iteratee, accumulator, initAccum, eachFunc) {
        eachFunc(collection, function(value, index, collection) {
            accumulator = initAccum ? (initAccum = false, value) : iteratee(accumulator, value, index, collection);
        });
        return accumulator;
    }
    /**
   * The base implementation of `_.sortBy` which uses `comparer` to define the
   * sort order of `array` and replaces criteria objects with their corresponding
   * values.
   *
   * @private
   * @param {Array} array The array to sort.
   * @param {Function} comparer The function to define sort order.
   * @returns {Array} Returns `array`.
   */ function baseSortBy(array, comparer) {
        var length = array.length;
        array.sort(comparer);
        while(length--)array[length] = array[length].value;
        return array;
    }
    /**
   * The base implementation of `_.sum` and `_.sumBy` without support for
   * iteratee shorthands.
   *
   * @private
   * @param {Array} array The array to iterate over.
   * @param {Function} iteratee The function invoked per iteration.
   * @returns {number} Returns the sum.
   */ function baseSum(array, iteratee) {
        var result, index = -1, length = array.length;
        while(++index < length){
            var current = iteratee(array[index]);
            if (current !== undefined) result = result === undefined ? current : result + current;
        }
        return result;
    }
    /**
   * The base implementation of `_.times` without support for iteratee shorthands
   * or max array length checks.
   *
   * @private
   * @param {number} n The number of times to invoke `iteratee`.
   * @param {Function} iteratee The function invoked per iteration.
   * @returns {Array} Returns the array of results.
   */ function baseTimes(n, iteratee) {
        var index = -1, result = Array(n);
        while(++index < n)result[index] = iteratee(index);
        return result;
    }
    /**
   * The base implementation of `_.toPairs` and `_.toPairsIn` which creates an array
   * of key-value pairs for `object` corresponding to the property names of `props`.
   *
   * @private
   * @param {Object} object The object to query.
   * @param {Array} props The property names to get values for.
   * @returns {Object} Returns the key-value pairs.
   */ function baseToPairs(object, props) {
        return arrayMap(props, function(key) {
            return [
                key,
                object[key]
            ];
        });
    }
    /**
   * The base implementation of `_.trim`.
   *
   * @private
   * @param {string} string The string to trim.
   * @returns {string} Returns the trimmed string.
   */ function baseTrim(string) {
        return string ? string.slice(0, trimmedEndIndex(string) + 1).replace(reTrimStart, "") : string;
    }
    /**
   * The base implementation of `_.unary` without support for storing metadata.
   *
   * @private
   * @param {Function} func The function to cap arguments for.
   * @returns {Function} Returns the new capped function.
   */ function baseUnary(func) {
        return function(value) {
            return func(value);
        };
    }
    /**
   * The base implementation of `_.values` and `_.valuesIn` which creates an
   * array of `object` property values corresponding to the property names
   * of `props`.
   *
   * @private
   * @param {Object} object The object to query.
   * @param {Array} props The property names to get values for.
   * @returns {Object} Returns the array of property values.
   */ function baseValues(object, props) {
        return arrayMap(props, function(key) {
            return object[key];
        });
    }
    /**
   * Checks if a `cache` value for `key` exists.
   *
   * @private
   * @param {Object} cache The cache to query.
   * @param {string} key The key of the entry to check.
   * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
   */ function cacheHas(cache, key) {
        return cache.has(key);
    }
    /**
   * Used by `_.trim` and `_.trimStart` to get the index of the first string symbol
   * that is not found in the character symbols.
   *
   * @private
   * @param {Array} strSymbols The string symbols to inspect.
   * @param {Array} chrSymbols The character symbols to find.
   * @returns {number} Returns the index of the first unmatched string symbol.
   */ function charsStartIndex(strSymbols, chrSymbols) {
        var index = -1, length = strSymbols.length;
        while(++index < length && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1);
        return index;
    }
    /**
   * Used by `_.trim` and `_.trimEnd` to get the index of the last string symbol
   * that is not found in the character symbols.
   *
   * @private
   * @param {Array} strSymbols The string symbols to inspect.
   * @param {Array} chrSymbols The character symbols to find.
   * @returns {number} Returns the index of the last unmatched string symbol.
   */ function charsEndIndex(strSymbols, chrSymbols) {
        var index = strSymbols.length;
        while(index-- && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1);
        return index;
    }
    /**
   * Gets the number of `placeholder` occurrences in `array`.
   *
   * @private
   * @param {Array} array The array to inspect.
   * @param {*} placeholder The placeholder to search for.
   * @returns {number} Returns the placeholder count.
   */ function countHolders(array, placeholder) {
        var length = array.length, result = 0;
        while(length--)if (array[length] === placeholder) ++result;
        return result;
    }
    /**
   * Used by `_.deburr` to convert Latin-1 Supplement and Latin Extended-A
   * letters to basic Latin letters.
   *
   * @private
   * @param {string} letter The matched letter to deburr.
   * @returns {string} Returns the deburred letter.
   */ var deburrLetter = basePropertyOf(deburredLetters);
    /**
   * Used by `_.escape` to convert characters to HTML entities.
   *
   * @private
   * @param {string} chr The matched character to escape.
   * @returns {string} Returns the escaped character.
   */ var escapeHtmlChar = basePropertyOf(htmlEscapes);
    /**
   * Used by `_.template` to escape characters for inclusion in compiled string literals.
   *
   * @private
   * @param {string} chr The matched character to escape.
   * @returns {string} Returns the escaped character.
   */ function escapeStringChar(chr) {
        return "\\" + stringEscapes[chr];
    }
    /**
   * Gets the value at `key` of `object`.
   *
   * @private
   * @param {Object} [object] The object to query.
   * @param {string} key The key of the property to get.
   * @returns {*} Returns the property value.
   */ function getValue(object, key) {
        return object == null ? undefined : object[key];
    }
    /**
   * Checks if `string` contains Unicode symbols.
   *
   * @private
   * @param {string} string The string to inspect.
   * @returns {boolean} Returns `true` if a symbol is found, else `false`.
   */ function hasUnicode(string) {
        return reHasUnicode.test(string);
    }
    /**
   * Checks if `string` contains a word composed of Unicode symbols.
   *
   * @private
   * @param {string} string The string to inspect.
   * @returns {boolean} Returns `true` if a word is found, else `false`.
   */ function hasUnicodeWord(string) {
        return reHasUnicodeWord.test(string);
    }
    /**
   * Converts `iterator` to an array.
   *
   * @private
   * @param {Object} iterator The iterator to convert.
   * @returns {Array} Returns the converted array.
   */ function iteratorToArray(iterator) {
        var data, result = [];
        while(!(data = iterator.next()).done)result.push(data.value);
        return result;
    }
    /**
   * Converts `map` to its key-value pairs.
   *
   * @private
   * @param {Object} map The map to convert.
   * @returns {Array} Returns the key-value pairs.
   */ function mapToArray(map) {
        var index = -1, result = Array(map.size);
        map.forEach(function(value, key) {
            result[++index] = [
                key,
                value
            ];
        });
        return result;
    }
    /**
   * Creates a unary function that invokes `func` with its argument transformed.
   *
   * @private
   * @param {Function} func The function to wrap.
   * @param {Function} transform The argument transform.
   * @returns {Function} Returns the new function.
   */ function overArg(func, transform) {
        return function(arg) {
            return func(transform(arg));
        };
    }
    /**
   * Replaces all `placeholder` elements in `array` with an internal placeholder
   * and returns an array of their indexes.
   *
   * @private
   * @param {Array} array The array to modify.
   * @param {*} placeholder The placeholder to replace.
   * @returns {Array} Returns the new array of placeholder indexes.
   */ function replaceHolders(array, placeholder) {
        var index = -1, length = array.length, resIndex = 0, result = [];
        while(++index < length){
            var value = array[index];
            if (value === placeholder || value === PLACEHOLDER) {
                array[index] = PLACEHOLDER;
                result[resIndex++] = index;
            }
        }
        return result;
    }
    /**
   * Converts `set` to an array of its values.
   *
   * @private
   * @param {Object} set The set to convert.
   * @returns {Array} Returns the values.
   */ function setToArray(set) {
        var index = -1, result = Array(set.size);
        set.forEach(function(value) {
            result[++index] = value;
        });
        return result;
    }
    /**
   * Converts `set` to its value-value pairs.
   *
   * @private
   * @param {Object} set The set to convert.
   * @returns {Array} Returns the value-value pairs.
   */ function setToPairs(set) {
        var index = -1, result = Array(set.size);
        set.forEach(function(value) {
            result[++index] = [
                value,
                value
            ];
        });
        return result;
    }
    /**
   * A specialized version of `_.indexOf` which performs strict equality
   * comparisons of values, i.e. `===`.
   *
   * @private
   * @param {Array} array The array to inspect.
   * @param {*} value The value to search for.
   * @param {number} fromIndex The index to search from.
   * @returns {number} Returns the index of the matched value, else `-1`.
   */ function strictIndexOf(array, value, fromIndex) {
        var index = fromIndex - 1, length = array.length;
        while(++index < length){
            if (array[index] === value) return index;
        }
        return -1;
    }
    /**
   * A specialized version of `_.lastIndexOf` which performs strict equality
   * comparisons of values, i.e. `===`.
   *
   * @private
   * @param {Array} array The array to inspect.
   * @param {*} value The value to search for.
   * @param {number} fromIndex The index to search from.
   * @returns {number} Returns the index of the matched value, else `-1`.
   */ function strictLastIndexOf(array, value, fromIndex) {
        var index = fromIndex + 1;
        while(index--){
            if (array[index] === value) return index;
        }
        return index;
    }
    /**
   * Gets the number of symbols in `string`.
   *
   * @private
   * @param {string} string The string to inspect.
   * @returns {number} Returns the string size.
   */ function stringSize(string) {
        return hasUnicode(string) ? unicodeSize(string) : asciiSize(string);
    }
    /**
   * Converts `string` to an array.
   *
   * @private
   * @param {string} string The string to convert.
   * @returns {Array} Returns the converted array.
   */ function stringToArray(string) {
        return hasUnicode(string) ? unicodeToArray(string) : asciiToArray(string);
    }
    /**
   * Used by `_.trim` and `_.trimEnd` to get the index of the last non-whitespace
   * character of `string`.
   *
   * @private
   * @param {string} string The string to inspect.
   * @returns {number} Returns the index of the last non-whitespace character.
   */ function trimmedEndIndex(string) {
        var index = string.length;
        while(index-- && reWhitespace.test(string.charAt(index)));
        return index;
    }
    /**
   * Used by `_.unescape` to convert HTML entities to characters.
   *
   * @private
   * @param {string} chr The matched character to unescape.
   * @returns {string} Returns the unescaped character.
   */ var unescapeHtmlChar = basePropertyOf(htmlUnescapes);
    /**
   * Gets the size of a Unicode `string`.
   *
   * @private
   * @param {string} string The string inspect.
   * @returns {number} Returns the string size.
   */ function unicodeSize(string) {
        var result = reUnicode.lastIndex = 0;
        while(reUnicode.test(string))++result;
        return result;
    }
    /**
   * Converts a Unicode `string` to an array.
   *
   * @private
   * @param {string} string The string to convert.
   * @returns {Array} Returns the converted array.
   */ function unicodeToArray(string) {
        return string.match(reUnicode) || [];
    }
    /**
   * Splits a Unicode `string` into an array of its words.
   *
   * @private
   * @param {string} The string to inspect.
   * @returns {Array} Returns the words of `string`.
   */ function unicodeWords(string) {
        return string.match(reUnicodeWord) || [];
    }
    /*--------------------------------------------------------------------------*/ /**
   * Create a new pristine `lodash` function using the `context` object.
   *
   * @static
   * @memberOf _
   * @since 1.1.0
   * @category Util
   * @param {Object} [context=root] The context object.
   * @returns {Function} Returns a new `lodash` function.
   * @example
   *
   * _.mixin({ 'foo': _.constant('foo') });
   *
   * var lodash = _.runInContext();
   * lodash.mixin({ 'bar': lodash.constant('bar') });
   *
   * _.isFunction(_.foo);
   * // => true
   * _.isFunction(_.bar);
   * // => false
   *
   * lodash.isFunction(lodash.foo);
   * // => false
   * lodash.isFunction(lodash.bar);
   * // => true
   *
   * // Create a suped-up `defer` in Node.js.
   * var defer = _.runInContext({ 'setTimeout': setImmediate }).defer;
   */ var runInContext = function runInContext(context) {
        context = context == null ? root : _.defaults(root.Object(), context, _.pick(root, contextProps));
        /** Built-in constructor references. */ var Array1 = context.Array, Date = context.Date, Error = context.Error, Function1 = context.Function, Math = context.Math, Object1 = context.Object, RegExp1 = context.RegExp, String = context.String, TypeError = context.TypeError;
        /** Used for built-in method references. */ var arrayProto = Array1.prototype, funcProto = Function1.prototype, objectProto = Object1.prototype;
        /** Used to detect overreaching core-js shims. */ var coreJsData = context["__core-js_shared__"];
        /** Used to resolve the decompiled source of functions. */ var funcToString = funcProto.toString;
        /** Used to check objects for own properties. */ var hasOwnProperty = objectProto.hasOwnProperty;
        /** Used to generate unique IDs. */ var idCounter = 0;
        /** Used to detect methods masquerading as native. */ var maskSrcKey = function() {
            var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || "");
            return uid ? "Symbol(src)_1." + uid : "";
        }();
        /**
     * Used to resolve the
     * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)
     * of values.
     */ var nativeObjectToString = objectProto.toString;
        /** Used to infer the `Object` constructor. */ var objectCtorString = funcToString.call(Object1);
        /** Used to restore the original `_` reference in `_.noConflict`. */ var oldDash = root._;
        /** Used to detect if a method is native. */ var reIsNative = RegExp1("^" + funcToString.call(hasOwnProperty).replace(reRegExpChar, "\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, "$1.*?") + "$");
        /** Built-in value references. */ var Buffer = moduleExports ? context.Buffer : undefined, Symbol = context.Symbol, Uint8Array = context.Uint8Array, allocUnsafe = Buffer ? Buffer.allocUnsafe : undefined, getPrototype = overArg(Object1.getPrototypeOf, Object1), objectCreate = Object1.create, propertyIsEnumerable = objectProto.propertyIsEnumerable, splice = arrayProto.splice, spreadableSymbol = Symbol ? Symbol.isConcatSpreadable : undefined, symIterator = Symbol ? Symbol.iterator : undefined, symToStringTag = Symbol ? Symbol.toStringTag : undefined;
        var defineProperty = function() {
            try {
                var func = getNative(Object1, "defineProperty");
                func({}, "", {});
                return func;
            } catch (e) {}
        }();
        /** Mocked built-ins. */ var ctxClearTimeout = context.clearTimeout !== root.clearTimeout && context.clearTimeout, ctxNow = Date && Date.now !== root.Date.now && Date.now, ctxSetTimeout = context.setTimeout !== root.setTimeout && context.setTimeout;
        /* Built-in method references for those with the same name as other `lodash` methods. */ var nativeCeil = Math.ceil, nativeFloor = Math.floor, nativeGetSymbols = Object1.getOwnPropertySymbols, nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined, nativeIsFinite = context.isFinite, nativeJoin = arrayProto.join, nativeKeys = overArg(Object1.keys, Object1), nativeMax = Math.max, nativeMin = Math.min, nativeNow = Date.now, nativeParseInt = context.parseInt, nativeRandom = Math.random, nativeReverse = arrayProto.reverse;
        /* Built-in method references that are verified to be native. */ var DataView = getNative(context, "DataView"), Map = getNative(context, "Map"), Promise = getNative(context, "Promise"), Set = getNative(context, "Set"), WeakMap = getNative(context, "WeakMap"), nativeCreate = getNative(Object1, "create");
        /** Used to store function metadata. */ var metaMap = WeakMap && new WeakMap;
        /** Used to lookup unminified function names. */ var realNames = {};
        /** Used to detect maps, sets, and weakmaps. */ var dataViewCtorString = toSource(DataView), mapCtorString = toSource(Map), promiseCtorString = toSource(Promise), setCtorString = toSource(Set), weakMapCtorString = toSource(WeakMap);
        /** Used to convert symbols to primitives and strings. */ var symbolProto = Symbol ? Symbol.prototype : undefined, symbolValueOf = symbolProto ? symbolProto.valueOf : undefined, symbolToString = symbolProto ? symbolProto.toString : undefined;
        /*------------------------------------------------------------------------*/ /**
     * Creates a `lodash` object which wraps `value` to enable implicit method
     * chain sequences. Methods that operate on and return arrays, collections,
     * and functions can be chained together. Methods that retrieve a single value
     * or may return a primitive value will automatically end the chain sequence
     * and return the unwrapped value. Otherwise, the value must be unwrapped
     * with `_#value`.
     *
     * Explicit chain sequences, which must be unwrapped with `_#value`, may be
     * enabled using `_.chain`.
     *
     * The execution of chained methods is lazy, that is, it's deferred until
     * `_#value` is implicitly or explicitly called.
     *
     * Lazy evaluation allows several methods to support shortcut fusion.
     * Shortcut fusion is an optimization to merge iteratee calls; this avoids
     * the creation of intermediate arrays and can greatly reduce the number of
     * iteratee executions. Sections of a chain sequence qualify for shortcut
     * fusion if the section is applied to an array and iteratees accept only
     * one argument. The heuristic for whether a section qualifies for shortcut
     * fusion is subject to change.
     *
     * Chaining is supported in custom builds as long as the `_#value` method is
     * directly or indirectly included in the build.
     *
     * In addition to lodash methods, wrappers have `Array` and `String` methods.
     *
     * The wrapper `Array` methods are:
     * `concat`, `join`, `pop`, `push`, `shift`, `sort`, `splice`, and `unshift`
     *
     * The wrapper `String` methods are:
     * `replace` and `split`
     *
     * The wrapper methods that support shortcut fusion are:
     * `at`, `compact`, `drop`, `dropRight`, `dropWhile`, `filter`, `find`,
     * `findLast`, `head`, `initial`, `last`, `map`, `reject`, `reverse`, `slice`,
     * `tail`, `take`, `takeRight`, `takeRightWhile`, `takeWhile`, and `toArray`
     *
     * The chainable wrapper methods are:
     * `after`, `ary`, `assign`, `assignIn`, `assignInWith`, `assignWith`, `at`,
     * `before`, `bind`, `bindAll`, `bindKey`, `castArray`, `chain`, `chunk`,
     * `commit`, `compact`, `concat`, `conforms`, `constant`, `countBy`, `create`,
     * `curry`, `debounce`, `defaults`, `defaultsDeep`, `defer`, `delay`,
     * `difference`, `differenceBy`, `differenceWith`, `drop`, `dropRight`,
     * `dropRightWhile`, `dropWhile`, `extend`, `extendWith`, `fill`, `filter`,
     * `flatMap`, `flatMapDeep`, `flatMapDepth`, `flatten`, `flattenDeep`,
     * `flattenDepth`, `flip`, `flow`, `flowRight`, `fromPairs`, `functions`,
     * `functionsIn`, `groupBy`, `initial`, `intersection`, `intersectionBy`,
     * `intersectionWith`, `invert`, `invertBy`, `invokeMap`, `iteratee`, `keyBy`,
     * `keys`, `keysIn`, `map`, `mapKeys`, `mapValues`, `matches`, `matchesProperty`,
     * `memoize`, `merge`, `mergeWith`, `method`, `methodOf`, `mixin`, `negate`,
     * `nthArg`, `omit`, `omitBy`, `once`, `orderBy`, `over`, `overArgs`,
     * `overEvery`, `overSome`, `partial`, `partialRight`, `partition`, `pick`,
     * `pickBy`, `plant`, `property`, `propertyOf`, `pull`, `pullAll`, `pullAllBy`,
     * `pullAllWith`, `pullAt`, `push`, `range`, `rangeRight`, `rearg`, `reject`,
     * `remove`, `rest`, `reverse`, `sampleSize`, `set`, `setWith`, `shuffle`,
     * `slice`, `sort`, `sortBy`, `splice`, `spread`, `tail`, `take`, `takeRight`,
     * `takeRightWhile`, `takeWhile`, `tap`, `throttle`, `thru`, `toArray`,
     * `toPairs`, `toPairsIn`, `toPath`, `toPlainObject`, `transform`, `unary`,
     * `union`, `unionBy`, `unionWith`, `uniq`, `uniqBy`, `uniqWith`, `unset`,
     * `unshift`, `unzip`, `unzipWith`, `update`, `updateWith`, `values`,
     * `valuesIn`, `without`, `wrap`, `xor`, `xorBy`, `xorWith`, `zip`,
     * `zipObject`, `zipObjectDeep`, and `zipWith`
     *
     * The wrapper methods that are **not** chainable by default are:
     * `add`, `attempt`, `camelCase`, `capitalize`, `ceil`, `clamp`, `clone`,
     * `cloneDeep`, `cloneDeepWith`, `cloneWith`, `conformsTo`, `deburr`,
     * `defaultTo`, `divide`, `each`, `eachRight`, `endsWith`, `eq`, `escape`,
     * `escapeRegExp`, `every`, `find`, `findIndex`, `findKey`, `findLast`,
     * `findLastIndex`, `findLastKey`, `first`, `floor`, `forEach`, `forEachRight`,
     * `forIn`, `forInRight`, `forOwn`, `forOwnRight`, `get`, `gt`, `gte`, `has`,
     * `hasIn`, `head`, `identity`, `includes`, `indexOf`, `inRange`, `invoke`,
     * `isArguments`, `isArray`, `isArrayBuffer`, `isArrayLike`, `isArrayLikeObject`,
     * `isBoolean`, `isBuffer`, `isDate`, `isElement`, `isEmpty`, `isEqual`,
     * `isEqualWith`, `isError`, `isFinite`, `isFunction`, `isInteger`, `isLength`,
     * `isMap`, `isMatch`, `isMatchWith`, `isNaN`, `isNative`, `isNil`, `isNull`,
     * `isNumber`, `isObject`, `isObjectLike`, `isPlainObject`, `isRegExp`,
     * `isSafeInteger`, `isSet`, `isString`, `isUndefined`, `isTypedArray`,
     * `isWeakMap`, `isWeakSet`, `join`, `kebabCase`, `last`, `lastIndexOf`,
     * `lowerCase`, `lowerFirst`, `lt`, `lte`, `max`, `maxBy`, `mean`, `meanBy`,
     * `min`, `minBy`, `multiply`, `noConflict`, `noop`, `now`, `nth`, `pad`,
     * `padEnd`, `padStart`, `parseInt`, `pop`, `random`, `reduce`, `reduceRight`,
     * `repeat`, `result`, `round`, `runInContext`, `sample`, `shift`, `size`,
     * `snakeCase`, `some`, `sortedIndex`, `sortedIndexBy`, `sortedLastIndex`,
     * `sortedLastIndexBy`, `startCase`, `startsWith`, `stubArray`, `stubFalse`,
     * `stubObject`, `stubString`, `stubTrue`, `subtract`, `sum`, `sumBy`,
     * `template`, `times`, `toFinite`, `toInteger`, `toJSON`, `toLength`,
     * `toLower`, `toNumber`, `toSafeInteger`, `toString`, `toUpper`, `trim`,
     * `trimEnd`, `trimStart`, `truncate`, `unescape`, `uniqueId`, `upperCase`,
     * `upperFirst`, `value`, and `words`
     *
     * @name _
     * @constructor
     * @category Seq
     * @param {*} value The value to wrap in a `lodash` instance.
     * @returns {Object} Returns the new `lodash` wrapper instance.
     * @example
     *
     * function square(n) {
     *   return n * n;
     * }
     *
     * var wrapped = _([1, 2, 3]);
     *
     * // Returns an unwrapped value.
     * wrapped.reduce(_.add);
     * // => 6
     *
     * // Returns a wrapped value.
     * var squares = wrapped.map(square);
     *
     * _.isArray(squares);
     * // => false
     *
     * _.isArray(squares.value());
     * // => true
     */ function lodash(value) {
            if (isObjectLike(value) && !isArray(value) && !(value instanceof LazyWrapper)) {
                if (value instanceof LodashWrapper) return value;
                if (hasOwnProperty.call(value, "__wrapped__")) return wrapperClone(value);
            }
            return new LodashWrapper(value);
        }
        /**
     * The base implementation of `_.create` without support for assigning
     * properties to the created object.
     *
     * @private
     * @param {Object} proto The object to inherit from.
     * @returns {Object} Returns the new object.
     */ var baseCreate = function() {
            function object() {}
            return function(proto) {
                if (!isObject(proto)) return {};
                if (objectCreate) return objectCreate(proto);
                object.prototype = proto;
                var result = new object;
                object.prototype = undefined;
                return result;
            };
        }();
        /**
     * The function whose prototype chain sequence wrappers inherit from.
     *
     * @private
     */ function baseLodash() {
        // No operation performed.
        }
        /**
     * The base constructor for creating `lodash` wrapper objects.
     *
     * @private
     * @param {*} value The value to wrap.
     * @param {boolean} [chainAll] Enable explicit method chain sequences.
     */ function LodashWrapper(value, chainAll) {
            this.__wrapped__ = value;
            this.__actions__ = [];
            this.__chain__ = !!chainAll;
            this.__index__ = 0;
            this.__values__ = undefined;
        }
        /**
     * By default, the template delimiters used by lodash are like those in
     * embedded Ruby (ERB) as well as ES2015 template strings. Change the
     * following template settings to use alternative delimiters.
     *
     * @static
     * @memberOf _
     * @type {Object}
     */ lodash.templateSettings = {
            /**
       * Used to detect `data` property values to be HTML-escaped.
       *
       * @memberOf _.templateSettings
       * @type {RegExp}
       */ "escape": reEscape,
            /**
       * Used to detect code to be evaluated.
       *
       * @memberOf _.templateSettings
       * @type {RegExp}
       */ "evaluate": reEvaluate,
            /**
       * Used to detect `data` property values to inject.
       *
       * @memberOf _.templateSettings
       * @type {RegExp}
       */ "interpolate": reInterpolate,
            /**
       * Used to reference the data object in the template text.
       *
       * @memberOf _.templateSettings
       * @type {string}
       */ "variable": "",
            /**
       * Used to import variables into the compiled template.
       *
       * @memberOf _.templateSettings
       * @type {Object}
       */ "imports": {
                /**
         * A reference to the `lodash` function.
         *
         * @memberOf _.templateSettings.imports
         * @type {Function}
         */ "_": lodash
            }
        };
        // Ensure wrappers are instances of `baseLodash`.
        lodash.prototype = baseLodash.prototype;
        lodash.prototype.constructor = lodash;
        LodashWrapper.prototype = baseCreate(baseLodash.prototype);
        LodashWrapper.prototype.constructor = LodashWrapper;
        /*------------------------------------------------------------------------*/ /**
     * Creates a lazy wrapper object which wraps `value` to enable lazy evaluation.
     *
     * @private
     * @constructor
     * @param {*} value The value to wrap.
     */ function LazyWrapper(value) {
            this.__wrapped__ = value;
            this.__actions__ = [];
            this.__dir__ = 1;
            this.__filtered__ = false;
            this.__iteratees__ = [];
            this.__takeCount__ = MAX_ARRAY_LENGTH;
            this.__views__ = [];
        }
        /**
     * Creates a clone of the lazy wrapper object.
     *
     * @private
     * @name clone
     * @memberOf LazyWrapper
     * @returns {Object} Returns the cloned `LazyWrapper` object.
     */ function lazyClone() {
            var result = new LazyWrapper(this.__wrapped__);
            result.__actions__ = copyArray(this.__actions__);
            result.__dir__ = this.__dir__;
            result.__filtered__ = this.__filtered__;
            result.__iteratees__ = copyArray(this.__iteratees__);
            result.__takeCount__ = this.__takeCount__;
            result.__views__ = copyArray(this.__views__);
            return result;
        }
        /**
     * Reverses the direction of lazy iteration.
     *
     * @private
     * @name reverse
     * @memberOf LazyWrapper
     * @returns {Object} Returns the new reversed `LazyWrapper` object.
     */ function lazyReverse() {
            if (this.__filtered__) {
                var result = new LazyWrapper(this);
                result.__dir__ = -1;
                result.__filtered__ = true;
            } else {
                result = this.clone();
                result.__dir__ *= -1;
            }
            return result;
        }
        /**
     * Extracts the unwrapped value from its lazy wrapper.
     *
     * @private
     * @name value
     * @memberOf LazyWrapper
     * @returns {*} Returns the unwrapped value.
     */ function lazyValue() {
            var array = this.__wrapped__.value(), dir = this.__dir__, isArr = isArray(array), isRight = dir < 0, arrLength = isArr ? array.length : 0, view = getView(0, arrLength, this.__views__), start = view.start, end = view.end, length = end - start, index = isRight ? end : start - 1, iteratees = this.__iteratees__, iterLength = iteratees.length, resIndex = 0, takeCount = nativeMin(length, this.__takeCount__);
            if (!isArr || !isRight && arrLength == length && takeCount == length) return baseWrapperValue(array, this.__actions__);
            var result = [];
            outer: while(length-- && resIndex < takeCount){
                index += dir;
                var iterIndex = -1, value = array[index];
                while(++iterIndex < iterLength){
                    var data = iteratees[iterIndex], iteratee = data.iteratee, type = data.type, computed = iteratee(value);
                    if (type == LAZY_MAP_FLAG) value = computed;
                    else if (!computed) {
                        if (type == LAZY_FILTER_FLAG) continue outer;
                        else break outer;
                    }
                }
                result[resIndex++] = value;
            }
            return result;
        }
        // Ensure `LazyWrapper` is an instance of `baseLodash`.
        LazyWrapper.prototype = baseCreate(baseLodash.prototype);
        LazyWrapper.prototype.constructor = LazyWrapper;
        /*------------------------------------------------------------------------*/ /**
     * Creates a hash object.
     *
     * @private
     * @constructor
     * @param {Array} [entries] The key-value pairs to cache.
     */ function Hash(entries) {
            var index = -1, length = entries == null ? 0 : entries.length;
            this.clear();
            while(++index < length){
                var entry = entries[index];
                this.set(entry[0], entry[1]);
            }
        }
        /**
     * Removes all key-value entries from the hash.
     *
     * @private
     * @name clear
     * @memberOf Hash
     */ function hashClear() {
            this.__data__ = nativeCreate ? nativeCreate(null) : {};
            this.size = 0;
        }
        /**
     * Removes `key` and its value from the hash.
     *
     * @private
     * @name delete
     * @memberOf Hash
     * @param {Object} hash The hash to modify.
     * @param {string} key The key of the value to remove.
     * @returns {boolean} Returns `true` if the entry was removed, else `false`.
     */ function hashDelete(key) {
            var result = this.has(key) && delete this.__data__[key];
            this.size -= result ? 1 : 0;
            return result;
        }
        /**
     * Gets the hash value for `key`.
     *
     * @private
     * @name get
     * @memberOf Hash
     * @param {string} key The key of the value to get.
     * @returns {*} Returns the entry value.
     */ function hashGet(key) {
            var data = this.__data__;
            if (nativeCreate) {
                var result = data[key];
                return result === HASH_UNDEFINED ? undefined : result;
            }
            return hasOwnProperty.call(data, key) ? data[key] : undefined;
        }
        /**
     * Checks if a hash value for `key` exists.
     *
     * @private
     * @name has
     * @memberOf Hash
     * @param {string} key The key of the entry to check.
     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
     */ function hashHas(key) {
            var data = this.__data__;
            return nativeCreate ? data[key] !== undefined : hasOwnProperty.call(data, key);
        }
        /**
     * Sets the hash `key` to `value`.
     *
     * @private
     * @name set
     * @memberOf Hash
     * @param {string} key The key of the value to set.
     * @param {*} value The value to set.
     * @returns {Object} Returns the hash instance.
     */ function hashSet(key, value) {
            var data = this.__data__;
            this.size += this.has(key) ? 0 : 1;
            data[key] = nativeCreate && value === undefined ? HASH_UNDEFINED : value;
            return this;
        }
        // Add methods to `Hash`.
        Hash.prototype.clear = hashClear;
        Hash.prototype["delete"] = hashDelete;
        Hash.prototype.get = hashGet;
        Hash.prototype.has = hashHas;
        Hash.prototype.set = hashSet;
        /*------------------------------------------------------------------------*/ /**
     * Creates an list cache object.
     *
     * @private
     * @constructor
     * @param {Array} [entries] The key-value pairs to cache.
     */ function ListCache(entries) {
            var index = -1, length = entries == null ? 0 : entries.length;
            this.clear();
            while(++index < length){
                var entry = entries[index];
                this.set(entry[0], entry[1]);
            }
        }
        /**
     * Removes all key-value entries from the list cache.
     *
     * @private
     * @name clear
     * @memberOf ListCache
     */ function listCacheClear() {
            this.__data__ = [];
            this.size = 0;
        }
        /**
     * Removes `key` and its value from the list cache.
     *
     * @private
     * @name delete
     * @memberOf ListCache
     * @param {string} key The key of the value to remove.
     * @returns {boolean} Returns `true` if the entry was removed, else `false`.
     */ function listCacheDelete(key) {
            var data = this.__data__, index = assocIndexOf(data, key);
            if (index < 0) return false;
            var lastIndex = data.length - 1;
            if (index == lastIndex) data.pop();
            else splice.call(data, index, 1);
            --this.size;
            return true;
        }
        /**
     * Gets the list cache value for `key`.
     *
     * @private
     * @name get
     * @memberOf ListCache
     * @param {string} key The key of the value to get.
     * @returns {*} Returns the entry value.
     */ function listCacheGet(key) {
            var data = this.__data__, index = assocIndexOf(data, key);
            return index < 0 ? undefined : data[index][1];
        }
        /**
     * Checks if a list cache value for `key` exists.
     *
     * @private
     * @name has
     * @memberOf ListCache
     * @param {string} key The key of the entry to check.
     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
     */ function listCacheHas(key) {
            return assocIndexOf(this.__data__, key) > -1;
        }
        /**
     * Sets the list cache `key` to `value`.
     *
     * @private
     * @name set
     * @memberOf ListCache
     * @param {string} key The key of the value to set.
     * @param {*} value The value to set.
     * @returns {Object} Returns the list cache instance.
     */ function listCacheSet(key, value) {
            var data = this.__data__, index = assocIndexOf(data, key);
            if (index < 0) {
                ++this.size;
                data.push([
                    key,
                    value
                ]);
            } else data[index][1] = value;
            return this;
        }
        // Add methods to `ListCache`.
        ListCache.prototype.clear = listCacheClear;
        ListCache.prototype["delete"] = listCacheDelete;
        ListCache.prototype.get = listCacheGet;
        ListCache.prototype.has = listCacheHas;
        ListCache.prototype.set = listCacheSet;
        /*------------------------------------------------------------------------*/ /**
     * Creates a map cache object to store key-value pairs.
     *
     * @private
     * @constructor
     * @param {Array} [entries] The key-value pairs to cache.
     */ function MapCache(entries) {
            var index = -1, length = entries == null ? 0 : entries.length;
            this.clear();
            while(++index < length){
                var entry = entries[index];
                this.set(entry[0], entry[1]);
            }
        }
        /**
     * Removes all key-value entries from the map.
     *
     * @private
     * @name clear
     * @memberOf MapCache
     */ function mapCacheClear() {
            this.size = 0;
            this.__data__ = {
                "hash": new Hash,
                "map": new (Map || ListCache),
                "string": new Hash
            };
        }
        /**
     * Removes `key` and its value from the map.
     *
     * @private
     * @name delete
     * @memberOf MapCache
     * @param {string} key The key of the value to remove.
     * @returns {boolean} Returns `true` if the entry was removed, else `false`.
     */ function mapCacheDelete(key) {
            var result = getMapData(this, key)["delete"](key);
            this.size -= result ? 1 : 0;
            return result;
        }
        /**
     * Gets the map value for `key`.
     *
     * @private
     * @name get
     * @memberOf MapCache
     * @param {string} key The key of the value to get.
     * @returns {*} Returns the entry value.
     */ function mapCacheGet(key) {
            return getMapData(this, key).get(key);
        }
        /**
     * Checks if a map value for `key` exists.
     *
     * @private
     * @name has
     * @memberOf MapCache
     * @param {string} key The key of the entry to check.
     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
     */ function mapCacheHas(key) {
            return getMapData(this, key).has(key);
        }
        /**
     * Sets the map `key` to `value`.
     *
     * @private
     * @name set
     * @memberOf MapCache
     * @param {string} key The key of the value to set.
     * @param {*} value The value to set.
     * @returns {Object} Returns the map cache instance.
     */ function mapCacheSet(key, value) {
            var data = getMapData(this, key), size = data.size;
            data.set(key, value);
            this.size += data.size == size ? 0 : 1;
            return this;
        }
        // Add methods to `MapCache`.
        MapCache.prototype.clear = mapCacheClear;
        MapCache.prototype["delete"] = mapCacheDelete;
        MapCache.prototype.get = mapCacheGet;
        MapCache.prototype.has = mapCacheHas;
        MapCache.prototype.set = mapCacheSet;
        /*------------------------------------------------------------------------*/ /**
     *
     * Creates an array cache object to store unique values.
     *
     * @private
     * @constructor
     * @param {Array} [values] The values to cache.
     */ function SetCache(values) {
            var index = -1, length = values == null ? 0 : values.length;
            this.__data__ = new MapCache;
            while(++index < length)this.add(values[index]);
        }
        /**
     * Adds `value` to the array cache.
     *
     * @private
     * @name add
     * @memberOf SetCache
     * @alias push
     * @param {*} value The value to cache.
     * @returns {Object} Returns the cache instance.
     */ function setCacheAdd(value) {
            this.__data__.set(value, HASH_UNDEFINED);
            return this;
        }
        /**
     * Checks if `value` is in the array cache.
     *
     * @private
     * @name has
     * @memberOf SetCache
     * @param {*} value The value to search for.
     * @returns {number} Returns `true` if `value` is found, else `false`.
     */ function setCacheHas(value) {
            return this.__data__.has(value);
        }
        // Add methods to `SetCache`.
        SetCache.prototype.add = SetCache.prototype.push = setCacheAdd;
        SetCache.prototype.has = setCacheHas;
        /*------------------------------------------------------------------------*/ /**
     * Creates a stack cache object to store key-value pairs.
     *
     * @private
     * @constructor
     * @param {Array} [entries] The key-value pairs to cache.
     */ function Stack(entries) {
            var data = this.__data__ = new ListCache(entries);
            this.size = data.size;
        }
        /**
     * Removes all key-value entries from the stack.
     *
     * @private
     * @name clear
     * @memberOf Stack
     */ function stackClear() {
            this.__data__ = new ListCache;
            this.size = 0;
        }
        /**
     * Removes `key` and its value from the stack.
     *
     * @private
     * @name delete
     * @memberOf Stack
     * @param {string} key The key of the value to remove.
     * @returns {boolean} Returns `true` if the entry was removed, else `false`.
     */ function stackDelete(key) {
            var data = this.__data__, result = data["delete"](key);
            this.size = data.size;
            return result;
        }
        /**
     * Gets the stack value for `key`.
     *
     * @private
     * @name get
     * @memberOf Stack
     * @param {string} key The key of the value to get.
     * @returns {*} Returns the entry value.
     */ function stackGet(key) {
            return this.__data__.get(key);
        }
        /**
     * Checks if a stack value for `key` exists.
     *
     * @private
     * @name has
     * @memberOf Stack
     * @param {string} key The key of the entry to check.
     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
     */ function stackHas(key) {
            return this.__data__.has(key);
        }
        /**
     * Sets the stack `key` to `value`.
     *
     * @private
     * @name set
     * @memberOf Stack
     * @param {string} key The key of the value to set.
     * @param {*} value The value to set.
     * @returns {Object} Returns the stack cache instance.
     */ function stackSet(key, value) {
            var data = this.__data__;
            if (data instanceof ListCache) {
                var pairs = data.__data__;
                if (!Map || pairs.length < LARGE_ARRAY_SIZE - 1) {
                    pairs.push([
                        key,
                        value
                    ]);
                    this.size = ++data.size;
                    return this;
                }
                data = this.__data__ = new MapCache(pairs);
            }
            data.set(key, value);
            this.size = data.size;
            return this;
        }
        // Add methods to `Stack`.
        Stack.prototype.clear = stackClear;
        Stack.prototype["delete"] = stackDelete;
        Stack.prototype.get = stackGet;
        Stack.prototype.has = stackHas;
        Stack.prototype.set = stackSet;
        /*------------------------------------------------------------------------*/ /**
     * Creates an array of the enumerable property names of the array-like `value`.
     *
     * @private
     * @param {*} value The value to query.
     * @param {boolean} inherited Specify returning inherited property names.
     * @returns {Array} Returns the array of property names.
     */ function arrayLikeKeys(value, inherited) {
            var isArr = isArray(value), isArg = !isArr && isArguments(value), isBuff = !isArr && !isArg && isBuffer(value), isType = !isArr && !isArg && !isBuff && isTypedArray(value), skipIndexes = isArr || isArg || isBuff || isType, result = skipIndexes ? baseTimes(value.length, String) : [], length = result.length;
            for(var key in value)if ((inherited || hasOwnProperty.call(value, key)) && !(skipIndexes && // Safari 9 has enumerable `arguments.length` in strict mode.
            (key == "length" || // Node.js 0.10 has enumerable non-index properties on buffers.
            isBuff && (key == "offset" || key == "parent") || // PhantomJS 2 has enumerable non-index properties on typed arrays.
            isType && (key == "buffer" || key == "byteLength" || key == "byteOffset") || // Skip index properties.
            isIndex(key, length)))) result.push(key);
            return result;
        }
        /**
     * A specialized version of `_.sample` for arrays.
     *
     * @private
     * @param {Array} array The array to sample.
     * @returns {*} Returns the random element.
     */ function arraySample(array) {
            var length = array.length;
            return length ? array[baseRandom(0, length - 1)] : undefined;
        }
        /**
     * A specialized version of `_.sampleSize` for arrays.
     *
     * @private
     * @param {Array} array The array to sample.
     * @param {number} n The number of elements to sample.
     * @returns {Array} Returns the random elements.
     */ function arraySampleSize(array, n) {
            return shuffleSelf(copyArray(array), baseClamp(n, 0, array.length));
        }
        /**
     * A specialized version of `_.shuffle` for arrays.
     *
     * @private
     * @param {Array} array The array to shuffle.
     * @returns {Array} Returns the new shuffled array.
     */ function arrayShuffle(array) {
            return shuffleSelf(copyArray(array));
        }
        /**
     * This function is like `assignValue` except that it doesn't assign
     * `undefined` values.
     *
     * @private
     * @param {Object} object The object to modify.
     * @param {string} key The key of the property to assign.
     * @param {*} value The value to assign.
     */ function assignMergeValue(object, key, value) {
            if (value !== undefined && !eq(object[key], value) || value === undefined && !(key in object)) baseAssignValue(object, key, value);
        }
        /**
     * Assigns `value` to `key` of `object` if the existing value is not equivalent
     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
     * for equality comparisons.
     *
     * @private
     * @param {Object} object The object to modify.
     * @param {string} key The key of the property to assign.
     * @param {*} value The value to assign.
     */ function assignValue(object, key, value) {
            var objValue = object[key];
            if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) || value === undefined && !(key in object)) baseAssignValue(object, key, value);
        }
        /**
     * Gets the index at which the `key` is found in `array` of key-value pairs.
     *
     * @private
     * @param {Array} array The array to inspect.
     * @param {*} key The key to search for.
     * @returns {number} Returns the index of the matched value, else `-1`.
     */ function assocIndexOf(array, key) {
            var length = array.length;
            while(length--){
                if (eq(array[length][0], key)) return length;
            }
            return -1;
        }
        /**
     * Aggregates elements of `collection` on `accumulator` with keys transformed
     * by `iteratee` and values set by `setter`.
     *
     * @private
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} setter The function to set `accumulator` values.
     * @param {Function} iteratee The iteratee to transform keys.
     * @param {Object} accumulator The initial aggregated object.
     * @returns {Function} Returns `accumulator`.
     */ function baseAggregator(collection, setter, iteratee, accumulator) {
            baseEach(collection, function(value, key, collection) {
                setter(accumulator, value, iteratee(value), collection);
            });
            return accumulator;
        }
        /**
     * The base implementation of `_.assign` without support for multiple sources
     * or `customizer` functions.
     *
     * @private
     * @param {Object} object The destination object.
     * @param {Object} source The source object.
     * @returns {Object} Returns `object`.
     */ function baseAssign(object, source) {
            return object && copyObject(source, keys(source), object);
        }
        /**
     * The base implementation of `_.assignIn` without support for multiple sources
     * or `customizer` functions.
     *
     * @private
     * @param {Object} object The destination object.
     * @param {Object} source The source object.
     * @returns {Object} Returns `object`.
     */ function baseAssignIn(object, source) {
            return object && copyObject(source, keysIn(source), object);
        }
        /**
     * The base implementation of `assignValue` and `assignMergeValue` without
     * value checks.
     *
     * @private
     * @param {Object} object The object to modify.
     * @param {string} key The key of the property to assign.
     * @param {*} value The value to assign.
     */ function baseAssignValue(object, key, value) {
            if (key == "__proto__" && defineProperty) defineProperty(object, key, {
                "configurable": true,
                "enumerable": true,
                "value": value,
                "writable": true
            });
            else object[key] = value;
        }
        /**
     * The base implementation of `_.at` without support for individual paths.
     *
     * @private
     * @param {Object} object The object to iterate over.
     * @param {string[]} paths The property paths to pick.
     * @returns {Array} Returns the picked elements.
     */ function baseAt(object, paths) {
            var index = -1, length = paths.length, result = Array1(length), skip = object == null;
            while(++index < length)result[index] = skip ? undefined : get(object, paths[index]);
            return result;
        }
        /**
     * The base implementation of `_.clamp` which doesn't coerce arguments.
     *
     * @private
     * @param {number} number The number to clamp.
     * @param {number} [lower] The lower bound.
     * @param {number} upper The upper bound.
     * @returns {number} Returns the clamped number.
     */ function baseClamp(number, lower, upper) {
            if (number === number) {
                if (upper !== undefined) number = number <= upper ? number : upper;
                if (lower !== undefined) number = number >= lower ? number : lower;
            }
            return number;
        }
        /**
     * The base implementation of `_.clone` and `_.cloneDeep` which tracks
     * traversed objects.
     *
     * @private
     * @param {*} value The value to clone.
     * @param {boolean} bitmask The bitmask flags.
     *  1 - Deep clone
     *  2 - Flatten inherited properties
     *  4 - Clone symbols
     * @param {Function} [customizer] The function to customize cloning.
     * @param {string} [key] The key of `value`.
     * @param {Object} [object] The parent object of `value`.
     * @param {Object} [stack] Tracks traversed objects and their clone counterparts.
     * @returns {*} Returns the cloned value.
     */ function baseClone(value, bitmask, customizer, key, object, stack) {
            var result, isDeep = bitmask & CLONE_DEEP_FLAG, isFlat = bitmask & CLONE_FLAT_FLAG, isFull = bitmask & CLONE_SYMBOLS_FLAG;
            if (customizer) result = object ? customizer(value, key, object, stack) : customizer(value);
            if (result !== undefined) return result;
            if (!isObject(value)) return value;
            var isArr = isArray(value);
            if (isArr) {
                result = initCloneArray(value);
                if (!isDeep) return copyArray(value, result);
            } else {
                var tag = getTag(value), isFunc = tag == funcTag || tag == genTag;
                if (isBuffer(value)) return cloneBuffer(value, isDeep);
                if (tag == objectTag || tag == argsTag || isFunc && !object) {
                    result = isFlat || isFunc ? {} : initCloneObject(value);
                    if (!isDeep) return isFlat ? copySymbolsIn(value, baseAssignIn(result, value)) : copySymbols(value, baseAssign(result, value));
                } else {
                    if (!cloneableTags[tag]) return object ? value : {};
                    result = initCloneByTag(value, tag, isDeep);
                }
            }
            // Check for circular references and return its corresponding clone.
            stack || (stack = new Stack);
            var stacked = stack.get(value);
            if (stacked) return stacked;
            stack.set(value, result);
            if (isSet(value)) value.forEach(function(subValue) {
                result.add(baseClone(subValue, bitmask, customizer, subValue, value, stack));
            });
            else if (isMap(value)) value.forEach(function(subValue, key) {
                result.set(key, baseClone(subValue, bitmask, customizer, key, value, stack));
            });
            var keysFunc = isFull ? isFlat ? getAllKeysIn : getAllKeys : isFlat ? keysIn : keys;
            var props = isArr ? undefined : keysFunc(value);
            arrayEach(props || value, function(subValue, key) {
                if (props) {
                    key = subValue;
                    subValue = value[key];
                }
                // Recursively populate clone (susceptible to call stack limits).
                assignValue(result, key, baseClone(subValue, bitmask, customizer, key, value, stack));
            });
            return result;
        }
        /**
     * The base implementation of `_.conforms` which doesn't clone `source`.
     *
     * @private
     * @param {Object} source The object of property predicates to conform to.
     * @returns {Function} Returns the new spec function.
     */ function baseConforms(source) {
            var props = keys(source);
            return function(object) {
                return baseConformsTo(object, source, props);
            };
        }
        /**
     * The base implementation of `_.conformsTo` which accepts `props` to check.
     *
     * @private
     * @param {Object} object The object to inspect.
     * @param {Object} source The object of property predicates to conform to.
     * @returns {boolean} Returns `true` if `object` conforms, else `false`.
     */ function baseConformsTo(object, source, props) {
            var length = props.length;
            if (object == null) return !length;
            object = Object1(object);
            while(length--){
                var key = props[length], predicate = source[key], value = object[key];
                if (value === undefined && !(key in object) || !predicate(value)) return false;
            }
            return true;
        }
        /**
     * The base implementation of `_.delay` and `_.defer` which accepts `args`
     * to provide to `func`.
     *
     * @private
     * @param {Function} func The function to delay.
     * @param {number} wait The number of milliseconds to delay invocation.
     * @param {Array} args The arguments to provide to `func`.
     * @returns {number|Object} Returns the timer id or timeout object.
     */ function baseDelay(func, wait, args) {
            if (typeof func != "function") throw new TypeError(FUNC_ERROR_TEXT);
            return setTimeout(function() {
                func.apply(undefined, args);
            }, wait);
        }
        /**
     * The base implementation of methods like `_.difference` without support
     * for excluding multiple arrays or iteratee shorthands.
     *
     * @private
     * @param {Array} array The array to inspect.
     * @param {Array} values The values to exclude.
     * @param {Function} [iteratee] The iteratee invoked per element.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns the new array of filtered values.
     */ function baseDifference(array, values, iteratee, comparator) {
            var index = -1, includes = arrayIncludes, isCommon = true, length = array.length, result = [], valuesLength = values.length;
            if (!length) return result;
            if (iteratee) values = arrayMap(values, baseUnary(iteratee));
            if (comparator) {
                includes = arrayIncludesWith;
                isCommon = false;
            } else if (values.length >= LARGE_ARRAY_SIZE) {
                includes = cacheHas;
                isCommon = false;
                values = new SetCache(values);
            }
            outer: while(++index < length){
                var value = array[index], computed = iteratee == null ? value : iteratee(value);
                value = comparator || value !== 0 ? value : 0;
                if (isCommon && computed === computed) {
                    var valuesIndex = valuesLength;
                    while(valuesIndex--){
                        if (values[valuesIndex] === computed) continue outer;
                    }
                    result.push(value);
                } else if (!includes(values, computed, comparator)) result.push(value);
            }
            return result;
        }
        /**
     * The base implementation of `_.forEach` without support for iteratee shorthands.
     *
     * @private
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} iteratee The function invoked per iteration.
     * @returns {Array|Object} Returns `collection`.
     */ var baseEach = createBaseEach(baseForOwn);
        /**
     * The base implementation of `_.forEachRight` without support for iteratee shorthands.
     *
     * @private
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} iteratee The function invoked per iteration.
     * @returns {Array|Object} Returns `collection`.
     */ var baseEachRight = createBaseEach(baseForOwnRight, true);
        /**
     * The base implementation of `_.every` without support for iteratee shorthands.
     *
     * @private
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} predicate The function invoked per iteration.
     * @returns {boolean} Returns `true` if all elements pass the predicate check,
     *  else `false`
     */ function baseEvery(collection, predicate) {
            var result = true;
            baseEach(collection, function(value, index, collection) {
                result = !!predicate(value, index, collection);
                return result;
            });
            return result;
        }
        /**
     * The base implementation of methods like `_.max` and `_.min` which accepts a
     * `comparator` to determine the extremum value.
     *
     * @private
     * @param {Array} array The array to iterate over.
     * @param {Function} iteratee The iteratee invoked per iteration.
     * @param {Function} comparator The comparator used to compare values.
     * @returns {*} Returns the extremum value.
     */ function baseExtremum(array, iteratee, comparator) {
            var index = -1, length = array.length;
            while(++index < length){
                var value = array[index], current = iteratee(value);
                if (current != null && (computed === undefined ? current === current && !isSymbol(current) : comparator(current, computed))) var computed = current, result = value;
            }
            return result;
        }
        /**
     * The base implementation of `_.fill` without an iteratee call guard.
     *
     * @private
     * @param {Array} array The array to fill.
     * @param {*} value The value to fill `array` with.
     * @param {number} [start=0] The start position.
     * @param {number} [end=array.length] The end position.
     * @returns {Array} Returns `array`.
     */ function baseFill(array, value, start, end) {
            var length = array.length;
            start = toInteger(start);
            if (start < 0) start = -start > length ? 0 : length + start;
            end = end === undefined || end > length ? length : toInteger(end);
            if (end < 0) end += length;
            end = start > end ? 0 : toLength(end);
            while(start < end)array[start++] = value;
            return array;
        }
        /**
     * The base implementation of `_.filter` without support for iteratee shorthands.
     *
     * @private
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} predicate The function invoked per iteration.
     * @returns {Array} Returns the new filtered array.
     */ function baseFilter(collection, predicate) {
            var result = [];
            baseEach(collection, function(value, index, collection) {
                if (predicate(value, index, collection)) result.push(value);
            });
            return result;
        }
        /**
     * The base implementation of `_.flatten` with support for restricting flattening.
     *
     * @private
     * @param {Array} array The array to flatten.
     * @param {number} depth The maximum recursion depth.
     * @param {boolean} [predicate=isFlattenable] The function invoked per iteration.
     * @param {boolean} [isStrict] Restrict to values that pass `predicate` checks.
     * @param {Array} [result=[]] The initial result value.
     * @returns {Array} Returns the new flattened array.
     */ function baseFlatten(array, depth, predicate, isStrict, result) {
            var index = -1, length = array.length;
            predicate || (predicate = isFlattenable);
            result || (result = []);
            while(++index < length){
                var value = array[index];
                if (depth > 0 && predicate(value)) {
                    if (depth > 1) // Recursively flatten arrays (susceptible to call stack limits).
                    baseFlatten(value, depth - 1, predicate, isStrict, result);
                    else arrayPush(result, value);
                } else if (!isStrict) result[result.length] = value;
            }
            return result;
        }
        /**
     * The base implementation of `baseForOwn` which iterates over `object`
     * properties returned by `keysFunc` and invokes `iteratee` for each property.
     * Iteratee functions may exit iteration early by explicitly returning `false`.
     *
     * @private
     * @param {Object} object The object to iterate over.
     * @param {Function} iteratee The function invoked per iteration.
     * @param {Function} keysFunc The function to get the keys of `object`.
     * @returns {Object} Returns `object`.
     */ var baseFor = createBaseFor();
        /**
     * This function is like `baseFor` except that it iterates over properties
     * in the opposite order.
     *
     * @private
     * @param {Object} object The object to iterate over.
     * @param {Function} iteratee The function invoked per iteration.
     * @param {Function} keysFunc The function to get the keys of `object`.
     * @returns {Object} Returns `object`.
     */ var baseForRight = createBaseFor(true);
        /**
     * The base implementation of `_.forOwn` without support for iteratee shorthands.
     *
     * @private
     * @param {Object} object The object to iterate over.
     * @param {Function} iteratee The function invoked per iteration.
     * @returns {Object} Returns `object`.
     */ function baseForOwn(object, iteratee) {
            return object && baseFor(object, iteratee, keys);
        }
        /**
     * The base implementation of `_.forOwnRight` without support for iteratee shorthands.
     *
     * @private
     * @param {Object} object The object to iterate over.
     * @param {Function} iteratee The function invoked per iteration.
     * @returns {Object} Returns `object`.
     */ function baseForOwnRight(object, iteratee) {
            return object && baseForRight(object, iteratee, keys);
        }
        /**
     * The base implementation of `_.functions` which creates an array of
     * `object` function property names filtered from `props`.
     *
     * @private
     * @param {Object} object The object to inspect.
     * @param {Array} props The property names to filter.
     * @returns {Array} Returns the function names.
     */ function baseFunctions(object, props) {
            return arrayFilter(props, function(key) {
                return isFunction(object[key]);
            });
        }
        /**
     * The base implementation of `_.get` without support for default values.
     *
     * @private
     * @param {Object} object The object to query.
     * @param {Array|string} path The path of the property to get.
     * @returns {*} Returns the resolved value.
     */ function baseGet(object, path) {
            path = castPath(path, object);
            var index = 0, length = path.length;
            while(object != null && index < length)object = object[toKey(path[index++])];
            return index && index == length ? object : undefined;
        }
        /**
     * The base implementation of `getAllKeys` and `getAllKeysIn` which uses
     * `keysFunc` and `symbolsFunc` to get the enumerable property names and
     * symbols of `object`.
     *
     * @private
     * @param {Object} object The object to query.
     * @param {Function} keysFunc The function to get the keys of `object`.
     * @param {Function} symbolsFunc The function to get the symbols of `object`.
     * @returns {Array} Returns the array of property names and symbols.
     */ function baseGetAllKeys(object, keysFunc, symbolsFunc) {
            var result = keysFunc(object);
            return isArray(object) ? result : arrayPush(result, symbolsFunc(object));
        }
        /**
     * The base implementation of `getTag` without fallbacks for buggy environments.
     *
     * @private
     * @param {*} value The value to query.
     * @returns {string} Returns the `toStringTag`.
     */ function baseGetTag(value) {
            if (value == null) return value === undefined ? undefinedTag : nullTag;
            return symToStringTag && symToStringTag in Object1(value) ? getRawTag(value) : objectToString(value);
        }
        /**
     * The base implementation of `_.gt` which doesn't coerce arguments.
     *
     * @private
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @returns {boolean} Returns `true` if `value` is greater than `other`,
     *  else `false`.
     */ function baseGt(value, other) {
            return value > other;
        }
        /**
     * The base implementation of `_.has` without support for deep paths.
     *
     * @private
     * @param {Object} [object] The object to query.
     * @param {Array|string} key The key to check.
     * @returns {boolean} Returns `true` if `key` exists, else `false`.
     */ function baseHas(object, key) {
            return object != null && hasOwnProperty.call(object, key);
        }
        /**
     * The base implementation of `_.hasIn` without support for deep paths.
     *
     * @private
     * @param {Object} [object] The object to query.
     * @param {Array|string} key The key to check.
     * @returns {boolean} Returns `true` if `key` exists, else `false`.
     */ function baseHasIn(object, key) {
            return object != null && key in Object1(object);
        }
        /**
     * The base implementation of `_.inRange` which doesn't coerce arguments.
     *
     * @private
     * @param {number} number The number to check.
     * @param {number} start The start of the range.
     * @param {number} end The end of the range.
     * @returns {boolean} Returns `true` if `number` is in the range, else `false`.
     */ function baseInRange(number, start, end) {
            return number >= nativeMin(start, end) && number < nativeMax(start, end);
        }
        /**
     * The base implementation of methods like `_.intersection`, without support
     * for iteratee shorthands, that accepts an array of arrays to inspect.
     *
     * @private
     * @param {Array} arrays The arrays to inspect.
     * @param {Function} [iteratee] The iteratee invoked per element.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns the new array of shared values.
     */ function baseIntersection(arrays, iteratee, comparator) {
            var includes = comparator ? arrayIncludesWith : arrayIncludes, length = arrays[0].length, othLength = arrays.length, othIndex = othLength, caches = Array1(othLength), maxLength = Infinity, result = [];
            while(othIndex--){
                var array = arrays[othIndex];
                if (othIndex && iteratee) array = arrayMap(array, baseUnary(iteratee));
                maxLength = nativeMin(array.length, maxLength);
                caches[othIndex] = !comparator && (iteratee || length >= 120 && array.length >= 120) ? new SetCache(othIndex && array) : undefined;
            }
            array = arrays[0];
            var index = -1, seen = caches[0];
            outer: while(++index < length && result.length < maxLength){
                var value = array[index], computed = iteratee ? iteratee(value) : value;
                value = comparator || value !== 0 ? value : 0;
                if (!(seen ? cacheHas(seen, computed) : includes(result, computed, comparator))) {
                    othIndex = othLength;
                    while(--othIndex){
                        var cache = caches[othIndex];
                        if (!(cache ? cacheHas(cache, computed) : includes(arrays[othIndex], computed, comparator))) continue outer;
                    }
                    if (seen) seen.push(computed);
                    result.push(value);
                }
            }
            return result;
        }
        /**
     * The base implementation of `_.invert` and `_.invertBy` which inverts
     * `object` with values transformed by `iteratee` and set by `setter`.
     *
     * @private
     * @param {Object} object The object to iterate over.
     * @param {Function} setter The function to set `accumulator` values.
     * @param {Function} iteratee The iteratee to transform values.
     * @param {Object} accumulator The initial inverted object.
     * @returns {Function} Returns `accumulator`.
     */ function baseInverter(object, setter, iteratee, accumulator) {
            baseForOwn(object, function(value, key, object) {
                setter(accumulator, iteratee(value), key, object);
            });
            return accumulator;
        }
        /**
     * The base implementation of `_.invoke` without support for individual
     * method arguments.
     *
     * @private
     * @param {Object} object The object to query.
     * @param {Array|string} path The path of the method to invoke.
     * @param {Array} args The arguments to invoke the method with.
     * @returns {*} Returns the result of the invoked method.
     */ function baseInvoke(object, path, args) {
            path = castPath(path, object);
            object = parent(object, path);
            var func = object == null ? object : object[toKey(last(path))];
            return func == null ? undefined : apply(func, object, args);
        }
        /**
     * The base implementation of `_.isArguments`.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is an `arguments` object,
     */ function baseIsArguments(value) {
            return isObjectLike(value) && baseGetTag(value) == argsTag;
        }
        /**
     * The base implementation of `_.isArrayBuffer` without Node.js optimizations.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is an array buffer, else `false`.
     */ function baseIsArrayBuffer(value) {
            return isObjectLike(value) && baseGetTag(value) == arrayBufferTag;
        }
        /**
     * The base implementation of `_.isDate` without Node.js optimizations.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a date object, else `false`.
     */ function baseIsDate(value) {
            return isObjectLike(value) && baseGetTag(value) == dateTag;
        }
        /**
     * The base implementation of `_.isEqual` which supports partial comparisons
     * and tracks traversed objects.
     *
     * @private
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @param {boolean} bitmask The bitmask flags.
     *  1 - Unordered comparison
     *  2 - Partial comparison
     * @param {Function} [customizer] The function to customize comparisons.
     * @param {Object} [stack] Tracks traversed `value` and `other` objects.
     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
     */ function baseIsEqual(value, other, bitmask, customizer, stack) {
            if (value === other) return true;
            if (value == null || other == null || !isObjectLike(value) && !isObjectLike(other)) return value !== value && other !== other;
            return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);
        }
        /**
     * A specialized version of `baseIsEqual` for arrays and objects which performs
     * deep comparisons and tracks traversed objects enabling objects with circular
     * references to be compared.
     *
     * @private
     * @param {Object} object The object to compare.
     * @param {Object} other The other object to compare.
     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
     * @param {Function} customizer The function to customize comparisons.
     * @param {Function} equalFunc The function to determine equivalents of values.
     * @param {Object} [stack] Tracks traversed `object` and `other` objects.
     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
     */ function baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {
            var objIsArr = isArray(object), othIsArr = isArray(other), objTag = objIsArr ? arrayTag : getTag(object), othTag = othIsArr ? arrayTag : getTag(other);
            objTag = objTag == argsTag ? objectTag : objTag;
            othTag = othTag == argsTag ? objectTag : othTag;
            var objIsObj = objTag == objectTag, othIsObj = othTag == objectTag, isSameTag = objTag == othTag;
            if (isSameTag && isBuffer(object)) {
                if (!isBuffer(other)) return false;
                objIsArr = true;
                objIsObj = false;
            }
            if (isSameTag && !objIsObj) {
                stack || (stack = new Stack);
                return objIsArr || isTypedArray(object) ? equalArrays(object, other, bitmask, customizer, equalFunc, stack) : equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);
            }
            if (!(bitmask & COMPARE_PARTIAL_FLAG)) {
                var objIsWrapped = objIsObj && hasOwnProperty.call(object, "__wrapped__"), othIsWrapped = othIsObj && hasOwnProperty.call(other, "__wrapped__");
                if (objIsWrapped || othIsWrapped) {
                    var objUnwrapped = objIsWrapped ? object.value() : object, othUnwrapped = othIsWrapped ? other.value() : other;
                    stack || (stack = new Stack);
                    return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);
                }
            }
            if (!isSameTag) return false;
            stack || (stack = new Stack);
            return equalObjects(object, other, bitmask, customizer, equalFunc, stack);
        }
        /**
     * The base implementation of `_.isMap` without Node.js optimizations.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a map, else `false`.
     */ function baseIsMap(value) {
            return isObjectLike(value) && getTag(value) == mapTag;
        }
        /**
     * The base implementation of `_.isMatch` without support for iteratee shorthands.
     *
     * @private
     * @param {Object} object The object to inspect.
     * @param {Object} source The object of property values to match.
     * @param {Array} matchData The property names, values, and compare flags to match.
     * @param {Function} [customizer] The function to customize comparisons.
     * @returns {boolean} Returns `true` if `object` is a match, else `false`.
     */ function baseIsMatch(object, source, matchData, customizer) {
            var index = matchData.length, length = index, noCustomizer = !customizer;
            if (object == null) return !length;
            object = Object1(object);
            while(index--){
                var data = matchData[index];
                if (noCustomizer && data[2] ? data[1] !== object[data[0]] : !(data[0] in object)) return false;
            }
            while(++index < length){
                data = matchData[index];
                var key = data[0], objValue = object[key], srcValue = data[1];
                if (noCustomizer && data[2]) {
                    if (objValue === undefined && !(key in object)) return false;
                } else {
                    var stack = new Stack;
                    if (customizer) var result = customizer(objValue, srcValue, key, object, source, stack);
                    if (!(result === undefined ? baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG, customizer, stack) : result)) return false;
                }
            }
            return true;
        }
        /**
     * The base implementation of `_.isNative` without bad shim checks.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a native function,
     *  else `false`.
     */ function baseIsNative(value) {
            if (!isObject(value) || isMasked(value)) return false;
            var pattern = isFunction(value) ? reIsNative : reIsHostCtor;
            return pattern.test(toSource(value));
        }
        /**
     * The base implementation of `_.isRegExp` without Node.js optimizations.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.
     */ function baseIsRegExp(value) {
            return isObjectLike(value) && baseGetTag(value) == regexpTag;
        }
        /**
     * The base implementation of `_.isSet` without Node.js optimizations.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a set, else `false`.
     */ function baseIsSet(value) {
            return isObjectLike(value) && getTag(value) == setTag;
        }
        /**
     * The base implementation of `_.isTypedArray` without Node.js optimizations.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.
     */ function baseIsTypedArray(value) {
            return isObjectLike(value) && isLength(value.length) && !!typedArrayTags[baseGetTag(value)];
        }
        /**
     * The base implementation of `_.iteratee`.
     *
     * @private
     * @param {*} [value=_.identity] The value to convert to an iteratee.
     * @returns {Function} Returns the iteratee.
     */ function baseIteratee(value) {
            // Don't store the `typeof` result in a variable to avoid a JIT bug in Safari 9.
            // See https://bugs.webkit.org/show_bug.cgi?id=156034 for more details.
            if (typeof value == "function") return value;
            if (value == null) return identity;
            if (typeof value == "object") return isArray(value) ? baseMatchesProperty(value[0], value[1]) : baseMatches(value);
            return property(value);
        }
        /**
     * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.
     *
     * @private
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of property names.
     */ function baseKeys(object) {
            if (!isPrototype(object)) return nativeKeys(object);
            var result = [];
            for(var key in Object1(object))if (hasOwnProperty.call(object, key) && key != "constructor") result.push(key);
            return result;
        }
        /**
     * The base implementation of `_.keysIn` which doesn't treat sparse arrays as dense.
     *
     * @private
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of property names.
     */ function baseKeysIn(object) {
            if (!isObject(object)) return nativeKeysIn(object);
            var isProto = isPrototype(object), result = [];
            for(var key in object)if (!(key == "constructor" && (isProto || !hasOwnProperty.call(object, key)))) result.push(key);
            return result;
        }
        /**
     * The base implementation of `_.lt` which doesn't coerce arguments.
     *
     * @private
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @returns {boolean} Returns `true` if `value` is less than `other`,
     *  else `false`.
     */ function baseLt(value, other) {
            return value < other;
        }
        /**
     * The base implementation of `_.map` without support for iteratee shorthands.
     *
     * @private
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} iteratee The function invoked per iteration.
     * @returns {Array} Returns the new mapped array.
     */ function baseMap(collection, iteratee) {
            var index = -1, result = isArrayLike(collection) ? Array1(collection.length) : [];
            baseEach(collection, function(value, key, collection) {
                result[++index] = iteratee(value, key, collection);
            });
            return result;
        }
        /**
     * The base implementation of `_.matches` which doesn't clone `source`.
     *
     * @private
     * @param {Object} source The object of property values to match.
     * @returns {Function} Returns the new spec function.
     */ function baseMatches(source) {
            var matchData = getMatchData(source);
            if (matchData.length == 1 && matchData[0][2]) return matchesStrictComparable(matchData[0][0], matchData[0][1]);
            return function(object) {
                return object === source || baseIsMatch(object, source, matchData);
            };
        }
        /**
     * The base implementation of `_.matchesProperty` which doesn't clone `srcValue`.
     *
     * @private
     * @param {string} path The path of the property to get.
     * @param {*} srcValue The value to match.
     * @returns {Function} Returns the new spec function.
     */ function baseMatchesProperty(path, srcValue) {
            if (isKey(path) && isStrictComparable(srcValue)) return matchesStrictComparable(toKey(path), srcValue);
            return function(object) {
                var objValue = get(object, path);
                return objValue === undefined && objValue === srcValue ? hasIn(object, path) : baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG);
            };
        }
        /**
     * The base implementation of `_.merge` without support for multiple sources.
     *
     * @private
     * @param {Object} object The destination object.
     * @param {Object} source The source object.
     * @param {number} srcIndex The index of `source`.
     * @param {Function} [customizer] The function to customize merged values.
     * @param {Object} [stack] Tracks traversed source values and their merged
     *  counterparts.
     */ function baseMerge(object, source, srcIndex, customizer, stack) {
            if (object === source) return;
            baseFor(source, function(srcValue, key) {
                stack || (stack = new Stack);
                if (isObject(srcValue)) baseMergeDeep(object, source, key, srcIndex, baseMerge, customizer, stack);
                else {
                    var newValue = customizer ? customizer(safeGet(object, key), srcValue, key + "", object, source, stack) : undefined;
                    if (newValue === undefined) newValue = srcValue;
                    assignMergeValue(object, key, newValue);
                }
            }, keysIn);
        }
        /**
     * A specialized version of `baseMerge` for arrays and objects which performs
     * deep merges and tracks traversed objects enabling objects with circular
     * references to be merged.
     *
     * @private
     * @param {Object} object The destination object.
     * @param {Object} source The source object.
     * @param {string} key The key of the value to merge.
     * @param {number} srcIndex The index of `source`.
     * @param {Function} mergeFunc The function to merge values.
     * @param {Function} [customizer] The function to customize assigned values.
     * @param {Object} [stack] Tracks traversed source values and their merged
     *  counterparts.
     */ function baseMergeDeep(object, source, key, srcIndex, mergeFunc, customizer, stack) {
            var objValue = safeGet(object, key), srcValue = safeGet(source, key), stacked = stack.get(srcValue);
            if (stacked) {
                assignMergeValue(object, key, stacked);
                return;
            }
            var newValue = customizer ? customizer(objValue, srcValue, key + "", object, source, stack) : undefined;
            var isCommon = newValue === undefined;
            if (isCommon) {
                var isArr = isArray(srcValue), isBuff = !isArr && isBuffer(srcValue), isTyped = !isArr && !isBuff && isTypedArray(srcValue);
                newValue = srcValue;
                if (isArr || isBuff || isTyped) {
                    if (isArray(objValue)) newValue = objValue;
                    else if (isArrayLikeObject(objValue)) newValue = copyArray(objValue);
                    else if (isBuff) {
                        isCommon = false;
                        newValue = cloneBuffer(srcValue, true);
                    } else if (isTyped) {
                        isCommon = false;
                        newValue = cloneTypedArray(srcValue, true);
                    } else newValue = [];
                } else if (isPlainObject(srcValue) || isArguments(srcValue)) {
                    newValue = objValue;
                    if (isArguments(objValue)) newValue = toPlainObject(objValue);
                    else if (!isObject(objValue) || isFunction(objValue)) newValue = initCloneObject(srcValue);
                } else isCommon = false;
            }
            if (isCommon) {
                // Recursively merge objects and arrays (susceptible to call stack limits).
                stack.set(srcValue, newValue);
                mergeFunc(newValue, srcValue, srcIndex, customizer, stack);
                stack["delete"](srcValue);
            }
            assignMergeValue(object, key, newValue);
        }
        /**
     * The base implementation of `_.nth` which doesn't coerce arguments.
     *
     * @private
     * @param {Array} array The array to query.
     * @param {number} n The index of the element to return.
     * @returns {*} Returns the nth element of `array`.
     */ function baseNth(array, n) {
            var length = array.length;
            if (!length) return;
            n += n < 0 ? length : 0;
            return isIndex(n, length) ? array[n] : undefined;
        }
        /**
     * The base implementation of `_.orderBy` without param guards.
     *
     * @private
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function[]|Object[]|string[]} iteratees The iteratees to sort by.
     * @param {string[]} orders The sort orders of `iteratees`.
     * @returns {Array} Returns the new sorted array.
     */ function baseOrderBy(collection, iteratees, orders) {
            if (iteratees.length) iteratees = arrayMap(iteratees, function(iteratee) {
                if (isArray(iteratee)) return function(value) {
                    return baseGet(value, iteratee.length === 1 ? iteratee[0] : iteratee);
                };
                return iteratee;
            });
            else iteratees = [
                identity
            ];
            var index = -1;
            iteratees = arrayMap(iteratees, baseUnary(getIteratee()));
            var result = baseMap(collection, function(value, key, collection) {
                var criteria = arrayMap(iteratees, function(iteratee) {
                    return iteratee(value);
                });
                return {
                    "criteria": criteria,
                    "index": ++index,
                    "value": value
                };
            });
            return baseSortBy(result, function(object, other) {
                return compareMultiple(object, other, orders);
            });
        }
        /**
     * The base implementation of `_.pick` without support for individual
     * property identifiers.
     *
     * @private
     * @param {Object} object The source object.
     * @param {string[]} paths The property paths to pick.
     * @returns {Object} Returns the new object.
     */ function basePick(object, paths) {
            return basePickBy(object, paths, function(value, path) {
                return hasIn(object, path);
            });
        }
        /**
     * The base implementation of  `_.pickBy` without support for iteratee shorthands.
     *
     * @private
     * @param {Object} object The source object.
     * @param {string[]} paths The property paths to pick.
     * @param {Function} predicate The function invoked per property.
     * @returns {Object} Returns the new object.
     */ function basePickBy(object, paths, predicate) {
            var index = -1, length = paths.length, result = {};
            while(++index < length){
                var path = paths[index], value = baseGet(object, path);
                if (predicate(value, path)) baseSet(result, castPath(path, object), value);
            }
            return result;
        }
        /**
     * A specialized version of `baseProperty` which supports deep paths.
     *
     * @private
     * @param {Array|string} path The path of the property to get.
     * @returns {Function} Returns the new accessor function.
     */ function basePropertyDeep(path) {
            return function(object) {
                return baseGet(object, path);
            };
        }
        /**
     * The base implementation of `_.pullAllBy` without support for iteratee
     * shorthands.
     *
     * @private
     * @param {Array} array The array to modify.
     * @param {Array} values The values to remove.
     * @param {Function} [iteratee] The iteratee invoked per element.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns `array`.
     */ function basePullAll(array, values, iteratee, comparator) {
            var indexOf = comparator ? baseIndexOfWith : baseIndexOf, index = -1, length = values.length, seen = array;
            if (array === values) values = copyArray(values);
            if (iteratee) seen = arrayMap(array, baseUnary(iteratee));
            while(++index < length){
                var fromIndex = 0, value = values[index], computed = iteratee ? iteratee(value) : value;
                while((fromIndex = indexOf(seen, computed, fromIndex, comparator)) > -1){
                    if (seen !== array) splice.call(seen, fromIndex, 1);
                    splice.call(array, fromIndex, 1);
                }
            }
            return array;
        }
        /**
     * The base implementation of `_.pullAt` without support for individual
     * indexes or capturing the removed elements.
     *
     * @private
     * @param {Array} array The array to modify.
     * @param {number[]} indexes The indexes of elements to remove.
     * @returns {Array} Returns `array`.
     */ function basePullAt(array, indexes) {
            var length = array ? indexes.length : 0, lastIndex = length - 1;
            while(length--){
                var index = indexes[length];
                if (length == lastIndex || index !== previous) {
                    var previous = index;
                    if (isIndex(index)) splice.call(array, index, 1);
                    else baseUnset(array, index);
                }
            }
            return array;
        }
        /**
     * The base implementation of `_.random` without support for returning
     * floating-point numbers.
     *
     * @private
     * @param {number} lower The lower bound.
     * @param {number} upper The upper bound.
     * @returns {number} Returns the random number.
     */ function baseRandom(lower, upper) {
            return lower + nativeFloor(nativeRandom() * (upper - lower + 1));
        }
        /**
     * The base implementation of `_.range` and `_.rangeRight` which doesn't
     * coerce arguments.
     *
     * @private
     * @param {number} start The start of the range.
     * @param {number} end The end of the range.
     * @param {number} step The value to increment or decrement by.
     * @param {boolean} [fromRight] Specify iterating from right to left.
     * @returns {Array} Returns the range of numbers.
     */ function baseRange(start, end, step, fromRight) {
            var index = -1, length = nativeMax(nativeCeil((end - start) / (step || 1)), 0), result = Array1(length);
            while(length--){
                result[fromRight ? length : ++index] = start;
                start += step;
            }
            return result;
        }
        /**
     * The base implementation of `_.repeat` which doesn't coerce arguments.
     *
     * @private
     * @param {string} string The string to repeat.
     * @param {number} n The number of times to repeat the string.
     * @returns {string} Returns the repeated string.
     */ function baseRepeat(string, n) {
            var result = "";
            if (!string || n < 1 || n > MAX_SAFE_INTEGER) return result;
            // Leverage the exponentiation by squaring algorithm for a faster repeat.
            // See https://en.wikipedia.org/wiki/Exponentiation_by_squaring for more details.
            do {
                if (n % 2) result += string;
                n = nativeFloor(n / 2);
                if (n) string += string;
            }while (n);
            return result;
        }
        /**
     * The base implementation of `_.rest` which doesn't validate or coerce arguments.
     *
     * @private
     * @param {Function} func The function to apply a rest parameter to.
     * @param {number} [start=func.length-1] The start position of the rest parameter.
     * @returns {Function} Returns the new function.
     */ function baseRest(func, start) {
            return setToString(overRest(func, start, identity), func + "");
        }
        /**
     * The base implementation of `_.sample`.
     *
     * @private
     * @param {Array|Object} collection The collection to sample.
     * @returns {*} Returns the random element.
     */ function baseSample(collection) {
            return arraySample(values(collection));
        }
        /**
     * The base implementation of `_.sampleSize` without param guards.
     *
     * @private
     * @param {Array|Object} collection The collection to sample.
     * @param {number} n The number of elements to sample.
     * @returns {Array} Returns the random elements.
     */ function baseSampleSize(collection, n) {
            var array = values(collection);
            return shuffleSelf(array, baseClamp(n, 0, array.length));
        }
        /**
     * The base implementation of `_.set`.
     *
     * @private
     * @param {Object} object The object to modify.
     * @param {Array|string} path The path of the property to set.
     * @param {*} value The value to set.
     * @param {Function} [customizer] The function to customize path creation.
     * @returns {Object} Returns `object`.
     */ function baseSet(object, path, value, customizer) {
            if (!isObject(object)) return object;
            path = castPath(path, object);
            var index = -1, length = path.length, lastIndex = length - 1, nested = object;
            while(nested != null && ++index < length){
                var key = toKey(path[index]), newValue = value;
                if (key === "__proto__" || key === "constructor" || key === "prototype") return object;
                if (index != lastIndex) {
                    var objValue = nested[key];
                    newValue = customizer ? customizer(objValue, key, nested) : undefined;
                    if (newValue === undefined) newValue = isObject(objValue) ? objValue : isIndex(path[index + 1]) ? [] : {};
                }
                assignValue(nested, key, newValue);
                nested = nested[key];
            }
            return object;
        }
        /**
     * The base implementation of `setData` without support for hot loop shorting.
     *
     * @private
     * @param {Function} func The function to associate metadata with.
     * @param {*} data The metadata.
     * @returns {Function} Returns `func`.
     */ var baseSetData = !metaMap ? identity : function(func, data) {
            metaMap.set(func, data);
            return func;
        };
        /**
     * The base implementation of `setToString` without support for hot loop shorting.
     *
     * @private
     * @param {Function} func The function to modify.
     * @param {Function} string The `toString` result.
     * @returns {Function} Returns `func`.
     */ var baseSetToString = !defineProperty ? identity : function(func, string) {
            return defineProperty(func, "toString", {
                "configurable": true,
                "enumerable": false,
                "value": constant(string),
                "writable": true
            });
        };
        /**
     * The base implementation of `_.shuffle`.
     *
     * @private
     * @param {Array|Object} collection The collection to shuffle.
     * @returns {Array} Returns the new shuffled array.
     */ function baseShuffle(collection) {
            return shuffleSelf(values(collection));
        }
        /**
     * The base implementation of `_.slice` without an iteratee call guard.
     *
     * @private
     * @param {Array} array The array to slice.
     * @param {number} [start=0] The start position.
     * @param {number} [end=array.length] The end position.
     * @returns {Array} Returns the slice of `array`.
     */ function baseSlice(array, start, end) {
            var index = -1, length = array.length;
            if (start < 0) start = -start > length ? 0 : length + start;
            end = end > length ? length : end;
            if (end < 0) end += length;
            length = start > end ? 0 : end - start >>> 0;
            start >>>= 0;
            var result = Array1(length);
            while(++index < length)result[index] = array[index + start];
            return result;
        }
        /**
     * The base implementation of `_.some` without support for iteratee shorthands.
     *
     * @private
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} predicate The function invoked per iteration.
     * @returns {boolean} Returns `true` if any element passes the predicate check,
     *  else `false`.
     */ function baseSome(collection, predicate) {
            var result;
            baseEach(collection, function(value, index, collection) {
                result = predicate(value, index, collection);
                return !result;
            });
            return !!result;
        }
        /**
     * The base implementation of `_.sortedIndex` and `_.sortedLastIndex` which
     * performs a binary search of `array` to determine the index at which `value`
     * should be inserted into `array` in order to maintain its sort order.
     *
     * @private
     * @param {Array} array The sorted array to inspect.
     * @param {*} value The value to evaluate.
     * @param {boolean} [retHighest] Specify returning the highest qualified index.
     * @returns {number} Returns the index at which `value` should be inserted
     *  into `array`.
     */ function baseSortedIndex(array, value, retHighest) {
            var low = 0, high = array == null ? low : array.length;
            if (typeof value == "number" && value === value && high <= HALF_MAX_ARRAY_LENGTH) {
                while(low < high){
                    var mid = low + high >>> 1, computed = array[mid];
                    if (computed !== null && !isSymbol(computed) && (retHighest ? computed <= value : computed < value)) low = mid + 1;
                    else high = mid;
                }
                return high;
            }
            return baseSortedIndexBy(array, value, identity, retHighest);
        }
        /**
     * The base implementation of `_.sortedIndexBy` and `_.sortedLastIndexBy`
     * which invokes `iteratee` for `value` and each element of `array` to compute
     * their sort ranking. The iteratee is invoked with one argument; (value).
     *
     * @private
     * @param {Array} array The sorted array to inspect.
     * @param {*} value The value to evaluate.
     * @param {Function} iteratee The iteratee invoked per element.
     * @param {boolean} [retHighest] Specify returning the highest qualified index.
     * @returns {number} Returns the index at which `value` should be inserted
     *  into `array`.
     */ function baseSortedIndexBy(array, value, iteratee, retHighest) {
            var low = 0, high = array == null ? 0 : array.length;
            if (high === 0) return 0;
            value = iteratee(value);
            var valIsNaN = value !== value, valIsNull = value === null, valIsSymbol = isSymbol(value), valIsUndefined = value === undefined;
            while(low < high){
                var mid = nativeFloor((low + high) / 2), computed = iteratee(array[mid]), othIsDefined = computed !== undefined, othIsNull = computed === null, othIsReflexive = computed === computed, othIsSymbol = isSymbol(computed);
                if (valIsNaN) var setLow = retHighest || othIsReflexive;
                else if (valIsUndefined) setLow = othIsReflexive && (retHighest || othIsDefined);
                else if (valIsNull) setLow = othIsReflexive && othIsDefined && (retHighest || !othIsNull);
                else if (valIsSymbol) setLow = othIsReflexive && othIsDefined && !othIsNull && (retHighest || !othIsSymbol);
                else if (othIsNull || othIsSymbol) setLow = false;
                else setLow = retHighest ? computed <= value : computed < value;
                if (setLow) low = mid + 1;
                else high = mid;
            }
            return nativeMin(high, MAX_ARRAY_INDEX);
        }
        /**
     * The base implementation of `_.sortedUniq` and `_.sortedUniqBy` without
     * support for iteratee shorthands.
     *
     * @private
     * @param {Array} array The array to inspect.
     * @param {Function} [iteratee] The iteratee invoked per element.
     * @returns {Array} Returns the new duplicate free array.
     */ function baseSortedUniq(array, iteratee) {
            var index = -1, length = array.length, resIndex = 0, result = [];
            while(++index < length){
                var value = array[index], computed = iteratee ? iteratee(value) : value;
                if (!index || !eq(computed, seen)) {
                    var seen = computed;
                    result[resIndex++] = value === 0 ? 0 : value;
                }
            }
            return result;
        }
        /**
     * The base implementation of `_.toNumber` which doesn't ensure correct
     * conversions of binary, hexadecimal, or octal string values.
     *
     * @private
     * @param {*} value The value to process.
     * @returns {number} Returns the number.
     */ function baseToNumber(value) {
            if (typeof value == "number") return value;
            if (isSymbol(value)) return NAN;
            return +value;
        }
        /**
     * The base implementation of `_.toString` which doesn't convert nullish
     * values to empty strings.
     *
     * @private
     * @param {*} value The value to process.
     * @returns {string} Returns the string.
     */ function baseToString(value) {
            // Exit early for strings to avoid a performance hit in some environments.
            if (typeof value == "string") return value;
            if (isArray(value)) // Recursively convert values (susceptible to call stack limits).
            return arrayMap(value, baseToString) + "";
            if (isSymbol(value)) return symbolToString ? symbolToString.call(value) : "";
            var result = value + "";
            return result == "0" && 1 / value == -INFINITY ? "-0" : result;
        }
        /**
     * The base implementation of `_.uniqBy` without support for iteratee shorthands.
     *
     * @private
     * @param {Array} array The array to inspect.
     * @param {Function} [iteratee] The iteratee invoked per element.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns the new duplicate free array.
     */ function baseUniq(array, iteratee, comparator) {
            var index = -1, includes = arrayIncludes, length = array.length, isCommon = true, result = [], seen = result;
            if (comparator) {
                isCommon = false;
                includes = arrayIncludesWith;
            } else if (length >= LARGE_ARRAY_SIZE) {
                var set = iteratee ? null : createSet(array);
                if (set) return setToArray(set);
                isCommon = false;
                includes = cacheHas;
                seen = new SetCache;
            } else seen = iteratee ? [] : result;
            outer: while(++index < length){
                var value = array[index], computed = iteratee ? iteratee(value) : value;
                value = comparator || value !== 0 ? value : 0;
                if (isCommon && computed === computed) {
                    var seenIndex = seen.length;
                    while(seenIndex--){
                        if (seen[seenIndex] === computed) continue outer;
                    }
                    if (iteratee) seen.push(computed);
                    result.push(value);
                } else if (!includes(seen, computed, comparator)) {
                    if (seen !== result) seen.push(computed);
                    result.push(value);
                }
            }
            return result;
        }
        /**
     * The base implementation of `_.unset`.
     *
     * @private
     * @param {Object} object The object to modify.
     * @param {Array|string} path The property path to unset.
     * @returns {boolean} Returns `true` if the property is deleted, else `false`.
     */ function baseUnset(object, path) {
            path = castPath(path, object);
            object = parent(object, path);
            return object == null || delete object[toKey(last(path))];
        }
        /**
     * The base implementation of `_.update`.
     *
     * @private
     * @param {Object} object The object to modify.
     * @param {Array|string} path The path of the property to update.
     * @param {Function} updater The function to produce the updated value.
     * @param {Function} [customizer] The function to customize path creation.
     * @returns {Object} Returns `object`.
     */ function baseUpdate(object, path, updater, customizer) {
            return baseSet(object, path, updater(baseGet(object, path)), customizer);
        }
        /**
     * The base implementation of methods like `_.dropWhile` and `_.takeWhile`
     * without support for iteratee shorthands.
     *
     * @private
     * @param {Array} array The array to query.
     * @param {Function} predicate The function invoked per iteration.
     * @param {boolean} [isDrop] Specify dropping elements instead of taking them.
     * @param {boolean} [fromRight] Specify iterating from right to left.
     * @returns {Array} Returns the slice of `array`.
     */ function baseWhile(array, predicate, isDrop, fromRight) {
            var length = array.length, index = fromRight ? length : -1;
            while((fromRight ? index-- : ++index < length) && predicate(array[index], index, array));
            return isDrop ? baseSlice(array, fromRight ? 0 : index, fromRight ? index + 1 : length) : baseSlice(array, fromRight ? index + 1 : 0, fromRight ? length : index);
        }
        /**
     * The base implementation of `wrapperValue` which returns the result of
     * performing a sequence of actions on the unwrapped `value`, where each
     * successive action is supplied the return value of the previous.
     *
     * @private
     * @param {*} value The unwrapped value.
     * @param {Array} actions Actions to perform to resolve the unwrapped value.
     * @returns {*} Returns the resolved value.
     */ function baseWrapperValue(value, actions) {
            var result = value;
            if (result instanceof LazyWrapper) result = result.value();
            return arrayReduce(actions, function(result, action) {
                return action.func.apply(action.thisArg, arrayPush([
                    result
                ], action.args));
            }, result);
        }
        /**
     * The base implementation of methods like `_.xor`, without support for
     * iteratee shorthands, that accepts an array of arrays to inspect.
     *
     * @private
     * @param {Array} arrays The arrays to inspect.
     * @param {Function} [iteratee] The iteratee invoked per element.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns the new array of values.
     */ function baseXor(arrays, iteratee, comparator) {
            var length = arrays.length;
            if (length < 2) return length ? baseUniq(arrays[0]) : [];
            var index = -1, result = Array1(length);
            while(++index < length){
                var array = arrays[index], othIndex = -1;
                while(++othIndex < length)if (othIndex != index) result[index] = baseDifference(result[index] || array, arrays[othIndex], iteratee, comparator);
            }
            return baseUniq(baseFlatten(result, 1), iteratee, comparator);
        }
        /**
     * This base implementation of `_.zipObject` which assigns values using `assignFunc`.
     *
     * @private
     * @param {Array} props The property identifiers.
     * @param {Array} values The property values.
     * @param {Function} assignFunc The function to assign values.
     * @returns {Object} Returns the new object.
     */ function baseZipObject(props, values, assignFunc) {
            var index = -1, length = props.length, valsLength = values.length, result = {};
            while(++index < length){
                var value = index < valsLength ? values[index] : undefined;
                assignFunc(result, props[index], value);
            }
            return result;
        }
        /**
     * Casts `value` to an empty array if it's not an array like object.
     *
     * @private
     * @param {*} value The value to inspect.
     * @returns {Array|Object} Returns the cast array-like object.
     */ function castArrayLikeObject(value) {
            return isArrayLikeObject(value) ? value : [];
        }
        /**
     * Casts `value` to `identity` if it's not a function.
     *
     * @private
     * @param {*} value The value to inspect.
     * @returns {Function} Returns cast function.
     */ function castFunction(value) {
            return typeof value == "function" ? value : identity;
        }
        /**
     * Casts `value` to a path array if it's not one.
     *
     * @private
     * @param {*} value The value to inspect.
     * @param {Object} [object] The object to query keys on.
     * @returns {Array} Returns the cast property path array.
     */ function castPath(value, object) {
            if (isArray(value)) return value;
            return isKey(value, object) ? [
                value
            ] : stringToPath(toString(value));
        }
        /**
     * A `baseRest` alias which can be replaced with `identity` by module
     * replacement plugins.
     *
     * @private
     * @type {Function}
     * @param {Function} func The function to apply a rest parameter to.
     * @returns {Function} Returns the new function.
     */ var castRest = baseRest;
        /**
     * Casts `array` to a slice if it's needed.
     *
     * @private
     * @param {Array} array The array to inspect.
     * @param {number} start The start position.
     * @param {number} [end=array.length] The end position.
     * @returns {Array} Returns the cast slice.
     */ function castSlice(array, start, end) {
            var length = array.length;
            end = end === undefined ? length : end;
            return !start && end >= length ? array : baseSlice(array, start, end);
        }
        /**
     * A simple wrapper around the global [`clearTimeout`](https://mdn.io/clearTimeout).
     *
     * @private
     * @param {number|Object} id The timer id or timeout object of the timer to clear.
     */ var clearTimeout = ctxClearTimeout || function(id) {
            return root.clearTimeout(id);
        };
        /**
     * Creates a clone of  `buffer`.
     *
     * @private
     * @param {Buffer} buffer The buffer to clone.
     * @param {boolean} [isDeep] Specify a deep clone.
     * @returns {Buffer} Returns the cloned buffer.
     */ function cloneBuffer(buffer, isDeep) {
            if (isDeep) return buffer.slice();
            var length = buffer.length, result = allocUnsafe ? allocUnsafe(length) : new buffer.constructor(length);
            buffer.copy(result);
            return result;
        }
        /**
     * Creates a clone of `arrayBuffer`.
     *
     * @private
     * @param {ArrayBuffer} arrayBuffer The array buffer to clone.
     * @returns {ArrayBuffer} Returns the cloned array buffer.
     */ function cloneArrayBuffer(arrayBuffer) {
            var result = new arrayBuffer.constructor(arrayBuffer.byteLength);
            new Uint8Array(result).set(new Uint8Array(arrayBuffer));
            return result;
        }
        /**
     * Creates a clone of `dataView`.
     *
     * @private
     * @param {Object} dataView The data view to clone.
     * @param {boolean} [isDeep] Specify a deep clone.
     * @returns {Object} Returns the cloned data view.
     */ function cloneDataView(dataView, isDeep) {
            var buffer = isDeep ? cloneArrayBuffer(dataView.buffer) : dataView.buffer;
            return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);
        }
        /**
     * Creates a clone of `regexp`.
     *
     * @private
     * @param {Object} regexp The regexp to clone.
     * @returns {Object} Returns the cloned regexp.
     */ function cloneRegExp(regexp) {
            var result = new regexp.constructor(regexp.source, reFlags.exec(regexp));
            result.lastIndex = regexp.lastIndex;
            return result;
        }
        /**
     * Creates a clone of the `symbol` object.
     *
     * @private
     * @param {Object} symbol The symbol object to clone.
     * @returns {Object} Returns the cloned symbol object.
     */ function cloneSymbol(symbol) {
            return symbolValueOf ? Object1(symbolValueOf.call(symbol)) : {};
        }
        /**
     * Creates a clone of `typedArray`.
     *
     * @private
     * @param {Object} typedArray The typed array to clone.
     * @param {boolean} [isDeep] Specify a deep clone.
     * @returns {Object} Returns the cloned typed array.
     */ function cloneTypedArray(typedArray, isDeep) {
            var buffer = isDeep ? cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;
            return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);
        }
        /**
     * Compares values to sort them in ascending order.
     *
     * @private
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @returns {number} Returns the sort order indicator for `value`.
     */ function compareAscending(value, other) {
            if (value !== other) {
                var valIsDefined = value !== undefined, valIsNull = value === null, valIsReflexive = value === value, valIsSymbol = isSymbol(value);
                var othIsDefined = other !== undefined, othIsNull = other === null, othIsReflexive = other === other, othIsSymbol = isSymbol(other);
                if (!othIsNull && !othIsSymbol && !valIsSymbol && value > other || valIsSymbol && othIsDefined && othIsReflexive && !othIsNull && !othIsSymbol || valIsNull && othIsDefined && othIsReflexive || !valIsDefined && othIsReflexive || !valIsReflexive) return 1;
                if (!valIsNull && !valIsSymbol && !othIsSymbol && value < other || othIsSymbol && valIsDefined && valIsReflexive && !valIsNull && !valIsSymbol || othIsNull && valIsDefined && valIsReflexive || !othIsDefined && valIsReflexive || !othIsReflexive) return -1;
            }
            return 0;
        }
        /**
     * Used by `_.orderBy` to compare multiple properties of a value to another
     * and stable sort them.
     *
     * If `orders` is unspecified, all values are sorted in ascending order. Otherwise,
     * specify an order of "desc" for descending or "asc" for ascending sort order
     * of corresponding values.
     *
     * @private
     * @param {Object} object The object to compare.
     * @param {Object} other The other object to compare.
     * @param {boolean[]|string[]} orders The order to sort by for each property.
     * @returns {number} Returns the sort order indicator for `object`.
     */ function compareMultiple(object, other, orders) {
            var index = -1, objCriteria = object.criteria, othCriteria = other.criteria, length = objCriteria.length, ordersLength = orders.length;
            while(++index < length){
                var result = compareAscending(objCriteria[index], othCriteria[index]);
                if (result) {
                    if (index >= ordersLength) return result;
                    var order = orders[index];
                    return result * (order == "desc" ? -1 : 1);
                }
            }
            // Fixes an `Array#sort` bug in the JS engine embedded in Adobe applications
            // that causes it, under certain circumstances, to provide the same value for
            // `object` and `other`. See https://github.com/jashkenas/underscore/pull/1247
            // for more details.
            //
            // This also ensures a stable sort in V8 and other engines.
            // See https://bugs.chromium.org/p/v8/issues/detail?id=90 for more details.
            return object.index - other.index;
        }
        /**
     * Creates an array that is the composition of partially applied arguments,
     * placeholders, and provided arguments into a single array of arguments.
     *
     * @private
     * @param {Array} args The provided arguments.
     * @param {Array} partials The arguments to prepend to those provided.
     * @param {Array} holders The `partials` placeholder indexes.
     * @params {boolean} [isCurried] Specify composing for a curried function.
     * @returns {Array} Returns the new array of composed arguments.
     */ function composeArgs(args, partials, holders, isCurried) {
            var argsIndex = -1, argsLength = args.length, holdersLength = holders.length, leftIndex = -1, leftLength = partials.length, rangeLength = nativeMax(argsLength - holdersLength, 0), result = Array1(leftLength + rangeLength), isUncurried = !isCurried;
            while(++leftIndex < leftLength)result[leftIndex] = partials[leftIndex];
            while(++argsIndex < holdersLength)if (isUncurried || argsIndex < argsLength) result[holders[argsIndex]] = args[argsIndex];
            while(rangeLength--)result[leftIndex++] = args[argsIndex++];
            return result;
        }
        /**
     * This function is like `composeArgs` except that the arguments composition
     * is tailored for `_.partialRight`.
     *
     * @private
     * @param {Array} args The provided arguments.
     * @param {Array} partials The arguments to append to those provided.
     * @param {Array} holders The `partials` placeholder indexes.
     * @params {boolean} [isCurried] Specify composing for a curried function.
     * @returns {Array} Returns the new array of composed arguments.
     */ function composeArgsRight(args, partials, holders, isCurried) {
            var argsIndex = -1, argsLength = args.length, holdersIndex = -1, holdersLength = holders.length, rightIndex = -1, rightLength = partials.length, rangeLength = nativeMax(argsLength - holdersLength, 0), result = Array1(rangeLength + rightLength), isUncurried = !isCurried;
            while(++argsIndex < rangeLength)result[argsIndex] = args[argsIndex];
            var offset = argsIndex;
            while(++rightIndex < rightLength)result[offset + rightIndex] = partials[rightIndex];
            while(++holdersIndex < holdersLength)if (isUncurried || argsIndex < argsLength) result[offset + holders[holdersIndex]] = args[argsIndex++];
            return result;
        }
        /**
     * Copies the values of `source` to `array`.
     *
     * @private
     * @param {Array} source The array to copy values from.
     * @param {Array} [array=[]] The array to copy values to.
     * @returns {Array} Returns `array`.
     */ function copyArray(source, array) {
            var index = -1, length = source.length;
            array || (array = Array1(length));
            while(++index < length)array[index] = source[index];
            return array;
        }
        /**
     * Copies properties of `source` to `object`.
     *
     * @private
     * @param {Object} source The object to copy properties from.
     * @param {Array} props The property identifiers to copy.
     * @param {Object} [object={}] The object to copy properties to.
     * @param {Function} [customizer] The function to customize copied values.
     * @returns {Object} Returns `object`.
     */ function copyObject(source, props, object, customizer) {
            var isNew = !object;
            object || (object = {});
            var index = -1, length = props.length;
            while(++index < length){
                var key = props[index];
                var newValue = customizer ? customizer(object[key], source[key], key, object, source) : undefined;
                if (newValue === undefined) newValue = source[key];
                if (isNew) baseAssignValue(object, key, newValue);
                else assignValue(object, key, newValue);
            }
            return object;
        }
        /**
     * Copies own symbols of `source` to `object`.
     *
     * @private
     * @param {Object} source The object to copy symbols from.
     * @param {Object} [object={}] The object to copy symbols to.
     * @returns {Object} Returns `object`.
     */ function copySymbols(source, object) {
            return copyObject(source, getSymbols(source), object);
        }
        /**
     * Copies own and inherited symbols of `source` to `object`.
     *
     * @private
     * @param {Object} source The object to copy symbols from.
     * @param {Object} [object={}] The object to copy symbols to.
     * @returns {Object} Returns `object`.
     */ function copySymbolsIn(source, object) {
            return copyObject(source, getSymbolsIn(source), object);
        }
        /**
     * Creates a function like `_.groupBy`.
     *
     * @private
     * @param {Function} setter The function to set accumulator values.
     * @param {Function} [initializer] The accumulator object initializer.
     * @returns {Function} Returns the new aggregator function.
     */ function createAggregator(setter, initializer) {
            return function(collection, iteratee) {
                var func = isArray(collection) ? arrayAggregator : baseAggregator, accumulator = initializer ? initializer() : {};
                return func(collection, setter, getIteratee(iteratee, 2), accumulator);
            };
        }
        /**
     * Creates a function like `_.assign`.
     *
     * @private
     * @param {Function} assigner The function to assign values.
     * @returns {Function} Returns the new assigner function.
     */ function createAssigner(assigner) {
            return baseRest(function(object, sources) {
                var index = -1, length = sources.length, customizer = length > 1 ? sources[length - 1] : undefined, guard = length > 2 ? sources[2] : undefined;
                customizer = assigner.length > 3 && typeof customizer == "function" ? (length--, customizer) : undefined;
                if (guard && isIterateeCall(sources[0], sources[1], guard)) {
                    customizer = length < 3 ? undefined : customizer;
                    length = 1;
                }
                object = Object1(object);
                while(++index < length){
                    var source = sources[index];
                    if (source) assigner(object, source, index, customizer);
                }
                return object;
            });
        }
        /**
     * Creates a `baseEach` or `baseEachRight` function.
     *
     * @private
     * @param {Function} eachFunc The function to iterate over a collection.
     * @param {boolean} [fromRight] Specify iterating from right to left.
     * @returns {Function} Returns the new base function.
     */ function createBaseEach(eachFunc, fromRight) {
            return function(collection, iteratee) {
                if (collection == null) return collection;
                if (!isArrayLike(collection)) return eachFunc(collection, iteratee);
                var length = collection.length, index = fromRight ? length : -1, iterable = Object1(collection);
                while(fromRight ? index-- : ++index < length){
                    if (iteratee(iterable[index], index, iterable) === false) break;
                }
                return collection;
            };
        }
        /**
     * Creates a base function for methods like `_.forIn` and `_.forOwn`.
     *
     * @private
     * @param {boolean} [fromRight] Specify iterating from right to left.
     * @returns {Function} Returns the new base function.
     */ function createBaseFor(fromRight) {
            return function(object, iteratee, keysFunc) {
                var index = -1, iterable = Object1(object), props = keysFunc(object), length = props.length;
                while(length--){
                    var key = props[fromRight ? length : ++index];
                    if (iteratee(iterable[key], key, iterable) === false) break;
                }
                return object;
            };
        }
        /**
     * Creates a function that wraps `func` to invoke it with the optional `this`
     * binding of `thisArg`.
     *
     * @private
     * @param {Function} func The function to wrap.
     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
     * @param {*} [thisArg] The `this` binding of `func`.
     * @returns {Function} Returns the new wrapped function.
     */ function createBind(func, bitmask, thisArg) {
            var isBind = bitmask & WRAP_BIND_FLAG, Ctor = createCtor(func);
            function wrapper() {
                var fn = this && this !== root && this instanceof wrapper ? Ctor : func;
                return fn.apply(isBind ? thisArg : this, arguments);
            }
            return wrapper;
        }
        /**
     * Creates a function like `_.lowerFirst`.
     *
     * @private
     * @param {string} methodName The name of the `String` case method to use.
     * @returns {Function} Returns the new case function.
     */ function createCaseFirst(methodName) {
            return function(string) {
                string = toString(string);
                var strSymbols = hasUnicode(string) ? stringToArray(string) : undefined;
                var chr = strSymbols ? strSymbols[0] : string.charAt(0);
                var trailing = strSymbols ? castSlice(strSymbols, 1).join("") : string.slice(1);
                return chr[methodName]() + trailing;
            };
        }
        /**
     * Creates a function like `_.camelCase`.
     *
     * @private
     * @param {Function} callback The function to combine each word.
     * @returns {Function} Returns the new compounder function.
     */ function createCompounder(callback) {
            return function(string) {
                return arrayReduce(words(deburr(string).replace(reApos, "")), callback, "");
            };
        }
        /**
     * Creates a function that produces an instance of `Ctor` regardless of
     * whether it was invoked as part of a `new` expression or by `call` or `apply`.
     *
     * @private
     * @param {Function} Ctor The constructor to wrap.
     * @returns {Function} Returns the new wrapped function.
     */ function createCtor(Ctor) {
            return function() {
                // Use a `switch` statement to work with class constructors. See
                // http://ecma-international.org/ecma-262/7.0/#sec-ecmascript-function-objects-call-thisargument-argumentslist
                // for more details.
                var args = arguments;
                switch(args.length){
                    case 0:
                        return new Ctor;
                    case 1:
                        return new Ctor(args[0]);
                    case 2:
                        return new Ctor(args[0], args[1]);
                    case 3:
                        return new Ctor(args[0], args[1], args[2]);
                    case 4:
                        return new Ctor(args[0], args[1], args[2], args[3]);
                    case 5:
                        return new Ctor(args[0], args[1], args[2], args[3], args[4]);
                    case 6:
                        return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5]);
                    case 7:
                        return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5], args[6]);
                }
                var thisBinding = baseCreate(Ctor.prototype), result = Ctor.apply(thisBinding, args);
                // Mimic the constructor's `return` behavior.
                // See https://es5.github.io/#x13.2.2 for more details.
                return isObject(result) ? result : thisBinding;
            };
        }
        /**
     * Creates a function that wraps `func` to enable currying.
     *
     * @private
     * @param {Function} func The function to wrap.
     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
     * @param {number} arity The arity of `func`.
     * @returns {Function} Returns the new wrapped function.
     */ function createCurry(func, bitmask, arity) {
            var Ctor = createCtor(func);
            function wrapper() {
                var length = arguments.length, args = Array1(length), index = length, placeholder = getHolder(wrapper);
                while(index--)args[index] = arguments[index];
                var holders = length < 3 && args[0] !== placeholder && args[length - 1] !== placeholder ? [] : replaceHolders(args, placeholder);
                length -= holders.length;
                if (length < arity) return createRecurry(func, bitmask, createHybrid, wrapper.placeholder, undefined, args, holders, undefined, undefined, arity - length);
                var fn = this && this !== root && this instanceof wrapper ? Ctor : func;
                return apply(fn, this, args);
            }
            return wrapper;
        }
        /**
     * Creates a `_.find` or `_.findLast` function.
     *
     * @private
     * @param {Function} findIndexFunc The function to find the collection index.
     * @returns {Function} Returns the new find function.
     */ function createFind(findIndexFunc) {
            return function(collection, predicate, fromIndex) {
                var iterable = Object1(collection);
                if (!isArrayLike(collection)) {
                    var iteratee = getIteratee(predicate, 3);
                    collection = keys(collection);
                    predicate = function(key) {
                        return iteratee(iterable[key], key, iterable);
                    };
                }
                var index = findIndexFunc(collection, predicate, fromIndex);
                return index > -1 ? iterable[iteratee ? collection[index] : index] : undefined;
            };
        }
        /**
     * Creates a `_.flow` or `_.flowRight` function.
     *
     * @private
     * @param {boolean} [fromRight] Specify iterating from right to left.
     * @returns {Function} Returns the new flow function.
     */ function createFlow(fromRight) {
            return flatRest(function(funcs) {
                var length = funcs.length, index = length, prereq = LodashWrapper.prototype.thru;
                if (fromRight) funcs.reverse();
                while(index--){
                    var func = funcs[index];
                    if (typeof func != "function") throw new TypeError(FUNC_ERROR_TEXT);
                    if (prereq && !wrapper && getFuncName(func) == "wrapper") var wrapper = new LodashWrapper([], true);
                }
                index = wrapper ? index : length;
                while(++index < length){
                    func = funcs[index];
                    var funcName = getFuncName(func), data = funcName == "wrapper" ? getData(func) : undefined;
                    if (data && isLaziable(data[0]) && data[1] == (WRAP_ARY_FLAG | WRAP_CURRY_FLAG | WRAP_PARTIAL_FLAG | WRAP_REARG_FLAG) && !data[4].length && data[9] == 1) wrapper = wrapper[getFuncName(data[0])].apply(wrapper, data[3]);
                    else wrapper = func.length == 1 && isLaziable(func) ? wrapper[funcName]() : wrapper.thru(func);
                }
                return function() {
                    var args = arguments, value = args[0];
                    if (wrapper && args.length == 1 && isArray(value)) return wrapper.plant(value).value();
                    var index = 0, result = length ? funcs[index].apply(this, args) : value;
                    while(++index < length)result = funcs[index].call(this, result);
                    return result;
                };
            });
        }
        /**
     * Creates a function that wraps `func` to invoke it with optional `this`
     * binding of `thisArg`, partial application, and currying.
     *
     * @private
     * @param {Function|string} func The function or method name to wrap.
     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
     * @param {*} [thisArg] The `this` binding of `func`.
     * @param {Array} [partials] The arguments to prepend to those provided to
     *  the new function.
     * @param {Array} [holders] The `partials` placeholder indexes.
     * @param {Array} [partialsRight] The arguments to append to those provided
     *  to the new function.
     * @param {Array} [holdersRight] The `partialsRight` placeholder indexes.
     * @param {Array} [argPos] The argument positions of the new function.
     * @param {number} [ary] The arity cap of `func`.
     * @param {number} [arity] The arity of `func`.
     * @returns {Function} Returns the new wrapped function.
     */ function createHybrid(func, bitmask, thisArg, partials, holders, partialsRight, holdersRight, argPos, ary, arity) {
            var isAry = bitmask & WRAP_ARY_FLAG, isBind = bitmask & WRAP_BIND_FLAG, isBindKey = bitmask & WRAP_BIND_KEY_FLAG, isCurried = bitmask & (WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG), isFlip = bitmask & WRAP_FLIP_FLAG, Ctor = isBindKey ? undefined : createCtor(func);
            function wrapper() {
                var length = arguments.length, args = Array1(length), index = length;
                while(index--)args[index] = arguments[index];
                if (isCurried) var placeholder = getHolder(wrapper), holdersCount = countHolders(args, placeholder);
                if (partials) args = composeArgs(args, partials, holders, isCurried);
                if (partialsRight) args = composeArgsRight(args, partialsRight, holdersRight, isCurried);
                length -= holdersCount;
                if (isCurried && length < arity) {
                    var newHolders = replaceHolders(args, placeholder);
                    return createRecurry(func, bitmask, createHybrid, wrapper.placeholder, thisArg, args, newHolders, argPos, ary, arity - length);
                }
                var thisBinding = isBind ? thisArg : this, fn = isBindKey ? thisBinding[func] : func;
                length = args.length;
                if (argPos) args = reorder(args, argPos);
                else if (isFlip && length > 1) args.reverse();
                if (isAry && ary < length) args.length = ary;
                if (this && this !== root && this instanceof wrapper) fn = Ctor || createCtor(fn);
                return fn.apply(thisBinding, args);
            }
            return wrapper;
        }
        /**
     * Creates a function like `_.invertBy`.
     *
     * @private
     * @param {Function} setter The function to set accumulator values.
     * @param {Function} toIteratee The function to resolve iteratees.
     * @returns {Function} Returns the new inverter function.
     */ function createInverter(setter, toIteratee) {
            return function(object, iteratee) {
                return baseInverter(object, setter, toIteratee(iteratee), {});
            };
        }
        /**
     * Creates a function that performs a mathematical operation on two values.
     *
     * @private
     * @param {Function} operator The function to perform the operation.
     * @param {number} [defaultValue] The value used for `undefined` arguments.
     * @returns {Function} Returns the new mathematical operation function.
     */ function createMathOperation(operator, defaultValue) {
            return function(value, other) {
                var result;
                if (value === undefined && other === undefined) return defaultValue;
                if (value !== undefined) result = value;
                if (other !== undefined) {
                    if (result === undefined) return other;
                    if (typeof value == "string" || typeof other == "string") {
                        value = baseToString(value);
                        other = baseToString(other);
                    } else {
                        value = baseToNumber(value);
                        other = baseToNumber(other);
                    }
                    result = operator(value, other);
                }
                return result;
            };
        }
        /**
     * Creates a function like `_.over`.
     *
     * @private
     * @param {Function} arrayFunc The function to iterate over iteratees.
     * @returns {Function} Returns the new over function.
     */ function createOver(arrayFunc) {
            return flatRest(function(iteratees) {
                iteratees = arrayMap(iteratees, baseUnary(getIteratee()));
                return baseRest(function(args) {
                    var thisArg = this;
                    return arrayFunc(iteratees, function(iteratee) {
                        return apply(iteratee, thisArg, args);
                    });
                });
            });
        }
        /**
     * Creates the padding for `string` based on `length`. The `chars` string
     * is truncated if the number of characters exceeds `length`.
     *
     * @private
     * @param {number} length The padding length.
     * @param {string} [chars=' '] The string used as padding.
     * @returns {string} Returns the padding for `string`.
     */ function createPadding(length, chars) {
            chars = chars === undefined ? " " : baseToString(chars);
            var charsLength = chars.length;
            if (charsLength < 2) return charsLength ? baseRepeat(chars, length) : chars;
            var result = baseRepeat(chars, nativeCeil(length / stringSize(chars)));
            return hasUnicode(chars) ? castSlice(stringToArray(result), 0, length).join("") : result.slice(0, length);
        }
        /**
     * Creates a function that wraps `func` to invoke it with the `this` binding
     * of `thisArg` and `partials` prepended to the arguments it receives.
     *
     * @private
     * @param {Function} func The function to wrap.
     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
     * @param {*} thisArg The `this` binding of `func`.
     * @param {Array} partials The arguments to prepend to those provided to
     *  the new function.
     * @returns {Function} Returns the new wrapped function.
     */ function createPartial(func, bitmask, thisArg, partials) {
            var isBind = bitmask & WRAP_BIND_FLAG, Ctor = createCtor(func);
            function wrapper() {
                var argsIndex = -1, argsLength = arguments.length, leftIndex = -1, leftLength = partials.length, args = Array1(leftLength + argsLength), fn = this && this !== root && this instanceof wrapper ? Ctor : func;
                while(++leftIndex < leftLength)args[leftIndex] = partials[leftIndex];
                while(argsLength--)args[leftIndex++] = arguments[++argsIndex];
                return apply(fn, isBind ? thisArg : this, args);
            }
            return wrapper;
        }
        /**
     * Creates a `_.range` or `_.rangeRight` function.
     *
     * @private
     * @param {boolean} [fromRight] Specify iterating from right to left.
     * @returns {Function} Returns the new range function.
     */ function createRange(fromRight) {
            return function(start, end, step) {
                if (step && typeof step != "number" && isIterateeCall(start, end, step)) end = step = undefined;
                // Ensure the sign of `-0` is preserved.
                start = toFinite(start);
                if (end === undefined) {
                    end = start;
                    start = 0;
                } else end = toFinite(end);
                step = step === undefined ? start < end ? 1 : -1 : toFinite(step);
                return baseRange(start, end, step, fromRight);
            };
        }
        /**
     * Creates a function that performs a relational operation on two values.
     *
     * @private
     * @param {Function} operator The function to perform the operation.
     * @returns {Function} Returns the new relational operation function.
     */ function createRelationalOperation(operator) {
            return function(value, other) {
                if (!(typeof value == "string" && typeof other == "string")) {
                    value = toNumber(value);
                    other = toNumber(other);
                }
                return operator(value, other);
            };
        }
        /**
     * Creates a function that wraps `func` to continue currying.
     *
     * @private
     * @param {Function} func The function to wrap.
     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
     * @param {Function} wrapFunc The function to create the `func` wrapper.
     * @param {*} placeholder The placeholder value.
     * @param {*} [thisArg] The `this` binding of `func`.
     * @param {Array} [partials] The arguments to prepend to those provided to
     *  the new function.
     * @param {Array} [holders] The `partials` placeholder indexes.
     * @param {Array} [argPos] The argument positions of the new function.
     * @param {number} [ary] The arity cap of `func`.
     * @param {number} [arity] The arity of `func`.
     * @returns {Function} Returns the new wrapped function.
     */ function createRecurry(func, bitmask, wrapFunc, placeholder, thisArg, partials, holders, argPos, ary, arity) {
            var isCurry = bitmask & WRAP_CURRY_FLAG, newHolders = isCurry ? holders : undefined, newHoldersRight = isCurry ? undefined : holders, newPartials = isCurry ? partials : undefined, newPartialsRight = isCurry ? undefined : partials;
            bitmask |= isCurry ? WRAP_PARTIAL_FLAG : WRAP_PARTIAL_RIGHT_FLAG;
            bitmask &= ~(isCurry ? WRAP_PARTIAL_RIGHT_FLAG : WRAP_PARTIAL_FLAG);
            if (!(bitmask & WRAP_CURRY_BOUND_FLAG)) bitmask &= ~(WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG);
            var newData = [
                func,
                bitmask,
                thisArg,
                newPartials,
                newHolders,
                newPartialsRight,
                newHoldersRight,
                argPos,
                ary,
                arity
            ];
            var result = wrapFunc.apply(undefined, newData);
            if (isLaziable(func)) setData(result, newData);
            result.placeholder = placeholder;
            return setWrapToString(result, func, bitmask);
        }
        /**
     * Creates a function like `_.round`.
     *
     * @private
     * @param {string} methodName The name of the `Math` method to use when rounding.
     * @returns {Function} Returns the new round function.
     */ function createRound(methodName) {
            var func = Math[methodName];
            return function(number, precision) {
                number = toNumber(number);
                precision = precision == null ? 0 : nativeMin(toInteger(precision), 292);
                if (precision && nativeIsFinite(number)) {
                    // Shift with exponential notation to avoid floating-point issues.
                    // See [MDN](https://mdn.io/round#Examples) for more details.
                    var pair = (toString(number) + "e").split("e"), value = func(pair[0] + "e" + (+pair[1] + precision));
                    pair = (toString(value) + "e").split("e");
                    return +(pair[0] + "e" + (+pair[1] - precision));
                }
                return func(number);
            };
        }
        /**
     * Creates a set object of `values`.
     *
     * @private
     * @param {Array} values The values to add to the set.
     * @returns {Object} Returns the new set.
     */ var createSet = !(Set && 1 / setToArray(new Set([
            ,
            -0
        ]))[1] == INFINITY) ? noop : function(values) {
            return new Set(values);
        };
        /**
     * Creates a `_.toPairs` or `_.toPairsIn` function.
     *
     * @private
     * @param {Function} keysFunc The function to get the keys of a given object.
     * @returns {Function} Returns the new pairs function.
     */ function createToPairs(keysFunc) {
            return function(object) {
                var tag = getTag(object);
                if (tag == mapTag) return mapToArray(object);
                if (tag == setTag) return setToPairs(object);
                return baseToPairs(object, keysFunc(object));
            };
        }
        /**
     * Creates a function that either curries or invokes `func` with optional
     * `this` binding and partially applied arguments.
     *
     * @private
     * @param {Function|string} func The function or method name to wrap.
     * @param {number} bitmask The bitmask flags.
     *    1 - `_.bind`
     *    2 - `_.bindKey`
     *    4 - `_.curry` or `_.curryRight` of a bound function
     *    8 - `_.curry`
     *   16 - `_.curryRight`
     *   32 - `_.partial`
     *   64 - `_.partialRight`
     *  128 - `_.rearg`
     *  256 - `_.ary`
     *  512 - `_.flip`
     * @param {*} [thisArg] The `this` binding of `func`.
     * @param {Array} [partials] The arguments to be partially applied.
     * @param {Array} [holders] The `partials` placeholder indexes.
     * @param {Array} [argPos] The argument positions of the new function.
     * @param {number} [ary] The arity cap of `func`.
     * @param {number} [arity] The arity of `func`.
     * @returns {Function} Returns the new wrapped function.
     */ function createWrap(func, bitmask, thisArg, partials, holders, argPos, ary, arity) {
            var isBindKey = bitmask & WRAP_BIND_KEY_FLAG;
            if (!isBindKey && typeof func != "function") throw new TypeError(FUNC_ERROR_TEXT);
            var length = partials ? partials.length : 0;
            if (!length) {
                bitmask &= ~(WRAP_PARTIAL_FLAG | WRAP_PARTIAL_RIGHT_FLAG);
                partials = holders = undefined;
            }
            ary = ary === undefined ? ary : nativeMax(toInteger(ary), 0);
            arity = arity === undefined ? arity : toInteger(arity);
            length -= holders ? holders.length : 0;
            if (bitmask & WRAP_PARTIAL_RIGHT_FLAG) {
                var partialsRight = partials, holdersRight = holders;
                partials = holders = undefined;
            }
            var data = isBindKey ? undefined : getData(func);
            var newData = [
                func,
                bitmask,
                thisArg,
                partials,
                holders,
                partialsRight,
                holdersRight,
                argPos,
                ary,
                arity
            ];
            if (data) mergeData(newData, data);
            func = newData[0];
            bitmask = newData[1];
            thisArg = newData[2];
            partials = newData[3];
            holders = newData[4];
            arity = newData[9] = newData[9] === undefined ? isBindKey ? 0 : func.length : nativeMax(newData[9] - length, 0);
            if (!arity && bitmask & (WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG)) bitmask &= ~(WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG);
            if (!bitmask || bitmask == WRAP_BIND_FLAG) var result = createBind(func, bitmask, thisArg);
            else if (bitmask == WRAP_CURRY_FLAG || bitmask == WRAP_CURRY_RIGHT_FLAG) result = createCurry(func, bitmask, arity);
            else if ((bitmask == WRAP_PARTIAL_FLAG || bitmask == (WRAP_BIND_FLAG | WRAP_PARTIAL_FLAG)) && !holders.length) result = createPartial(func, bitmask, thisArg, partials);
            else result = createHybrid.apply(undefined, newData);
            var setter = data ? baseSetData : setData;
            return setWrapToString(setter(result, newData), func, bitmask);
        }
        /**
     * Used by `_.defaults` to customize its `_.assignIn` use to assign properties
     * of source objects to the destination object for all destination properties
     * that resolve to `undefined`.
     *
     * @private
     * @param {*} objValue The destination value.
     * @param {*} srcValue The source value.
     * @param {string} key The key of the property to assign.
     * @param {Object} object The parent object of `objValue`.
     * @returns {*} Returns the value to assign.
     */ function customDefaultsAssignIn(objValue, srcValue, key, object) {
            if (objValue === undefined || eq(objValue, objectProto[key]) && !hasOwnProperty.call(object, key)) return srcValue;
            return objValue;
        }
        /**
     * Used by `_.defaultsDeep` to customize its `_.merge` use to merge source
     * objects into destination objects that are passed thru.
     *
     * @private
     * @param {*} objValue The destination value.
     * @param {*} srcValue The source value.
     * @param {string} key The key of the property to merge.
     * @param {Object} object The parent object of `objValue`.
     * @param {Object} source The parent object of `srcValue`.
     * @param {Object} [stack] Tracks traversed source values and their merged
     *  counterparts.
     * @returns {*} Returns the value to assign.
     */ function customDefaultsMerge(objValue, srcValue, key, object, source, stack) {
            if (isObject(objValue) && isObject(srcValue)) {
                // Recursively merge objects and arrays (susceptible to call stack limits).
                stack.set(srcValue, objValue);
                baseMerge(objValue, srcValue, undefined, customDefaultsMerge, stack);
                stack["delete"](srcValue);
            }
            return objValue;
        }
        /**
     * Used by `_.omit` to customize its `_.cloneDeep` use to only clone plain
     * objects.
     *
     * @private
     * @param {*} value The value to inspect.
     * @param {string} key The key of the property to inspect.
     * @returns {*} Returns the uncloned value or `undefined` to defer cloning to `_.cloneDeep`.
     */ function customOmitClone(value) {
            return isPlainObject(value) ? undefined : value;
        }
        /**
     * A specialized version of `baseIsEqualDeep` for arrays with support for
     * partial deep comparisons.
     *
     * @private
     * @param {Array} array The array to compare.
     * @param {Array} other The other array to compare.
     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
     * @param {Function} customizer The function to customize comparisons.
     * @param {Function} equalFunc The function to determine equivalents of values.
     * @param {Object} stack Tracks traversed `array` and `other` objects.
     * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.
     */ function equalArrays(array, other, bitmask, customizer, equalFunc, stack) {
            var isPartial = bitmask & COMPARE_PARTIAL_FLAG, arrLength = array.length, othLength = other.length;
            if (arrLength != othLength && !(isPartial && othLength > arrLength)) return false;
            // Check that cyclic values are equal.
            var arrStacked = stack.get(array);
            var othStacked = stack.get(other);
            if (arrStacked && othStacked) return arrStacked == other && othStacked == array;
            var index = -1, result = true, seen = bitmask & COMPARE_UNORDERED_FLAG ? new SetCache : undefined;
            stack.set(array, other);
            stack.set(other, array);
            // Ignore non-index properties.
            while(++index < arrLength){
                var arrValue = array[index], othValue = other[index];
                if (customizer) var compared = isPartial ? customizer(othValue, arrValue, index, other, array, stack) : customizer(arrValue, othValue, index, array, other, stack);
                if (compared !== undefined) {
                    if (compared) continue;
                    result = false;
                    break;
                }
                // Recursively compare arrays (susceptible to call stack limits).
                if (seen) {
                    if (!arraySome(other, function(othValue, othIndex) {
                        if (!cacheHas(seen, othIndex) && (arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) return seen.push(othIndex);
                    })) {
                        result = false;
                        break;
                    }
                } else if (!(arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {
                    result = false;
                    break;
                }
            }
            stack["delete"](array);
            stack["delete"](other);
            return result;
        }
        /**
     * A specialized version of `baseIsEqualDeep` for comparing objects of
     * the same `toStringTag`.
     *
     * **Note:** This function only supports comparing values with tags of
     * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.
     *
     * @private
     * @param {Object} object The object to compare.
     * @param {Object} other The other object to compare.
     * @param {string} tag The `toStringTag` of the objects to compare.
     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
     * @param {Function} customizer The function to customize comparisons.
     * @param {Function} equalFunc The function to determine equivalents of values.
     * @param {Object} stack Tracks traversed `object` and `other` objects.
     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
     */ function equalByTag(object, other, tag, bitmask, customizer, equalFunc, stack) {
            switch(tag){
                case dataViewTag:
                    if (object.byteLength != other.byteLength || object.byteOffset != other.byteOffset) return false;
                    object = object.buffer;
                    other = other.buffer;
                case arrayBufferTag:
                    if (object.byteLength != other.byteLength || !equalFunc(new Uint8Array(object), new Uint8Array(other))) return false;
                    return true;
                case boolTag:
                case dateTag:
                case numberTag:
                    // Coerce booleans to `1` or `0` and dates to milliseconds.
                    // Invalid dates are coerced to `NaN`.
                    return eq(+object, +other);
                case errorTag:
                    return object.name == other.name && object.message == other.message;
                case regexpTag:
                case stringTag:
                    // Coerce regexes to strings and treat strings, primitives and objects,
                    // as equal. See http://www.ecma-international.org/ecma-262/7.0/#sec-regexp.prototype.tostring
                    // for more details.
                    return object == other + "";
                case mapTag:
                    var convert = mapToArray;
                case setTag:
                    var isPartial = bitmask & COMPARE_PARTIAL_FLAG;
                    convert || (convert = setToArray);
                    if (object.size != other.size && !isPartial) return false;
                    // Assume cyclic values are equal.
                    var stacked = stack.get(object);
                    if (stacked) return stacked == other;
                    bitmask |= COMPARE_UNORDERED_FLAG;
                    // Recursively compare objects (susceptible to call stack limits).
                    stack.set(object, other);
                    var result = equalArrays(convert(object), convert(other), bitmask, customizer, equalFunc, stack);
                    stack["delete"](object);
                    return result;
                case symbolTag:
                    if (symbolValueOf) return symbolValueOf.call(object) == symbolValueOf.call(other);
            }
            return false;
        }
        /**
     * A specialized version of `baseIsEqualDeep` for objects with support for
     * partial deep comparisons.
     *
     * @private
     * @param {Object} object The object to compare.
     * @param {Object} other The other object to compare.
     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
     * @param {Function} customizer The function to customize comparisons.
     * @param {Function} equalFunc The function to determine equivalents of values.
     * @param {Object} stack Tracks traversed `object` and `other` objects.
     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
     */ function equalObjects(object, other, bitmask, customizer, equalFunc, stack) {
            var isPartial = bitmask & COMPARE_PARTIAL_FLAG, objProps = getAllKeys(object), objLength = objProps.length, othProps = getAllKeys(other), othLength = othProps.length;
            if (objLength != othLength && !isPartial) return false;
            var index = objLength;
            while(index--){
                var key = objProps[index];
                if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) return false;
            }
            // Check that cyclic values are equal.
            var objStacked = stack.get(object);
            var othStacked = stack.get(other);
            if (objStacked && othStacked) return objStacked == other && othStacked == object;
            var result = true;
            stack.set(object, other);
            stack.set(other, object);
            var skipCtor = isPartial;
            while(++index < objLength){
                key = objProps[index];
                var objValue = object[key], othValue = other[key];
                if (customizer) var compared = isPartial ? customizer(othValue, objValue, key, other, object, stack) : customizer(objValue, othValue, key, object, other, stack);
                // Recursively compare objects (susceptible to call stack limits).
                if (!(compared === undefined ? objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack) : compared)) {
                    result = false;
                    break;
                }
                skipCtor || (skipCtor = key == "constructor");
            }
            if (result && !skipCtor) {
                var objCtor = object.constructor, othCtor = other.constructor;
                // Non `Object` object instances with different constructors are not equal.
                if (objCtor != othCtor && "constructor" in object && "constructor" in other && !(typeof objCtor == "function" && objCtor instanceof objCtor && typeof othCtor == "function" && othCtor instanceof othCtor)) result = false;
            }
            stack["delete"](object);
            stack["delete"](other);
            return result;
        }
        /**
     * A specialized version of `baseRest` which flattens the rest array.
     *
     * @private
     * @param {Function} func The function to apply a rest parameter to.
     * @returns {Function} Returns the new function.
     */ function flatRest(func) {
            return setToString(overRest(func, undefined, flatten), func + "");
        }
        /**
     * Creates an array of own enumerable property names and symbols of `object`.
     *
     * @private
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of property names and symbols.
     */ function getAllKeys(object) {
            return baseGetAllKeys(object, keys, getSymbols);
        }
        /**
     * Creates an array of own and inherited enumerable property names and
     * symbols of `object`.
     *
     * @private
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of property names and symbols.
     */ function getAllKeysIn(object) {
            return baseGetAllKeys(object, keysIn, getSymbolsIn);
        }
        /**
     * Gets metadata for `func`.
     *
     * @private
     * @param {Function} func The function to query.
     * @returns {*} Returns the metadata for `func`.
     */ var getData = !metaMap ? noop : function(func) {
            return metaMap.get(func);
        };
        /**
     * Gets the name of `func`.
     *
     * @private
     * @param {Function} func The function to query.
     * @returns {string} Returns the function name.
     */ function getFuncName(func) {
            var result = func.name + "", array = realNames[result], length = hasOwnProperty.call(realNames, result) ? array.length : 0;
            while(length--){
                var data = array[length], otherFunc = data.func;
                if (otherFunc == null || otherFunc == func) return data.name;
            }
            return result;
        }
        /**
     * Gets the argument placeholder value for `func`.
     *
     * @private
     * @param {Function} func The function to inspect.
     * @returns {*} Returns the placeholder value.
     */ function getHolder(func) {
            var object = hasOwnProperty.call(lodash, "placeholder") ? lodash : func;
            return object.placeholder;
        }
        /**
     * Gets the appropriate "iteratee" function. If `_.iteratee` is customized,
     * this function returns the custom method, otherwise it returns `baseIteratee`.
     * If arguments are provided, the chosen function is invoked with them and
     * its result is returned.
     *
     * @private
     * @param {*} [value] The value to convert to an iteratee.
     * @param {number} [arity] The arity of the created iteratee.
     * @returns {Function} Returns the chosen function or its result.
     */ function getIteratee() {
            var result = lodash.iteratee || iteratee;
            result = result === iteratee ? baseIteratee : result;
            return arguments.length ? result(arguments[0], arguments[1]) : result;
        }
        /**
     * Gets the data for `map`.
     *
     * @private
     * @param {Object} map The map to query.
     * @param {string} key The reference key.
     * @returns {*} Returns the map data.
     */ function getMapData(map, key) {
            var data = map.__data__;
            return isKeyable(key) ? data[typeof key == "string" ? "string" : "hash"] : data.map;
        }
        /**
     * Gets the property names, values, and compare flags of `object`.
     *
     * @private
     * @param {Object} object The object to query.
     * @returns {Array} Returns the match data of `object`.
     */ function getMatchData(object) {
            var result = keys(object), length = result.length;
            while(length--){
                var key = result[length], value = object[key];
                result[length] = [
                    key,
                    value,
                    isStrictComparable(value)
                ];
            }
            return result;
        }
        /**
     * Gets the native function at `key` of `object`.
     *
     * @private
     * @param {Object} object The object to query.
     * @param {string} key The key of the method to get.
     * @returns {*} Returns the function if it's native, else `undefined`.
     */ function getNative(object, key) {
            var value = getValue(object, key);
            return baseIsNative(value) ? value : undefined;
        }
        /**
     * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.
     *
     * @private
     * @param {*} value The value to query.
     * @returns {string} Returns the raw `toStringTag`.
     */ function getRawTag(value) {
            var isOwn = hasOwnProperty.call(value, symToStringTag), tag = value[symToStringTag];
            try {
                value[symToStringTag] = undefined;
                var unmasked = true;
            } catch (e) {}
            var result = nativeObjectToString.call(value);
            if (unmasked) {
                if (isOwn) value[symToStringTag] = tag;
                else delete value[symToStringTag];
            }
            return result;
        }
        /**
     * Creates an array of the own enumerable symbols of `object`.
     *
     * @private
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of symbols.
     */ var getSymbols = !nativeGetSymbols ? stubArray : function(object) {
            if (object == null) return [];
            object = Object1(object);
            return arrayFilter(nativeGetSymbols(object), function(symbol) {
                return propertyIsEnumerable.call(object, symbol);
            });
        };
        /**
     * Creates an array of the own and inherited enumerable symbols of `object`.
     *
     * @private
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of symbols.
     */ var getSymbolsIn = !nativeGetSymbols ? stubArray : function(object) {
            var result = [];
            while(object){
                arrayPush(result, getSymbols(object));
                object = getPrototype(object);
            }
            return result;
        };
        /**
     * Gets the `toStringTag` of `value`.
     *
     * @private
     * @param {*} value The value to query.
     * @returns {string} Returns the `toStringTag`.
     */ var getTag = baseGetTag;
        // Fallback for data views, maps, sets, and weak maps in IE 11 and promises in Node.js < 6.
        if (DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag || Map && getTag(new Map) != mapTag || Promise && getTag(Promise.resolve()) != promiseTag || Set && getTag(new Set) != setTag || WeakMap && getTag(new WeakMap) != weakMapTag) getTag = function(value) {
            var result = baseGetTag(value), Ctor = result == objectTag ? value.constructor : undefined, ctorString = Ctor ? toSource(Ctor) : "";
            if (ctorString) switch(ctorString){
                case dataViewCtorString:
                    return dataViewTag;
                case mapCtorString:
                    return mapTag;
                case promiseCtorString:
                    return promiseTag;
                case setCtorString:
                    return setTag;
                case weakMapCtorString:
                    return weakMapTag;
            }
            return result;
        };
        /**
     * Gets the view, applying any `transforms` to the `start` and `end` positions.
     *
     * @private
     * @param {number} start The start of the view.
     * @param {number} end The end of the view.
     * @param {Array} transforms The transformations to apply to the view.
     * @returns {Object} Returns an object containing the `start` and `end`
     *  positions of the view.
     */ function getView(start, end, transforms) {
            var index = -1, length = transforms.length;
            while(++index < length){
                var data = transforms[index], size = data.size;
                switch(data.type){
                    case "drop":
                        start += size;
                        break;
                    case "dropRight":
                        end -= size;
                        break;
                    case "take":
                        end = nativeMin(end, start + size);
                        break;
                    case "takeRight":
                        start = nativeMax(start, end - size);
                        break;
                }
            }
            return {
                "start": start,
                "end": end
            };
        }
        /**
     * Extracts wrapper details from the `source` body comment.
     *
     * @private
     * @param {string} source The source to inspect.
     * @returns {Array} Returns the wrapper details.
     */ function getWrapDetails(source) {
            var match = source.match(reWrapDetails);
            return match ? match[1].split(reSplitDetails) : [];
        }
        /**
     * Checks if `path` exists on `object`.
     *
     * @private
     * @param {Object} object The object to query.
     * @param {Array|string} path The path to check.
     * @param {Function} hasFunc The function to check properties.
     * @returns {boolean} Returns `true` if `path` exists, else `false`.
     */ function hasPath(object, path, hasFunc) {
            path = castPath(path, object);
            var index = -1, length = path.length, result = false;
            while(++index < length){
                var key = toKey(path[index]);
                if (!(result = object != null && hasFunc(object, key))) break;
                object = object[key];
            }
            if (result || ++index != length) return result;
            length = object == null ? 0 : object.length;
            return !!length && isLength(length) && isIndex(key, length) && (isArray(object) || isArguments(object));
        }
        /**
     * Initializes an array clone.
     *
     * @private
     * @param {Array} array The array to clone.
     * @returns {Array} Returns the initialized clone.
     */ function initCloneArray(array) {
            var length = array.length, result = new array.constructor(length);
            // Add properties assigned by `RegExp#exec`.
            if (length && typeof array[0] == "string" && hasOwnProperty.call(array, "index")) {
                result.index = array.index;
                result.input = array.input;
            }
            return result;
        }
        /**
     * Initializes an object clone.
     *
     * @private
     * @param {Object} object The object to clone.
     * @returns {Object} Returns the initialized clone.
     */ function initCloneObject(object) {
            return typeof object.constructor == "function" && !isPrototype(object) ? baseCreate(getPrototype(object)) : {};
        }
        /**
     * Initializes an object clone based on its `toStringTag`.
     *
     * **Note:** This function only supports cloning values with tags of
     * `Boolean`, `Date`, `Error`, `Map`, `Number`, `RegExp`, `Set`, or `String`.
     *
     * @private
     * @param {Object} object The object to clone.
     * @param {string} tag The `toStringTag` of the object to clone.
     * @param {boolean} [isDeep] Specify a deep clone.
     * @returns {Object} Returns the initialized clone.
     */ function initCloneByTag(object, tag, isDeep) {
            var Ctor = object.constructor;
            switch(tag){
                case arrayBufferTag:
                    return cloneArrayBuffer(object);
                case boolTag:
                case dateTag:
                    return new Ctor(+object);
                case dataViewTag:
                    return cloneDataView(object, isDeep);
                case float32Tag:
                case float64Tag:
                case int8Tag:
                case int16Tag:
                case int32Tag:
                case uint8Tag:
                case uint8ClampedTag:
                case uint16Tag:
                case uint32Tag:
                    return cloneTypedArray(object, isDeep);
                case mapTag:
                    return new Ctor;
                case numberTag:
                case stringTag:
                    return new Ctor(object);
                case regexpTag:
                    return cloneRegExp(object);
                case setTag:
                    return new Ctor;
                case symbolTag:
                    return cloneSymbol(object);
            }
        }
        /**
     * Inserts wrapper `details` in a comment at the top of the `source` body.
     *
     * @private
     * @param {string} source The source to modify.
     * @returns {Array} details The details to insert.
     * @returns {string} Returns the modified source.
     */ function insertWrapDetails(source, details) {
            var length = details.length;
            if (!length) return source;
            var lastIndex = length - 1;
            details[lastIndex] = (length > 1 ? "& " : "") + details[lastIndex];
            details = details.join(length > 2 ? ", " : " ");
            return source.replace(reWrapComment, "{\n/* [wrapped with " + details + "] */\n");
        }
        /**
     * Checks if `value` is a flattenable `arguments` object or array.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is flattenable, else `false`.
     */ function isFlattenable(value) {
            return isArray(value) || isArguments(value) || !!(spreadableSymbol && value && value[spreadableSymbol]);
        }
        /**
     * Checks if `value` is a valid array-like index.
     *
     * @private
     * @param {*} value The value to check.
     * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.
     * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.
     */ function isIndex(value, length) {
            var type = typeof value;
            length = length == null ? MAX_SAFE_INTEGER : length;
            return !!length && (type == "number" || type != "symbol" && reIsUint.test(value)) && value > -1 && value % 1 == 0 && value < length;
        }
        /**
     * Checks if the given arguments are from an iteratee call.
     *
     * @private
     * @param {*} value The potential iteratee value argument.
     * @param {*} index The potential iteratee index or key argument.
     * @param {*} object The potential iteratee object argument.
     * @returns {boolean} Returns `true` if the arguments are from an iteratee call,
     *  else `false`.
     */ function isIterateeCall(value, index, object) {
            if (!isObject(object)) return false;
            var type = typeof index;
            if (type == "number" ? isArrayLike(object) && isIndex(index, object.length) : type == "string" && index in object) return eq(object[index], value);
            return false;
        }
        /**
     * Checks if `value` is a property name and not a property path.
     *
     * @private
     * @param {*} value The value to check.
     * @param {Object} [object] The object to query keys on.
     * @returns {boolean} Returns `true` if `value` is a property name, else `false`.
     */ function isKey(value, object) {
            if (isArray(value)) return false;
            var type = typeof value;
            if (type == "number" || type == "symbol" || type == "boolean" || value == null || isSymbol(value)) return true;
            return reIsPlainProp.test(value) || !reIsDeepProp.test(value) || object != null && value in Object1(object);
        }
        /**
     * Checks if `value` is suitable for use as unique object key.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is suitable, else `false`.
     */ function isKeyable(value) {
            var type = typeof value;
            return type == "string" || type == "number" || type == "symbol" || type == "boolean" ? value !== "__proto__" : value === null;
        }
        /**
     * Checks if `func` has a lazy counterpart.
     *
     * @private
     * @param {Function} func The function to check.
     * @returns {boolean} Returns `true` if `func` has a lazy counterpart,
     *  else `false`.
     */ function isLaziable(func) {
            var funcName = getFuncName(func), other = lodash[funcName];
            if (typeof other != "function" || !(funcName in LazyWrapper.prototype)) return false;
            if (func === other) return true;
            var data = getData(other);
            return !!data && func === data[0];
        }
        /**
     * Checks if `func` has its source masked.
     *
     * @private
     * @param {Function} func The function to check.
     * @returns {boolean} Returns `true` if `func` is masked, else `false`.
     */ function isMasked(func) {
            return !!maskSrcKey && maskSrcKey in func;
        }
        /**
     * Checks if `func` is capable of being masked.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `func` is maskable, else `false`.
     */ var isMaskable = coreJsData ? isFunction : stubFalse;
        /**
     * Checks if `value` is likely a prototype object.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.
     */ function isPrototype(value) {
            var Ctor = value && value.constructor, proto = typeof Ctor == "function" && Ctor.prototype || objectProto;
            return value === proto;
        }
        /**
     * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` if suitable for strict
     *  equality comparisons, else `false`.
     */ function isStrictComparable(value) {
            return value === value && !isObject(value);
        }
        /**
     * A specialized version of `matchesProperty` for source values suitable
     * for strict equality comparisons, i.e. `===`.
     *
     * @private
     * @param {string} key The key of the property to get.
     * @param {*} srcValue The value to match.
     * @returns {Function} Returns the new spec function.
     */ function matchesStrictComparable(key, srcValue) {
            return function(object) {
                if (object == null) return false;
                return object[key] === srcValue && (srcValue !== undefined || key in Object1(object));
            };
        }
        /**
     * A specialized version of `_.memoize` which clears the memoized function's
     * cache when it exceeds `MAX_MEMOIZE_SIZE`.
     *
     * @private
     * @param {Function} func The function to have its output memoized.
     * @returns {Function} Returns the new memoized function.
     */ function memoizeCapped(func) {
            var result = memoize(func, function(key) {
                if (cache.size === MAX_MEMOIZE_SIZE) cache.clear();
                return key;
            });
            var cache = result.cache;
            return result;
        }
        /**
     * Merges the function metadata of `source` into `data`.
     *
     * Merging metadata reduces the number of wrappers used to invoke a function.
     * This is possible because methods like `_.bind`, `_.curry`, and `_.partial`
     * may be applied regardless of execution order. Methods like `_.ary` and
     * `_.rearg` modify function arguments, making the order in which they are
     * executed important, preventing the merging of metadata. However, we make
     * an exception for a safe combined case where curried functions have `_.ary`
     * and or `_.rearg` applied.
     *
     * @private
     * @param {Array} data The destination metadata.
     * @param {Array} source The source metadata.
     * @returns {Array} Returns `data`.
     */ function mergeData(data, source) {
            var bitmask = data[1], srcBitmask = source[1], newBitmask = bitmask | srcBitmask, isCommon = newBitmask < (WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG | WRAP_ARY_FLAG);
            var isCombo = srcBitmask == WRAP_ARY_FLAG && bitmask == WRAP_CURRY_FLAG || srcBitmask == WRAP_ARY_FLAG && bitmask == WRAP_REARG_FLAG && data[7].length <= source[8] || srcBitmask == (WRAP_ARY_FLAG | WRAP_REARG_FLAG) && source[7].length <= source[8] && bitmask == WRAP_CURRY_FLAG;
            // Exit early if metadata can't be merged.
            if (!(isCommon || isCombo)) return data;
            // Use source `thisArg` if available.
            if (srcBitmask & WRAP_BIND_FLAG) {
                data[2] = source[2];
                // Set when currying a bound function.
                newBitmask |= bitmask & WRAP_BIND_FLAG ? 0 : WRAP_CURRY_BOUND_FLAG;
            }
            // Compose partial arguments.
            var value = source[3];
            if (value) {
                var partials = data[3];
                data[3] = partials ? composeArgs(partials, value, source[4]) : value;
                data[4] = partials ? replaceHolders(data[3], PLACEHOLDER) : source[4];
            }
            // Compose partial right arguments.
            value = source[5];
            if (value) {
                partials = data[5];
                data[5] = partials ? composeArgsRight(partials, value, source[6]) : value;
                data[6] = partials ? replaceHolders(data[5], PLACEHOLDER) : source[6];
            }
            // Use source `argPos` if available.
            value = source[7];
            if (value) data[7] = value;
            // Use source `ary` if it's smaller.
            if (srcBitmask & WRAP_ARY_FLAG) data[8] = data[8] == null ? source[8] : nativeMin(data[8], source[8]);
            // Use source `arity` if one is not provided.
            if (data[9] == null) data[9] = source[9];
            // Use source `func` and merge bitmasks.
            data[0] = source[0];
            data[1] = newBitmask;
            return data;
        }
        /**
     * This function is like
     * [`Object.keys`](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)
     * except that it includes inherited enumerable properties.
     *
     * @private
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of property names.
     */ function nativeKeysIn(object) {
            var result = [];
            if (object != null) for(var key in Object1(object))result.push(key);
            return result;
        }
        /**
     * Converts `value` to a string using `Object.prototype.toString`.
     *
     * @private
     * @param {*} value The value to convert.
     * @returns {string} Returns the converted string.
     */ function objectToString(value) {
            return nativeObjectToString.call(value);
        }
        /**
     * A specialized version of `baseRest` which transforms the rest array.
     *
     * @private
     * @param {Function} func The function to apply a rest parameter to.
     * @param {number} [start=func.length-1] The start position of the rest parameter.
     * @param {Function} transform The rest array transform.
     * @returns {Function} Returns the new function.
     */ function overRest(func, start, transform) {
            start = nativeMax(start === undefined ? func.length - 1 : start, 0);
            return function() {
                var args = arguments, index = -1, length = nativeMax(args.length - start, 0), array = Array1(length);
                while(++index < length)array[index] = args[start + index];
                index = -1;
                var otherArgs = Array1(start + 1);
                while(++index < start)otherArgs[index] = args[index];
                otherArgs[start] = transform(array);
                return apply(func, this, otherArgs);
            };
        }
        /**
     * Gets the parent value at `path` of `object`.
     *
     * @private
     * @param {Object} object The object to query.
     * @param {Array} path The path to get the parent value of.
     * @returns {*} Returns the parent value.
     */ function parent(object, path) {
            return path.length < 2 ? object : baseGet(object, baseSlice(path, 0, -1));
        }
        /**
     * Reorder `array` according to the specified indexes where the element at
     * the first index is assigned as the first element, the element at
     * the second index is assigned as the second element, and so on.
     *
     * @private
     * @param {Array} array The array to reorder.
     * @param {Array} indexes The arranged array indexes.
     * @returns {Array} Returns `array`.
     */ function reorder(array, indexes) {
            var arrLength = array.length, length = nativeMin(indexes.length, arrLength), oldArray = copyArray(array);
            while(length--){
                var index = indexes[length];
                array[length] = isIndex(index, arrLength) ? oldArray[index] : undefined;
            }
            return array;
        }
        /**
     * Gets the value at `key`, unless `key` is "__proto__" or "constructor".
     *
     * @private
     * @param {Object} object The object to query.
     * @param {string} key The key of the property to get.
     * @returns {*} Returns the property value.
     */ function safeGet(object, key) {
            if (key === "constructor" && typeof object[key] === "function") return;
            if (key == "__proto__") return;
            return object[key];
        }
        /**
     * Sets metadata for `func`.
     *
     * **Note:** If this function becomes hot, i.e. is invoked a lot in a short
     * period of time, it will trip its breaker and transition to an identity
     * function to avoid garbage collection pauses in V8. See
     * [V8 issue 2070](https://bugs.chromium.org/p/v8/issues/detail?id=2070)
     * for more details.
     *
     * @private
     * @param {Function} func The function to associate metadata with.
     * @param {*} data The metadata.
     * @returns {Function} Returns `func`.
     */ var setData = shortOut(baseSetData);
        /**
     * A simple wrapper around the global [`setTimeout`](https://mdn.io/setTimeout).
     *
     * @private
     * @param {Function} func The function to delay.
     * @param {number} wait The number of milliseconds to delay invocation.
     * @returns {number|Object} Returns the timer id or timeout object.
     */ var setTimeout = ctxSetTimeout || function(func, wait) {
            return root.setTimeout(func, wait);
        };
        /**
     * Sets the `toString` method of `func` to return `string`.
     *
     * @private
     * @param {Function} func The function to modify.
     * @param {Function} string The `toString` result.
     * @returns {Function} Returns `func`.
     */ var setToString = shortOut(baseSetToString);
        /**
     * Sets the `toString` method of `wrapper` to mimic the source of `reference`
     * with wrapper details in a comment at the top of the source body.
     *
     * @private
     * @param {Function} wrapper The function to modify.
     * @param {Function} reference The reference function.
     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
     * @returns {Function} Returns `wrapper`.
     */ function setWrapToString(wrapper, reference, bitmask) {
            var source = reference + "";
            return setToString(wrapper, insertWrapDetails(source, updateWrapDetails(getWrapDetails(source), bitmask)));
        }
        /**
     * Creates a function that'll short out and invoke `identity` instead
     * of `func` when it's called `HOT_COUNT` or more times in `HOT_SPAN`
     * milliseconds.
     *
     * @private
     * @param {Function} func The function to restrict.
     * @returns {Function} Returns the new shortable function.
     */ function shortOut(func) {
            var count = 0, lastCalled = 0;
            return function() {
                var stamp = nativeNow(), remaining = HOT_SPAN - (stamp - lastCalled);
                lastCalled = stamp;
                if (remaining > 0) {
                    if (++count >= HOT_COUNT) return arguments[0];
                } else count = 0;
                return func.apply(undefined, arguments);
            };
        }
        /**
     * A specialized version of `_.shuffle` which mutates and sets the size of `array`.
     *
     * @private
     * @param {Array} array The array to shuffle.
     * @param {number} [size=array.length] The size of `array`.
     * @returns {Array} Returns `array`.
     */ function shuffleSelf(array, size) {
            var index = -1, length = array.length, lastIndex = length - 1;
            size = size === undefined ? length : size;
            while(++index < size){
                var rand = baseRandom(index, lastIndex), value = array[rand];
                array[rand] = array[index];
                array[index] = value;
            }
            array.length = size;
            return array;
        }
        /**
     * Converts `string` to a property path array.
     *
     * @private
     * @param {string} string The string to convert.
     * @returns {Array} Returns the property path array.
     */ var stringToPath = memoizeCapped(function(string) {
            var result = [];
            if (string.charCodeAt(0) === 46 /* . */ ) result.push("");
            string.replace(rePropName, function(match, number, quote, subString) {
                result.push(quote ? subString.replace(reEscapeChar, "$1") : number || match);
            });
            return result;
        });
        /**
     * Converts `value` to a string key if it's not a string or symbol.
     *
     * @private
     * @param {*} value The value to inspect.
     * @returns {string|symbol} Returns the key.
     */ function toKey(value) {
            if (typeof value == "string" || isSymbol(value)) return value;
            var result = value + "";
            return result == "0" && 1 / value == -INFINITY ? "-0" : result;
        }
        /**
     * Converts `func` to its source code.
     *
     * @private
     * @param {Function} func The function to convert.
     * @returns {string} Returns the source code.
     */ function toSource(func) {
            if (func != null) {
                try {
                    return funcToString.call(func);
                } catch (e) {}
                try {
                    return func + "";
                } catch (e) {}
            }
            return "";
        }
        /**
     * Updates wrapper `details` based on `bitmask` flags.
     *
     * @private
     * @returns {Array} details The details to modify.
     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
     * @returns {Array} Returns `details`.
     */ function updateWrapDetails(details, bitmask) {
            arrayEach(wrapFlags, function(pair) {
                var value = "_." + pair[0];
                if (bitmask & pair[1] && !arrayIncludes(details, value)) details.push(value);
            });
            return details.sort();
        }
        /**
     * Creates a clone of `wrapper`.
     *
     * @private
     * @param {Object} wrapper The wrapper to clone.
     * @returns {Object} Returns the cloned wrapper.
     */ function wrapperClone(wrapper) {
            if (wrapper instanceof LazyWrapper) return wrapper.clone();
            var result = new LodashWrapper(wrapper.__wrapped__, wrapper.__chain__);
            result.__actions__ = copyArray(wrapper.__actions__);
            result.__index__ = wrapper.__index__;
            result.__values__ = wrapper.__values__;
            return result;
        }
        /*------------------------------------------------------------------------*/ /**
     * Creates an array of elements split into groups the length of `size`.
     * If `array` can't be split evenly, the final chunk will be the remaining
     * elements.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Array
     * @param {Array} array The array to process.
     * @param {number} [size=1] The length of each chunk
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {Array} Returns the new array of chunks.
     * @example
     *
     * _.chunk(['a', 'b', 'c', 'd'], 2);
     * // => [['a', 'b'], ['c', 'd']]
     *
     * _.chunk(['a', 'b', 'c', 'd'], 3);
     * // => [['a', 'b', 'c'], ['d']]
     */ function chunk(array, size, guard) {
            if (guard ? isIterateeCall(array, size, guard) : size === undefined) size = 1;
            else size = nativeMax(toInteger(size), 0);
            var length = array == null ? 0 : array.length;
            if (!length || size < 1) return [];
            var index = 0, resIndex = 0, result = Array1(nativeCeil(length / size));
            while(index < length)result[resIndex++] = baseSlice(array, index, index += size);
            return result;
        }
        /**
     * Creates an array with all falsey values removed. The values `false`, `null`,
     * `0`, `""`, `undefined`, and `NaN` are falsey.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {Array} array The array to compact.
     * @returns {Array} Returns the new array of filtered values.
     * @example
     *
     * _.compact([0, 1, false, 2, '', 3]);
     * // => [1, 2, 3]
     */ function compact(array) {
            var index = -1, length = array == null ? 0 : array.length, resIndex = 0, result = [];
            while(++index < length){
                var value = array[index];
                if (value) result[resIndex++] = value;
            }
            return result;
        }
        /**
     * Creates a new array concatenating `array` with any additional arrays
     * and/or values.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to concatenate.
     * @param {...*} [values] The values to concatenate.
     * @returns {Array} Returns the new concatenated array.
     * @example
     *
     * var array = [1];
     * var other = _.concat(array, 2, [3], [[4]]);
     *
     * console.log(other);
     * // => [1, 2, 3, [4]]
     *
     * console.log(array);
     * // => [1]
     */ function concat() {
            var length = arguments.length;
            if (!length) return [];
            var args = Array1(length - 1), array = arguments[0], index = length;
            while(index--)args[index - 1] = arguments[index];
            return arrayPush(isArray(array) ? copyArray(array) : [
                array
            ], baseFlatten(args, 1));
        }
        /**
     * Creates an array of `array` values not included in the other given arrays
     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
     * for equality comparisons. The order and references of result values are
     * determined by the first array.
     *
     * **Note:** Unlike `_.pullAll`, this method returns a new array.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {...Array} [values] The values to exclude.
     * @returns {Array} Returns the new array of filtered values.
     * @see _.without, _.xor
     * @example
     *
     * _.difference([2, 1], [2, 3]);
     * // => [1]
     */ var difference = baseRest(function(array, values) {
            return isArrayLikeObject(array) ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true)) : [];
        });
        /**
     * This method is like `_.difference` except that it accepts `iteratee` which
     * is invoked for each element of `array` and `values` to generate the criterion
     * by which they're compared. The order and references of result values are
     * determined by the first array. The iteratee is invoked with one argument:
     * (value).
     *
     * **Note:** Unlike `_.pullAllBy`, this method returns a new array.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {...Array} [values] The values to exclude.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {Array} Returns the new array of filtered values.
     * @example
     *
     * _.differenceBy([2.1, 1.2], [2.3, 3.4], Math.floor);
     * // => [1.2]
     *
     * // The `_.property` iteratee shorthand.
     * _.differenceBy([{ 'x': 2 }, { 'x': 1 }], [{ 'x': 1 }], 'x');
     * // => [{ 'x': 2 }]
     */ var differenceBy = baseRest(function(array, values) {
            var iteratee = last(values);
            if (isArrayLikeObject(iteratee)) iteratee = undefined;
            return isArrayLikeObject(array) ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true), getIteratee(iteratee, 2)) : [];
        });
        /**
     * This method is like `_.difference` except that it accepts `comparator`
     * which is invoked to compare elements of `array` to `values`. The order and
     * references of result values are determined by the first array. The comparator
     * is invoked with two arguments: (arrVal, othVal).
     *
     * **Note:** Unlike `_.pullAllWith`, this method returns a new array.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {...Array} [values] The values to exclude.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns the new array of filtered values.
     * @example
     *
     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];
     *
     * _.differenceWith(objects, [{ 'x': 1, 'y': 2 }], _.isEqual);
     * // => [{ 'x': 2, 'y': 1 }]
     */ var differenceWith = baseRest(function(array, values) {
            var comparator = last(values);
            if (isArrayLikeObject(comparator)) comparator = undefined;
            return isArrayLikeObject(array) ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true), undefined, comparator) : [];
        });
        /**
     * Creates a slice of `array` with `n` elements dropped from the beginning.
     *
     * @static
     * @memberOf _
     * @since 0.5.0
     * @category Array
     * @param {Array} array The array to query.
     * @param {number} [n=1] The number of elements to drop.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {Array} Returns the slice of `array`.
     * @example
     *
     * _.drop([1, 2, 3]);
     * // => [2, 3]
     *
     * _.drop([1, 2, 3], 2);
     * // => [3]
     *
     * _.drop([1, 2, 3], 5);
     * // => []
     *
     * _.drop([1, 2, 3], 0);
     * // => [1, 2, 3]
     */ function drop(array, n, guard) {
            var length = array == null ? 0 : array.length;
            if (!length) return [];
            n = guard || n === undefined ? 1 : toInteger(n);
            return baseSlice(array, n < 0 ? 0 : n, length);
        }
        /**
     * Creates a slice of `array` with `n` elements dropped from the end.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Array
     * @param {Array} array The array to query.
     * @param {number} [n=1] The number of elements to drop.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {Array} Returns the slice of `array`.
     * @example
     *
     * _.dropRight([1, 2, 3]);
     * // => [1, 2]
     *
     * _.dropRight([1, 2, 3], 2);
     * // => [1]
     *
     * _.dropRight([1, 2, 3], 5);
     * // => []
     *
     * _.dropRight([1, 2, 3], 0);
     * // => [1, 2, 3]
     */ function dropRight(array, n, guard) {
            var length = array == null ? 0 : array.length;
            if (!length) return [];
            n = guard || n === undefined ? 1 : toInteger(n);
            n = length - n;
            return baseSlice(array, 0, n < 0 ? 0 : n);
        }
        /**
     * Creates a slice of `array` excluding elements dropped from the end.
     * Elements are dropped until `predicate` returns falsey. The predicate is
     * invoked with three arguments: (value, index, array).
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Array
     * @param {Array} array The array to query.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the slice of `array`.
     * @example
     *
     * var users = [
     *   { 'user': 'barney',  'active': true },
     *   { 'user': 'fred',    'active': false },
     *   { 'user': 'pebbles', 'active': false }
     * ];
     *
     * _.dropRightWhile(users, function(o) { return !o.active; });
     * // => objects for ['barney']
     *
     * // The `_.matches` iteratee shorthand.
     * _.dropRightWhile(users, { 'user': 'pebbles', 'active': false });
     * // => objects for ['barney', 'fred']
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.dropRightWhile(users, ['active', false]);
     * // => objects for ['barney']
     *
     * // The `_.property` iteratee shorthand.
     * _.dropRightWhile(users, 'active');
     * // => objects for ['barney', 'fred', 'pebbles']
     */ function dropRightWhile(array, predicate) {
            return array && array.length ? baseWhile(array, getIteratee(predicate, 3), true, true) : [];
        }
        /**
     * Creates a slice of `array` excluding elements dropped from the beginning.
     * Elements are dropped until `predicate` returns falsey. The predicate is
     * invoked with three arguments: (value, index, array).
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Array
     * @param {Array} array The array to query.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the slice of `array`.
     * @example
     *
     * var users = [
     *   { 'user': 'barney',  'active': false },
     *   { 'user': 'fred',    'active': false },
     *   { 'user': 'pebbles', 'active': true }
     * ];
     *
     * _.dropWhile(users, function(o) { return !o.active; });
     * // => objects for ['pebbles']
     *
     * // The `_.matches` iteratee shorthand.
     * _.dropWhile(users, { 'user': 'barney', 'active': false });
     * // => objects for ['fred', 'pebbles']
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.dropWhile(users, ['active', false]);
     * // => objects for ['pebbles']
     *
     * // The `_.property` iteratee shorthand.
     * _.dropWhile(users, 'active');
     * // => objects for ['barney', 'fred', 'pebbles']
     */ function dropWhile(array, predicate) {
            return array && array.length ? baseWhile(array, getIteratee(predicate, 3), true) : [];
        }
        /**
     * Fills elements of `array` with `value` from `start` up to, but not
     * including, `end`.
     *
     * **Note:** This method mutates `array`.
     *
     * @static
     * @memberOf _
     * @since 3.2.0
     * @category Array
     * @param {Array} array The array to fill.
     * @param {*} value The value to fill `array` with.
     * @param {number} [start=0] The start position.
     * @param {number} [end=array.length] The end position.
     * @returns {Array} Returns `array`.
     * @example
     *
     * var array = [1, 2, 3];
     *
     * _.fill(array, 'a');
     * console.log(array);
     * // => ['a', 'a', 'a']
     *
     * _.fill(Array(3), 2);
     * // => [2, 2, 2]
     *
     * _.fill([4, 6, 8, 10], '*', 1, 3);
     * // => [4, '*', '*', 10]
     */ function fill(array, value, start, end) {
            var length = array == null ? 0 : array.length;
            if (!length) return [];
            if (start && typeof start != "number" && isIterateeCall(array, value, start)) {
                start = 0;
                end = length;
            }
            return baseFill(array, value, start, end);
        }
        /**
     * This method is like `_.find` except that it returns the index of the first
     * element `predicate` returns truthy for instead of the element itself.
     *
     * @static
     * @memberOf _
     * @since 1.1.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @param {number} [fromIndex=0] The index to search from.
     * @returns {number} Returns the index of the found element, else `-1`.
     * @example
     *
     * var users = [
     *   { 'user': 'barney',  'active': false },
     *   { 'user': 'fred',    'active': false },
     *   { 'user': 'pebbles', 'active': true }
     * ];
     *
     * _.findIndex(users, function(o) { return o.user == 'barney'; });
     * // => 0
     *
     * // The `_.matches` iteratee shorthand.
     * _.findIndex(users, { 'user': 'fred', 'active': false });
     * // => 1
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.findIndex(users, ['active', false]);
     * // => 0
     *
     * // The `_.property` iteratee shorthand.
     * _.findIndex(users, 'active');
     * // => 2
     */ function findIndex(array, predicate, fromIndex) {
            var length = array == null ? 0 : array.length;
            if (!length) return -1;
            var index = fromIndex == null ? 0 : toInteger(fromIndex);
            if (index < 0) index = nativeMax(length + index, 0);
            return baseFindIndex(array, getIteratee(predicate, 3), index);
        }
        /**
     * This method is like `_.findIndex` except that it iterates over elements
     * of `collection` from right to left.
     *
     * @static
     * @memberOf _
     * @since 2.0.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @param {number} [fromIndex=array.length-1] The index to search from.
     * @returns {number} Returns the index of the found element, else `-1`.
     * @example
     *
     * var users = [
     *   { 'user': 'barney',  'active': true },
     *   { 'user': 'fred',    'active': false },
     *   { 'user': 'pebbles', 'active': false }
     * ];
     *
     * _.findLastIndex(users, function(o) { return o.user == 'pebbles'; });
     * // => 2
     *
     * // The `_.matches` iteratee shorthand.
     * _.findLastIndex(users, { 'user': 'barney', 'active': true });
     * // => 0
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.findLastIndex(users, ['active', false]);
     * // => 2
     *
     * // The `_.property` iteratee shorthand.
     * _.findLastIndex(users, 'active');
     * // => 0
     */ function findLastIndex(array, predicate, fromIndex) {
            var length = array == null ? 0 : array.length;
            if (!length) return -1;
            var index = length - 1;
            if (fromIndex !== undefined) {
                index = toInteger(fromIndex);
                index = fromIndex < 0 ? nativeMax(length + index, 0) : nativeMin(index, length - 1);
            }
            return baseFindIndex(array, getIteratee(predicate, 3), index, true);
        }
        /**
     * Flattens `array` a single level deep.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {Array} array The array to flatten.
     * @returns {Array} Returns the new flattened array.
     * @example
     *
     * _.flatten([1, [2, [3, [4]], 5]]);
     * // => [1, 2, [3, [4]], 5]
     */ function flatten(array) {
            var length = array == null ? 0 : array.length;
            return length ? baseFlatten(array, 1) : [];
        }
        /**
     * Recursively flattens `array`.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Array
     * @param {Array} array The array to flatten.
     * @returns {Array} Returns the new flattened array.
     * @example
     *
     * _.flattenDeep([1, [2, [3, [4]], 5]]);
     * // => [1, 2, 3, 4, 5]
     */ function flattenDeep(array) {
            var length = array == null ? 0 : array.length;
            return length ? baseFlatten(array, INFINITY) : [];
        }
        /**
     * Recursively flatten `array` up to `depth` times.
     *
     * @static
     * @memberOf _
     * @since 4.4.0
     * @category Array
     * @param {Array} array The array to flatten.
     * @param {number} [depth=1] The maximum recursion depth.
     * @returns {Array} Returns the new flattened array.
     * @example
     *
     * var array = [1, [2, [3, [4]], 5]];
     *
     * _.flattenDepth(array, 1);
     * // => [1, 2, [3, [4]], 5]
     *
     * _.flattenDepth(array, 2);
     * // => [1, 2, 3, [4], 5]
     */ function flattenDepth(array, depth) {
            var length = array == null ? 0 : array.length;
            if (!length) return [];
            depth = depth === undefined ? 1 : toInteger(depth);
            return baseFlatten(array, depth);
        }
        /**
     * The inverse of `_.toPairs`; this method returns an object composed
     * from key-value `pairs`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} pairs The key-value pairs.
     * @returns {Object} Returns the new object.
     * @example
     *
     * _.fromPairs([['a', 1], ['b', 2]]);
     * // => { 'a': 1, 'b': 2 }
     */ function fromPairs(pairs) {
            var index = -1, length = pairs == null ? 0 : pairs.length, result = {};
            while(++index < length){
                var pair = pairs[index];
                result[pair[0]] = pair[1];
            }
            return result;
        }
        /**
     * Gets the first element of `array`.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @alias first
     * @category Array
     * @param {Array} array The array to query.
     * @returns {*} Returns the first element of `array`.
     * @example
     *
     * _.head([1, 2, 3]);
     * // => 1
     *
     * _.head([]);
     * // => undefined
     */ function head(array) {
            return array && array.length ? array[0] : undefined;
        }
        /**
     * Gets the index at which the first occurrence of `value` is found in `array`
     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
     * for equality comparisons. If `fromIndex` is negative, it's used as the
     * offset from the end of `array`.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {*} value The value to search for.
     * @param {number} [fromIndex=0] The index to search from.
     * @returns {number} Returns the index of the matched value, else `-1`.
     * @example
     *
     * _.indexOf([1, 2, 1, 2], 2);
     * // => 1
     *
     * // Search from the `fromIndex`.
     * _.indexOf([1, 2, 1, 2], 2, 2);
     * // => 3
     */ function indexOf(array, value, fromIndex) {
            var length = array == null ? 0 : array.length;
            if (!length) return -1;
            var index = fromIndex == null ? 0 : toInteger(fromIndex);
            if (index < 0) index = nativeMax(length + index, 0);
            return baseIndexOf(array, value, index);
        }
        /**
     * Gets all but the last element of `array`.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {Array} array The array to query.
     * @returns {Array} Returns the slice of `array`.
     * @example
     *
     * _.initial([1, 2, 3]);
     * // => [1, 2]
     */ function initial(array) {
            var length = array == null ? 0 : array.length;
            return length ? baseSlice(array, 0, -1) : [];
        }
        /**
     * Creates an array of unique values that are included in all given arrays
     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
     * for equality comparisons. The order and references of result values are
     * determined by the first array.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {...Array} [arrays] The arrays to inspect.
     * @returns {Array} Returns the new array of intersecting values.
     * @example
     *
     * _.intersection([2, 1], [2, 3]);
     * // => [2]
     */ var intersection = baseRest(function(arrays) {
            var mapped = arrayMap(arrays, castArrayLikeObject);
            return mapped.length && mapped[0] === arrays[0] ? baseIntersection(mapped) : [];
        });
        /**
     * This method is like `_.intersection` except that it accepts `iteratee`
     * which is invoked for each element of each `arrays` to generate the criterion
     * by which they're compared. The order and references of result values are
     * determined by the first array. The iteratee is invoked with one argument:
     * (value).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {...Array} [arrays] The arrays to inspect.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {Array} Returns the new array of intersecting values.
     * @example
     *
     * _.intersectionBy([2.1, 1.2], [2.3, 3.4], Math.floor);
     * // => [2.1]
     *
     * // The `_.property` iteratee shorthand.
     * _.intersectionBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');
     * // => [{ 'x': 1 }]
     */ var intersectionBy = baseRest(function(arrays) {
            var iteratee = last(arrays), mapped = arrayMap(arrays, castArrayLikeObject);
            if (iteratee === last(mapped)) iteratee = undefined;
            else mapped.pop();
            return mapped.length && mapped[0] === arrays[0] ? baseIntersection(mapped, getIteratee(iteratee, 2)) : [];
        });
        /**
     * This method is like `_.intersection` except that it accepts `comparator`
     * which is invoked to compare elements of `arrays`. The order and references
     * of result values are determined by the first array. The comparator is
     * invoked with two arguments: (arrVal, othVal).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {...Array} [arrays] The arrays to inspect.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns the new array of intersecting values.
     * @example
     *
     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];
     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];
     *
     * _.intersectionWith(objects, others, _.isEqual);
     * // => [{ 'x': 1, 'y': 2 }]
     */ var intersectionWith = baseRest(function(arrays) {
            var comparator = last(arrays), mapped = arrayMap(arrays, castArrayLikeObject);
            comparator = typeof comparator == "function" ? comparator : undefined;
            if (comparator) mapped.pop();
            return mapped.length && mapped[0] === arrays[0] ? baseIntersection(mapped, undefined, comparator) : [];
        });
        /**
     * Converts all elements in `array` into a string separated by `separator`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to convert.
     * @param {string} [separator=','] The element separator.
     * @returns {string} Returns the joined string.
     * @example
     *
     * _.join(['a', 'b', 'c'], '~');
     * // => 'a~b~c'
     */ function join(array, separator) {
            return array == null ? "" : nativeJoin.call(array, separator);
        }
        /**
     * Gets the last element of `array`.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {Array} array The array to query.
     * @returns {*} Returns the last element of `array`.
     * @example
     *
     * _.last([1, 2, 3]);
     * // => 3
     */ function last(array) {
            var length = array == null ? 0 : array.length;
            return length ? array[length - 1] : undefined;
        }
        /**
     * This method is like `_.indexOf` except that it iterates over elements of
     * `array` from right to left.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {*} value The value to search for.
     * @param {number} [fromIndex=array.length-1] The index to search from.
     * @returns {number} Returns the index of the matched value, else `-1`.
     * @example
     *
     * _.lastIndexOf([1, 2, 1, 2], 2);
     * // => 3
     *
     * // Search from the `fromIndex`.
     * _.lastIndexOf([1, 2, 1, 2], 2, 2);
     * // => 1
     */ function lastIndexOf(array, value, fromIndex) {
            var length = array == null ? 0 : array.length;
            if (!length) return -1;
            var index = length;
            if (fromIndex !== undefined) {
                index = toInteger(fromIndex);
                index = index < 0 ? nativeMax(length + index, 0) : nativeMin(index, length - 1);
            }
            return value === value ? strictLastIndexOf(array, value, index) : baseFindIndex(array, baseIsNaN, index, true);
        }
        /**
     * Gets the element at index `n` of `array`. If `n` is negative, the nth
     * element from the end is returned.
     *
     * @static
     * @memberOf _
     * @since 4.11.0
     * @category Array
     * @param {Array} array The array to query.
     * @param {number} [n=0] The index of the element to return.
     * @returns {*} Returns the nth element of `array`.
     * @example
     *
     * var array = ['a', 'b', 'c', 'd'];
     *
     * _.nth(array, 1);
     * // => 'b'
     *
     * _.nth(array, -2);
     * // => 'c';
     */ function nth(array, n) {
            return array && array.length ? baseNth(array, toInteger(n)) : undefined;
        }
        /**
     * Removes all given values from `array` using
     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
     * for equality comparisons.
     *
     * **Note:** Unlike `_.without`, this method mutates `array`. Use `_.remove`
     * to remove elements from an array by predicate.
     *
     * @static
     * @memberOf _
     * @since 2.0.0
     * @category Array
     * @param {Array} array The array to modify.
     * @param {...*} [values] The values to remove.
     * @returns {Array} Returns `array`.
     * @example
     *
     * var array = ['a', 'b', 'c', 'a', 'b', 'c'];
     *
     * _.pull(array, 'a', 'c');
     * console.log(array);
     * // => ['b', 'b']
     */ var pull = baseRest(pullAll);
        /**
     * This method is like `_.pull` except that it accepts an array of values to remove.
     *
     * **Note:** Unlike `_.difference`, this method mutates `array`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to modify.
     * @param {Array} values The values to remove.
     * @returns {Array} Returns `array`.
     * @example
     *
     * var array = ['a', 'b', 'c', 'a', 'b', 'c'];
     *
     * _.pullAll(array, ['a', 'c']);
     * console.log(array);
     * // => ['b', 'b']
     */ function pullAll(array, values) {
            return array && array.length && values && values.length ? basePullAll(array, values) : array;
        }
        /**
     * This method is like `_.pullAll` except that it accepts `iteratee` which is
     * invoked for each element of `array` and `values` to generate the criterion
     * by which they're compared. The iteratee is invoked with one argument: (value).
     *
     * **Note:** Unlike `_.differenceBy`, this method mutates `array`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to modify.
     * @param {Array} values The values to remove.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {Array} Returns `array`.
     * @example
     *
     * var array = [{ 'x': 1 }, { 'x': 2 }, { 'x': 3 }, { 'x': 1 }];
     *
     * _.pullAllBy(array, [{ 'x': 1 }, { 'x': 3 }], 'x');
     * console.log(array);
     * // => [{ 'x': 2 }]
     */ function pullAllBy(array, values, iteratee) {
            return array && array.length && values && values.length ? basePullAll(array, values, getIteratee(iteratee, 2)) : array;
        }
        /**
     * This method is like `_.pullAll` except that it accepts `comparator` which
     * is invoked to compare elements of `array` to `values`. The comparator is
     * invoked with two arguments: (arrVal, othVal).
     *
     * **Note:** Unlike `_.differenceWith`, this method mutates `array`.
     *
     * @static
     * @memberOf _
     * @since 4.6.0
     * @category Array
     * @param {Array} array The array to modify.
     * @param {Array} values The values to remove.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns `array`.
     * @example
     *
     * var array = [{ 'x': 1, 'y': 2 }, { 'x': 3, 'y': 4 }, { 'x': 5, 'y': 6 }];
     *
     * _.pullAllWith(array, [{ 'x': 3, 'y': 4 }], _.isEqual);
     * console.log(array);
     * // => [{ 'x': 1, 'y': 2 }, { 'x': 5, 'y': 6 }]
     */ function pullAllWith(array, values, comparator) {
            return array && array.length && values && values.length ? basePullAll(array, values, undefined, comparator) : array;
        }
        /**
     * Removes elements from `array` corresponding to `indexes` and returns an
     * array of removed elements.
     *
     * **Note:** Unlike `_.at`, this method mutates `array`.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Array
     * @param {Array} array The array to modify.
     * @param {...(number|number[])} [indexes] The indexes of elements to remove.
     * @returns {Array} Returns the new array of removed elements.
     * @example
     *
     * var array = ['a', 'b', 'c', 'd'];
     * var pulled = _.pullAt(array, [1, 3]);
     *
     * console.log(array);
     * // => ['a', 'c']
     *
     * console.log(pulled);
     * // => ['b', 'd']
     */ var pullAt = flatRest(function(array, indexes) {
            var length = array == null ? 0 : array.length, result = baseAt(array, indexes);
            basePullAt(array, arrayMap(indexes, function(index) {
                return isIndex(index, length) ? +index : index;
            }).sort(compareAscending));
            return result;
        });
        /**
     * Removes all elements from `array` that `predicate` returns truthy for
     * and returns an array of the removed elements. The predicate is invoked
     * with three arguments: (value, index, array).
     *
     * **Note:** Unlike `_.filter`, this method mutates `array`. Use `_.pull`
     * to pull elements from an array by value.
     *
     * @static
     * @memberOf _
     * @since 2.0.0
     * @category Array
     * @param {Array} array The array to modify.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the new array of removed elements.
     * @example
     *
     * var array = [1, 2, 3, 4];
     * var evens = _.remove(array, function(n) {
     *   return n % 2 == 0;
     * });
     *
     * console.log(array);
     * // => [1, 3]
     *
     * console.log(evens);
     * // => [2, 4]
     */ function remove(array, predicate) {
            var result = [];
            if (!(array && array.length)) return result;
            var index = -1, indexes = [], length = array.length;
            predicate = getIteratee(predicate, 3);
            while(++index < length){
                var value = array[index];
                if (predicate(value, index, array)) {
                    result.push(value);
                    indexes.push(index);
                }
            }
            basePullAt(array, indexes);
            return result;
        }
        /**
     * Reverses `array` so that the first element becomes the last, the second
     * element becomes the second to last, and so on.
     *
     * **Note:** This method mutates `array` and is based on
     * [`Array#reverse`](https://mdn.io/Array/reverse).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to modify.
     * @returns {Array} Returns `array`.
     * @example
     *
     * var array = [1, 2, 3];
     *
     * _.reverse(array);
     * // => [3, 2, 1]
     *
     * console.log(array);
     * // => [3, 2, 1]
     */ function reverse(array) {
            return array == null ? array : nativeReverse.call(array);
        }
        /**
     * Creates a slice of `array` from `start` up to, but not including, `end`.
     *
     * **Note:** This method is used instead of
     * [`Array#slice`](https://mdn.io/Array/slice) to ensure dense arrays are
     * returned.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Array
     * @param {Array} array The array to slice.
     * @param {number} [start=0] The start position.
     * @param {number} [end=array.length] The end position.
     * @returns {Array} Returns the slice of `array`.
     */ function slice(array, start, end) {
            var length = array == null ? 0 : array.length;
            if (!length) return [];
            if (end && typeof end != "number" && isIterateeCall(array, start, end)) {
                start = 0;
                end = length;
            } else {
                start = start == null ? 0 : toInteger(start);
                end = end === undefined ? length : toInteger(end);
            }
            return baseSlice(array, start, end);
        }
        /**
     * Uses a binary search to determine the lowest index at which `value`
     * should be inserted into `array` in order to maintain its sort order.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {Array} array The sorted array to inspect.
     * @param {*} value The value to evaluate.
     * @returns {number} Returns the index at which `value` should be inserted
     *  into `array`.
     * @example
     *
     * _.sortedIndex([30, 50], 40);
     * // => 1
     */ function sortedIndex(array, value) {
            return baseSortedIndex(array, value);
        }
        /**
     * This method is like `_.sortedIndex` except that it accepts `iteratee`
     * which is invoked for `value` and each element of `array` to compute their
     * sort ranking. The iteratee is invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The sorted array to inspect.
     * @param {*} value The value to evaluate.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {number} Returns the index at which `value` should be inserted
     *  into `array`.
     * @example
     *
     * var objects = [{ 'x': 4 }, { 'x': 5 }];
     *
     * _.sortedIndexBy(objects, { 'x': 4 }, function(o) { return o.x; });
     * // => 0
     *
     * // The `_.property` iteratee shorthand.
     * _.sortedIndexBy(objects, { 'x': 4 }, 'x');
     * // => 0
     */ function sortedIndexBy(array, value, iteratee) {
            return baseSortedIndexBy(array, value, getIteratee(iteratee, 2));
        }
        /**
     * This method is like `_.indexOf` except that it performs a binary
     * search on a sorted `array`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {*} value The value to search for.
     * @returns {number} Returns the index of the matched value, else `-1`.
     * @example
     *
     * _.sortedIndexOf([4, 5, 5, 5, 6], 5);
     * // => 1
     */ function sortedIndexOf(array, value) {
            var length = array == null ? 0 : array.length;
            if (length) {
                var index = baseSortedIndex(array, value);
                if (index < length && eq(array[index], value)) return index;
            }
            return -1;
        }
        /**
     * This method is like `_.sortedIndex` except that it returns the highest
     * index at which `value` should be inserted into `array` in order to
     * maintain its sort order.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Array
     * @param {Array} array The sorted array to inspect.
     * @param {*} value The value to evaluate.
     * @returns {number} Returns the index at which `value` should be inserted
     *  into `array`.
     * @example
     *
     * _.sortedLastIndex([4, 5, 5, 5, 6], 5);
     * // => 4
     */ function sortedLastIndex(array, value) {
            return baseSortedIndex(array, value, true);
        }
        /**
     * This method is like `_.sortedLastIndex` except that it accepts `iteratee`
     * which is invoked for `value` and each element of `array` to compute their
     * sort ranking. The iteratee is invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The sorted array to inspect.
     * @param {*} value The value to evaluate.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {number} Returns the index at which `value` should be inserted
     *  into `array`.
     * @example
     *
     * var objects = [{ 'x': 4 }, { 'x': 5 }];
     *
     * _.sortedLastIndexBy(objects, { 'x': 4 }, function(o) { return o.x; });
     * // => 1
     *
     * // The `_.property` iteratee shorthand.
     * _.sortedLastIndexBy(objects, { 'x': 4 }, 'x');
     * // => 1
     */ function sortedLastIndexBy(array, value, iteratee) {
            return baseSortedIndexBy(array, value, getIteratee(iteratee, 2), true);
        }
        /**
     * This method is like `_.lastIndexOf` except that it performs a binary
     * search on a sorted `array`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {*} value The value to search for.
     * @returns {number} Returns the index of the matched value, else `-1`.
     * @example
     *
     * _.sortedLastIndexOf([4, 5, 5, 5, 6], 5);
     * // => 3
     */ function sortedLastIndexOf(array, value) {
            var length = array == null ? 0 : array.length;
            if (length) {
                var index = baseSortedIndex(array, value, true) - 1;
                if (eq(array[index], value)) return index;
            }
            return -1;
        }
        /**
     * This method is like `_.uniq` except that it's designed and optimized
     * for sorted arrays.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @returns {Array} Returns the new duplicate free array.
     * @example
     *
     * _.sortedUniq([1, 1, 2]);
     * // => [1, 2]
     */ function sortedUniq(array) {
            return array && array.length ? baseSortedUniq(array) : [];
        }
        /**
     * This method is like `_.uniqBy` except that it's designed and optimized
     * for sorted arrays.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {Function} [iteratee] The iteratee invoked per element.
     * @returns {Array} Returns the new duplicate free array.
     * @example
     *
     * _.sortedUniqBy([1.1, 1.2, 2.3, 2.4], Math.floor);
     * // => [1.1, 2.3]
     */ function sortedUniqBy(array, iteratee) {
            return array && array.length ? baseSortedUniq(array, getIteratee(iteratee, 2)) : [];
        }
        /**
     * Gets all but the first element of `array`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to query.
     * @returns {Array} Returns the slice of `array`.
     * @example
     *
     * _.tail([1, 2, 3]);
     * // => [2, 3]
     */ function tail(array) {
            var length = array == null ? 0 : array.length;
            return length ? baseSlice(array, 1, length) : [];
        }
        /**
     * Creates a slice of `array` with `n` elements taken from the beginning.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {Array} array The array to query.
     * @param {number} [n=1] The number of elements to take.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {Array} Returns the slice of `array`.
     * @example
     *
     * _.take([1, 2, 3]);
     * // => [1]
     *
     * _.take([1, 2, 3], 2);
     * // => [1, 2]
     *
     * _.take([1, 2, 3], 5);
     * // => [1, 2, 3]
     *
     * _.take([1, 2, 3], 0);
     * // => []
     */ function take(array, n, guard) {
            if (!(array && array.length)) return [];
            n = guard || n === undefined ? 1 : toInteger(n);
            return baseSlice(array, 0, n < 0 ? 0 : n);
        }
        /**
     * Creates a slice of `array` with `n` elements taken from the end.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Array
     * @param {Array} array The array to query.
     * @param {number} [n=1] The number of elements to take.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {Array} Returns the slice of `array`.
     * @example
     *
     * _.takeRight([1, 2, 3]);
     * // => [3]
     *
     * _.takeRight([1, 2, 3], 2);
     * // => [2, 3]
     *
     * _.takeRight([1, 2, 3], 5);
     * // => [1, 2, 3]
     *
     * _.takeRight([1, 2, 3], 0);
     * // => []
     */ function takeRight(array, n, guard) {
            var length = array == null ? 0 : array.length;
            if (!length) return [];
            n = guard || n === undefined ? 1 : toInteger(n);
            n = length - n;
            return baseSlice(array, n < 0 ? 0 : n, length);
        }
        /**
     * Creates a slice of `array` with elements taken from the end. Elements are
     * taken until `predicate` returns falsey. The predicate is invoked with
     * three arguments: (value, index, array).
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Array
     * @param {Array} array The array to query.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the slice of `array`.
     * @example
     *
     * var users = [
     *   { 'user': 'barney',  'active': true },
     *   { 'user': 'fred',    'active': false },
     *   { 'user': 'pebbles', 'active': false }
     * ];
     *
     * _.takeRightWhile(users, function(o) { return !o.active; });
     * // => objects for ['fred', 'pebbles']
     *
     * // The `_.matches` iteratee shorthand.
     * _.takeRightWhile(users, { 'user': 'pebbles', 'active': false });
     * // => objects for ['pebbles']
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.takeRightWhile(users, ['active', false]);
     * // => objects for ['fred', 'pebbles']
     *
     * // The `_.property` iteratee shorthand.
     * _.takeRightWhile(users, 'active');
     * // => []
     */ function takeRightWhile(array, predicate) {
            return array && array.length ? baseWhile(array, getIteratee(predicate, 3), false, true) : [];
        }
        /**
     * Creates a slice of `array` with elements taken from the beginning. Elements
     * are taken until `predicate` returns falsey. The predicate is invoked with
     * three arguments: (value, index, array).
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Array
     * @param {Array} array The array to query.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the slice of `array`.
     * @example
     *
     * var users = [
     *   { 'user': 'barney',  'active': false },
     *   { 'user': 'fred',    'active': false },
     *   { 'user': 'pebbles', 'active': true }
     * ];
     *
     * _.takeWhile(users, function(o) { return !o.active; });
     * // => objects for ['barney', 'fred']
     *
     * // The `_.matches` iteratee shorthand.
     * _.takeWhile(users, { 'user': 'barney', 'active': false });
     * // => objects for ['barney']
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.takeWhile(users, ['active', false]);
     * // => objects for ['barney', 'fred']
     *
     * // The `_.property` iteratee shorthand.
     * _.takeWhile(users, 'active');
     * // => []
     */ function takeWhile(array, predicate) {
            return array && array.length ? baseWhile(array, getIteratee(predicate, 3)) : [];
        }
        /**
     * Creates an array of unique values, in order, from all given arrays using
     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
     * for equality comparisons.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {...Array} [arrays] The arrays to inspect.
     * @returns {Array} Returns the new array of combined values.
     * @example
     *
     * _.union([2], [1, 2]);
     * // => [2, 1]
     */ var union = baseRest(function(arrays) {
            return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true));
        });
        /**
     * This method is like `_.union` except that it accepts `iteratee` which is
     * invoked for each element of each `arrays` to generate the criterion by
     * which uniqueness is computed. Result values are chosen from the first
     * array in which the value occurs. The iteratee is invoked with one argument:
     * (value).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {...Array} [arrays] The arrays to inspect.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {Array} Returns the new array of combined values.
     * @example
     *
     * _.unionBy([2.1], [1.2, 2.3], Math.floor);
     * // => [2.1, 1.2]
     *
     * // The `_.property` iteratee shorthand.
     * _.unionBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');
     * // => [{ 'x': 1 }, { 'x': 2 }]
     */ var unionBy = baseRest(function(arrays) {
            var iteratee = last(arrays);
            if (isArrayLikeObject(iteratee)) iteratee = undefined;
            return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true), getIteratee(iteratee, 2));
        });
        /**
     * This method is like `_.union` except that it accepts `comparator` which
     * is invoked to compare elements of `arrays`. Result values are chosen from
     * the first array in which the value occurs. The comparator is invoked
     * with two arguments: (arrVal, othVal).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {...Array} [arrays] The arrays to inspect.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns the new array of combined values.
     * @example
     *
     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];
     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];
     *
     * _.unionWith(objects, others, _.isEqual);
     * // => [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }, { 'x': 1, 'y': 1 }]
     */ var unionWith = baseRest(function(arrays) {
            var comparator = last(arrays);
            comparator = typeof comparator == "function" ? comparator : undefined;
            return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true), undefined, comparator);
        });
        /**
     * Creates a duplicate-free version of an array, using
     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
     * for equality comparisons, in which only the first occurrence of each element
     * is kept. The order of result values is determined by the order they occur
     * in the array.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @returns {Array} Returns the new duplicate free array.
     * @example
     *
     * _.uniq([2, 1, 2]);
     * // => [2, 1]
     */ function uniq(array) {
            return array && array.length ? baseUniq(array) : [];
        }
        /**
     * This method is like `_.uniq` except that it accepts `iteratee` which is
     * invoked for each element in `array` to generate the criterion by which
     * uniqueness is computed. The order of result values is determined by the
     * order they occur in the array. The iteratee is invoked with one argument:
     * (value).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {Array} Returns the new duplicate free array.
     * @example
     *
     * _.uniqBy([2.1, 1.2, 2.3], Math.floor);
     * // => [2.1, 1.2]
     *
     * // The `_.property` iteratee shorthand.
     * _.uniqBy([{ 'x': 1 }, { 'x': 2 }, { 'x': 1 }], 'x');
     * // => [{ 'x': 1 }, { 'x': 2 }]
     */ function uniqBy(array, iteratee) {
            return array && array.length ? baseUniq(array, getIteratee(iteratee, 2)) : [];
        }
        /**
     * This method is like `_.uniq` except that it accepts `comparator` which
     * is invoked to compare elements of `array`. The order of result values is
     * determined by the order they occur in the array.The comparator is invoked
     * with two arguments: (arrVal, othVal).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns the new duplicate free array.
     * @example
     *
     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }, { 'x': 1, 'y': 2 }];
     *
     * _.uniqWith(objects, _.isEqual);
     * // => [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }]
     */ function uniqWith(array, comparator) {
            comparator = typeof comparator == "function" ? comparator : undefined;
            return array && array.length ? baseUniq(array, undefined, comparator) : [];
        }
        /**
     * This method is like `_.zip` except that it accepts an array of grouped
     * elements and creates an array regrouping the elements to their pre-zip
     * configuration.
     *
     * @static
     * @memberOf _
     * @since 1.2.0
     * @category Array
     * @param {Array} array The array of grouped elements to process.
     * @returns {Array} Returns the new array of regrouped elements.
     * @example
     *
     * var zipped = _.zip(['a', 'b'], [1, 2], [true, false]);
     * // => [['a', 1, true], ['b', 2, false]]
     *
     * _.unzip(zipped);
     * // => [['a', 'b'], [1, 2], [true, false]]
     */ function unzip(array) {
            if (!(array && array.length)) return [];
            var length = 0;
            array = arrayFilter(array, function(group) {
                if (isArrayLikeObject(group)) {
                    length = nativeMax(group.length, length);
                    return true;
                }
            });
            return baseTimes(length, function(index) {
                return arrayMap(array, baseProperty(index));
            });
        }
        /**
     * This method is like `_.unzip` except that it accepts `iteratee` to specify
     * how regrouped values should be combined. The iteratee is invoked with the
     * elements of each group: (...group).
     *
     * @static
     * @memberOf _
     * @since 3.8.0
     * @category Array
     * @param {Array} array The array of grouped elements to process.
     * @param {Function} [iteratee=_.identity] The function to combine
     *  regrouped values.
     * @returns {Array} Returns the new array of regrouped elements.
     * @example
     *
     * var zipped = _.zip([1, 2], [10, 20], [100, 200]);
     * // => [[1, 10, 100], [2, 20, 200]]
     *
     * _.unzipWith(zipped, _.add);
     * // => [3, 30, 300]
     */ function unzipWith(array, iteratee) {
            if (!(array && array.length)) return [];
            var result = unzip(array);
            if (iteratee == null) return result;
            return arrayMap(result, function(group) {
                return apply(iteratee, undefined, group);
            });
        }
        /**
     * Creates an array excluding all given values using
     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
     * for equality comparisons.
     *
     * **Note:** Unlike `_.pull`, this method returns a new array.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {...*} [values] The values to exclude.
     * @returns {Array} Returns the new array of filtered values.
     * @see _.difference, _.xor
     * @example
     *
     * _.without([2, 1, 2, 3], 1, 2);
     * // => [3]
     */ var without = baseRest(function(array, values) {
            return isArrayLikeObject(array) ? baseDifference(array, values) : [];
        });
        /**
     * Creates an array of unique values that is the
     * [symmetric difference](https://en.wikipedia.org/wiki/Symmetric_difference)
     * of the given arrays. The order of result values is determined by the order
     * they occur in the arrays.
     *
     * @static
     * @memberOf _
     * @since 2.4.0
     * @category Array
     * @param {...Array} [arrays] The arrays to inspect.
     * @returns {Array} Returns the new array of filtered values.
     * @see _.difference, _.without
     * @example
     *
     * _.xor([2, 1], [2, 3]);
     * // => [1, 3]
     */ var xor = baseRest(function(arrays) {
            return baseXor(arrayFilter(arrays, isArrayLikeObject));
        });
        /**
     * This method is like `_.xor` except that it accepts `iteratee` which is
     * invoked for each element of each `arrays` to generate the criterion by
     * which by which they're compared. The order of result values is determined
     * by the order they occur in the arrays. The iteratee is invoked with one
     * argument: (value).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {...Array} [arrays] The arrays to inspect.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {Array} Returns the new array of filtered values.
     * @example
     *
     * _.xorBy([2.1, 1.2], [2.3, 3.4], Math.floor);
     * // => [1.2, 3.4]
     *
     * // The `_.property` iteratee shorthand.
     * _.xorBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');
     * // => [{ 'x': 2 }]
     */ var xorBy = baseRest(function(arrays) {
            var iteratee = last(arrays);
            if (isArrayLikeObject(iteratee)) iteratee = undefined;
            return baseXor(arrayFilter(arrays, isArrayLikeObject), getIteratee(iteratee, 2));
        });
        /**
     * This method is like `_.xor` except that it accepts `comparator` which is
     * invoked to compare elements of `arrays`. The order of result values is
     * determined by the order they occur in the arrays. The comparator is invoked
     * with two arguments: (arrVal, othVal).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {...Array} [arrays] The arrays to inspect.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns the new array of filtered values.
     * @example
     *
     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];
     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];
     *
     * _.xorWith(objects, others, _.isEqual);
     * // => [{ 'x': 2, 'y': 1 }, { 'x': 1, 'y': 1 }]
     */ var xorWith = baseRest(function(arrays) {
            var comparator = last(arrays);
            comparator = typeof comparator == "function" ? comparator : undefined;
            return baseXor(arrayFilter(arrays, isArrayLikeObject), undefined, comparator);
        });
        /**
     * Creates an array of grouped elements, the first of which contains the
     * first elements of the given arrays, the second of which contains the
     * second elements of the given arrays, and so on.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {...Array} [arrays] The arrays to process.
     * @returns {Array} Returns the new array of grouped elements.
     * @example
     *
     * _.zip(['a', 'b'], [1, 2], [true, false]);
     * // => [['a', 1, true], ['b', 2, false]]
     */ var zip = baseRest(unzip);
        /**
     * This method is like `_.fromPairs` except that it accepts two arrays,
     * one of property identifiers and one of corresponding values.
     *
     * @static
     * @memberOf _
     * @since 0.4.0
     * @category Array
     * @param {Array} [props=[]] The property identifiers.
     * @param {Array} [values=[]] The property values.
     * @returns {Object} Returns the new object.
     * @example
     *
     * _.zipObject(['a', 'b'], [1, 2]);
     * // => { 'a': 1, 'b': 2 }
     */ function zipObject(props, values) {
            return baseZipObject(props || [], values || [], assignValue);
        }
        /**
     * This method is like `_.zipObject` except that it supports property paths.
     *
     * @static
     * @memberOf _
     * @since 4.1.0
     * @category Array
     * @param {Array} [props=[]] The property identifiers.
     * @param {Array} [values=[]] The property values.
     * @returns {Object} Returns the new object.
     * @example
     *
     * _.zipObjectDeep(['a.b[0].c', 'a.b[1].d'], [1, 2]);
     * // => { 'a': { 'b': [{ 'c': 1 }, { 'd': 2 }] } }
     */ function zipObjectDeep(props, values) {
            return baseZipObject(props || [], values || [], baseSet);
        }
        /**
     * This method is like `_.zip` except that it accepts `iteratee` to specify
     * how grouped values should be combined. The iteratee is invoked with the
     * elements of each group: (...group).
     *
     * @static
     * @memberOf _
     * @since 3.8.0
     * @category Array
     * @param {...Array} [arrays] The arrays to process.
     * @param {Function} [iteratee=_.identity] The function to combine
     *  grouped values.
     * @returns {Array} Returns the new array of grouped elements.
     * @example
     *
     * _.zipWith([1, 2], [10, 20], [100, 200], function(a, b, c) {
     *   return a + b + c;
     * });
     * // => [111, 222]
     */ var zipWith = baseRest(function(arrays) {
            var length = arrays.length, iteratee = length > 1 ? arrays[length - 1] : undefined;
            iteratee = typeof iteratee == "function" ? (arrays.pop(), iteratee) : undefined;
            return unzipWith(arrays, iteratee);
        });
        /*------------------------------------------------------------------------*/ /**
     * Creates a `lodash` wrapper instance that wraps `value` with explicit method
     * chain sequences enabled. The result of such sequences must be unwrapped
     * with `_#value`.
     *
     * @static
     * @memberOf _
     * @since 1.3.0
     * @category Seq
     * @param {*} value The value to wrap.
     * @returns {Object} Returns the new `lodash` wrapper instance.
     * @example
     *
     * var users = [
     *   { 'user': 'barney',  'age': 36 },
     *   { 'user': 'fred',    'age': 40 },
     *   { 'user': 'pebbles', 'age': 1 }
     * ];
     *
     * var youngest = _
     *   .chain(users)
     *   .sortBy('age')
     *   .map(function(o) {
     *     return o.user + ' is ' + o.age;
     *   })
     *   .head()
     *   .value();
     * // => 'pebbles is 1'
     */ function chain(value) {
            var result = lodash(value);
            result.__chain__ = true;
            return result;
        }
        /**
     * This method invokes `interceptor` and returns `value`. The interceptor
     * is invoked with one argument; (value). The purpose of this method is to
     * "tap into" a method chain sequence in order to modify intermediate results.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Seq
     * @param {*} value The value to provide to `interceptor`.
     * @param {Function} interceptor The function to invoke.
     * @returns {*} Returns `value`.
     * @example
     *
     * _([1, 2, 3])
     *  .tap(function(array) {
     *    // Mutate input array.
     *    array.pop();
     *  })
     *  .reverse()
     *  .value();
     * // => [2, 1]
     */ function tap(value, interceptor) {
            interceptor(value);
            return value;
        }
        /**
     * This method is like `_.tap` except that it returns the result of `interceptor`.
     * The purpose of this method is to "pass thru" values replacing intermediate
     * results in a method chain sequence.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Seq
     * @param {*} value The value to provide to `interceptor`.
     * @param {Function} interceptor The function to invoke.
     * @returns {*} Returns the result of `interceptor`.
     * @example
     *
     * _('  abc  ')
     *  .chain()
     *  .trim()
     *  .thru(function(value) {
     *    return [value];
     *  })
     *  .value();
     * // => ['abc']
     */ function thru(value, interceptor) {
            return interceptor(value);
        }
        /**
     * This method is the wrapper version of `_.at`.
     *
     * @name at
     * @memberOf _
     * @since 1.0.0
     * @category Seq
     * @param {...(string|string[])} [paths] The property paths to pick.
     * @returns {Object} Returns the new `lodash` wrapper instance.
     * @example
     *
     * var object = { 'a': [{ 'b': { 'c': 3 } }, 4] };
     *
     * _(object).at(['a[0].b.c', 'a[1]']).value();
     * // => [3, 4]
     */ var wrapperAt = flatRest(function(paths) {
            var length = paths.length, start = length ? paths[0] : 0, value = this.__wrapped__, interceptor = function(object) {
                return baseAt(object, paths);
            };
            if (length > 1 || this.__actions__.length || !(value instanceof LazyWrapper) || !isIndex(start)) return this.thru(interceptor);
            value = value.slice(start, +start + (length ? 1 : 0));
            value.__actions__.push({
                "func": thru,
                "args": [
                    interceptor
                ],
                "thisArg": undefined
            });
            return new LodashWrapper(value, this.__chain__).thru(function(array) {
                if (length && !array.length) array.push(undefined);
                return array;
            });
        });
        /**
     * Creates a `lodash` wrapper instance with explicit method chain sequences enabled.
     *
     * @name chain
     * @memberOf _
     * @since 0.1.0
     * @category Seq
     * @returns {Object} Returns the new `lodash` wrapper instance.
     * @example
     *
     * var users = [
     *   { 'user': 'barney', 'age': 36 },
     *   { 'user': 'fred',   'age': 40 }
     * ];
     *
     * // A sequence without explicit chaining.
     * _(users).head();
     * // => { 'user': 'barney', 'age': 36 }
     *
     * // A sequence with explicit chaining.
     * _(users)
     *   .chain()
     *   .head()
     *   .pick('user')
     *   .value();
     * // => { 'user': 'barney' }
     */ function wrapperChain() {
            return chain(this);
        }
        /**
     * Executes the chain sequence and returns the wrapped result.
     *
     * @name commit
     * @memberOf _
     * @since 3.2.0
     * @category Seq
     * @returns {Object} Returns the new `lodash` wrapper instance.
     * @example
     *
     * var array = [1, 2];
     * var wrapped = _(array).push(3);
     *
     * console.log(array);
     * // => [1, 2]
     *
     * wrapped = wrapped.commit();
     * console.log(array);
     * // => [1, 2, 3]
     *
     * wrapped.last();
     * // => 3
     *
     * console.log(array);
     * // => [1, 2, 3]
     */ function wrapperCommit() {
            return new LodashWrapper(this.value(), this.__chain__);
        }
        /**
     * Gets the next value on a wrapped object following the
     * [iterator protocol](https://mdn.io/iteration_protocols#iterator).
     *
     * @name next
     * @memberOf _
     * @since 4.0.0
     * @category Seq
     * @returns {Object} Returns the next iterator value.
     * @example
     *
     * var wrapped = _([1, 2]);
     *
     * wrapped.next();
     * // => { 'done': false, 'value': 1 }
     *
     * wrapped.next();
     * // => { 'done': false, 'value': 2 }
     *
     * wrapped.next();
     * // => { 'done': true, 'value': undefined }
     */ function wrapperNext() {
            if (this.__values__ === undefined) this.__values__ = toArray(this.value());
            var done = this.__index__ >= this.__values__.length, value = done ? undefined : this.__values__[this.__index__++];
            return {
                "done": done,
                "value": value
            };
        }
        /**
     * Enables the wrapper to be iterable.
     *
     * @name Symbol.iterator
     * @memberOf _
     * @since 4.0.0
     * @category Seq
     * @returns {Object} Returns the wrapper object.
     * @example
     *
     * var wrapped = _([1, 2]);
     *
     * wrapped[Symbol.iterator]() === wrapped;
     * // => true
     *
     * Array.from(wrapped);
     * // => [1, 2]
     */ function wrapperToIterator() {
            return this;
        }
        /**
     * Creates a clone of the chain sequence planting `value` as the wrapped value.
     *
     * @name plant
     * @memberOf _
     * @since 3.2.0
     * @category Seq
     * @param {*} value The value to plant.
     * @returns {Object} Returns the new `lodash` wrapper instance.
     * @example
     *
     * function square(n) {
     *   return n * n;
     * }
     *
     * var wrapped = _([1, 2]).map(square);
     * var other = wrapped.plant([3, 4]);
     *
     * other.value();
     * // => [9, 16]
     *
     * wrapped.value();
     * // => [1, 4]
     */ function wrapperPlant(value) {
            var result, parent = this;
            while(parent instanceof baseLodash){
                var clone = wrapperClone(parent);
                clone.__index__ = 0;
                clone.__values__ = undefined;
                if (result) previous.__wrapped__ = clone;
                else result = clone;
                var previous = clone;
                parent = parent.__wrapped__;
            }
            previous.__wrapped__ = value;
            return result;
        }
        /**
     * This method is the wrapper version of `_.reverse`.
     *
     * **Note:** This method mutates the wrapped array.
     *
     * @name reverse
     * @memberOf _
     * @since 0.1.0
     * @category Seq
     * @returns {Object} Returns the new `lodash` wrapper instance.
     * @example
     *
     * var array = [1, 2, 3];
     *
     * _(array).reverse().value()
     * // => [3, 2, 1]
     *
     * console.log(array);
     * // => [3, 2, 1]
     */ function wrapperReverse() {
            var value = this.__wrapped__;
            if (value instanceof LazyWrapper) {
                var wrapped = value;
                if (this.__actions__.length) wrapped = new LazyWrapper(this);
                wrapped = wrapped.reverse();
                wrapped.__actions__.push({
                    "func": thru,
                    "args": [
                        reverse
                    ],
                    "thisArg": undefined
                });
                return new LodashWrapper(wrapped, this.__chain__);
            }
            return this.thru(reverse);
        }
        /**
     * Executes the chain sequence to resolve the unwrapped value.
     *
     * @name value
     * @memberOf _
     * @since 0.1.0
     * @alias toJSON, valueOf
     * @category Seq
     * @returns {*} Returns the resolved unwrapped value.
     * @example
     *
     * _([1, 2, 3]).value();
     * // => [1, 2, 3]
     */ function wrapperValue() {
            return baseWrapperValue(this.__wrapped__, this.__actions__);
        }
        /*------------------------------------------------------------------------*/ /**
     * Creates an object composed of keys generated from the results of running
     * each element of `collection` thru `iteratee`. The corresponding value of
     * each key is the number of times the key was returned by `iteratee`. The
     * iteratee is invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 0.5.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [iteratee=_.identity] The iteratee to transform keys.
     * @returns {Object} Returns the composed aggregate object.
     * @example
     *
     * _.countBy([6.1, 4.2, 6.3], Math.floor);
     * // => { '4': 1, '6': 2 }
     *
     * // The `_.property` iteratee shorthand.
     * _.countBy(['one', 'two', 'three'], 'length');
     * // => { '3': 2, '5': 1 }
     */ var countBy = createAggregator(function(result, value, key) {
            if (hasOwnProperty.call(result, key)) ++result[key];
            else baseAssignValue(result, key, 1);
        });
        /**
     * Checks if `predicate` returns truthy for **all** elements of `collection`.
     * Iteration is stopped once `predicate` returns falsey. The predicate is
     * invoked with three arguments: (value, index|key, collection).
     *
     * **Note:** This method returns `true` for
     * [empty collections](https://en.wikipedia.org/wiki/Empty_set) because
     * [everything is true](https://en.wikipedia.org/wiki/Vacuous_truth) of
     * elements of empty collections.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {boolean} Returns `true` if all elements pass the predicate check,
     *  else `false`.
     * @example
     *
     * _.every([true, 1, null, 'yes'], Boolean);
     * // => false
     *
     * var users = [
     *   { 'user': 'barney', 'age': 36, 'active': false },
     *   { 'user': 'fred',   'age': 40, 'active': false }
     * ];
     *
     * // The `_.matches` iteratee shorthand.
     * _.every(users, { 'user': 'barney', 'active': false });
     * // => false
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.every(users, ['active', false]);
     * // => true
     *
     * // The `_.property` iteratee shorthand.
     * _.every(users, 'active');
     * // => false
     */ function every(collection, predicate, guard) {
            var func = isArray(collection) ? arrayEvery : baseEvery;
            if (guard && isIterateeCall(collection, predicate, guard)) predicate = undefined;
            return func(collection, getIteratee(predicate, 3));
        }
        /**
     * Iterates over elements of `collection`, returning an array of all elements
     * `predicate` returns truthy for. The predicate is invoked with three
     * arguments: (value, index|key, collection).
     *
     * **Note:** Unlike `_.remove`, this method returns a new array.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the new filtered array.
     * @see _.reject
     * @example
     *
     * var users = [
     *   { 'user': 'barney', 'age': 36, 'active': true },
     *   { 'user': 'fred',   'age': 40, 'active': false }
     * ];
     *
     * _.filter(users, function(o) { return !o.active; });
     * // => objects for ['fred']
     *
     * // The `_.matches` iteratee shorthand.
     * _.filter(users, { 'age': 36, 'active': true });
     * // => objects for ['barney']
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.filter(users, ['active', false]);
     * // => objects for ['fred']
     *
     * // The `_.property` iteratee shorthand.
     * _.filter(users, 'active');
     * // => objects for ['barney']
     *
     * // Combining several predicates using `_.overEvery` or `_.overSome`.
     * _.filter(users, _.overSome([{ 'age': 36 }, ['age', 40]]));
     * // => objects for ['fred', 'barney']
     */ function filter(collection, predicate) {
            var func = isArray(collection) ? arrayFilter : baseFilter;
            return func(collection, getIteratee(predicate, 3));
        }
        /**
     * Iterates over elements of `collection`, returning the first element
     * `predicate` returns truthy for. The predicate is invoked with three
     * arguments: (value, index|key, collection).
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object} collection The collection to inspect.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @param {number} [fromIndex=0] The index to search from.
     * @returns {*} Returns the matched element, else `undefined`.
     * @example
     *
     * var users = [
     *   { 'user': 'barney',  'age': 36, 'active': true },
     *   { 'user': 'fred',    'age': 40, 'active': false },
     *   { 'user': 'pebbles', 'age': 1,  'active': true }
     * ];
     *
     * _.find(users, function(o) { return o.age < 40; });
     * // => object for 'barney'
     *
     * // The `_.matches` iteratee shorthand.
     * _.find(users, { 'age': 1, 'active': true });
     * // => object for 'pebbles'
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.find(users, ['active', false]);
     * // => object for 'fred'
     *
     * // The `_.property` iteratee shorthand.
     * _.find(users, 'active');
     * // => object for 'barney'
     */ var find = createFind(findIndex);
        /**
     * This method is like `_.find` except that it iterates over elements of
     * `collection` from right to left.
     *
     * @static
     * @memberOf _
     * @since 2.0.0
     * @category Collection
     * @param {Array|Object} collection The collection to inspect.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @param {number} [fromIndex=collection.length-1] The index to search from.
     * @returns {*} Returns the matched element, else `undefined`.
     * @example
     *
     * _.findLast([1, 2, 3, 4], function(n) {
     *   return n % 2 == 1;
     * });
     * // => 3
     */ var findLast = createFind(findLastIndex);
        /**
     * Creates a flattened array of values by running each element in `collection`
     * thru `iteratee` and flattening the mapped results. The iteratee is invoked
     * with three arguments: (value, index|key, collection).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the new flattened array.
     * @example
     *
     * function duplicate(n) {
     *   return [n, n];
     * }
     *
     * _.flatMap([1, 2], duplicate);
     * // => [1, 1, 2, 2]
     */ function flatMap(collection, iteratee) {
            return baseFlatten(map(collection, iteratee), 1);
        }
        /**
     * This method is like `_.flatMap` except that it recursively flattens the
     * mapped results.
     *
     * @static
     * @memberOf _
     * @since 4.7.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the new flattened array.
     * @example
     *
     * function duplicate(n) {
     *   return [[[n, n]]];
     * }
     *
     * _.flatMapDeep([1, 2], duplicate);
     * // => [1, 1, 2, 2]
     */ function flatMapDeep(collection, iteratee) {
            return baseFlatten(map(collection, iteratee), INFINITY);
        }
        /**
     * This method is like `_.flatMap` except that it recursively flattens the
     * mapped results up to `depth` times.
     *
     * @static
     * @memberOf _
     * @since 4.7.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @param {number} [depth=1] The maximum recursion depth.
     * @returns {Array} Returns the new flattened array.
     * @example
     *
     * function duplicate(n) {
     *   return [[[n, n]]];
     * }
     *
     * _.flatMapDepth([1, 2], duplicate, 2);
     * // => [[1, 1], [2, 2]]
     */ function flatMapDepth(collection, iteratee, depth) {
            depth = depth === undefined ? 1 : toInteger(depth);
            return baseFlatten(map(collection, iteratee), depth);
        }
        /**
     * Iterates over elements of `collection` and invokes `iteratee` for each element.
     * The iteratee is invoked with three arguments: (value, index|key, collection).
     * Iteratee functions may exit iteration early by explicitly returning `false`.
     *
     * **Note:** As with other "Collections" methods, objects with a "length"
     * property are iterated like arrays. To avoid this behavior use `_.forIn`
     * or `_.forOwn` for object iteration.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @alias each
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Array|Object} Returns `collection`.
     * @see _.forEachRight
     * @example
     *
     * _.forEach([1, 2], function(value) {
     *   console.log(value);
     * });
     * // => Logs `1` then `2`.
     *
     * _.forEach({ 'a': 1, 'b': 2 }, function(value, key) {
     *   console.log(key);
     * });
     * // => Logs 'a' then 'b' (iteration order is not guaranteed).
     */ function forEach(collection, iteratee) {
            var func = isArray(collection) ? arrayEach : baseEach;
            return func(collection, getIteratee(iteratee, 3));
        }
        /**
     * This method is like `_.forEach` except that it iterates over elements of
     * `collection` from right to left.
     *
     * @static
     * @memberOf _
     * @since 2.0.0
     * @alias eachRight
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Array|Object} Returns `collection`.
     * @see _.forEach
     * @example
     *
     * _.forEachRight([1, 2], function(value) {
     *   console.log(value);
     * });
     * // => Logs `2` then `1`.
     */ function forEachRight(collection, iteratee) {
            var func = isArray(collection) ? arrayEachRight : baseEachRight;
            return func(collection, getIteratee(iteratee, 3));
        }
        /**
     * Creates an object composed of keys generated from the results of running
     * each element of `collection` thru `iteratee`. The order of grouped values
     * is determined by the order they occur in `collection`. The corresponding
     * value of each key is an array of elements responsible for generating the
     * key. The iteratee is invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [iteratee=_.identity] The iteratee to transform keys.
     * @returns {Object} Returns the composed aggregate object.
     * @example
     *
     * _.groupBy([6.1, 4.2, 6.3], Math.floor);
     * // => { '4': [4.2], '6': [6.1, 6.3] }
     *
     * // The `_.property` iteratee shorthand.
     * _.groupBy(['one', 'two', 'three'], 'length');
     * // => { '3': ['one', 'two'], '5': ['three'] }
     */ var groupBy = createAggregator(function(result, value, key) {
            if (hasOwnProperty.call(result, key)) result[key].push(value);
            else baseAssignValue(result, key, [
                value
            ]);
        });
        /**
     * Checks if `value` is in `collection`. If `collection` is a string, it's
     * checked for a substring of `value`, otherwise
     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
     * is used for equality comparisons. If `fromIndex` is negative, it's used as
     * the offset from the end of `collection`.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object|string} collection The collection to inspect.
     * @param {*} value The value to search for.
     * @param {number} [fromIndex=0] The index to search from.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.
     * @returns {boolean} Returns `true` if `value` is found, else `false`.
     * @example
     *
     * _.includes([1, 2, 3], 1);
     * // => true
     *
     * _.includes([1, 2, 3], 1, 2);
     * // => false
     *
     * _.includes({ 'a': 1, 'b': 2 }, 1);
     * // => true
     *
     * _.includes('abcd', 'bc');
     * // => true
     */ function includes(collection, value, fromIndex, guard) {
            collection = isArrayLike(collection) ? collection : values(collection);
            fromIndex = fromIndex && !guard ? toInteger(fromIndex) : 0;
            var length = collection.length;
            if (fromIndex < 0) fromIndex = nativeMax(length + fromIndex, 0);
            return isString(collection) ? fromIndex <= length && collection.indexOf(value, fromIndex) > -1 : !!length && baseIndexOf(collection, value, fromIndex) > -1;
        }
        /**
     * Invokes the method at `path` of each element in `collection`, returning
     * an array of the results of each invoked method. Any additional arguments
     * are provided to each invoked method. If `path` is a function, it's invoked
     * for, and `this` bound to, each element in `collection`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Array|Function|string} path The path of the method to invoke or
     *  the function invoked per iteration.
     * @param {...*} [args] The arguments to invoke each method with.
     * @returns {Array} Returns the array of results.
     * @example
     *
     * _.invokeMap([[5, 1, 7], [3, 2, 1]], 'sort');
     * // => [[1, 5, 7], [1, 2, 3]]
     *
     * _.invokeMap([123, 456], String.prototype.split, '');
     * // => [['1', '2', '3'], ['4', '5', '6']]
     */ var invokeMap = baseRest(function(collection, path, args) {
            var index = -1, isFunc = typeof path == "function", result = isArrayLike(collection) ? Array1(collection.length) : [];
            baseEach(collection, function(value) {
                result[++index] = isFunc ? apply(path, value, args) : baseInvoke(value, path, args);
            });
            return result;
        });
        /**
     * Creates an object composed of keys generated from the results of running
     * each element of `collection` thru `iteratee`. The corresponding value of
     * each key is the last element responsible for generating the key. The
     * iteratee is invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [iteratee=_.identity] The iteratee to transform keys.
     * @returns {Object} Returns the composed aggregate object.
     * @example
     *
     * var array = [
     *   { 'dir': 'left', 'code': 97 },
     *   { 'dir': 'right', 'code': 100 }
     * ];
     *
     * _.keyBy(array, function(o) {
     *   return String.fromCharCode(o.code);
     * });
     * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }
     *
     * _.keyBy(array, 'dir');
     * // => { 'left': { 'dir': 'left', 'code': 97 }, 'right': { 'dir': 'right', 'code': 100 } }
     */ var keyBy = createAggregator(function(result, value, key) {
            baseAssignValue(result, key, value);
        });
        /**
     * Creates an array of values by running each element in `collection` thru
     * `iteratee`. The iteratee is invoked with three arguments:
     * (value, index|key, collection).
     *
     * Many lodash methods are guarded to work as iteratees for methods like
     * `_.every`, `_.filter`, `_.map`, `_.mapValues`, `_.reject`, and `_.some`.
     *
     * The guarded methods are:
     * `ary`, `chunk`, `curry`, `curryRight`, `drop`, `dropRight`, `every`,
     * `fill`, `invert`, `parseInt`, `random`, `range`, `rangeRight`, `repeat`,
     * `sampleSize`, `slice`, `some`, `sortBy`, `split`, `take`, `takeRight`,
     * `template`, `trim`, `trimEnd`, `trimStart`, and `words`
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the new mapped array.
     * @example
     *
     * function square(n) {
     *   return n * n;
     * }
     *
     * _.map([4, 8], square);
     * // => [16, 64]
     *
     * _.map({ 'a': 4, 'b': 8 }, square);
     * // => [16, 64] (iteration order is not guaranteed)
     *
     * var users = [
     *   { 'user': 'barney' },
     *   { 'user': 'fred' }
     * ];
     *
     * // The `_.property` iteratee shorthand.
     * _.map(users, 'user');
     * // => ['barney', 'fred']
     */ function map(collection, iteratee) {
            var func = isArray(collection) ? arrayMap : baseMap;
            return func(collection, getIteratee(iteratee, 3));
        }
        /**
     * This method is like `_.sortBy` except that it allows specifying the sort
     * orders of the iteratees to sort by. If `orders` is unspecified, all values
     * are sorted in ascending order. Otherwise, specify an order of "desc" for
     * descending or "asc" for ascending sort order of corresponding values.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Array[]|Function[]|Object[]|string[]} [iteratees=[_.identity]]
     *  The iteratees to sort by.
     * @param {string[]} [orders] The sort orders of `iteratees`.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.
     * @returns {Array} Returns the new sorted array.
     * @example
     *
     * var users = [
     *   { 'user': 'fred',   'age': 48 },
     *   { 'user': 'barney', 'age': 34 },
     *   { 'user': 'fred',   'age': 40 },
     *   { 'user': 'barney', 'age': 36 }
     * ];
     *
     * // Sort by `user` in ascending order and by `age` in descending order.
     * _.orderBy(users, ['user', 'age'], ['asc', 'desc']);
     * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 40]]
     */ function orderBy(collection, iteratees, orders, guard) {
            if (collection == null) return [];
            if (!isArray(iteratees)) iteratees = iteratees == null ? [] : [
                iteratees
            ];
            orders = guard ? undefined : orders;
            if (!isArray(orders)) orders = orders == null ? [] : [
                orders
            ];
            return baseOrderBy(collection, iteratees, orders);
        }
        /**
     * Creates an array of elements split into two groups, the first of which
     * contains elements `predicate` returns truthy for, the second of which
     * contains elements `predicate` returns falsey for. The predicate is
     * invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the array of grouped elements.
     * @example
     *
     * var users = [
     *   { 'user': 'barney',  'age': 36, 'active': false },
     *   { 'user': 'fred',    'age': 40, 'active': true },
     *   { 'user': 'pebbles', 'age': 1,  'active': false }
     * ];
     *
     * _.partition(users, function(o) { return o.active; });
     * // => objects for [['fred'], ['barney', 'pebbles']]
     *
     * // The `_.matches` iteratee shorthand.
     * _.partition(users, { 'age': 1, 'active': false });
     * // => objects for [['pebbles'], ['barney', 'fred']]
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.partition(users, ['active', false]);
     * // => objects for [['barney', 'pebbles'], ['fred']]
     *
     * // The `_.property` iteratee shorthand.
     * _.partition(users, 'active');
     * // => objects for [['fred'], ['barney', 'pebbles']]
     */ var partition = createAggregator(function(result, value, key) {
            result[key ? 0 : 1].push(value);
        }, function() {
            return [
                [],
                []
            ];
        });
        /**
     * Reduces `collection` to a value which is the accumulated result of running
     * each element in `collection` thru `iteratee`, where each successive
     * invocation is supplied the return value of the previous. If `accumulator`
     * is not given, the first element of `collection` is used as the initial
     * value. The iteratee is invoked with four arguments:
     * (accumulator, value, index|key, collection).
     *
     * Many lodash methods are guarded to work as iteratees for methods like
     * `_.reduce`, `_.reduceRight`, and `_.transform`.
     *
     * The guarded methods are:
     * `assign`, `defaults`, `defaultsDeep`, `includes`, `merge`, `orderBy`,
     * and `sortBy`
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @param {*} [accumulator] The initial value.
     * @returns {*} Returns the accumulated value.
     * @see _.reduceRight
     * @example
     *
     * _.reduce([1, 2], function(sum, n) {
     *   return sum + n;
     * }, 0);
     * // => 3
     *
     * _.reduce({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {
     *   (result[value] || (result[value] = [])).push(key);
     *   return result;
     * }, {});
     * // => { '1': ['a', 'c'], '2': ['b'] } (iteration order is not guaranteed)
     */ function reduce(collection, iteratee, accumulator) {
            var func = isArray(collection) ? arrayReduce : baseReduce, initAccum = arguments.length < 3;
            return func(collection, getIteratee(iteratee, 4), accumulator, initAccum, baseEach);
        }
        /**
     * This method is like `_.reduce` except that it iterates over elements of
     * `collection` from right to left.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @param {*} [accumulator] The initial value.
     * @returns {*} Returns the accumulated value.
     * @see _.reduce
     * @example
     *
     * var array = [[0, 1], [2, 3], [4, 5]];
     *
     * _.reduceRight(array, function(flattened, other) {
     *   return flattened.concat(other);
     * }, []);
     * // => [4, 5, 2, 3, 0, 1]
     */ function reduceRight(collection, iteratee, accumulator) {
            var func = isArray(collection) ? arrayReduceRight : baseReduce, initAccum = arguments.length < 3;
            return func(collection, getIteratee(iteratee, 4), accumulator, initAccum, baseEachRight);
        }
        /**
     * The opposite of `_.filter`; this method returns the elements of `collection`
     * that `predicate` does **not** return truthy for.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the new filtered array.
     * @see _.filter
     * @example
     *
     * var users = [
     *   { 'user': 'barney', 'age': 36, 'active': false },
     *   { 'user': 'fred',   'age': 40, 'active': true }
     * ];
     *
     * _.reject(users, function(o) { return !o.active; });
     * // => objects for ['fred']
     *
     * // The `_.matches` iteratee shorthand.
     * _.reject(users, { 'age': 40, 'active': true });
     * // => objects for ['barney']
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.reject(users, ['active', false]);
     * // => objects for ['fred']
     *
     * // The `_.property` iteratee shorthand.
     * _.reject(users, 'active');
     * // => objects for ['barney']
     */ function reject(collection, predicate) {
            var func = isArray(collection) ? arrayFilter : baseFilter;
            return func(collection, negate(getIteratee(predicate, 3)));
        }
        /**
     * Gets a random element from `collection`.
     *
     * @static
     * @memberOf _
     * @since 2.0.0
     * @category Collection
     * @param {Array|Object} collection The collection to sample.
     * @returns {*} Returns the random element.
     * @example
     *
     * _.sample([1, 2, 3, 4]);
     * // => 2
     */ function sample(collection) {
            var func = isArray(collection) ? arraySample : baseSample;
            return func(collection);
        }
        /**
     * Gets `n` random elements at unique keys from `collection` up to the
     * size of `collection`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Collection
     * @param {Array|Object} collection The collection to sample.
     * @param {number} [n=1] The number of elements to sample.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {Array} Returns the random elements.
     * @example
     *
     * _.sampleSize([1, 2, 3], 2);
     * // => [3, 1]
     *
     * _.sampleSize([1, 2, 3], 4);
     * // => [2, 3, 1]
     */ function sampleSize(collection, n, guard) {
            if (guard ? isIterateeCall(collection, n, guard) : n === undefined) n = 1;
            else n = toInteger(n);
            var func = isArray(collection) ? arraySampleSize : baseSampleSize;
            return func(collection, n);
        }
        /**
     * Creates an array of shuffled values, using a version of the
     * [Fisher-Yates shuffle](https://en.wikipedia.org/wiki/Fisher-Yates_shuffle).
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object} collection The collection to shuffle.
     * @returns {Array} Returns the new shuffled array.
     * @example
     *
     * _.shuffle([1, 2, 3, 4]);
     * // => [4, 1, 3, 2]
     */ function shuffle(collection) {
            var func = isArray(collection) ? arrayShuffle : baseShuffle;
            return func(collection);
        }
        /**
     * Gets the size of `collection` by returning its length for array-like
     * values or the number of own enumerable string keyed properties for objects.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object|string} collection The collection to inspect.
     * @returns {number} Returns the collection size.
     * @example
     *
     * _.size([1, 2, 3]);
     * // => 3
     *
     * _.size({ 'a': 1, 'b': 2 });
     * // => 2
     *
     * _.size('pebbles');
     * // => 7
     */ function size(collection) {
            if (collection == null) return 0;
            if (isArrayLike(collection)) return isString(collection) ? stringSize(collection) : collection.length;
            var tag = getTag(collection);
            if (tag == mapTag || tag == setTag) return collection.size;
            return baseKeys(collection).length;
        }
        /**
     * Checks if `predicate` returns truthy for **any** element of `collection`.
     * Iteration is stopped once `predicate` returns truthy. The predicate is
     * invoked with three arguments: (value, index|key, collection).
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {boolean} Returns `true` if any element passes the predicate check,
     *  else `false`.
     * @example
     *
     * _.some([null, 0, 'yes', false], Boolean);
     * // => true
     *
     * var users = [
     *   { 'user': 'barney', 'active': true },
     *   { 'user': 'fred',   'active': false }
     * ];
     *
     * // The `_.matches` iteratee shorthand.
     * _.some(users, { 'user': 'barney', 'active': false });
     * // => false
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.some(users, ['active', false]);
     * // => true
     *
     * // The `_.property` iteratee shorthand.
     * _.some(users, 'active');
     * // => true
     */ function some(collection, predicate, guard) {
            var func = isArray(collection) ? arraySome : baseSome;
            if (guard && isIterateeCall(collection, predicate, guard)) predicate = undefined;
            return func(collection, getIteratee(predicate, 3));
        }
        /**
     * Creates an array of elements, sorted in ascending order by the results of
     * running each element in a collection thru each iteratee. This method
     * performs a stable sort, that is, it preserves the original sort order of
     * equal elements. The iteratees are invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {...(Function|Function[])} [iteratees=[_.identity]]
     *  The iteratees to sort by.
     * @returns {Array} Returns the new sorted array.
     * @example
     *
     * var users = [
     *   { 'user': 'fred',   'age': 48 },
     *   { 'user': 'barney', 'age': 36 },
     *   { 'user': 'fred',   'age': 30 },
     *   { 'user': 'barney', 'age': 34 }
     * ];
     *
     * _.sortBy(users, [function(o) { return o.user; }]);
     * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 30]]
     *
     * _.sortBy(users, ['user', 'age']);
     * // => objects for [['barney', 34], ['barney', 36], ['fred', 30], ['fred', 48]]
     */ var sortBy = baseRest(function(collection, iteratees) {
            if (collection == null) return [];
            var length = iteratees.length;
            if (length > 1 && isIterateeCall(collection, iteratees[0], iteratees[1])) iteratees = [];
            else if (length > 2 && isIterateeCall(iteratees[0], iteratees[1], iteratees[2])) iteratees = [
                iteratees[0]
            ];
            return baseOrderBy(collection, baseFlatten(iteratees, 1), []);
        });
        /*------------------------------------------------------------------------*/ /**
     * Gets the timestamp of the number of milliseconds that have elapsed since
     * the Unix epoch (1 January 1970 00:00:00 UTC).
     *
     * @static
     * @memberOf _
     * @since 2.4.0
     * @category Date
     * @returns {number} Returns the timestamp.
     * @example
     *
     * _.defer(function(stamp) {
     *   console.log(_.now() - stamp);
     * }, _.now());
     * // => Logs the number of milliseconds it took for the deferred invocation.
     */ var now = ctxNow || function() {
            return root.Date.now();
        };
        /*------------------------------------------------------------------------*/ /**
     * The opposite of `_.before`; this method creates a function that invokes
     * `func` once it's called `n` or more times.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Function
     * @param {number} n The number of calls before `func` is invoked.
     * @param {Function} func The function to restrict.
     * @returns {Function} Returns the new restricted function.
     * @example
     *
     * var saves = ['profile', 'settings'];
     *
     * var done = _.after(saves.length, function() {
     *   console.log('done saving!');
     * });
     *
     * _.forEach(saves, function(type) {
     *   asyncSave({ 'type': type, 'complete': done });
     * });
     * // => Logs 'done saving!' after the two async saves have completed.
     */ function after(n, func) {
            if (typeof func != "function") throw new TypeError(FUNC_ERROR_TEXT);
            n = toInteger(n);
            return function() {
                if (--n < 1) return func.apply(this, arguments);
            };
        }
        /**
     * Creates a function that invokes `func`, with up to `n` arguments,
     * ignoring any additional arguments.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Function
     * @param {Function} func The function to cap arguments for.
     * @param {number} [n=func.length] The arity cap.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {Function} Returns the new capped function.
     * @example
     *
     * _.map(['6', '8', '10'], _.ary(parseInt, 1));
     * // => [6, 8, 10]
     */ function ary(func, n, guard) {
            n = guard ? undefined : n;
            n = func && n == null ? func.length : n;
            return createWrap(func, WRAP_ARY_FLAG, undefined, undefined, undefined, undefined, n);
        }
        /**
     * Creates a function that invokes `func`, with the `this` binding and arguments
     * of the created function, while it's called less than `n` times. Subsequent
     * calls to the created function return the result of the last `func` invocation.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Function
     * @param {number} n The number of calls at which `func` is no longer invoked.
     * @param {Function} func The function to restrict.
     * @returns {Function} Returns the new restricted function.
     * @example
     *
     * jQuery(element).on('click', _.before(5, addContactToList));
     * // => Allows adding up to 4 contacts to the list.
     */ function before(n, func) {
            var result;
            if (typeof func != "function") throw new TypeError(FUNC_ERROR_TEXT);
            n = toInteger(n);
            return function() {
                if (--n > 0) result = func.apply(this, arguments);
                if (n <= 1) func = undefined;
                return result;
            };
        }
        /**
     * Creates a function that invokes `func` with the `this` binding of `thisArg`
     * and `partials` prepended to the arguments it receives.
     *
     * The `_.bind.placeholder` value, which defaults to `_` in monolithic builds,
     * may be used as a placeholder for partially applied arguments.
     *
     * **Note:** Unlike native `Function#bind`, this method doesn't set the "length"
     * property of bound functions.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Function
     * @param {Function} func The function to bind.
     * @param {*} thisArg The `this` binding of `func`.
     * @param {...*} [partials] The arguments to be partially applied.
     * @returns {Function} Returns the new bound function.
     * @example
     *
     * function greet(greeting, punctuation) {
     *   return greeting + ' ' + this.user + punctuation;
     * }
     *
     * var object = { 'user': 'fred' };
     *
     * var bound = _.bind(greet, object, 'hi');
     * bound('!');
     * // => 'hi fred!'
     *
     * // Bound with placeholders.
     * var bound = _.bind(greet, object, _, '!');
     * bound('hi');
     * // => 'hi fred!'
     */ var bind = baseRest(function(func, thisArg, partials) {
            var bitmask = WRAP_BIND_FLAG;
            if (partials.length) {
                var holders = replaceHolders(partials, getHolder(bind));
                bitmask |= WRAP_PARTIAL_FLAG;
            }
            return createWrap(func, bitmask, thisArg, partials, holders);
        });
        /**
     * Creates a function that invokes the method at `object[key]` with `partials`
     * prepended to the arguments it receives.
     *
     * This method differs from `_.bind` by allowing bound functions to reference
     * methods that may be redefined or don't yet exist. See
     * [Peter Michaux's article](http://peter.michaux.ca/articles/lazy-function-definition-pattern)
     * for more details.
     *
     * The `_.bindKey.placeholder` value, which defaults to `_` in monolithic
     * builds, may be used as a placeholder for partially applied arguments.
     *
     * @static
     * @memberOf _
     * @since 0.10.0
     * @category Function
     * @param {Object} object The object to invoke the method on.
     * @param {string} key The key of the method.
     * @param {...*} [partials] The arguments to be partially applied.
     * @returns {Function} Returns the new bound function.
     * @example
     *
     * var object = {
     *   'user': 'fred',
     *   'greet': function(greeting, punctuation) {
     *     return greeting + ' ' + this.user + punctuation;
     *   }
     * };
     *
     * var bound = _.bindKey(object, 'greet', 'hi');
     * bound('!');
     * // => 'hi fred!'
     *
     * object.greet = function(greeting, punctuation) {
     *   return greeting + 'ya ' + this.user + punctuation;
     * };
     *
     * bound('!');
     * // => 'hiya fred!'
     *
     * // Bound with placeholders.
     * var bound = _.bindKey(object, 'greet', _, '!');
     * bound('hi');
     * // => 'hiya fred!'
     */ var bindKey = baseRest(function(object, key, partials) {
            var bitmask = WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG;
            if (partials.length) {
                var holders = replaceHolders(partials, getHolder(bindKey));
                bitmask |= WRAP_PARTIAL_FLAG;
            }
            return createWrap(key, bitmask, object, partials, holders);
        });
        /**
     * Creates a function that accepts arguments of `func` and either invokes
     * `func` returning its result, if at least `arity` number of arguments have
     * been provided, or returns a function that accepts the remaining `func`
     * arguments, and so on. The arity of `func` may be specified if `func.length`
     * is not sufficient.
     *
     * The `_.curry.placeholder` value, which defaults to `_` in monolithic builds,
     * may be used as a placeholder for provided arguments.
     *
     * **Note:** This method doesn't set the "length" property of curried functions.
     *
     * @static
     * @memberOf _
     * @since 2.0.0
     * @category Function
     * @param {Function} func The function to curry.
     * @param {number} [arity=func.length] The arity of `func`.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {Function} Returns the new curried function.
     * @example
     *
     * var abc = function(a, b, c) {
     *   return [a, b, c];
     * };
     *
     * var curried = _.curry(abc);
     *
     * curried(1)(2)(3);
     * // => [1, 2, 3]
     *
     * curried(1, 2)(3);
     * // => [1, 2, 3]
     *
     * curried(1, 2, 3);
     * // => [1, 2, 3]
     *
     * // Curried with placeholders.
     * curried(1)(_, 3)(2);
     * // => [1, 2, 3]
     */ function curry(func, arity, guard) {
            arity = guard ? undefined : arity;
            var result = createWrap(func, WRAP_CURRY_FLAG, undefined, undefined, undefined, undefined, undefined, arity);
            result.placeholder = curry.placeholder;
            return result;
        }
        /**
     * This method is like `_.curry` except that arguments are applied to `func`
     * in the manner of `_.partialRight` instead of `_.partial`.
     *
     * The `_.curryRight.placeholder` value, which defaults to `_` in monolithic
     * builds, may be used as a placeholder for provided arguments.
     *
     * **Note:** This method doesn't set the "length" property of curried functions.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Function
     * @param {Function} func The function to curry.
     * @param {number} [arity=func.length] The arity of `func`.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {Function} Returns the new curried function.
     * @example
     *
     * var abc = function(a, b, c) {
     *   return [a, b, c];
     * };
     *
     * var curried = _.curryRight(abc);
     *
     * curried(3)(2)(1);
     * // => [1, 2, 3]
     *
     * curried(2, 3)(1);
     * // => [1, 2, 3]
     *
     * curried(1, 2, 3);
     * // => [1, 2, 3]
     *
     * // Curried with placeholders.
     * curried(3)(1, _)(2);
     * // => [1, 2, 3]
     */ function curryRight(func, arity, guard) {
            arity = guard ? undefined : arity;
            var result = createWrap(func, WRAP_CURRY_RIGHT_FLAG, undefined, undefined, undefined, undefined, undefined, arity);
            result.placeholder = curryRight.placeholder;
            return result;
        }
        /**
     * Creates a debounced function that delays invoking `func` until after `wait`
     * milliseconds have elapsed since the last time the debounced function was
     * invoked. The debounced function comes with a `cancel` method to cancel
     * delayed `func` invocations and a `flush` method to immediately invoke them.
     * Provide `options` to indicate whether `func` should be invoked on the
     * leading and/or trailing edge of the `wait` timeout. The `func` is invoked
     * with the last arguments provided to the debounced function. Subsequent
     * calls to the debounced function return the result of the last `func`
     * invocation.
     *
     * **Note:** If `leading` and `trailing` options are `true`, `func` is
     * invoked on the trailing edge of the timeout only if the debounced function
     * is invoked more than once during the `wait` timeout.
     *
     * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred
     * until to the next tick, similar to `setTimeout` with a timeout of `0`.
     *
     * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)
     * for details over the differences between `_.debounce` and `_.throttle`.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Function
     * @param {Function} func The function to debounce.
     * @param {number} [wait=0] The number of milliseconds to delay.
     * @param {Object} [options={}] The options object.
     * @param {boolean} [options.leading=false]
     *  Specify invoking on the leading edge of the timeout.
     * @param {number} [options.maxWait]
     *  The maximum time `func` is allowed to be delayed before it's invoked.
     * @param {boolean} [options.trailing=true]
     *  Specify invoking on the trailing edge of the timeout.
     * @returns {Function} Returns the new debounced function.
     * @example
     *
     * // Avoid costly calculations while the window size is in flux.
     * jQuery(window).on('resize', _.debounce(calculateLayout, 150));
     *
     * // Invoke `sendMail` when clicked, debouncing subsequent calls.
     * jQuery(element).on('click', _.debounce(sendMail, 300, {
     *   'leading': true,
     *   'trailing': false
     * }));
     *
     * // Ensure `batchLog` is invoked once after 1 second of debounced calls.
     * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });
     * var source = new EventSource('/stream');
     * jQuery(source).on('message', debounced);
     *
     * // Cancel the trailing debounced invocation.
     * jQuery(window).on('popstate', debounced.cancel);
     */ function debounce(func, wait, options) {
            var lastArgs, lastThis, maxWait, result, timerId, lastCallTime, lastInvokeTime = 0, leading = false, maxing = false, trailing = true;
            if (typeof func != "function") throw new TypeError(FUNC_ERROR_TEXT);
            wait = toNumber(wait) || 0;
            if (isObject(options)) {
                leading = !!options.leading;
                maxing = "maxWait" in options;
                maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;
                trailing = "trailing" in options ? !!options.trailing : trailing;
            }
            function invokeFunc(time) {
                var args = lastArgs, thisArg = lastThis;
                lastArgs = lastThis = undefined;
                lastInvokeTime = time;
                result = func.apply(thisArg, args);
                return result;
            }
            function leadingEdge(time) {
                // Reset any `maxWait` timer.
                lastInvokeTime = time;
                // Start the timer for the trailing edge.
                timerId = setTimeout(timerExpired, wait);
                // Invoke the leading edge.
                return leading ? invokeFunc(time) : result;
            }
            function remainingWait(time) {
                var timeSinceLastCall = time - lastCallTime, timeSinceLastInvoke = time - lastInvokeTime, timeWaiting = wait - timeSinceLastCall;
                return maxing ? nativeMin(timeWaiting, maxWait - timeSinceLastInvoke) : timeWaiting;
            }
            function shouldInvoke(time) {
                var timeSinceLastCall = time - lastCallTime, timeSinceLastInvoke = time - lastInvokeTime;
                // Either this is the first call, activity has stopped and we're at the
                // trailing edge, the system time has gone backwards and we're treating
                // it as the trailing edge, or we've hit the `maxWait` limit.
                return lastCallTime === undefined || timeSinceLastCall >= wait || timeSinceLastCall < 0 || maxing && timeSinceLastInvoke >= maxWait;
            }
            function timerExpired() {
                var time = now();
                if (shouldInvoke(time)) return trailingEdge(time);
                // Restart the timer.
                timerId = setTimeout(timerExpired, remainingWait(time));
            }
            function trailingEdge(time) {
                timerId = undefined;
                // Only invoke if we have `lastArgs` which means `func` has been
                // debounced at least once.
                if (trailing && lastArgs) return invokeFunc(time);
                lastArgs = lastThis = undefined;
                return result;
            }
            function cancel() {
                if (timerId !== undefined) clearTimeout(timerId);
                lastInvokeTime = 0;
                lastArgs = lastCallTime = lastThis = timerId = undefined;
            }
            function flush() {
                return timerId === undefined ? result : trailingEdge(now());
            }
            function debounced() {
                var time = now(), isInvoking = shouldInvoke(time);
                lastArgs = arguments;
                lastThis = this;
                lastCallTime = time;
                if (isInvoking) {
                    if (timerId === undefined) return leadingEdge(lastCallTime);
                    if (maxing) {
                        // Handle invocations in a tight loop.
                        clearTimeout(timerId);
                        timerId = setTimeout(timerExpired, wait);
                        return invokeFunc(lastCallTime);
                    }
                }
                if (timerId === undefined) timerId = setTimeout(timerExpired, wait);
                return result;
            }
            debounced.cancel = cancel;
            debounced.flush = flush;
            return debounced;
        }
        /**
     * Defers invoking the `func` until the current call stack has cleared. Any
     * additional arguments are provided to `func` when it's invoked.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Function
     * @param {Function} func The function to defer.
     * @param {...*} [args] The arguments to invoke `func` with.
     * @returns {number} Returns the timer id.
     * @example
     *
     * _.defer(function(text) {
     *   console.log(text);
     * }, 'deferred');
     * // => Logs 'deferred' after one millisecond.
     */ var defer = baseRest(function(func, args) {
            return baseDelay(func, 1, args);
        });
        /**
     * Invokes `func` after `wait` milliseconds. Any additional arguments are
     * provided to `func` when it's invoked.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Function
     * @param {Function} func The function to delay.
     * @param {number} wait The number of milliseconds to delay invocation.
     * @param {...*} [args] The arguments to invoke `func` with.
     * @returns {number} Returns the timer id.
     * @example
     *
     * _.delay(function(text) {
     *   console.log(text);
     * }, 1000, 'later');
     * // => Logs 'later' after one second.
     */ var delay = baseRest(function(func, wait, args) {
            return baseDelay(func, toNumber(wait) || 0, args);
        });
        /**
     * Creates a function that invokes `func` with arguments reversed.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Function
     * @param {Function} func The function to flip arguments for.
     * @returns {Function} Returns the new flipped function.
     * @example
     *
     * var flipped = _.flip(function() {
     *   return _.toArray(arguments);
     * });
     *
     * flipped('a', 'b', 'c', 'd');
     * // => ['d', 'c', 'b', 'a']
     */ function flip(func) {
            return createWrap(func, WRAP_FLIP_FLAG);
        }
        /**
     * Creates a function that memoizes the result of `func`. If `resolver` is
     * provided, it determines the cache key for storing the result based on the
     * arguments provided to the memoized function. By default, the first argument
     * provided to the memoized function is used as the map cache key. The `func`
     * is invoked with the `this` binding of the memoized function.
     *
     * **Note:** The cache is exposed as the `cache` property on the memoized
     * function. Its creation may be customized by replacing the `_.memoize.Cache`
     * constructor with one whose instances implement the
     * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)
     * method interface of `clear`, `delete`, `get`, `has`, and `set`.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Function
     * @param {Function} func The function to have its output memoized.
     * @param {Function} [resolver] The function to resolve the cache key.
     * @returns {Function} Returns the new memoized function.
     * @example
     *
     * var object = { 'a': 1, 'b': 2 };
     * var other = { 'c': 3, 'd': 4 };
     *
     * var values = _.memoize(_.values);
     * values(object);
     * // => [1, 2]
     *
     * values(other);
     * // => [3, 4]
     *
     * object.a = 2;
     * values(object);
     * // => [1, 2]
     *
     * // Modify the result cache.
     * values.cache.set(object, ['a', 'b']);
     * values(object);
     * // => ['a', 'b']
     *
     * // Replace `_.memoize.Cache`.
     * _.memoize.Cache = WeakMap;
     */ function memoize(func, resolver) {
            if (typeof func != "function" || resolver != null && typeof resolver != "function") throw new TypeError(FUNC_ERROR_TEXT);
            var memoized = function() {
                var args = arguments, key = resolver ? resolver.apply(this, args) : args[0], cache = memoized.cache;
                if (cache.has(key)) return cache.get(key);
                var result = func.apply(this, args);
                memoized.cache = cache.set(key, result) || cache;
                return result;
            };
            memoized.cache = new (memoize.Cache || MapCache);
            return memoized;
        }
        // Expose `MapCache`.
        memoize.Cache = MapCache;
        /**
     * Creates a function that negates the result of the predicate `func`. The
     * `func` predicate is invoked with the `this` binding and arguments of the
     * created function.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Function
     * @param {Function} predicate The predicate to negate.
     * @returns {Function} Returns the new negated function.
     * @example
     *
     * function isEven(n) {
     *   return n % 2 == 0;
     * }
     *
     * _.filter([1, 2, 3, 4, 5, 6], _.negate(isEven));
     * // => [1, 3, 5]
     */ function negate(predicate) {
            if (typeof predicate != "function") throw new TypeError(FUNC_ERROR_TEXT);
            return function() {
                var args = arguments;
                switch(args.length){
                    case 0:
                        return !predicate.call(this);
                    case 1:
                        return !predicate.call(this, args[0]);
                    case 2:
                        return !predicate.call(this, args[0], args[1]);
                    case 3:
                        return !predicate.call(this, args[0], args[1], args[2]);
                }
                return !predicate.apply(this, args);
            };
        }
        /**
     * Creates a function that is restricted to invoking `func` once. Repeat calls
     * to the function return the value of the first invocation. The `func` is
     * invoked with the `this` binding and arguments of the created function.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Function
     * @param {Function} func The function to restrict.
     * @returns {Function} Returns the new restricted function.
     * @example
     *
     * var initialize = _.once(createApplication);
     * initialize();
     * initialize();
     * // => `createApplication` is invoked once
     */ function once(func) {
            return before(2, func);
        }
        /**
     * Creates a function that invokes `func` with its arguments transformed.
     *
     * @static
     * @since 4.0.0
     * @memberOf _
     * @category Function
     * @param {Function} func The function to wrap.
     * @param {...(Function|Function[])} [transforms=[_.identity]]
     *  The argument transforms.
     * @returns {Function} Returns the new function.
     * @example
     *
     * function doubled(n) {
     *   return n * 2;
     * }
     *
     * function square(n) {
     *   return n * n;
     * }
     *
     * var func = _.overArgs(function(x, y) {
     *   return [x, y];
     * }, [square, doubled]);
     *
     * func(9, 3);
     * // => [81, 6]
     *
     * func(10, 5);
     * // => [100, 10]
     */ var overArgs = castRest(function(func, transforms) {
            transforms = transforms.length == 1 && isArray(transforms[0]) ? arrayMap(transforms[0], baseUnary(getIteratee())) : arrayMap(baseFlatten(transforms, 1), baseUnary(getIteratee()));
            var funcsLength = transforms.length;
            return baseRest(function(args) {
                var index = -1, length = nativeMin(args.length, funcsLength);
                while(++index < length)args[index] = transforms[index].call(this, args[index]);
                return apply(func, this, args);
            });
        });
        /**
     * Creates a function that invokes `func` with `partials` prepended to the
     * arguments it receives. This method is like `_.bind` except it does **not**
     * alter the `this` binding.
     *
     * The `_.partial.placeholder` value, which defaults to `_` in monolithic
     * builds, may be used as a placeholder for partially applied arguments.
     *
     * **Note:** This method doesn't set the "length" property of partially
     * applied functions.
     *
     * @static
     * @memberOf _
     * @since 0.2.0
     * @category Function
     * @param {Function} func The function to partially apply arguments to.
     * @param {...*} [partials] The arguments to be partially applied.
     * @returns {Function} Returns the new partially applied function.
     * @example
     *
     * function greet(greeting, name) {
     *   return greeting + ' ' + name;
     * }
     *
     * var sayHelloTo = _.partial(greet, 'hello');
     * sayHelloTo('fred');
     * // => 'hello fred'
     *
     * // Partially applied with placeholders.
     * var greetFred = _.partial(greet, _, 'fred');
     * greetFred('hi');
     * // => 'hi fred'
     */ var partial = baseRest(function(func, partials) {
            var holders = replaceHolders(partials, getHolder(partial));
            return createWrap(func, WRAP_PARTIAL_FLAG, undefined, partials, holders);
        });
        /**
     * This method is like `_.partial` except that partially applied arguments
     * are appended to the arguments it receives.
     *
     * The `_.partialRight.placeholder` value, which defaults to `_` in monolithic
     * builds, may be used as a placeholder for partially applied arguments.
     *
     * **Note:** This method doesn't set the "length" property of partially
     * applied functions.
     *
     * @static
     * @memberOf _
     * @since 1.0.0
     * @category Function
     * @param {Function} func The function to partially apply arguments to.
     * @param {...*} [partials] The arguments to be partially applied.
     * @returns {Function} Returns the new partially applied function.
     * @example
     *
     * function greet(greeting, name) {
     *   return greeting + ' ' + name;
     * }
     *
     * var greetFred = _.partialRight(greet, 'fred');
     * greetFred('hi');
     * // => 'hi fred'
     *
     * // Partially applied with placeholders.
     * var sayHelloTo = _.partialRight(greet, 'hello', _);
     * sayHelloTo('fred');
     * // => 'hello fred'
     */ var partialRight = baseRest(function(func, partials) {
            var holders = replaceHolders(partials, getHolder(partialRight));
            return createWrap(func, WRAP_PARTIAL_RIGHT_FLAG, undefined, partials, holders);
        });
        /**
     * Creates a function that invokes `func` with arguments arranged according
     * to the specified `indexes` where the argument value at the first index is
     * provided as the first argument, the argument value at the second index is
     * provided as the second argument, and so on.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Function
     * @param {Function} func The function to rearrange arguments for.
     * @param {...(number|number[])} indexes The arranged argument indexes.
     * @returns {Function} Returns the new function.
     * @example
     *
     * var rearged = _.rearg(function(a, b, c) {
     *   return [a, b, c];
     * }, [2, 0, 1]);
     *
     * rearged('b', 'c', 'a')
     * // => ['a', 'b', 'c']
     */ var rearg = flatRest(function(func, indexes) {
            return createWrap(func, WRAP_REARG_FLAG, undefined, undefined, undefined, indexes);
        });
        /**
     * Creates a function that invokes `func` with the `this` binding of the
     * created function and arguments from `start` and beyond provided as
     * an array.
     *
     * **Note:** This method is based on the
     * [rest parameter](https://mdn.io/rest_parameters).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Function
     * @param {Function} func The function to apply a rest parameter to.
     * @param {number} [start=func.length-1] The start position of the rest parameter.
     * @returns {Function} Returns the new function.
     * @example
     *
     * var say = _.rest(function(what, names) {
     *   return what + ' ' + _.initial(names).join(', ') +
     *     (_.size(names) > 1 ? ', & ' : '') + _.last(names);
     * });
     *
     * say('hello', 'fred', 'barney', 'pebbles');
     * // => 'hello fred, barney, & pebbles'
     */ function rest(func, start) {
            if (typeof func != "function") throw new TypeError(FUNC_ERROR_TEXT);
            start = start === undefined ? start : toInteger(start);
            return baseRest(func, start);
        }
        /**
     * Creates a function that invokes `func` with the `this` binding of the
     * create function and an array of arguments much like
     * [`Function#apply`](http://www.ecma-international.org/ecma-262/7.0/#sec-function.prototype.apply).
     *
     * **Note:** This method is based on the
     * [spread operator](https://mdn.io/spread_operator).
     *
     * @static
     * @memberOf _
     * @since 3.2.0
     * @category Function
     * @param {Function} func The function to spread arguments over.
     * @param {number} [start=0] The start position of the spread.
     * @returns {Function} Returns the new function.
     * @example
     *
     * var say = _.spread(function(who, what) {
     *   return who + ' says ' + what;
     * });
     *
     * say(['fred', 'hello']);
     * // => 'fred says hello'
     *
     * var numbers = Promise.all([
     *   Promise.resolve(40),
     *   Promise.resolve(36)
     * ]);
     *
     * numbers.then(_.spread(function(x, y) {
     *   return x + y;
     * }));
     * // => a Promise of 76
     */ function spread(func, start) {
            if (typeof func != "function") throw new TypeError(FUNC_ERROR_TEXT);
            start = start == null ? 0 : nativeMax(toInteger(start), 0);
            return baseRest(function(args) {
                var array = args[start], otherArgs = castSlice(args, 0, start);
                if (array) arrayPush(otherArgs, array);
                return apply(func, this, otherArgs);
            });
        }
        /**
     * Creates a throttled function that only invokes `func` at most once per
     * every `wait` milliseconds. The throttled function comes with a `cancel`
     * method to cancel delayed `func` invocations and a `flush` method to
     * immediately invoke them. Provide `options` to indicate whether `func`
     * should be invoked on the leading and/or trailing edge of the `wait`
     * timeout. The `func` is invoked with the last arguments provided to the
     * throttled function. Subsequent calls to the throttled function return the
     * result of the last `func` invocation.
     *
     * **Note:** If `leading` and `trailing` options are `true`, `func` is
     * invoked on the trailing edge of the timeout only if the throttled function
     * is invoked more than once during the `wait` timeout.
     *
     * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred
     * until to the next tick, similar to `setTimeout` with a timeout of `0`.
     *
     * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)
     * for details over the differences between `_.throttle` and `_.debounce`.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Function
     * @param {Function} func The function to throttle.
     * @param {number} [wait=0] The number of milliseconds to throttle invocations to.
     * @param {Object} [options={}] The options object.
     * @param {boolean} [options.leading=true]
     *  Specify invoking on the leading edge of the timeout.
     * @param {boolean} [options.trailing=true]
     *  Specify invoking on the trailing edge of the timeout.
     * @returns {Function} Returns the new throttled function.
     * @example
     *
     * // Avoid excessively updating the position while scrolling.
     * jQuery(window).on('scroll', _.throttle(updatePosition, 100));
     *
     * // Invoke `renewToken` when the click event is fired, but not more than once every 5 minutes.
     * var throttled = _.throttle(renewToken, 300000, { 'trailing': false });
     * jQuery(element).on('click', throttled);
     *
     * // Cancel the trailing throttled invocation.
     * jQuery(window).on('popstate', throttled.cancel);
     */ function throttle(func, wait, options) {
            var leading = true, trailing = true;
            if (typeof func != "function") throw new TypeError(FUNC_ERROR_TEXT);
            if (isObject(options)) {
                leading = "leading" in options ? !!options.leading : leading;
                trailing = "trailing" in options ? !!options.trailing : trailing;
            }
            return debounce(func, wait, {
                "leading": leading,
                "maxWait": wait,
                "trailing": trailing
            });
        }
        /**
     * Creates a function that accepts up to one argument, ignoring any
     * additional arguments.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Function
     * @param {Function} func The function to cap arguments for.
     * @returns {Function} Returns the new capped function.
     * @example
     *
     * _.map(['6', '8', '10'], _.unary(parseInt));
     * // => [6, 8, 10]
     */ function unary(func) {
            return ary(func, 1);
        }
        /**
     * Creates a function that provides `value` to `wrapper` as its first
     * argument. Any additional arguments provided to the function are appended
     * to those provided to the `wrapper`. The wrapper is invoked with the `this`
     * binding of the created function.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Function
     * @param {*} value The value to wrap.
     * @param {Function} [wrapper=identity] The wrapper function.
     * @returns {Function} Returns the new function.
     * @example
     *
     * var p = _.wrap(_.escape, function(func, text) {
     *   return '<p>' + func(text) + '</p>';
     * });
     *
     * p('fred, barney, & pebbles');
     * // => '<p>fred, barney, &amp; pebbles</p>'
     */ function wrap(value, wrapper) {
            return partial(castFunction(wrapper), value);
        }
        /*------------------------------------------------------------------------*/ /**
     * Casts `value` as an array if it's not one.
     *
     * @static
     * @memberOf _
     * @since 4.4.0
     * @category Lang
     * @param {*} value The value to inspect.
     * @returns {Array} Returns the cast array.
     * @example
     *
     * _.castArray(1);
     * // => [1]
     *
     * _.castArray({ 'a': 1 });
     * // => [{ 'a': 1 }]
     *
     * _.castArray('abc');
     * // => ['abc']
     *
     * _.castArray(null);
     * // => [null]
     *
     * _.castArray(undefined);
     * // => [undefined]
     *
     * _.castArray();
     * // => []
     *
     * var array = [1, 2, 3];
     * console.log(_.castArray(array) === array);
     * // => true
     */ function castArray() {
            if (!arguments.length) return [];
            var value = arguments[0];
            return isArray(value) ? value : [
                value
            ];
        }
        /**
     * Creates a shallow clone of `value`.
     *
     * **Note:** This method is loosely based on the
     * [structured clone algorithm](https://mdn.io/Structured_clone_algorithm)
     * and supports cloning arrays, array buffers, booleans, date objects, maps,
     * numbers, `Object` objects, regexes, sets, strings, symbols, and typed
     * arrays. The own enumerable properties of `arguments` objects are cloned
     * as plain objects. An empty object is returned for uncloneable values such
     * as error objects, functions, DOM nodes, and WeakMaps.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to clone.
     * @returns {*} Returns the cloned value.
     * @see _.cloneDeep
     * @example
     *
     * var objects = [{ 'a': 1 }, { 'b': 2 }];
     *
     * var shallow = _.clone(objects);
     * console.log(shallow[0] === objects[0]);
     * // => true
     */ function clone(value) {
            return baseClone(value, CLONE_SYMBOLS_FLAG);
        }
        /**
     * This method is like `_.clone` except that it accepts `customizer` which
     * is invoked to produce the cloned value. If `customizer` returns `undefined`,
     * cloning is handled by the method instead. The `customizer` is invoked with
     * up to four arguments; (value [, index|key, object, stack]).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to clone.
     * @param {Function} [customizer] The function to customize cloning.
     * @returns {*} Returns the cloned value.
     * @see _.cloneDeepWith
     * @example
     *
     * function customizer(value) {
     *   if (_.isElement(value)) {
     *     return value.cloneNode(false);
     *   }
     * }
     *
     * var el = _.cloneWith(document.body, customizer);
     *
     * console.log(el === document.body);
     * // => false
     * console.log(el.nodeName);
     * // => 'BODY'
     * console.log(el.childNodes.length);
     * // => 0
     */ function cloneWith(value, customizer) {
            customizer = typeof customizer == "function" ? customizer : undefined;
            return baseClone(value, CLONE_SYMBOLS_FLAG, customizer);
        }
        /**
     * This method is like `_.clone` except that it recursively clones `value`.
     *
     * @static
     * @memberOf _
     * @since 1.0.0
     * @category Lang
     * @param {*} value The value to recursively clone.
     * @returns {*} Returns the deep cloned value.
     * @see _.clone
     * @example
     *
     * var objects = [{ 'a': 1 }, { 'b': 2 }];
     *
     * var deep = _.cloneDeep(objects);
     * console.log(deep[0] === objects[0]);
     * // => false
     */ function cloneDeep(value) {
            return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG);
        }
        /**
     * This method is like `_.cloneWith` except that it recursively clones `value`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to recursively clone.
     * @param {Function} [customizer] The function to customize cloning.
     * @returns {*} Returns the deep cloned value.
     * @see _.cloneWith
     * @example
     *
     * function customizer(value) {
     *   if (_.isElement(value)) {
     *     return value.cloneNode(true);
     *   }
     * }
     *
     * var el = _.cloneDeepWith(document.body, customizer);
     *
     * console.log(el === document.body);
     * // => false
     * console.log(el.nodeName);
     * // => 'BODY'
     * console.log(el.childNodes.length);
     * // => 20
     */ function cloneDeepWith(value, customizer) {
            customizer = typeof customizer == "function" ? customizer : undefined;
            return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG, customizer);
        }
        /**
     * Checks if `object` conforms to `source` by invoking the predicate
     * properties of `source` with the corresponding property values of `object`.
     *
     * **Note:** This method is equivalent to `_.conforms` when `source` is
     * partially applied.
     *
     * @static
     * @memberOf _
     * @since 4.14.0
     * @category Lang
     * @param {Object} object The object to inspect.
     * @param {Object} source The object of property predicates to conform to.
     * @returns {boolean} Returns `true` if `object` conforms, else `false`.
     * @example
     *
     * var object = { 'a': 1, 'b': 2 };
     *
     * _.conformsTo(object, { 'b': function(n) { return n > 1; } });
     * // => true
     *
     * _.conformsTo(object, { 'b': function(n) { return n > 2; } });
     * // => false
     */ function conformsTo(object, source) {
            return source == null || baseConformsTo(object, source, keys(source));
        }
        /**
     * Performs a
     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
     * comparison between two values to determine if they are equivalent.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
     * @example
     *
     * var object = { 'a': 1 };
     * var other = { 'a': 1 };
     *
     * _.eq(object, object);
     * // => true
     *
     * _.eq(object, other);
     * // => false
     *
     * _.eq('a', 'a');
     * // => true
     *
     * _.eq('a', Object('a'));
     * // => false
     *
     * _.eq(NaN, NaN);
     * // => true
     */ function eq(value, other) {
            return value === other || value !== value && other !== other;
        }
        /**
     * Checks if `value` is greater than `other`.
     *
     * @static
     * @memberOf _
     * @since 3.9.0
     * @category Lang
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @returns {boolean} Returns `true` if `value` is greater than `other`,
     *  else `false`.
     * @see _.lt
     * @example
     *
     * _.gt(3, 1);
     * // => true
     *
     * _.gt(3, 3);
     * // => false
     *
     * _.gt(1, 3);
     * // => false
     */ var gt = createRelationalOperation(baseGt);
        /**
     * Checks if `value` is greater than or equal to `other`.
     *
     * @static
     * @memberOf _
     * @since 3.9.0
     * @category Lang
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @returns {boolean} Returns `true` if `value` is greater than or equal to
     *  `other`, else `false`.
     * @see _.lte
     * @example
     *
     * _.gte(3, 1);
     * // => true
     *
     * _.gte(3, 3);
     * // => true
     *
     * _.gte(1, 3);
     * // => false
     */ var gte = createRelationalOperation(function(value, other) {
            return value >= other;
        });
        /**
     * Checks if `value` is likely an `arguments` object.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is an `arguments` object,
     *  else `false`.
     * @example
     *
     * _.isArguments(function() { return arguments; }());
     * // => true
     *
     * _.isArguments([1, 2, 3]);
     * // => false
     */ var isArguments = baseIsArguments(function() {
            return arguments;
        }()) ? baseIsArguments : function(value) {
            return isObjectLike(value) && hasOwnProperty.call(value, "callee") && !propertyIsEnumerable.call(value, "callee");
        };
        /**
     * Checks if `value` is classified as an `Array` object.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is an array, else `false`.
     * @example
     *
     * _.isArray([1, 2, 3]);
     * // => true
     *
     * _.isArray(document.body.children);
     * // => false
     *
     * _.isArray('abc');
     * // => false
     *
     * _.isArray(_.noop);
     * // => false
     */ var isArray = Array1.isArray;
        /**
     * Checks if `value` is classified as an `ArrayBuffer` object.
     *
     * @static
     * @memberOf _
     * @since 4.3.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is an array buffer, else `false`.
     * @example
     *
     * _.isArrayBuffer(new ArrayBuffer(2));
     * // => true
     *
     * _.isArrayBuffer(new Array(2));
     * // => false
     */ var isArrayBuffer = nodeIsArrayBuffer ? baseUnary(nodeIsArrayBuffer) : baseIsArrayBuffer;
        /**
     * Checks if `value` is array-like. A value is considered array-like if it's
     * not a function and has a `value.length` that's an integer greater than or
     * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is array-like, else `false`.
     * @example
     *
     * _.isArrayLike([1, 2, 3]);
     * // => true
     *
     * _.isArrayLike(document.body.children);
     * // => true
     *
     * _.isArrayLike('abc');
     * // => true
     *
     * _.isArrayLike(_.noop);
     * // => false
     */ function isArrayLike(value) {
            return value != null && isLength(value.length) && !isFunction(value);
        }
        /**
     * This method is like `_.isArrayLike` except that it also checks if `value`
     * is an object.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is an array-like object,
     *  else `false`.
     * @example
     *
     * _.isArrayLikeObject([1, 2, 3]);
     * // => true
     *
     * _.isArrayLikeObject(document.body.children);
     * // => true
     *
     * _.isArrayLikeObject('abc');
     * // => false
     *
     * _.isArrayLikeObject(_.noop);
     * // => false
     */ function isArrayLikeObject(value) {
            return isObjectLike(value) && isArrayLike(value);
        }
        /**
     * Checks if `value` is classified as a boolean primitive or object.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a boolean, else `false`.
     * @example
     *
     * _.isBoolean(false);
     * // => true
     *
     * _.isBoolean(null);
     * // => false
     */ function isBoolean(value) {
            return value === true || value === false || isObjectLike(value) && baseGetTag(value) == boolTag;
        }
        /**
     * Checks if `value` is a buffer.
     *
     * @static
     * @memberOf _
     * @since 4.3.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.
     * @example
     *
     * _.isBuffer(new Buffer(2));
     * // => true
     *
     * _.isBuffer(new Uint8Array(2));
     * // => false
     */ var isBuffer = nativeIsBuffer || stubFalse;
        /**
     * Checks if `value` is classified as a `Date` object.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a date object, else `false`.
     * @example
     *
     * _.isDate(new Date);
     * // => true
     *
     * _.isDate('Mon April 23 2012');
     * // => false
     */ var isDate = nodeIsDate ? baseUnary(nodeIsDate) : baseIsDate;
        /**
     * Checks if `value` is likely a DOM element.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a DOM element, else `false`.
     * @example
     *
     * _.isElement(document.body);
     * // => true
     *
     * _.isElement('<body>');
     * // => false
     */ function isElement(value) {
            return isObjectLike(value) && value.nodeType === 1 && !isPlainObject(value);
        }
        /**
     * Checks if `value` is an empty object, collection, map, or set.
     *
     * Objects are considered empty if they have no own enumerable string keyed
     * properties.
     *
     * Array-like values such as `arguments` objects, arrays, buffers, strings, or
     * jQuery-like collections are considered empty if they have a `length` of `0`.
     * Similarly, maps and sets are considered empty if they have a `size` of `0`.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is empty, else `false`.
     * @example
     *
     * _.isEmpty(null);
     * // => true
     *
     * _.isEmpty(true);
     * // => true
     *
     * _.isEmpty(1);
     * // => true
     *
     * _.isEmpty([1, 2, 3]);
     * // => false
     *
     * _.isEmpty({ 'a': 1 });
     * // => false
     */ function isEmpty(value) {
            if (value == null) return true;
            if (isArrayLike(value) && (isArray(value) || typeof value == "string" || typeof value.splice == "function" || isBuffer(value) || isTypedArray(value) || isArguments(value))) return !value.length;
            var tag = getTag(value);
            if (tag == mapTag || tag == setTag) return !value.size;
            if (isPrototype(value)) return !baseKeys(value).length;
            for(var key in value){
                if (hasOwnProperty.call(value, key)) return false;
            }
            return true;
        }
        /**
     * Performs a deep comparison between two values to determine if they are
     * equivalent.
     *
     * **Note:** This method supports comparing arrays, array buffers, booleans,
     * date objects, error objects, maps, numbers, `Object` objects, regexes,
     * sets, strings, symbols, and typed arrays. `Object` objects are compared
     * by their own, not inherited, enumerable properties. Functions and DOM
     * nodes are compared by strict equality, i.e. `===`.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
     * @example
     *
     * var object = { 'a': 1 };
     * var other = { 'a': 1 };
     *
     * _.isEqual(object, other);
     * // => true
     *
     * object === other;
     * // => false
     */ function isEqual(value, other) {
            return baseIsEqual(value, other);
        }
        /**
     * This method is like `_.isEqual` except that it accepts `customizer` which
     * is invoked to compare values. If `customizer` returns `undefined`, comparisons
     * are handled by the method instead. The `customizer` is invoked with up to
     * six arguments: (objValue, othValue [, index|key, object, other, stack]).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @param {Function} [customizer] The function to customize comparisons.
     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
     * @example
     *
     * function isGreeting(value) {
     *   return /^h(?:i|ello)$/.test(value);
     * }
     *
     * function customizer(objValue, othValue) {
     *   if (isGreeting(objValue) && isGreeting(othValue)) {
     *     return true;
     *   }
     * }
     *
     * var array = ['hello', 'goodbye'];
     * var other = ['hi', 'goodbye'];
     *
     * _.isEqualWith(array, other, customizer);
     * // => true
     */ function isEqualWith(value, other, customizer) {
            customizer = typeof customizer == "function" ? customizer : undefined;
            var result = customizer ? customizer(value, other) : undefined;
            return result === undefined ? baseIsEqual(value, other, undefined, customizer) : !!result;
        }
        /**
     * Checks if `value` is an `Error`, `EvalError`, `RangeError`, `ReferenceError`,
     * `SyntaxError`, `TypeError`, or `URIError` object.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is an error object, else `false`.
     * @example
     *
     * _.isError(new Error);
     * // => true
     *
     * _.isError(Error);
     * // => false
     */ function isError(value) {
            if (!isObjectLike(value)) return false;
            var tag = baseGetTag(value);
            return tag == errorTag || tag == domExcTag || typeof value.message == "string" && typeof value.name == "string" && !isPlainObject(value);
        }
        /**
     * Checks if `value` is a finite primitive number.
     *
     * **Note:** This method is based on
     * [`Number.isFinite`](https://mdn.io/Number/isFinite).
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a finite number, else `false`.
     * @example
     *
     * _.isFinite(3);
     * // => true
     *
     * _.isFinite(Number.MIN_VALUE);
     * // => true
     *
     * _.isFinite(Infinity);
     * // => false
     *
     * _.isFinite('3');
     * // => false
     */ function isFinite(value) {
            return typeof value == "number" && nativeIsFinite(value);
        }
        /**
     * Checks if `value` is classified as a `Function` object.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a function, else `false`.
     * @example
     *
     * _.isFunction(_);
     * // => true
     *
     * _.isFunction(/abc/);
     * // => false
     */ function isFunction(value) {
            if (!isObject(value)) return false;
            // The use of `Object#toString` avoids issues with the `typeof` operator
            // in Safari 9 which returns 'object' for typed arrays and other constructors.
            var tag = baseGetTag(value);
            return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;
        }
        /**
     * Checks if `value` is an integer.
     *
     * **Note:** This method is based on
     * [`Number.isInteger`](https://mdn.io/Number/isInteger).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is an integer, else `false`.
     * @example
     *
     * _.isInteger(3);
     * // => true
     *
     * _.isInteger(Number.MIN_VALUE);
     * // => false
     *
     * _.isInteger(Infinity);
     * // => false
     *
     * _.isInteger('3');
     * // => false
     */ function isInteger(value) {
            return typeof value == "number" && value == toInteger(value);
        }
        /**
     * Checks if `value` is a valid array-like length.
     *
     * **Note:** This method is loosely based on
     * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.
     * @example
     *
     * _.isLength(3);
     * // => true
     *
     * _.isLength(Number.MIN_VALUE);
     * // => false
     *
     * _.isLength(Infinity);
     * // => false
     *
     * _.isLength('3');
     * // => false
     */ function isLength(value) {
            return typeof value == "number" && value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;
        }
        /**
     * Checks if `value` is the
     * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)
     * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is an object, else `false`.
     * @example
     *
     * _.isObject({});
     * // => true
     *
     * _.isObject([1, 2, 3]);
     * // => true
     *
     * _.isObject(_.noop);
     * // => true
     *
     * _.isObject(null);
     * // => false
     */ function isObject(value) {
            var type = typeof value;
            return value != null && (type == "object" || type == "function");
        }
        /**
     * Checks if `value` is object-like. A value is object-like if it's not `null`
     * and has a `typeof` result of "object".
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is object-like, else `false`.
     * @example
     *
     * _.isObjectLike({});
     * // => true
     *
     * _.isObjectLike([1, 2, 3]);
     * // => true
     *
     * _.isObjectLike(_.noop);
     * // => false
     *
     * _.isObjectLike(null);
     * // => false
     */ function isObjectLike(value) {
            return value != null && typeof value == "object";
        }
        /**
     * Checks if `value` is classified as a `Map` object.
     *
     * @static
     * @memberOf _
     * @since 4.3.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a map, else `false`.
     * @example
     *
     * _.isMap(new Map);
     * // => true
     *
     * _.isMap(new WeakMap);
     * // => false
     */ var isMap = nodeIsMap ? baseUnary(nodeIsMap) : baseIsMap;
        /**
     * Performs a partial deep comparison between `object` and `source` to
     * determine if `object` contains equivalent property values.
     *
     * **Note:** This method is equivalent to `_.matches` when `source` is
     * partially applied.
     *
     * Partial comparisons will match empty array and empty object `source`
     * values against any array or object value, respectively. See `_.isEqual`
     * for a list of supported value comparisons.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Lang
     * @param {Object} object The object to inspect.
     * @param {Object} source The object of property values to match.
     * @returns {boolean} Returns `true` if `object` is a match, else `false`.
     * @example
     *
     * var object = { 'a': 1, 'b': 2 };
     *
     * _.isMatch(object, { 'b': 2 });
     * // => true
     *
     * _.isMatch(object, { 'b': 1 });
     * // => false
     */ function isMatch(object, source) {
            return object === source || baseIsMatch(object, source, getMatchData(source));
        }
        /**
     * This method is like `_.isMatch` except that it accepts `customizer` which
     * is invoked to compare values. If `customizer` returns `undefined`, comparisons
     * are handled by the method instead. The `customizer` is invoked with five
     * arguments: (objValue, srcValue, index|key, object, source).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {Object} object The object to inspect.
     * @param {Object} source The object of property values to match.
     * @param {Function} [customizer] The function to customize comparisons.
     * @returns {boolean} Returns `true` if `object` is a match, else `false`.
     * @example
     *
     * function isGreeting(value) {
     *   return /^h(?:i|ello)$/.test(value);
     * }
     *
     * function customizer(objValue, srcValue) {
     *   if (isGreeting(objValue) && isGreeting(srcValue)) {
     *     return true;
     *   }
     * }
     *
     * var object = { 'greeting': 'hello' };
     * var source = { 'greeting': 'hi' };
     *
     * _.isMatchWith(object, source, customizer);
     * // => true
     */ function isMatchWith(object, source, customizer) {
            customizer = typeof customizer == "function" ? customizer : undefined;
            return baseIsMatch(object, source, getMatchData(source), customizer);
        }
        /**
     * Checks if `value` is `NaN`.
     *
     * **Note:** This method is based on
     * [`Number.isNaN`](https://mdn.io/Number/isNaN) and is not the same as
     * global [`isNaN`](https://mdn.io/isNaN) which returns `true` for
     * `undefined` and other non-number values.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.
     * @example
     *
     * _.isNaN(NaN);
     * // => true
     *
     * _.isNaN(new Number(NaN));
     * // => true
     *
     * isNaN(undefined);
     * // => true
     *
     * _.isNaN(undefined);
     * // => false
     */ function isNaN(value) {
            // An `NaN` primitive is the only value that is not equal to itself.
            // Perform the `toStringTag` check first to avoid errors with some
            // ActiveX objects in IE.
            return isNumber(value) && value != +value;
        }
        /**
     * Checks if `value` is a pristine native function.
     *
     * **Note:** This method can't reliably detect native functions in the presence
     * of the core-js package because core-js circumvents this kind of detection.
     * Despite multiple requests, the core-js maintainer has made it clear: any
     * attempt to fix the detection will be obstructed. As a result, we're left
     * with little choice but to throw an error. Unfortunately, this also affects
     * packages, like [babel-polyfill](https://www.npmjs.com/package/babel-polyfill),
     * which rely on core-js.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a native function,
     *  else `false`.
     * @example
     *
     * _.isNative(Array.prototype.push);
     * // => true
     *
     * _.isNative(_);
     * // => false
     */ function isNative(value) {
            if (isMaskable(value)) throw new Error(CORE_ERROR_TEXT);
            return baseIsNative(value);
        }
        /**
     * Checks if `value` is `null`.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is `null`, else `false`.
     * @example
     *
     * _.isNull(null);
     * // => true
     *
     * _.isNull(void 0);
     * // => false
     */ function isNull(value) {
            return value === null;
        }
        /**
     * Checks if `value` is `null` or `undefined`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is nullish, else `false`.
     * @example
     *
     * _.isNil(null);
     * // => true
     *
     * _.isNil(void 0);
     * // => true
     *
     * _.isNil(NaN);
     * // => false
     */ function isNil(value) {
            return value == null;
        }
        /**
     * Checks if `value` is classified as a `Number` primitive or object.
     *
     * **Note:** To exclude `Infinity`, `-Infinity`, and `NaN`, which are
     * classified as numbers, use the `_.isFinite` method.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a number, else `false`.
     * @example
     *
     * _.isNumber(3);
     * // => true
     *
     * _.isNumber(Number.MIN_VALUE);
     * // => true
     *
     * _.isNumber(Infinity);
     * // => true
     *
     * _.isNumber('3');
     * // => false
     */ function isNumber(value) {
            return typeof value == "number" || isObjectLike(value) && baseGetTag(value) == numberTag;
        }
        /**
     * Checks if `value` is a plain object, that is, an object created by the
     * `Object` constructor or one with a `[[Prototype]]` of `null`.
     *
     * @static
     * @memberOf _
     * @since 0.8.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     * }
     *
     * _.isPlainObject(new Foo);
     * // => false
     *
     * _.isPlainObject([1, 2, 3]);
     * // => false
     *
     * _.isPlainObject({ 'x': 0, 'y': 0 });
     * // => true
     *
     * _.isPlainObject(Object.create(null));
     * // => true
     */ function isPlainObject(value) {
            if (!isObjectLike(value) || baseGetTag(value) != objectTag) return false;
            var proto = getPrototype(value);
            if (proto === null) return true;
            var Ctor = hasOwnProperty.call(proto, "constructor") && proto.constructor;
            return typeof Ctor == "function" && Ctor instanceof Ctor && funcToString.call(Ctor) == objectCtorString;
        }
        /**
     * Checks if `value` is classified as a `RegExp` object.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.
     * @example
     *
     * _.isRegExp(/abc/);
     * // => true
     *
     * _.isRegExp('/abc/');
     * // => false
     */ var isRegExp = nodeIsRegExp ? baseUnary(nodeIsRegExp) : baseIsRegExp;
        /**
     * Checks if `value` is a safe integer. An integer is safe if it's an IEEE-754
     * double precision number which isn't the result of a rounded unsafe integer.
     *
     * **Note:** This method is based on
     * [`Number.isSafeInteger`](https://mdn.io/Number/isSafeInteger).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a safe integer, else `false`.
     * @example
     *
     * _.isSafeInteger(3);
     * // => true
     *
     * _.isSafeInteger(Number.MIN_VALUE);
     * // => false
     *
     * _.isSafeInteger(Infinity);
     * // => false
     *
     * _.isSafeInteger('3');
     * // => false
     */ function isSafeInteger(value) {
            return isInteger(value) && value >= -MAX_SAFE_INTEGER && value <= MAX_SAFE_INTEGER;
        }
        /**
     * Checks if `value` is classified as a `Set` object.
     *
     * @static
     * @memberOf _
     * @since 4.3.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a set, else `false`.
     * @example
     *
     * _.isSet(new Set);
     * // => true
     *
     * _.isSet(new WeakSet);
     * // => false
     */ var isSet = nodeIsSet ? baseUnary(nodeIsSet) : baseIsSet;
        /**
     * Checks if `value` is classified as a `String` primitive or object.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a string, else `false`.
     * @example
     *
     * _.isString('abc');
     * // => true
     *
     * _.isString(1);
     * // => false
     */ function isString(value) {
            return typeof value == "string" || !isArray(value) && isObjectLike(value) && baseGetTag(value) == stringTag;
        }
        /**
     * Checks if `value` is classified as a `Symbol` primitive or object.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.
     * @example
     *
     * _.isSymbol(Symbol.iterator);
     * // => true
     *
     * _.isSymbol('abc');
     * // => false
     */ function isSymbol(value) {
            return typeof value == "symbol" || isObjectLike(value) && baseGetTag(value) == symbolTag;
        }
        /**
     * Checks if `value` is classified as a typed array.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.
     * @example
     *
     * _.isTypedArray(new Uint8Array);
     * // => true
     *
     * _.isTypedArray([]);
     * // => false
     */ var isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;
        /**
     * Checks if `value` is `undefined`.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is `undefined`, else `false`.
     * @example
     *
     * _.isUndefined(void 0);
     * // => true
     *
     * _.isUndefined(null);
     * // => false
     */ function isUndefined(value) {
            return value === undefined;
        }
        /**
     * Checks if `value` is classified as a `WeakMap` object.
     *
     * @static
     * @memberOf _
     * @since 4.3.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a weak map, else `false`.
     * @example
     *
     * _.isWeakMap(new WeakMap);
     * // => true
     *
     * _.isWeakMap(new Map);
     * // => false
     */ function isWeakMap(value) {
            return isObjectLike(value) && getTag(value) == weakMapTag;
        }
        /**
     * Checks if `value` is classified as a `WeakSet` object.
     *
     * @static
     * @memberOf _
     * @since 4.3.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a weak set, else `false`.
     * @example
     *
     * _.isWeakSet(new WeakSet);
     * // => true
     *
     * _.isWeakSet(new Set);
     * // => false
     */ function isWeakSet(value) {
            return isObjectLike(value) && baseGetTag(value) == weakSetTag;
        }
        /**
     * Checks if `value` is less than `other`.
     *
     * @static
     * @memberOf _
     * @since 3.9.0
     * @category Lang
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @returns {boolean} Returns `true` if `value` is less than `other`,
     *  else `false`.
     * @see _.gt
     * @example
     *
     * _.lt(1, 3);
     * // => true
     *
     * _.lt(3, 3);
     * // => false
     *
     * _.lt(3, 1);
     * // => false
     */ var lt = createRelationalOperation(baseLt);
        /**
     * Checks if `value` is less than or equal to `other`.
     *
     * @static
     * @memberOf _
     * @since 3.9.0
     * @category Lang
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @returns {boolean} Returns `true` if `value` is less than or equal to
     *  `other`, else `false`.
     * @see _.gte
     * @example
     *
     * _.lte(1, 3);
     * // => true
     *
     * _.lte(3, 3);
     * // => true
     *
     * _.lte(3, 1);
     * // => false
     */ var lte = createRelationalOperation(function(value, other) {
            return value <= other;
        });
        /**
     * Converts `value` to an array.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Lang
     * @param {*} value The value to convert.
     * @returns {Array} Returns the converted array.
     * @example
     *
     * _.toArray({ 'a': 1, 'b': 2 });
     * // => [1, 2]
     *
     * _.toArray('abc');
     * // => ['a', 'b', 'c']
     *
     * _.toArray(1);
     * // => []
     *
     * _.toArray(null);
     * // => []
     */ function toArray(value) {
            if (!value) return [];
            if (isArrayLike(value)) return isString(value) ? stringToArray(value) : copyArray(value);
            if (symIterator && value[symIterator]) return iteratorToArray(value[symIterator]());
            var tag = getTag(value), func = tag == mapTag ? mapToArray : tag == setTag ? setToArray : values;
            return func(value);
        }
        /**
     * Converts `value` to a finite number.
     *
     * @static
     * @memberOf _
     * @since 4.12.0
     * @category Lang
     * @param {*} value The value to convert.
     * @returns {number} Returns the converted number.
     * @example
     *
     * _.toFinite(3.2);
     * // => 3.2
     *
     * _.toFinite(Number.MIN_VALUE);
     * // => 5e-324
     *
     * _.toFinite(Infinity);
     * // => 1.7976931348623157e+308
     *
     * _.toFinite('3.2');
     * // => 3.2
     */ function toFinite(value) {
            if (!value) return value === 0 ? value : 0;
            value = toNumber(value);
            if (value === INFINITY || value === -INFINITY) {
                var sign = value < 0 ? -1 : 1;
                return sign * MAX_INTEGER;
            }
            return value === value ? value : 0;
        }
        /**
     * Converts `value` to an integer.
     *
     * **Note:** This method is loosely based on
     * [`ToInteger`](http://www.ecma-international.org/ecma-262/7.0/#sec-tointeger).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to convert.
     * @returns {number} Returns the converted integer.
     * @example
     *
     * _.toInteger(3.2);
     * // => 3
     *
     * _.toInteger(Number.MIN_VALUE);
     * // => 0
     *
     * _.toInteger(Infinity);
     * // => 1.7976931348623157e+308
     *
     * _.toInteger('3.2');
     * // => 3
     */ function toInteger(value) {
            var result = toFinite(value), remainder = result % 1;
            return result === result ? remainder ? result - remainder : result : 0;
        }
        /**
     * Converts `value` to an integer suitable for use as the length of an
     * array-like object.
     *
     * **Note:** This method is based on
     * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to convert.
     * @returns {number} Returns the converted integer.
     * @example
     *
     * _.toLength(3.2);
     * // => 3
     *
     * _.toLength(Number.MIN_VALUE);
     * // => 0
     *
     * _.toLength(Infinity);
     * // => 4294967295
     *
     * _.toLength('3.2');
     * // => 3
     */ function toLength(value) {
            return value ? baseClamp(toInteger(value), 0, MAX_ARRAY_LENGTH) : 0;
        }
        /**
     * Converts `value` to a number.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to process.
     * @returns {number} Returns the number.
     * @example
     *
     * _.toNumber(3.2);
     * // => 3.2
     *
     * _.toNumber(Number.MIN_VALUE);
     * // => 5e-324
     *
     * _.toNumber(Infinity);
     * // => Infinity
     *
     * _.toNumber('3.2');
     * // => 3.2
     */ function toNumber(value) {
            if (typeof value == "number") return value;
            if (isSymbol(value)) return NAN;
            if (isObject(value)) {
                var other = typeof value.valueOf == "function" ? value.valueOf() : value;
                value = isObject(other) ? other + "" : other;
            }
            if (typeof value != "string") return value === 0 ? value : +value;
            value = baseTrim(value);
            var isBinary = reIsBinary.test(value);
            return isBinary || reIsOctal.test(value) ? freeParseInt(value.slice(2), isBinary ? 2 : 8) : reIsBadHex.test(value) ? NAN : +value;
        }
        /**
     * Converts `value` to a plain object flattening inherited enumerable string
     * keyed properties of `value` to own properties of the plain object.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Lang
     * @param {*} value The value to convert.
     * @returns {Object} Returns the converted plain object.
     * @example
     *
     * function Foo() {
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.assign({ 'a': 1 }, new Foo);
     * // => { 'a': 1, 'b': 2 }
     *
     * _.assign({ 'a': 1 }, _.toPlainObject(new Foo));
     * // => { 'a': 1, 'b': 2, 'c': 3 }
     */ function toPlainObject(value) {
            return copyObject(value, keysIn(value));
        }
        /**
     * Converts `value` to a safe integer. A safe integer can be compared and
     * represented correctly.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to convert.
     * @returns {number} Returns the converted integer.
     * @example
     *
     * _.toSafeInteger(3.2);
     * // => 3
     *
     * _.toSafeInteger(Number.MIN_VALUE);
     * // => 0
     *
     * _.toSafeInteger(Infinity);
     * // => 9007199254740991
     *
     * _.toSafeInteger('3.2');
     * // => 3
     */ function toSafeInteger(value) {
            return value ? baseClamp(toInteger(value), -MAX_SAFE_INTEGER, MAX_SAFE_INTEGER) : value === 0 ? value : 0;
        }
        /**
     * Converts `value` to a string. An empty string is returned for `null`
     * and `undefined` values. The sign of `-0` is preserved.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to convert.
     * @returns {string} Returns the converted string.
     * @example
     *
     * _.toString(null);
     * // => ''
     *
     * _.toString(-0);
     * // => '-0'
     *
     * _.toString([1, 2, 3]);
     * // => '1,2,3'
     */ function toString(value) {
            return value == null ? "" : baseToString(value);
        }
        /*------------------------------------------------------------------------*/ /**
     * Assigns own enumerable string keyed properties of source objects to the
     * destination object. Source objects are applied from left to right.
     * Subsequent sources overwrite property assignments of previous sources.
     *
     * **Note:** This method mutates `object` and is loosely based on
     * [`Object.assign`](https://mdn.io/Object/assign).
     *
     * @static
     * @memberOf _
     * @since 0.10.0
     * @category Object
     * @param {Object} object The destination object.
     * @param {...Object} [sources] The source objects.
     * @returns {Object} Returns `object`.
     * @see _.assignIn
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     * }
     *
     * function Bar() {
     *   this.c = 3;
     * }
     *
     * Foo.prototype.b = 2;
     * Bar.prototype.d = 4;
     *
     * _.assign({ 'a': 0 }, new Foo, new Bar);
     * // => { 'a': 1, 'c': 3 }
     */ var assign = createAssigner(function(object, source) {
            if (isPrototype(source) || isArrayLike(source)) {
                copyObject(source, keys(source), object);
                return;
            }
            for(var key in source)if (hasOwnProperty.call(source, key)) assignValue(object, key, source[key]);
        });
        /**
     * This method is like `_.assign` except that it iterates over own and
     * inherited source properties.
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @alias extend
     * @category Object
     * @param {Object} object The destination object.
     * @param {...Object} [sources] The source objects.
     * @returns {Object} Returns `object`.
     * @see _.assign
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     * }
     *
     * function Bar() {
     *   this.c = 3;
     * }
     *
     * Foo.prototype.b = 2;
     * Bar.prototype.d = 4;
     *
     * _.assignIn({ 'a': 0 }, new Foo, new Bar);
     * // => { 'a': 1, 'b': 2, 'c': 3, 'd': 4 }
     */ var assignIn = createAssigner(function(object, source) {
            copyObject(source, keysIn(source), object);
        });
        /**
     * This method is like `_.assignIn` except that it accepts `customizer`
     * which is invoked to produce the assigned values. If `customizer` returns
     * `undefined`, assignment is handled by the method instead. The `customizer`
     * is invoked with five arguments: (objValue, srcValue, key, object, source).
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @alias extendWith
     * @category Object
     * @param {Object} object The destination object.
     * @param {...Object} sources The source objects.
     * @param {Function} [customizer] The function to customize assigned values.
     * @returns {Object} Returns `object`.
     * @see _.assignWith
     * @example
     *
     * function customizer(objValue, srcValue) {
     *   return _.isUndefined(objValue) ? srcValue : objValue;
     * }
     *
     * var defaults = _.partialRight(_.assignInWith, customizer);
     *
     * defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });
     * // => { 'a': 1, 'b': 2 }
     */ var assignInWith = createAssigner(function(object, source, srcIndex, customizer) {
            copyObject(source, keysIn(source), object, customizer);
        });
        /**
     * This method is like `_.assign` except that it accepts `customizer`
     * which is invoked to produce the assigned values. If `customizer` returns
     * `undefined`, assignment is handled by the method instead. The `customizer`
     * is invoked with five arguments: (objValue, srcValue, key, object, source).
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Object
     * @param {Object} object The destination object.
     * @param {...Object} sources The source objects.
     * @param {Function} [customizer] The function to customize assigned values.
     * @returns {Object} Returns `object`.
     * @see _.assignInWith
     * @example
     *
     * function customizer(objValue, srcValue) {
     *   return _.isUndefined(objValue) ? srcValue : objValue;
     * }
     *
     * var defaults = _.partialRight(_.assignWith, customizer);
     *
     * defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });
     * // => { 'a': 1, 'b': 2 }
     */ var assignWith = createAssigner(function(object, source, srcIndex, customizer) {
            copyObject(source, keys(source), object, customizer);
        });
        /**
     * Creates an array of values corresponding to `paths` of `object`.
     *
     * @static
     * @memberOf _
     * @since 1.0.0
     * @category Object
     * @param {Object} object The object to iterate over.
     * @param {...(string|string[])} [paths] The property paths to pick.
     * @returns {Array} Returns the picked values.
     * @example
     *
     * var object = { 'a': [{ 'b': { 'c': 3 } }, 4] };
     *
     * _.at(object, ['a[0].b.c', 'a[1]']);
     * // => [3, 4]
     */ var at = flatRest(baseAt);
        /**
     * Creates an object that inherits from the `prototype` object. If a
     * `properties` object is given, its own enumerable string keyed properties
     * are assigned to the created object.
     *
     * @static
     * @memberOf _
     * @since 2.3.0
     * @category Object
     * @param {Object} prototype The object to inherit from.
     * @param {Object} [properties] The properties to assign to the object.
     * @returns {Object} Returns the new object.
     * @example
     *
     * function Shape() {
     *   this.x = 0;
     *   this.y = 0;
     * }
     *
     * function Circle() {
     *   Shape.call(this);
     * }
     *
     * Circle.prototype = _.create(Shape.prototype, {
     *   'constructor': Circle
     * });
     *
     * var circle = new Circle;
     * circle instanceof Circle;
     * // => true
     *
     * circle instanceof Shape;
     * // => true
     */ function create(prototype, properties) {
            var result = baseCreate(prototype);
            return properties == null ? result : baseAssign(result, properties);
        }
        /**
     * Assigns own and inherited enumerable string keyed properties of source
     * objects to the destination object for all destination properties that
     * resolve to `undefined`. Source objects are applied from left to right.
     * Once a property is set, additional values of the same property are ignored.
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Object
     * @param {Object} object The destination object.
     * @param {...Object} [sources] The source objects.
     * @returns {Object} Returns `object`.
     * @see _.defaultsDeep
     * @example
     *
     * _.defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });
     * // => { 'a': 1, 'b': 2 }
     */ var defaults = baseRest(function(object, sources) {
            object = Object1(object);
            var index = -1;
            var length = sources.length;
            var guard = length > 2 ? sources[2] : undefined;
            if (guard && isIterateeCall(sources[0], sources[1], guard)) length = 1;
            while(++index < length){
                var source = sources[index];
                var props = keysIn(source);
                var propsIndex = -1;
                var propsLength = props.length;
                while(++propsIndex < propsLength){
                    var key = props[propsIndex];
                    var value = object[key];
                    if (value === undefined || eq(value, objectProto[key]) && !hasOwnProperty.call(object, key)) object[key] = source[key];
                }
            }
            return object;
        });
        /**
     * This method is like `_.defaults` except that it recursively assigns
     * default properties.
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @since 3.10.0
     * @category Object
     * @param {Object} object The destination object.
     * @param {...Object} [sources] The source objects.
     * @returns {Object} Returns `object`.
     * @see _.defaults
     * @example
     *
     * _.defaultsDeep({ 'a': { 'b': 2 } }, { 'a': { 'b': 1, 'c': 3 } });
     * // => { 'a': { 'b': 2, 'c': 3 } }
     */ var defaultsDeep = baseRest(function(args) {
            args.push(undefined, customDefaultsMerge);
            return apply(mergeWith, undefined, args);
        });
        /**
     * This method is like `_.find` except that it returns the key of the first
     * element `predicate` returns truthy for instead of the element itself.
     *
     * @static
     * @memberOf _
     * @since 1.1.0
     * @category Object
     * @param {Object} object The object to inspect.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @returns {string|undefined} Returns the key of the matched element,
     *  else `undefined`.
     * @example
     *
     * var users = {
     *   'barney':  { 'age': 36, 'active': true },
     *   'fred':    { 'age': 40, 'active': false },
     *   'pebbles': { 'age': 1,  'active': true }
     * };
     *
     * _.findKey(users, function(o) { return o.age < 40; });
     * // => 'barney' (iteration order is not guaranteed)
     *
     * // The `_.matches` iteratee shorthand.
     * _.findKey(users, { 'age': 1, 'active': true });
     * // => 'pebbles'
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.findKey(users, ['active', false]);
     * // => 'fred'
     *
     * // The `_.property` iteratee shorthand.
     * _.findKey(users, 'active');
     * // => 'barney'
     */ function findKey(object, predicate) {
            return baseFindKey(object, getIteratee(predicate, 3), baseForOwn);
        }
        /**
     * This method is like `_.findKey` except that it iterates over elements of
     * a collection in the opposite order.
     *
     * @static
     * @memberOf _
     * @since 2.0.0
     * @category Object
     * @param {Object} object The object to inspect.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @returns {string|undefined} Returns the key of the matched element,
     *  else `undefined`.
     * @example
     *
     * var users = {
     *   'barney':  { 'age': 36, 'active': true },
     *   'fred':    { 'age': 40, 'active': false },
     *   'pebbles': { 'age': 1,  'active': true }
     * };
     *
     * _.findLastKey(users, function(o) { return o.age < 40; });
     * // => returns 'pebbles' assuming `_.findKey` returns 'barney'
     *
     * // The `_.matches` iteratee shorthand.
     * _.findLastKey(users, { 'age': 36, 'active': true });
     * // => 'barney'
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.findLastKey(users, ['active', false]);
     * // => 'fred'
     *
     * // The `_.property` iteratee shorthand.
     * _.findLastKey(users, 'active');
     * // => 'pebbles'
     */ function findLastKey(object, predicate) {
            return baseFindKey(object, getIteratee(predicate, 3), baseForOwnRight);
        }
        /**
     * Iterates over own and inherited enumerable string keyed properties of an
     * object and invokes `iteratee` for each property. The iteratee is invoked
     * with three arguments: (value, key, object). Iteratee functions may exit
     * iteration early by explicitly returning `false`.
     *
     * @static
     * @memberOf _
     * @since 0.3.0
     * @category Object
     * @param {Object} object The object to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Object} Returns `object`.
     * @see _.forInRight
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.forIn(new Foo, function(value, key) {
     *   console.log(key);
     * });
     * // => Logs 'a', 'b', then 'c' (iteration order is not guaranteed).
     */ function forIn(object, iteratee) {
            return object == null ? object : baseFor(object, getIteratee(iteratee, 3), keysIn);
        }
        /**
     * This method is like `_.forIn` except that it iterates over properties of
     * `object` in the opposite order.
     *
     * @static
     * @memberOf _
     * @since 2.0.0
     * @category Object
     * @param {Object} object The object to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Object} Returns `object`.
     * @see _.forIn
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.forInRight(new Foo, function(value, key) {
     *   console.log(key);
     * });
     * // => Logs 'c', 'b', then 'a' assuming `_.forIn` logs 'a', 'b', then 'c'.
     */ function forInRight(object, iteratee) {
            return object == null ? object : baseForRight(object, getIteratee(iteratee, 3), keysIn);
        }
        /**
     * Iterates over own enumerable string keyed properties of an object and
     * invokes `iteratee` for each property. The iteratee is invoked with three
     * arguments: (value, key, object). Iteratee functions may exit iteration
     * early by explicitly returning `false`.
     *
     * @static
     * @memberOf _
     * @since 0.3.0
     * @category Object
     * @param {Object} object The object to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Object} Returns `object`.
     * @see _.forOwnRight
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.forOwn(new Foo, function(value, key) {
     *   console.log(key);
     * });
     * // => Logs 'a' then 'b' (iteration order is not guaranteed).
     */ function forOwn(object, iteratee) {
            return object && baseForOwn(object, getIteratee(iteratee, 3));
        }
        /**
     * This method is like `_.forOwn` except that it iterates over properties of
     * `object` in the opposite order.
     *
     * @static
     * @memberOf _
     * @since 2.0.0
     * @category Object
     * @param {Object} object The object to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Object} Returns `object`.
     * @see _.forOwn
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.forOwnRight(new Foo, function(value, key) {
     *   console.log(key);
     * });
     * // => Logs 'b' then 'a' assuming `_.forOwn` logs 'a' then 'b'.
     */ function forOwnRight(object, iteratee) {
            return object && baseForOwnRight(object, getIteratee(iteratee, 3));
        }
        /**
     * Creates an array of function property names from own enumerable properties
     * of `object`.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Object
     * @param {Object} object The object to inspect.
     * @returns {Array} Returns the function names.
     * @see _.functionsIn
     * @example
     *
     * function Foo() {
     *   this.a = _.constant('a');
     *   this.b = _.constant('b');
     * }
     *
     * Foo.prototype.c = _.constant('c');
     *
     * _.functions(new Foo);
     * // => ['a', 'b']
     */ function functions(object) {
            return object == null ? [] : baseFunctions(object, keys(object));
        }
        /**
     * Creates an array of function property names from own and inherited
     * enumerable properties of `object`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Object
     * @param {Object} object The object to inspect.
     * @returns {Array} Returns the function names.
     * @see _.functions
     * @example
     *
     * function Foo() {
     *   this.a = _.constant('a');
     *   this.b = _.constant('b');
     * }
     *
     * Foo.prototype.c = _.constant('c');
     *
     * _.functionsIn(new Foo);
     * // => ['a', 'b', 'c']
     */ function functionsIn(object) {
            return object == null ? [] : baseFunctions(object, keysIn(object));
        }
        /**
     * Gets the value at `path` of `object`. If the resolved value is
     * `undefined`, the `defaultValue` is returned in its place.
     *
     * @static
     * @memberOf _
     * @since 3.7.0
     * @category Object
     * @param {Object} object The object to query.
     * @param {Array|string} path The path of the property to get.
     * @param {*} [defaultValue] The value returned for `undefined` resolved values.
     * @returns {*} Returns the resolved value.
     * @example
     *
     * var object = { 'a': [{ 'b': { 'c': 3 } }] };
     *
     * _.get(object, 'a[0].b.c');
     * // => 3
     *
     * _.get(object, ['a', '0', 'b', 'c']);
     * // => 3
     *
     * _.get(object, 'a.b.c', 'default');
     * // => 'default'
     */ function get(object, path, defaultValue) {
            var result = object == null ? undefined : baseGet(object, path);
            return result === undefined ? defaultValue : result;
        }
        /**
     * Checks if `path` is a direct property of `object`.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Object
     * @param {Object} object The object to query.
     * @param {Array|string} path The path to check.
     * @returns {boolean} Returns `true` if `path` exists, else `false`.
     * @example
     *
     * var object = { 'a': { 'b': 2 } };
     * var other = _.create({ 'a': _.create({ 'b': 2 }) });
     *
     * _.has(object, 'a');
     * // => true
     *
     * _.has(object, 'a.b');
     * // => true
     *
     * _.has(object, ['a', 'b']);
     * // => true
     *
     * _.has(other, 'a');
     * // => false
     */ function has(object, path) {
            return object != null && hasPath(object, path, baseHas);
        }
        /**
     * Checks if `path` is a direct or inherited property of `object`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Object
     * @param {Object} object The object to query.
     * @param {Array|string} path The path to check.
     * @returns {boolean} Returns `true` if `path` exists, else `false`.
     * @example
     *
     * var object = _.create({ 'a': _.create({ 'b': 2 }) });
     *
     * _.hasIn(object, 'a');
     * // => true
     *
     * _.hasIn(object, 'a.b');
     * // => true
     *
     * _.hasIn(object, ['a', 'b']);
     * // => true
     *
     * _.hasIn(object, 'b');
     * // => false
     */ function hasIn(object, path) {
            return object != null && hasPath(object, path, baseHasIn);
        }
        /**
     * Creates an object composed of the inverted keys and values of `object`.
     * If `object` contains duplicate values, subsequent values overwrite
     * property assignments of previous values.
     *
     * @static
     * @memberOf _
     * @since 0.7.0
     * @category Object
     * @param {Object} object The object to invert.
     * @returns {Object} Returns the new inverted object.
     * @example
     *
     * var object = { 'a': 1, 'b': 2, 'c': 1 };
     *
     * _.invert(object);
     * // => { '1': 'c', '2': 'b' }
     */ var invert = createInverter(function(result, value, key) {
            if (value != null && typeof value.toString != "function") value = nativeObjectToString.call(value);
            result[value] = key;
        }, constant(identity));
        /**
     * This method is like `_.invert` except that the inverted object is generated
     * from the results of running each element of `object` thru `iteratee`. The
     * corresponding inverted value of each inverted key is an array of keys
     * responsible for generating the inverted value. The iteratee is invoked
     * with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 4.1.0
     * @category Object
     * @param {Object} object The object to invert.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {Object} Returns the new inverted object.
     * @example
     *
     * var object = { 'a': 1, 'b': 2, 'c': 1 };
     *
     * _.invertBy(object);
     * // => { '1': ['a', 'c'], '2': ['b'] }
     *
     * _.invertBy(object, function(value) {
     *   return 'group' + value;
     * });
     * // => { 'group1': ['a', 'c'], 'group2': ['b'] }
     */ var invertBy = createInverter(function(result, value, key) {
            if (value != null && typeof value.toString != "function") value = nativeObjectToString.call(value);
            if (hasOwnProperty.call(result, value)) result[value].push(key);
            else result[value] = [
                key
            ];
        }, getIteratee);
        /**
     * Invokes the method at `path` of `object`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Object
     * @param {Object} object The object to query.
     * @param {Array|string} path The path of the method to invoke.
     * @param {...*} [args] The arguments to invoke the method with.
     * @returns {*} Returns the result of the invoked method.
     * @example
     *
     * var object = { 'a': [{ 'b': { 'c': [1, 2, 3, 4] } }] };
     *
     * _.invoke(object, 'a[0].b.c.slice', 1, 3);
     * // => [2, 3]
     */ var invoke = baseRest(baseInvoke);
        /**
     * Creates an array of the own enumerable property names of `object`.
     *
     * **Note:** Non-object values are coerced to objects. See the
     * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)
     * for more details.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Object
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of property names.
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.keys(new Foo);
     * // => ['a', 'b'] (iteration order is not guaranteed)
     *
     * _.keys('hi');
     * // => ['0', '1']
     */ function keys(object) {
            return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);
        }
        /**
     * Creates an array of the own and inherited enumerable property names of `object`.
     *
     * **Note:** Non-object values are coerced to objects.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Object
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of property names.
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.keysIn(new Foo);
     * // => ['a', 'b', 'c'] (iteration order is not guaranteed)
     */ function keysIn(object) {
            return isArrayLike(object) ? arrayLikeKeys(object, true) : baseKeysIn(object);
        }
        /**
     * The opposite of `_.mapValues`; this method creates an object with the
     * same values as `object` and keys generated by running each own enumerable
     * string keyed property of `object` thru `iteratee`. The iteratee is invoked
     * with three arguments: (value, key, object).
     *
     * @static
     * @memberOf _
     * @since 3.8.0
     * @category Object
     * @param {Object} object The object to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Object} Returns the new mapped object.
     * @see _.mapValues
     * @example
     *
     * _.mapKeys({ 'a': 1, 'b': 2 }, function(value, key) {
     *   return key + value;
     * });
     * // => { 'a1': 1, 'b2': 2 }
     */ function mapKeys(object, iteratee) {
            var result = {};
            iteratee = getIteratee(iteratee, 3);
            baseForOwn(object, function(value, key, object) {
                baseAssignValue(result, iteratee(value, key, object), value);
            });
            return result;
        }
        /**
     * Creates an object with the same keys as `object` and values generated
     * by running each own enumerable string keyed property of `object` thru
     * `iteratee`. The iteratee is invoked with three arguments:
     * (value, key, object).
     *
     * @static
     * @memberOf _
     * @since 2.4.0
     * @category Object
     * @param {Object} object The object to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Object} Returns the new mapped object.
     * @see _.mapKeys
     * @example
     *
     * var users = {
     *   'fred':    { 'user': 'fred',    'age': 40 },
     *   'pebbles': { 'user': 'pebbles', 'age': 1 }
     * };
     *
     * _.mapValues(users, function(o) { return o.age; });
     * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)
     *
     * // The `_.property` iteratee shorthand.
     * _.mapValues(users, 'age');
     * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)
     */ function mapValues(object, iteratee) {
            var result = {};
            iteratee = getIteratee(iteratee, 3);
            baseForOwn(object, function(value, key, object) {
                baseAssignValue(result, key, iteratee(value, key, object));
            });
            return result;
        }
        /**
     * This method is like `_.assign` except that it recursively merges own and
     * inherited enumerable string keyed properties of source objects into the
     * destination object. Source properties that resolve to `undefined` are
     * skipped if a destination value exists. Array and plain object properties
     * are merged recursively. Other objects and value types are overridden by
     * assignment. Source objects are applied from left to right. Subsequent
     * sources overwrite property assignments of previous sources.
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @since 0.5.0
     * @category Object
     * @param {Object} object The destination object.
     * @param {...Object} [sources] The source objects.
     * @returns {Object} Returns `object`.
     * @example
     *
     * var object = {
     *   'a': [{ 'b': 2 }, { 'd': 4 }]
     * };
     *
     * var other = {
     *   'a': [{ 'c': 3 }, { 'e': 5 }]
     * };
     *
     * _.merge(object, other);
     * // => { 'a': [{ 'b': 2, 'c': 3 }, { 'd': 4, 'e': 5 }] }
     */ var merge = createAssigner(function(object, source, srcIndex) {
            baseMerge(object, source, srcIndex);
        });
        /**
     * This method is like `_.merge` except that it accepts `customizer` which
     * is invoked to produce the merged values of the destination and source
     * properties. If `customizer` returns `undefined`, merging is handled by the
     * method instead. The `customizer` is invoked with six arguments:
     * (objValue, srcValue, key, object, source, stack).
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Object
     * @param {Object} object The destination object.
     * @param {...Object} sources The source objects.
     * @param {Function} customizer The function to customize assigned values.
     * @returns {Object} Returns `object`.
     * @example
     *
     * function customizer(objValue, srcValue) {
     *   if (_.isArray(objValue)) {
     *     return objValue.concat(srcValue);
     *   }
     * }
     *
     * var object = { 'a': [1], 'b': [2] };
     * var other = { 'a': [3], 'b': [4] };
     *
     * _.mergeWith(object, other, customizer);
     * // => { 'a': [1, 3], 'b': [2, 4] }
     */ var mergeWith = createAssigner(function(object, source, srcIndex, customizer) {
            baseMerge(object, source, srcIndex, customizer);
        });
        /**
     * The opposite of `_.pick`; this method creates an object composed of the
     * own and inherited enumerable property paths of `object` that are not omitted.
     *
     * **Note:** This method is considerably slower than `_.pick`.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Object
     * @param {Object} object The source object.
     * @param {...(string|string[])} [paths] The property paths to omit.
     * @returns {Object} Returns the new object.
     * @example
     *
     * var object = { 'a': 1, 'b': '2', 'c': 3 };
     *
     * _.omit(object, ['a', 'c']);
     * // => { 'b': '2' }
     */ var omit = flatRest(function(object, paths) {
            var result = {};
            if (object == null) return result;
            var isDeep = false;
            paths = arrayMap(paths, function(path) {
                path = castPath(path, object);
                isDeep || (isDeep = path.length > 1);
                return path;
            });
            copyObject(object, getAllKeysIn(object), result);
            if (isDeep) result = baseClone(result, CLONE_DEEP_FLAG | CLONE_FLAT_FLAG | CLONE_SYMBOLS_FLAG, customOmitClone);
            var length = paths.length;
            while(length--)baseUnset(result, paths[length]);
            return result;
        });
        /**
     * The opposite of `_.pickBy`; this method creates an object composed of
     * the own and inherited enumerable string keyed properties of `object` that
     * `predicate` doesn't return truthy for. The predicate is invoked with two
     * arguments: (value, key).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Object
     * @param {Object} object The source object.
     * @param {Function} [predicate=_.identity] The function invoked per property.
     * @returns {Object} Returns the new object.
     * @example
     *
     * var object = { 'a': 1, 'b': '2', 'c': 3 };
     *
     * _.omitBy(object, _.isNumber);
     * // => { 'b': '2' }
     */ function omitBy(object, predicate) {
            return pickBy(object, negate(getIteratee(predicate)));
        }
        /**
     * Creates an object composed of the picked `object` properties.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Object
     * @param {Object} object The source object.
     * @param {...(string|string[])} [paths] The property paths to pick.
     * @returns {Object} Returns the new object.
     * @example
     *
     * var object = { 'a': 1, 'b': '2', 'c': 3 };
     *
     * _.pick(object, ['a', 'c']);
     * // => { 'a': 1, 'c': 3 }
     */ var pick = flatRest(function(object, paths) {
            return object == null ? {} : basePick(object, paths);
        });
        /**
     * Creates an object composed of the `object` properties `predicate` returns
     * truthy for. The predicate is invoked with two arguments: (value, key).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Object
     * @param {Object} object The source object.
     * @param {Function} [predicate=_.identity] The function invoked per property.
     * @returns {Object} Returns the new object.
     * @example
     *
     * var object = { 'a': 1, 'b': '2', 'c': 3 };
     *
     * _.pickBy(object, _.isNumber);
     * // => { 'a': 1, 'c': 3 }
     */ function pickBy(object, predicate) {
            if (object == null) return {};
            var props = arrayMap(getAllKeysIn(object), function(prop) {
                return [
                    prop
                ];
            });
            predicate = getIteratee(predicate);
            return basePickBy(object, props, function(value, path) {
                return predicate(value, path[0]);
            });
        }
        /**
     * This method is like `_.get` except that if the resolved value is a
     * function it's invoked with the `this` binding of its parent object and
     * its result is returned.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Object
     * @param {Object} object The object to query.
     * @param {Array|string} path The path of the property to resolve.
     * @param {*} [defaultValue] The value returned for `undefined` resolved values.
     * @returns {*} Returns the resolved value.
     * @example
     *
     * var object = { 'a': [{ 'b': { 'c1': 3, 'c2': _.constant(4) } }] };
     *
     * _.result(object, 'a[0].b.c1');
     * // => 3
     *
     * _.result(object, 'a[0].b.c2');
     * // => 4
     *
     * _.result(object, 'a[0].b.c3', 'default');
     * // => 'default'
     *
     * _.result(object, 'a[0].b.c3', _.constant('default'));
     * // => 'default'
     */ function result(object, path, defaultValue) {
            path = castPath(path, object);
            var index = -1, length = path.length;
            // Ensure the loop is entered when path is empty.
            if (!length) {
                length = 1;
                object = undefined;
            }
            while(++index < length){
                var value = object == null ? undefined : object[toKey(path[index])];
                if (value === undefined) {
                    index = length;
                    value = defaultValue;
                }
                object = isFunction(value) ? value.call(object) : value;
            }
            return object;
        }
        /**
     * Sets the value at `path` of `object`. If a portion of `path` doesn't exist,
     * it's created. Arrays are created for missing index properties while objects
     * are created for all other missing properties. Use `_.setWith` to customize
     * `path` creation.
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @since 3.7.0
     * @category Object
     * @param {Object} object The object to modify.
     * @param {Array|string} path The path of the property to set.
     * @param {*} value The value to set.
     * @returns {Object} Returns `object`.
     * @example
     *
     * var object = { 'a': [{ 'b': { 'c': 3 } }] };
     *
     * _.set(object, 'a[0].b.c', 4);
     * console.log(object.a[0].b.c);
     * // => 4
     *
     * _.set(object, ['x', '0', 'y', 'z'], 5);
     * console.log(object.x[0].y.z);
     * // => 5
     */ function set(object, path, value) {
            return object == null ? object : baseSet(object, path, value);
        }
        /**
     * This method is like `_.set` except that it accepts `customizer` which is
     * invoked to produce the objects of `path`.  If `customizer` returns `undefined`
     * path creation is handled by the method instead. The `customizer` is invoked
     * with three arguments: (nsValue, key, nsObject).
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Object
     * @param {Object} object The object to modify.
     * @param {Array|string} path The path of the property to set.
     * @param {*} value The value to set.
     * @param {Function} [customizer] The function to customize assigned values.
     * @returns {Object} Returns `object`.
     * @example
     *
     * var object = {};
     *
     * _.setWith(object, '[0][1]', 'a', Object);
     * // => { '0': { '1': 'a' } }
     */ function setWith(object, path, value, customizer) {
            customizer = typeof customizer == "function" ? customizer : undefined;
            return object == null ? object : baseSet(object, path, value, customizer);
        }
        /**
     * Creates an array of own enumerable string keyed-value pairs for `object`
     * which can be consumed by `_.fromPairs`. If `object` is a map or set, its
     * entries are returned.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @alias entries
     * @category Object
     * @param {Object} object The object to query.
     * @returns {Array} Returns the key-value pairs.
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.toPairs(new Foo);
     * // => [['a', 1], ['b', 2]] (iteration order is not guaranteed)
     */ var toPairs = createToPairs(keys);
        /**
     * Creates an array of own and inherited enumerable string keyed-value pairs
     * for `object` which can be consumed by `_.fromPairs`. If `object` is a map
     * or set, its entries are returned.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @alias entriesIn
     * @category Object
     * @param {Object} object The object to query.
     * @returns {Array} Returns the key-value pairs.
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.toPairsIn(new Foo);
     * // => [['a', 1], ['b', 2], ['c', 3]] (iteration order is not guaranteed)
     */ var toPairsIn = createToPairs(keysIn);
        /**
     * An alternative to `_.reduce`; this method transforms `object` to a new
     * `accumulator` object which is the result of running each of its own
     * enumerable string keyed properties thru `iteratee`, with each invocation
     * potentially mutating the `accumulator` object. If `accumulator` is not
     * provided, a new object with the same `[[Prototype]]` will be used. The
     * iteratee is invoked with four arguments: (accumulator, value, key, object).
     * Iteratee functions may exit iteration early by explicitly returning `false`.
     *
     * @static
     * @memberOf _
     * @since 1.3.0
     * @category Object
     * @param {Object} object The object to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @param {*} [accumulator] The custom accumulator value.
     * @returns {*} Returns the accumulated value.
     * @example
     *
     * _.transform([2, 3, 4], function(result, n) {
     *   result.push(n *= n);
     *   return n % 2 == 0;
     * }, []);
     * // => [4, 9]
     *
     * _.transform({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {
     *   (result[value] || (result[value] = [])).push(key);
     * }, {});
     * // => { '1': ['a', 'c'], '2': ['b'] }
     */ function transform(object, iteratee, accumulator) {
            var isArr = isArray(object), isArrLike = isArr || isBuffer(object) || isTypedArray(object);
            iteratee = getIteratee(iteratee, 4);
            if (accumulator == null) {
                var Ctor = object && object.constructor;
                if (isArrLike) accumulator = isArr ? new Ctor : [];
                else if (isObject(object)) accumulator = isFunction(Ctor) ? baseCreate(getPrototype(object)) : {};
                else accumulator = {};
            }
            (isArrLike ? arrayEach : baseForOwn)(object, function(value, index, object) {
                return iteratee(accumulator, value, index, object);
            });
            return accumulator;
        }
        /**
     * Removes the property at `path` of `object`.
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Object
     * @param {Object} object The object to modify.
     * @param {Array|string} path The path of the property to unset.
     * @returns {boolean} Returns `true` if the property is deleted, else `false`.
     * @example
     *
     * var object = { 'a': [{ 'b': { 'c': 7 } }] };
     * _.unset(object, 'a[0].b.c');
     * // => true
     *
     * console.log(object);
     * // => { 'a': [{ 'b': {} }] };
     *
     * _.unset(object, ['a', '0', 'b', 'c']);
     * // => true
     *
     * console.log(object);
     * // => { 'a': [{ 'b': {} }] };
     */ function unset(object, path) {
            return object == null ? true : baseUnset(object, path);
        }
        /**
     * This method is like `_.set` except that accepts `updater` to produce the
     * value to set. Use `_.updateWith` to customize `path` creation. The `updater`
     * is invoked with one argument: (value).
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @since 4.6.0
     * @category Object
     * @param {Object} object The object to modify.
     * @param {Array|string} path The path of the property to set.
     * @param {Function} updater The function to produce the updated value.
     * @returns {Object} Returns `object`.
     * @example
     *
     * var object = { 'a': [{ 'b': { 'c': 3 } }] };
     *
     * _.update(object, 'a[0].b.c', function(n) { return n * n; });
     * console.log(object.a[0].b.c);
     * // => 9
     *
     * _.update(object, 'x[0].y.z', function(n) { return n ? n + 1 : 0; });
     * console.log(object.x[0].y.z);
     * // => 0
     */ function update(object, path, updater) {
            return object == null ? object : baseUpdate(object, path, castFunction(updater));
        }
        /**
     * This method is like `_.update` except that it accepts `customizer` which is
     * invoked to produce the objects of `path`.  If `customizer` returns `undefined`
     * path creation is handled by the method instead. The `customizer` is invoked
     * with three arguments: (nsValue, key, nsObject).
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @since 4.6.0
     * @category Object
     * @param {Object} object The object to modify.
     * @param {Array|string} path The path of the property to set.
     * @param {Function} updater The function to produce the updated value.
     * @param {Function} [customizer] The function to customize assigned values.
     * @returns {Object} Returns `object`.
     * @example
     *
     * var object = {};
     *
     * _.updateWith(object, '[0][1]', _.constant('a'), Object);
     * // => { '0': { '1': 'a' } }
     */ function updateWith(object, path, updater, customizer) {
            customizer = typeof customizer == "function" ? customizer : undefined;
            return object == null ? object : baseUpdate(object, path, castFunction(updater), customizer);
        }
        /**
     * Creates an array of the own enumerable string keyed property values of `object`.
     *
     * **Note:** Non-object values are coerced to objects.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Object
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of property values.
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.values(new Foo);
     * // => [1, 2] (iteration order is not guaranteed)
     *
     * _.values('hi');
     * // => ['h', 'i']
     */ function values(object) {
            return object == null ? [] : baseValues(object, keys(object));
        }
        /**
     * Creates an array of the own and inherited enumerable string keyed property
     * values of `object`.
     *
     * **Note:** Non-object values are coerced to objects.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Object
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of property values.
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.valuesIn(new Foo);
     * // => [1, 2, 3] (iteration order is not guaranteed)
     */ function valuesIn(object) {
            return object == null ? [] : baseValues(object, keysIn(object));
        }
        /*------------------------------------------------------------------------*/ /**
     * Clamps `number` within the inclusive `lower` and `upper` bounds.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Number
     * @param {number} number The number to clamp.
     * @param {number} [lower] The lower bound.
     * @param {number} upper The upper bound.
     * @returns {number} Returns the clamped number.
     * @example
     *
     * _.clamp(-10, -5, 5);
     * // => -5
     *
     * _.clamp(10, -5, 5);
     * // => 5
     */ function clamp(number, lower, upper) {
            if (upper === undefined) {
                upper = lower;
                lower = undefined;
            }
            if (upper !== undefined) {
                upper = toNumber(upper);
                upper = upper === upper ? upper : 0;
            }
            if (lower !== undefined) {
                lower = toNumber(lower);
                lower = lower === lower ? lower : 0;
            }
            return baseClamp(toNumber(number), lower, upper);
        }
        /**
     * Checks if `n` is between `start` and up to, but not including, `end`. If
     * `end` is not specified, it's set to `start` with `start` then set to `0`.
     * If `start` is greater than `end` the params are swapped to support
     * negative ranges.
     *
     * @static
     * @memberOf _
     * @since 3.3.0
     * @category Number
     * @param {number} number The number to check.
     * @param {number} [start=0] The start of the range.
     * @param {number} end The end of the range.
     * @returns {boolean} Returns `true` if `number` is in the range, else `false`.
     * @see _.range, _.rangeRight
     * @example
     *
     * _.inRange(3, 2, 4);
     * // => true
     *
     * _.inRange(4, 8);
     * // => true
     *
     * _.inRange(4, 2);
     * // => false
     *
     * _.inRange(2, 2);
     * // => false
     *
     * _.inRange(1.2, 2);
     * // => true
     *
     * _.inRange(5.2, 4);
     * // => false
     *
     * _.inRange(-3, -2, -6);
     * // => true
     */ function inRange(number, start, end) {
            start = toFinite(start);
            if (end === undefined) {
                end = start;
                start = 0;
            } else end = toFinite(end);
            number = toNumber(number);
            return baseInRange(number, start, end);
        }
        /**
     * Produces a random number between the inclusive `lower` and `upper` bounds.
     * If only one argument is provided a number between `0` and the given number
     * is returned. If `floating` is `true`, or either `lower` or `upper` are
     * floats, a floating-point number is returned instead of an integer.
     *
     * **Note:** JavaScript follows the IEEE-754 standard for resolving
     * floating-point values which can produce unexpected results.
     *
     * @static
     * @memberOf _
     * @since 0.7.0
     * @category Number
     * @param {number} [lower=0] The lower bound.
     * @param {number} [upper=1] The upper bound.
     * @param {boolean} [floating] Specify returning a floating-point number.
     * @returns {number} Returns the random number.
     * @example
     *
     * _.random(0, 5);
     * // => an integer between 0 and 5
     *
     * _.random(5);
     * // => also an integer between 0 and 5
     *
     * _.random(5, true);
     * // => a floating-point number between 0 and 5
     *
     * _.random(1.2, 5.2);
     * // => a floating-point number between 1.2 and 5.2
     */ function random(lower, upper, floating) {
            if (floating && typeof floating != "boolean" && isIterateeCall(lower, upper, floating)) upper = floating = undefined;
            if (floating === undefined) {
                if (typeof upper == "boolean") {
                    floating = upper;
                    upper = undefined;
                } else if (typeof lower == "boolean") {
                    floating = lower;
                    lower = undefined;
                }
            }
            if (lower === undefined && upper === undefined) {
                lower = 0;
                upper = 1;
            } else {
                lower = toFinite(lower);
                if (upper === undefined) {
                    upper = lower;
                    lower = 0;
                } else upper = toFinite(upper);
            }
            if (lower > upper) {
                var temp = lower;
                lower = upper;
                upper = temp;
            }
            if (floating || lower % 1 || upper % 1) {
                var rand = nativeRandom();
                return nativeMin(lower + rand * (upper - lower + freeParseFloat("1e-" + ((rand + "").length - 1))), upper);
            }
            return baseRandom(lower, upper);
        }
        /*------------------------------------------------------------------------*/ /**
     * Converts `string` to [camel case](https://en.wikipedia.org/wiki/CamelCase).
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to convert.
     * @returns {string} Returns the camel cased string.
     * @example
     *
     * _.camelCase('Foo Bar');
     * // => 'fooBar'
     *
     * _.camelCase('--foo-bar--');
     * // => 'fooBar'
     *
     * _.camelCase('__FOO_BAR__');
     * // => 'fooBar'
     */ var camelCase = createCompounder(function(result, word, index) {
            word = word.toLowerCase();
            return result + (index ? capitalize(word) : word);
        });
        /**
     * Converts the first character of `string` to upper case and the remaining
     * to lower case.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to capitalize.
     * @returns {string} Returns the capitalized string.
     * @example
     *
     * _.capitalize('FRED');
     * // => 'Fred'
     */ function capitalize(string) {
            return upperFirst(toString(string).toLowerCase());
        }
        /**
     * Deburrs `string` by converting
     * [Latin-1 Supplement](https://en.wikipedia.org/wiki/Latin-1_Supplement_(Unicode_block)#Character_table)
     * and [Latin Extended-A](https://en.wikipedia.org/wiki/Latin_Extended-A)
     * letters to basic Latin letters and removing
     * [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks).
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to deburr.
     * @returns {string} Returns the deburred string.
     * @example
     *
     * _.deburr('déjà vu');
     * // => 'deja vu'
     */ function deburr(string) {
            string = toString(string);
            return string && string.replace(reLatin, deburrLetter).replace(reComboMark, "");
        }
        /**
     * Checks if `string` ends with the given target string.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to inspect.
     * @param {string} [target] The string to search for.
     * @param {number} [position=string.length] The position to search up to.
     * @returns {boolean} Returns `true` if `string` ends with `target`,
     *  else `false`.
     * @example
     *
     * _.endsWith('abc', 'c');
     * // => true
     *
     * _.endsWith('abc', 'b');
     * // => false
     *
     * _.endsWith('abc', 'b', 2);
     * // => true
     */ function endsWith(string, target, position) {
            string = toString(string);
            target = baseToString(target);
            var length = string.length;
            position = position === undefined ? length : baseClamp(toInteger(position), 0, length);
            var end = position;
            position -= target.length;
            return position >= 0 && string.slice(position, end) == target;
        }
        /**
     * Converts the characters "&", "<", ">", '"', and "'" in `string` to their
     * corresponding HTML entities.
     *
     * **Note:** No other characters are escaped. To escape additional
     * characters use a third-party library like [_he_](https://mths.be/he).
     *
     * Though the ">" character is escaped for symmetry, characters like
     * ">" and "/" don't need escaping in HTML and have no special meaning
     * unless they're part of a tag or unquoted attribute value. See
     * [Mathias Bynens's article](https://mathiasbynens.be/notes/ambiguous-ampersands)
     * (under "semi-related fun fact") for more details.
     *
     * When working with HTML you should always
     * [quote attribute values](http://wonko.com/post/html-escaping) to reduce
     * XSS vectors.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category String
     * @param {string} [string=''] The string to escape.
     * @returns {string} Returns the escaped string.
     * @example
     *
     * _.escape('fred, barney, & pebbles');
     * // => 'fred, barney, &amp; pebbles'
     */ function escape(string) {
            string = toString(string);
            return string && reHasUnescapedHtml.test(string) ? string.replace(reUnescapedHtml, escapeHtmlChar) : string;
        }
        /**
     * Escapes the `RegExp` special characters "^", "$", "\", ".", "*", "+",
     * "?", "(", ")", "[", "]", "{", "}", and "|" in `string`.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to escape.
     * @returns {string} Returns the escaped string.
     * @example
     *
     * _.escapeRegExp('[lodash](https://lodash.com/)');
     * // => '\[lodash\]\(https://lodash\.com/\)'
     */ function escapeRegExp(string) {
            string = toString(string);
            return string && reHasRegExpChar.test(string) ? string.replace(reRegExpChar, "\\$&") : string;
        }
        /**
     * Converts `string` to
     * [kebab case](https://en.wikipedia.org/wiki/Letter_case#Special_case_styles).
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to convert.
     * @returns {string} Returns the kebab cased string.
     * @example
     *
     * _.kebabCase('Foo Bar');
     * // => 'foo-bar'
     *
     * _.kebabCase('fooBar');
     * // => 'foo-bar'
     *
     * _.kebabCase('__FOO_BAR__');
     * // => 'foo-bar'
     */ var kebabCase = createCompounder(function(result, word, index) {
            return result + (index ? "-" : "") + word.toLowerCase();
        });
        /**
     * Converts `string`, as space separated words, to lower case.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to convert.
     * @returns {string} Returns the lower cased string.
     * @example
     *
     * _.lowerCase('--Foo-Bar--');
     * // => 'foo bar'
     *
     * _.lowerCase('fooBar');
     * // => 'foo bar'
     *
     * _.lowerCase('__FOO_BAR__');
     * // => 'foo bar'
     */ var lowerCase = createCompounder(function(result, word, index) {
            return result + (index ? " " : "") + word.toLowerCase();
        });
        /**
     * Converts the first character of `string` to lower case.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to convert.
     * @returns {string} Returns the converted string.
     * @example
     *
     * _.lowerFirst('Fred');
     * // => 'fred'
     *
     * _.lowerFirst('FRED');
     * // => 'fRED'
     */ var lowerFirst = createCaseFirst("toLowerCase");
        /**
     * Pads `string` on the left and right sides if it's shorter than `length`.
     * Padding characters are truncated if they can't be evenly divided by `length`.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to pad.
     * @param {number} [length=0] The padding length.
     * @param {string} [chars=' '] The string used as padding.
     * @returns {string} Returns the padded string.
     * @example
     *
     * _.pad('abc', 8);
     * // => '  abc   '
     *
     * _.pad('abc', 8, '_-');
     * // => '_-abc_-_'
     *
     * _.pad('abc', 3);
     * // => 'abc'
     */ function pad(string, length, chars) {
            string = toString(string);
            length = toInteger(length);
            var strLength = length ? stringSize(string) : 0;
            if (!length || strLength >= length) return string;
            var mid = (length - strLength) / 2;
            return createPadding(nativeFloor(mid), chars) + string + createPadding(nativeCeil(mid), chars);
        }
        /**
     * Pads `string` on the right side if it's shorter than `length`. Padding
     * characters are truncated if they exceed `length`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to pad.
     * @param {number} [length=0] The padding length.
     * @param {string} [chars=' '] The string used as padding.
     * @returns {string} Returns the padded string.
     * @example
     *
     * _.padEnd('abc', 6);
     * // => 'abc   '
     *
     * _.padEnd('abc', 6, '_-');
     * // => 'abc_-_'
     *
     * _.padEnd('abc', 3);
     * // => 'abc'
     */ function padEnd(string, length, chars) {
            string = toString(string);
            length = toInteger(length);
            var strLength = length ? stringSize(string) : 0;
            return length && strLength < length ? string + createPadding(length - strLength, chars) : string;
        }
        /**
     * Pads `string` on the left side if it's shorter than `length`. Padding
     * characters are truncated if they exceed `length`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to pad.
     * @param {number} [length=0] The padding length.
     * @param {string} [chars=' '] The string used as padding.
     * @returns {string} Returns the padded string.
     * @example
     *
     * _.padStart('abc', 6);
     * // => '   abc'
     *
     * _.padStart('abc', 6, '_-');
     * // => '_-_abc'
     *
     * _.padStart('abc', 3);
     * // => 'abc'
     */ function padStart(string, length, chars) {
            string = toString(string);
            length = toInteger(length);
            var strLength = length ? stringSize(string) : 0;
            return length && strLength < length ? createPadding(length - strLength, chars) + string : string;
        }
        /**
     * Converts `string` to an integer of the specified radix. If `radix` is
     * `undefined` or `0`, a `radix` of `10` is used unless `value` is a
     * hexadecimal, in which case a `radix` of `16` is used.
     *
     * **Note:** This method aligns with the
     * [ES5 implementation](https://es5.github.io/#x15.1.2.2) of `parseInt`.
     *
     * @static
     * @memberOf _
     * @since 1.1.0
     * @category String
     * @param {string} string The string to convert.
     * @param {number} [radix=10] The radix to interpret `value` by.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {number} Returns the converted integer.
     * @example
     *
     * _.parseInt('08');
     * // => 8
     *
     * _.map(['6', '08', '10'], _.parseInt);
     * // => [6, 8, 10]
     */ function parseInt1(string, radix, guard) {
            if (guard || radix == null) radix = 0;
            else if (radix) radix = +radix;
            return nativeParseInt(toString(string).replace(reTrimStart, ""), radix || 0);
        }
        /**
     * Repeats the given string `n` times.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to repeat.
     * @param {number} [n=1] The number of times to repeat the string.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {string} Returns the repeated string.
     * @example
     *
     * _.repeat('*', 3);
     * // => '***'
     *
     * _.repeat('abc', 2);
     * // => 'abcabc'
     *
     * _.repeat('abc', 0);
     * // => ''
     */ function repeat(string, n, guard) {
            if (guard ? isIterateeCall(string, n, guard) : n === undefined) n = 1;
            else n = toInteger(n);
            return baseRepeat(toString(string), n);
        }
        /**
     * Replaces matches for `pattern` in `string` with `replacement`.
     *
     * **Note:** This method is based on
     * [`String#replace`](https://mdn.io/String/replace).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to modify.
     * @param {RegExp|string} pattern The pattern to replace.
     * @param {Function|string} replacement The match replacement.
     * @returns {string} Returns the modified string.
     * @example
     *
     * _.replace('Hi Fred', 'Fred', 'Barney');
     * // => 'Hi Barney'
     */ function replace() {
            var args = arguments, string = toString(args[0]);
            return args.length < 3 ? string : string.replace(args[1], args[2]);
        }
        /**
     * Converts `string` to
     * [snake case](https://en.wikipedia.org/wiki/Snake_case).
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to convert.
     * @returns {string} Returns the snake cased string.
     * @example
     *
     * _.snakeCase('Foo Bar');
     * // => 'foo_bar'
     *
     * _.snakeCase('fooBar');
     * // => 'foo_bar'
     *
     * _.snakeCase('--FOO-BAR--');
     * // => 'foo_bar'
     */ var snakeCase = createCompounder(function(result, word, index) {
            return result + (index ? "_" : "") + word.toLowerCase();
        });
        /**
     * Splits `string` by `separator`.
     *
     * **Note:** This method is based on
     * [`String#split`](https://mdn.io/String/split).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to split.
     * @param {RegExp|string} separator The separator pattern to split by.
     * @param {number} [limit] The length to truncate results to.
     * @returns {Array} Returns the string segments.
     * @example
     *
     * _.split('a-b-c', '-', 2);
     * // => ['a', 'b']
     */ function split(string, separator, limit) {
            if (limit && typeof limit != "number" && isIterateeCall(string, separator, limit)) separator = limit = undefined;
            limit = limit === undefined ? MAX_ARRAY_LENGTH : limit >>> 0;
            if (!limit) return [];
            string = toString(string);
            if (string && (typeof separator == "string" || separator != null && !isRegExp(separator))) {
                separator = baseToString(separator);
                if (!separator && hasUnicode(string)) return castSlice(stringToArray(string), 0, limit);
            }
            return string.split(separator, limit);
        }
        /**
     * Converts `string` to
     * [start case](https://en.wikipedia.org/wiki/Letter_case#Stylistic_or_specialised_usage).
     *
     * @static
     * @memberOf _
     * @since 3.1.0
     * @category String
     * @param {string} [string=''] The string to convert.
     * @returns {string} Returns the start cased string.
     * @example
     *
     * _.startCase('--foo-bar--');
     * // => 'Foo Bar'
     *
     * _.startCase('fooBar');
     * // => 'Foo Bar'
     *
     * _.startCase('__FOO_BAR__');
     * // => 'FOO BAR'
     */ var startCase = createCompounder(function(result, word, index) {
            return result + (index ? " " : "") + upperFirst(word);
        });
        /**
     * Checks if `string` starts with the given target string.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to inspect.
     * @param {string} [target] The string to search for.
     * @param {number} [position=0] The position to search from.
     * @returns {boolean} Returns `true` if `string` starts with `target`,
     *  else `false`.
     * @example
     *
     * _.startsWith('abc', 'a');
     * // => true
     *
     * _.startsWith('abc', 'b');
     * // => false
     *
     * _.startsWith('abc', 'b', 1);
     * // => true
     */ function startsWith(string, target, position) {
            string = toString(string);
            position = position == null ? 0 : baseClamp(toInteger(position), 0, string.length);
            target = baseToString(target);
            return string.slice(position, position + target.length) == target;
        }
        /**
     * Creates a compiled template function that can interpolate data properties
     * in "interpolate" delimiters, HTML-escape interpolated data properties in
     * "escape" delimiters, and execute JavaScript in "evaluate" delimiters. Data
     * properties may be accessed as free variables in the template. If a setting
     * object is given, it takes precedence over `_.templateSettings` values.
     *
     * **Note:** In the development build `_.template` utilizes
     * [sourceURLs](http://www.html5rocks.com/en/tutorials/developertools/sourcemaps/#toc-sourceurl)
     * for easier debugging.
     *
     * For more information on precompiling templates see
     * [lodash's custom builds documentation](https://lodash.com/custom-builds).
     *
     * For more information on Chrome extension sandboxes see
     * [Chrome's extensions documentation](https://developer.chrome.com/extensions/sandboxingEval).
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category String
     * @param {string} [string=''] The template string.
     * @param {Object} [options={}] The options object.
     * @param {RegExp} [options.escape=_.templateSettings.escape]
     *  The HTML "escape" delimiter.
     * @param {RegExp} [options.evaluate=_.templateSettings.evaluate]
     *  The "evaluate" delimiter.
     * @param {Object} [options.imports=_.templateSettings.imports]
     *  An object to import into the template as free variables.
     * @param {RegExp} [options.interpolate=_.templateSettings.interpolate]
     *  The "interpolate" delimiter.
     * @param {string} [options.sourceURL='lodash.templateSources[n]']
     *  The sourceURL of the compiled template.
     * @param {string} [options.variable='obj']
     *  The data object variable name.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {Function} Returns the compiled template function.
     * @example
     *
     * // Use the "interpolate" delimiter to create a compiled template.
     * var compiled = _.template('hello <%= user %>!');
     * compiled({ 'user': 'fred' });
     * // => 'hello fred!'
     *
     * // Use the HTML "escape" delimiter to escape data property values.
     * var compiled = _.template('<b><%- value %></b>');
     * compiled({ 'value': '<script>' });
     * // => '<b>&lt;script&gt;</b>'
     *
     * // Use the "evaluate" delimiter to execute JavaScript and generate HTML.
     * var compiled = _.template('<% _.forEach(users, function(user) { %><li><%- user %></li><% }); %>');
     * compiled({ 'users': ['fred', 'barney'] });
     * // => '<li>fred</li><li>barney</li>'
     *
     * // Use the internal `print` function in "evaluate" delimiters.
     * var compiled = _.template('<% print("hello " + user); %>!');
     * compiled({ 'user': 'barney' });
     * // => 'hello barney!'
     *
     * // Use the ES template literal delimiter as an "interpolate" delimiter.
     * // Disable support by replacing the "interpolate" delimiter.
     * var compiled = _.template('hello ${ user }!');
     * compiled({ 'user': 'pebbles' });
     * // => 'hello pebbles!'
     *
     * // Use backslashes to treat delimiters as plain text.
     * var compiled = _.template('<%= "\\<%- value %\\>" %>');
     * compiled({ 'value': 'ignored' });
     * // => '<%- value %>'
     *
     * // Use the `imports` option to import `jQuery` as `jq`.
     * var text = '<% jq.each(users, function(user) { %><li><%- user %></li><% }); %>';
     * var compiled = _.template(text, { 'imports': { 'jq': jQuery } });
     * compiled({ 'users': ['fred', 'barney'] });
     * // => '<li>fred</li><li>barney</li>'
     *
     * // Use the `sourceURL` option to specify a custom sourceURL for the template.
     * var compiled = _.template('hello <%= user %>!', { 'sourceURL': '/basic/greeting.jst' });
     * compiled(data);
     * // => Find the source of "greeting.jst" under the Sources tab or Resources panel of the web inspector.
     *
     * // Use the `variable` option to ensure a with-statement isn't used in the compiled template.
     * var compiled = _.template('hi <%= data.user %>!', { 'variable': 'data' });
     * compiled.source;
     * // => function(data) {
     * //   var __t, __p = '';
     * //   __p += 'hi ' + ((__t = ( data.user )) == null ? '' : __t) + '!';
     * //   return __p;
     * // }
     *
     * // Use custom template delimiters.
     * _.templateSettings.interpolate = /{{([\s\S]+?)}}/g;
     * var compiled = _.template('hello {{ user }}!');
     * compiled({ 'user': 'mustache' });
     * // => 'hello mustache!'
     *
     * // Use the `source` property to inline compiled templates for meaningful
     * // line numbers in error messages and stack traces.
     * fs.writeFileSync(path.join(process.cwd(), 'jst.js'), '\
     *   var JST = {\
     *     "main": ' + _.template(mainText).source + '\
     *   };\
     * ');
     */ function template(string, options, guard) {
            // Based on John Resig's `tmpl` implementation
            // (http://ejohn.org/blog/javascript-micro-templating/)
            // and Laura Doktorova's doT.js (https://github.com/olado/doT).
            var settings = lodash.templateSettings;
            if (guard && isIterateeCall(string, options, guard)) options = undefined;
            string = toString(string);
            options = assignInWith({}, options, settings, customDefaultsAssignIn);
            var imports = assignInWith({}, options.imports, settings.imports, customDefaultsAssignIn), importsKeys = keys(imports), importsValues = baseValues(imports, importsKeys);
            var isEscaping, isEvaluating, index = 0, interpolate = options.interpolate || reNoMatch, source = "__p += '";
            // Compile the regexp to match each delimiter.
            var reDelimiters = RegExp1((options.escape || reNoMatch).source + "|" + interpolate.source + "|" + (interpolate === reInterpolate ? reEsTemplate : reNoMatch).source + "|" + (options.evaluate || reNoMatch).source + "|$", "g");
            // Use a sourceURL for easier debugging.
            // The sourceURL gets injected into the source that's eval-ed, so be careful
            // to normalize all kinds of whitespace, so e.g. newlines (and unicode versions of it) can't sneak in
            // and escape the comment, thus injecting code that gets evaled.
            var sourceURL = "//# sourceURL=" + (hasOwnProperty.call(options, "sourceURL") ? (options.sourceURL + "").replace(/\s/g, " ") : "lodash.templateSources[" + ++templateCounter + "]") + "\n";
            string.replace(reDelimiters, function(match, escapeValue, interpolateValue, esTemplateValue, evaluateValue, offset) {
                interpolateValue || (interpolateValue = esTemplateValue);
                // Escape characters that can't be included in string literals.
                source += string.slice(index, offset).replace(reUnescapedString, escapeStringChar);
                // Replace delimiters with snippets.
                if (escapeValue) {
                    isEscaping = true;
                    source += "' +\n__e(" + escapeValue + ") +\n'";
                }
                if (evaluateValue) {
                    isEvaluating = true;
                    source += "';\n" + evaluateValue + ";\n__p += '";
                }
                if (interpolateValue) source += "' +\n((__t = (" + interpolateValue + ")) == null ? '' : __t) +\n'";
                index = offset + match.length;
                // The JS engine embedded in Adobe products needs `match` returned in
                // order to produce the correct `offset` value.
                return match;
            });
            source += "';\n";
            // If `variable` is not specified wrap a with-statement around the generated
            // code to add the data object to the top of the scope chain.
            var variable = hasOwnProperty.call(options, "variable") && options.variable;
            if (!variable) source = "with (obj) {\n" + source + "\n}\n";
            else if (reForbiddenIdentifierChars.test(variable)) throw new Error(INVALID_TEMPL_VAR_ERROR_TEXT);
            // Cleanup code by stripping empty strings.
            source = (isEvaluating ? source.replace(reEmptyStringLeading, "") : source).replace(reEmptyStringMiddle, "$1").replace(reEmptyStringTrailing, "$1;");
            // Frame code as the function body.
            source = "function(" + (variable || "obj") + ") {\n" + (variable ? "" : "obj || (obj = {});\n") + "var __t, __p = ''" + (isEscaping ? ", __e = _.escape" : "") + (isEvaluating ? ", __j = Array.prototype.join;\nfunction print() { __p += __j.call(arguments, '') }\n" : ";\n") + source + "return __p\n}";
            var result = attempt(function() {
                return Function1(importsKeys, sourceURL + "return " + source).apply(undefined, importsValues);
            });
            // Provide the compiled function's source by its `toString` method or
            // the `source` property as a convenience for inlining compiled templates.
            result.source = source;
            if (isError(result)) throw result;
            return result;
        }
        /**
     * Converts `string`, as a whole, to lower case just like
     * [String#toLowerCase](https://mdn.io/toLowerCase).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to convert.
     * @returns {string} Returns the lower cased string.
     * @example
     *
     * _.toLower('--Foo-Bar--');
     * // => '--foo-bar--'
     *
     * _.toLower('fooBar');
     * // => 'foobar'
     *
     * _.toLower('__FOO_BAR__');
     * // => '__foo_bar__'
     */ function toLower(value) {
            return toString(value).toLowerCase();
        }
        /**
     * Converts `string`, as a whole, to upper case just like
     * [String#toUpperCase](https://mdn.io/toUpperCase).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to convert.
     * @returns {string} Returns the upper cased string.
     * @example
     *
     * _.toUpper('--foo-bar--');
     * // => '--FOO-BAR--'
     *
     * _.toUpper('fooBar');
     * // => 'FOOBAR'
     *
     * _.toUpper('__foo_bar__');
     * // => '__FOO_BAR__'
     */ function toUpper(value) {
            return toString(value).toUpperCase();
        }
        /**
     * Removes leading and trailing whitespace or specified characters from `string`.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to trim.
     * @param {string} [chars=whitespace] The characters to trim.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {string} Returns the trimmed string.
     * @example
     *
     * _.trim('  abc  ');
     * // => 'abc'
     *
     * _.trim('-_-abc-_-', '_-');
     * // => 'abc'
     *
     * _.map(['  foo  ', '  bar  '], _.trim);
     * // => ['foo', 'bar']
     */ function trim(string, chars, guard) {
            string = toString(string);
            if (string && (guard || chars === undefined)) return baseTrim(string);
            if (!string || !(chars = baseToString(chars))) return string;
            var strSymbols = stringToArray(string), chrSymbols = stringToArray(chars), start = charsStartIndex(strSymbols, chrSymbols), end = charsEndIndex(strSymbols, chrSymbols) + 1;
            return castSlice(strSymbols, start, end).join("");
        }
        /**
     * Removes trailing whitespace or specified characters from `string`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to trim.
     * @param {string} [chars=whitespace] The characters to trim.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {string} Returns the trimmed string.
     * @example
     *
     * _.trimEnd('  abc  ');
     * // => '  abc'
     *
     * _.trimEnd('-_-abc-_-', '_-');
     * // => '-_-abc'
     */ function trimEnd(string, chars, guard) {
            string = toString(string);
            if (string && (guard || chars === undefined)) return string.slice(0, trimmedEndIndex(string) + 1);
            if (!string || !(chars = baseToString(chars))) return string;
            var strSymbols = stringToArray(string), end = charsEndIndex(strSymbols, stringToArray(chars)) + 1;
            return castSlice(strSymbols, 0, end).join("");
        }
        /**
     * Removes leading whitespace or specified characters from `string`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to trim.
     * @param {string} [chars=whitespace] The characters to trim.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {string} Returns the trimmed string.
     * @example
     *
     * _.trimStart('  abc  ');
     * // => 'abc  '
     *
     * _.trimStart('-_-abc-_-', '_-');
     * // => 'abc-_-'
     */ function trimStart(string, chars, guard) {
            string = toString(string);
            if (string && (guard || chars === undefined)) return string.replace(reTrimStart, "");
            if (!string || !(chars = baseToString(chars))) return string;
            var strSymbols = stringToArray(string), start = charsStartIndex(strSymbols, stringToArray(chars));
            return castSlice(strSymbols, start).join("");
        }
        /**
     * Truncates `string` if it's longer than the given maximum string length.
     * The last characters of the truncated string are replaced with the omission
     * string which defaults to "...".
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to truncate.
     * @param {Object} [options={}] The options object.
     * @param {number} [options.length=30] The maximum string length.
     * @param {string} [options.omission='...'] The string to indicate text is omitted.
     * @param {RegExp|string} [options.separator] The separator pattern to truncate to.
     * @returns {string} Returns the truncated string.
     * @example
     *
     * _.truncate('hi-diddly-ho there, neighborino');
     * // => 'hi-diddly-ho there, neighbo...'
     *
     * _.truncate('hi-diddly-ho there, neighborino', {
     *   'length': 24,
     *   'separator': ' '
     * });
     * // => 'hi-diddly-ho there,...'
     *
     * _.truncate('hi-diddly-ho there, neighborino', {
     *   'length': 24,
     *   'separator': /,? +/
     * });
     * // => 'hi-diddly-ho there...'
     *
     * _.truncate('hi-diddly-ho there, neighborino', {
     *   'omission': ' [...]'
     * });
     * // => 'hi-diddly-ho there, neig [...]'
     */ function truncate(string, options) {
            var length = DEFAULT_TRUNC_LENGTH, omission = DEFAULT_TRUNC_OMISSION;
            if (isObject(options)) {
                var separator = "separator" in options ? options.separator : separator;
                length = "length" in options ? toInteger(options.length) : length;
                omission = "omission" in options ? baseToString(options.omission) : omission;
            }
            string = toString(string);
            var strLength = string.length;
            if (hasUnicode(string)) {
                var strSymbols = stringToArray(string);
                strLength = strSymbols.length;
            }
            if (length >= strLength) return string;
            var end = length - stringSize(omission);
            if (end < 1) return omission;
            var result = strSymbols ? castSlice(strSymbols, 0, end).join("") : string.slice(0, end);
            if (separator === undefined) return result + omission;
            if (strSymbols) end += result.length - end;
            if (isRegExp(separator)) {
                if (string.slice(end).search(separator)) {
                    var match, substring = result;
                    if (!separator.global) separator = RegExp1(separator.source, toString(reFlags.exec(separator)) + "g");
                    separator.lastIndex = 0;
                    while(match = separator.exec(substring))var newEnd = match.index;
                    result = result.slice(0, newEnd === undefined ? end : newEnd);
                }
            } else if (string.indexOf(baseToString(separator), end) != end) {
                var index = result.lastIndexOf(separator);
                if (index > -1) result = result.slice(0, index);
            }
            return result + omission;
        }
        /**
     * The inverse of `_.escape`; this method converts the HTML entities
     * `&amp;`, `&lt;`, `&gt;`, `&quot;`, and `&#39;` in `string` to
     * their corresponding characters.
     *
     * **Note:** No other HTML entities are unescaped. To unescape additional
     * HTML entities use a third-party library like [_he_](https://mths.be/he).
     *
     * @static
     * @memberOf _
     * @since 0.6.0
     * @category String
     * @param {string} [string=''] The string to unescape.
     * @returns {string} Returns the unescaped string.
     * @example
     *
     * _.unescape('fred, barney, &amp; pebbles');
     * // => 'fred, barney, & pebbles'
     */ function unescape(string) {
            string = toString(string);
            return string && reHasEscapedHtml.test(string) ? string.replace(reEscapedHtml, unescapeHtmlChar) : string;
        }
        /**
     * Converts `string`, as space separated words, to upper case.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to convert.
     * @returns {string} Returns the upper cased string.
     * @example
     *
     * _.upperCase('--foo-bar');
     * // => 'FOO BAR'
     *
     * _.upperCase('fooBar');
     * // => 'FOO BAR'
     *
     * _.upperCase('__foo_bar__');
     * // => 'FOO BAR'
     */ var upperCase = createCompounder(function(result, word, index) {
            return result + (index ? " " : "") + word.toUpperCase();
        });
        /**
     * Converts the first character of `string` to upper case.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to convert.
     * @returns {string} Returns the converted string.
     * @example
     *
     * _.upperFirst('fred');
     * // => 'Fred'
     *
     * _.upperFirst('FRED');
     * // => 'FRED'
     */ var upperFirst = createCaseFirst("toUpperCase");
        /**
     * Splits `string` into an array of its words.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to inspect.
     * @param {RegExp|string} [pattern] The pattern to match words.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {Array} Returns the words of `string`.
     * @example
     *
     * _.words('fred, barney, & pebbles');
     * // => ['fred', 'barney', 'pebbles']
     *
     * _.words('fred, barney, & pebbles', /[^, ]+/g);
     * // => ['fred', 'barney', '&', 'pebbles']
     */ function words(string, pattern, guard) {
            string = toString(string);
            pattern = guard ? undefined : pattern;
            if (pattern === undefined) return hasUnicodeWord(string) ? unicodeWords(string) : asciiWords(string);
            return string.match(pattern) || [];
        }
        /*------------------------------------------------------------------------*/ /**
     * Attempts to invoke `func`, returning either the result or the caught error
     * object. Any additional arguments are provided to `func` when it's invoked.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Util
     * @param {Function} func The function to attempt.
     * @param {...*} [args] The arguments to invoke `func` with.
     * @returns {*} Returns the `func` result or error object.
     * @example
     *
     * // Avoid throwing errors for invalid selectors.
     * var elements = _.attempt(function(selector) {
     *   return document.querySelectorAll(selector);
     * }, '>_>');
     *
     * if (_.isError(elements)) {
     *   elements = [];
     * }
     */ var attempt = baseRest(function(func, args) {
            try {
                return apply(func, undefined, args);
            } catch (e) {
                return isError(e) ? e : new Error(e);
            }
        });
        /**
     * Binds methods of an object to the object itself, overwriting the existing
     * method.
     *
     * **Note:** This method doesn't set the "length" property of bound functions.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Util
     * @param {Object} object The object to bind and assign the bound methods to.
     * @param {...(string|string[])} methodNames The object method names to bind.
     * @returns {Object} Returns `object`.
     * @example
     *
     * var view = {
     *   'label': 'docs',
     *   'click': function() {
     *     console.log('clicked ' + this.label);
     *   }
     * };
     *
     * _.bindAll(view, ['click']);
     * jQuery(element).on('click', view.click);
     * // => Logs 'clicked docs' when clicked.
     */ var bindAll = flatRest(function(object, methodNames) {
            arrayEach(methodNames, function(key) {
                key = toKey(key);
                baseAssignValue(object, key, bind(object[key], object));
            });
            return object;
        });
        /**
     * Creates a function that iterates over `pairs` and invokes the corresponding
     * function of the first predicate to return truthy. The predicate-function
     * pairs are invoked with the `this` binding and arguments of the created
     * function.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Util
     * @param {Array} pairs The predicate-function pairs.
     * @returns {Function} Returns the new composite function.
     * @example
     *
     * var func = _.cond([
     *   [_.matches({ 'a': 1 }),           _.constant('matches A')],
     *   [_.conforms({ 'b': _.isNumber }), _.constant('matches B')],
     *   [_.stubTrue,                      _.constant('no match')]
     * ]);
     *
     * func({ 'a': 1, 'b': 2 });
     * // => 'matches A'
     *
     * func({ 'a': 0, 'b': 1 });
     * // => 'matches B'
     *
     * func({ 'a': '1', 'b': '2' });
     * // => 'no match'
     */ function cond(pairs) {
            var length = pairs == null ? 0 : pairs.length, toIteratee = getIteratee();
            pairs = !length ? [] : arrayMap(pairs, function(pair) {
                if (typeof pair[1] != "function") throw new TypeError(FUNC_ERROR_TEXT);
                return [
                    toIteratee(pair[0]),
                    pair[1]
                ];
            });
            return baseRest(function(args) {
                var index = -1;
                while(++index < length){
                    var pair = pairs[index];
                    if (apply(pair[0], this, args)) return apply(pair[1], this, args);
                }
            });
        }
        /**
     * Creates a function that invokes the predicate properties of `source` with
     * the corresponding property values of a given object, returning `true` if
     * all predicates return truthy, else `false`.
     *
     * **Note:** The created function is equivalent to `_.conformsTo` with
     * `source` partially applied.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Util
     * @param {Object} source The object of property predicates to conform to.
     * @returns {Function} Returns the new spec function.
     * @example
     *
     * var objects = [
     *   { 'a': 2, 'b': 1 },
     *   { 'a': 1, 'b': 2 }
     * ];
     *
     * _.filter(objects, _.conforms({ 'b': function(n) { return n > 1; } }));
     * // => [{ 'a': 1, 'b': 2 }]
     */ function conforms(source) {
            return baseConforms(baseClone(source, CLONE_DEEP_FLAG));
        }
        /**
     * Creates a function that returns `value`.
     *
     * @static
     * @memberOf _
     * @since 2.4.0
     * @category Util
     * @param {*} value The value to return from the new function.
     * @returns {Function} Returns the new constant function.
     * @example
     *
     * var objects = _.times(2, _.constant({ 'a': 1 }));
     *
     * console.log(objects);
     * // => [{ 'a': 1 }, { 'a': 1 }]
     *
     * console.log(objects[0] === objects[1]);
     * // => true
     */ function constant(value) {
            return function() {
                return value;
            };
        }
        /**
     * Checks `value` to determine whether a default value should be returned in
     * its place. The `defaultValue` is returned if `value` is `NaN`, `null`,
     * or `undefined`.
     *
     * @static
     * @memberOf _
     * @since 4.14.0
     * @category Util
     * @param {*} value The value to check.
     * @param {*} defaultValue The default value.
     * @returns {*} Returns the resolved value.
     * @example
     *
     * _.defaultTo(1, 10);
     * // => 1
     *
     * _.defaultTo(undefined, 10);
     * // => 10
     */ function defaultTo(value, defaultValue) {
            return value == null || value !== value ? defaultValue : value;
        }
        /**
     * Creates a function that returns the result of invoking the given functions
     * with the `this` binding of the created function, where each successive
     * invocation is supplied the return value of the previous.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Util
     * @param {...(Function|Function[])} [funcs] The functions to invoke.
     * @returns {Function} Returns the new composite function.
     * @see _.flowRight
     * @example
     *
     * function square(n) {
     *   return n * n;
     * }
     *
     * var addSquare = _.flow([_.add, square]);
     * addSquare(1, 2);
     * // => 9
     */ var flow = createFlow();
        /**
     * This method is like `_.flow` except that it creates a function that
     * invokes the given functions from right to left.
     *
     * @static
     * @since 3.0.0
     * @memberOf _
     * @category Util
     * @param {...(Function|Function[])} [funcs] The functions to invoke.
     * @returns {Function} Returns the new composite function.
     * @see _.flow
     * @example
     *
     * function square(n) {
     *   return n * n;
     * }
     *
     * var addSquare = _.flowRight([square, _.add]);
     * addSquare(1, 2);
     * // => 9
     */ var flowRight = createFlow(true);
        /**
     * This method returns the first argument it receives.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Util
     * @param {*} value Any value.
     * @returns {*} Returns `value`.
     * @example
     *
     * var object = { 'a': 1 };
     *
     * console.log(_.identity(object) === object);
     * // => true
     */ function identity(value) {
            return value;
        }
        /**
     * Creates a function that invokes `func` with the arguments of the created
     * function. If `func` is a property name, the created function returns the
     * property value for a given element. If `func` is an array or object, the
     * created function returns `true` for elements that contain the equivalent
     * source properties, otherwise it returns `false`.
     *
     * @static
     * @since 4.0.0
     * @memberOf _
     * @category Util
     * @param {*} [func=_.identity] The value to convert to a callback.
     * @returns {Function} Returns the callback.
     * @example
     *
     * var users = [
     *   { 'user': 'barney', 'age': 36, 'active': true },
     *   { 'user': 'fred',   'age': 40, 'active': false }
     * ];
     *
     * // The `_.matches` iteratee shorthand.
     * _.filter(users, _.iteratee({ 'user': 'barney', 'active': true }));
     * // => [{ 'user': 'barney', 'age': 36, 'active': true }]
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.filter(users, _.iteratee(['user', 'fred']));
     * // => [{ 'user': 'fred', 'age': 40 }]
     *
     * // The `_.property` iteratee shorthand.
     * _.map(users, _.iteratee('user'));
     * // => ['barney', 'fred']
     *
     * // Create custom iteratee shorthands.
     * _.iteratee = _.wrap(_.iteratee, function(iteratee, func) {
     *   return !_.isRegExp(func) ? iteratee(func) : function(string) {
     *     return func.test(string);
     *   };
     * });
     *
     * _.filter(['abc', 'def'], /ef/);
     * // => ['def']
     */ function iteratee(func) {
            return baseIteratee(typeof func == "function" ? func : baseClone(func, CLONE_DEEP_FLAG));
        }
        /**
     * Creates a function that performs a partial deep comparison between a given
     * object and `source`, returning `true` if the given object has equivalent
     * property values, else `false`.
     *
     * **Note:** The created function is equivalent to `_.isMatch` with `source`
     * partially applied.
     *
     * Partial comparisons will match empty array and empty object `source`
     * values against any array or object value, respectively. See `_.isEqual`
     * for a list of supported value comparisons.
     *
     * **Note:** Multiple values can be checked by combining several matchers
     * using `_.overSome`
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Util
     * @param {Object} source The object of property values to match.
     * @returns {Function} Returns the new spec function.
     * @example
     *
     * var objects = [
     *   { 'a': 1, 'b': 2, 'c': 3 },
     *   { 'a': 4, 'b': 5, 'c': 6 }
     * ];
     *
     * _.filter(objects, _.matches({ 'a': 4, 'c': 6 }));
     * // => [{ 'a': 4, 'b': 5, 'c': 6 }]
     *
     * // Checking for several possible values
     * _.filter(objects, _.overSome([_.matches({ 'a': 1 }), _.matches({ 'a': 4 })]));
     * // => [{ 'a': 1, 'b': 2, 'c': 3 }, { 'a': 4, 'b': 5, 'c': 6 }]
     */ function matches(source) {
            return baseMatches(baseClone(source, CLONE_DEEP_FLAG));
        }
        /**
     * Creates a function that performs a partial deep comparison between the
     * value at `path` of a given object to `srcValue`, returning `true` if the
     * object value is equivalent, else `false`.
     *
     * **Note:** Partial comparisons will match empty array and empty object
     * `srcValue` values against any array or object value, respectively. See
     * `_.isEqual` for a list of supported value comparisons.
     *
     * **Note:** Multiple values can be checked by combining several matchers
     * using `_.overSome`
     *
     * @static
     * @memberOf _
     * @since 3.2.0
     * @category Util
     * @param {Array|string} path The path of the property to get.
     * @param {*} srcValue The value to match.
     * @returns {Function} Returns the new spec function.
     * @example
     *
     * var objects = [
     *   { 'a': 1, 'b': 2, 'c': 3 },
     *   { 'a': 4, 'b': 5, 'c': 6 }
     * ];
     *
     * _.find(objects, _.matchesProperty('a', 4));
     * // => { 'a': 4, 'b': 5, 'c': 6 }
     *
     * // Checking for several possible values
     * _.filter(objects, _.overSome([_.matchesProperty('a', 1), _.matchesProperty('a', 4)]));
     * // => [{ 'a': 1, 'b': 2, 'c': 3 }, { 'a': 4, 'b': 5, 'c': 6 }]
     */ function matchesProperty(path, srcValue) {
            return baseMatchesProperty(path, baseClone(srcValue, CLONE_DEEP_FLAG));
        }
        /**
     * Creates a function that invokes the method at `path` of a given object.
     * Any additional arguments are provided to the invoked method.
     *
     * @static
     * @memberOf _
     * @since 3.7.0
     * @category Util
     * @param {Array|string} path The path of the method to invoke.
     * @param {...*} [args] The arguments to invoke the method with.
     * @returns {Function} Returns the new invoker function.
     * @example
     *
     * var objects = [
     *   { 'a': { 'b': _.constant(2) } },
     *   { 'a': { 'b': _.constant(1) } }
     * ];
     *
     * _.map(objects, _.method('a.b'));
     * // => [2, 1]
     *
     * _.map(objects, _.method(['a', 'b']));
     * // => [2, 1]
     */ var method = baseRest(function(path, args) {
            return function(object) {
                return baseInvoke(object, path, args);
            };
        });
        /**
     * The opposite of `_.method`; this method creates a function that invokes
     * the method at a given path of `object`. Any additional arguments are
     * provided to the invoked method.
     *
     * @static
     * @memberOf _
     * @since 3.7.0
     * @category Util
     * @param {Object} object The object to query.
     * @param {...*} [args] The arguments to invoke the method with.
     * @returns {Function} Returns the new invoker function.
     * @example
     *
     * var array = _.times(3, _.constant),
     *     object = { 'a': array, 'b': array, 'c': array };
     *
     * _.map(['a[2]', 'c[0]'], _.methodOf(object));
     * // => [2, 0]
     *
     * _.map([['a', '2'], ['c', '0']], _.methodOf(object));
     * // => [2, 0]
     */ var methodOf = baseRest(function(object, args) {
            return function(path) {
                return baseInvoke(object, path, args);
            };
        });
        /**
     * Adds all own enumerable string keyed function properties of a source
     * object to the destination object. If `object` is a function, then methods
     * are added to its prototype as well.
     *
     * **Note:** Use `_.runInContext` to create a pristine `lodash` function to
     * avoid conflicts caused by modifying the original.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Util
     * @param {Function|Object} [object=lodash] The destination object.
     * @param {Object} source The object of functions to add.
     * @param {Object} [options={}] The options object.
     * @param {boolean} [options.chain=true] Specify whether mixins are chainable.
     * @returns {Function|Object} Returns `object`.
     * @example
     *
     * function vowels(string) {
     *   return _.filter(string, function(v) {
     *     return /[aeiou]/i.test(v);
     *   });
     * }
     *
     * _.mixin({ 'vowels': vowels });
     * _.vowels('fred');
     * // => ['e']
     *
     * _('fred').vowels().value();
     * // => ['e']
     *
     * _.mixin({ 'vowels': vowels }, { 'chain': false });
     * _('fred').vowels();
     * // => ['e']
     */ function mixin(object, source, options) {
            var props = keys(source), methodNames = baseFunctions(source, props);
            if (options == null && !(isObject(source) && (methodNames.length || !props.length))) {
                options = source;
                source = object;
                object = this;
                methodNames = baseFunctions(source, keys(source));
            }
            var chain = !(isObject(options) && "chain" in options) || !!options.chain, isFunc = isFunction(object);
            arrayEach(methodNames, function(methodName) {
                var func = source[methodName];
                object[methodName] = func;
                if (isFunc) object.prototype[methodName] = function() {
                    var chainAll = this.__chain__;
                    if (chain || chainAll) {
                        var result = object(this.__wrapped__), actions = result.__actions__ = copyArray(this.__actions__);
                        actions.push({
                            "func": func,
                            "args": arguments,
                            "thisArg": object
                        });
                        result.__chain__ = chainAll;
                        return result;
                    }
                    return func.apply(object, arrayPush([
                        this.value()
                    ], arguments));
                };
            });
            return object;
        }
        /**
     * Reverts the `_` variable to its previous value and returns a reference to
     * the `lodash` function.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Util
     * @returns {Function} Returns the `lodash` function.
     * @example
     *
     * var lodash = _.noConflict();
     */ function noConflict() {
            if (root._ === this) root._ = oldDash;
            return this;
        }
        /**
     * This method returns `undefined`.
     *
     * @static
     * @memberOf _
     * @since 2.3.0
     * @category Util
     * @example
     *
     * _.times(2, _.noop);
     * // => [undefined, undefined]
     */ function noop() {
        // No operation performed.
        }
        /**
     * Creates a function that gets the argument at index `n`. If `n` is negative,
     * the nth argument from the end is returned.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Util
     * @param {number} [n=0] The index of the argument to return.
     * @returns {Function} Returns the new pass-thru function.
     * @example
     *
     * var func = _.nthArg(1);
     * func('a', 'b', 'c', 'd');
     * // => 'b'
     *
     * var func = _.nthArg(-2);
     * func('a', 'b', 'c', 'd');
     * // => 'c'
     */ function nthArg(n) {
            n = toInteger(n);
            return baseRest(function(args) {
                return baseNth(args, n);
            });
        }
        /**
     * Creates a function that invokes `iteratees` with the arguments it receives
     * and returns their results.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Util
     * @param {...(Function|Function[])} [iteratees=[_.identity]]
     *  The iteratees to invoke.
     * @returns {Function} Returns the new function.
     * @example
     *
     * var func = _.over([Math.max, Math.min]);
     *
     * func(1, 2, 3, 4);
     * // => [4, 1]
     */ var over = createOver(arrayMap);
        /**
     * Creates a function that checks if **all** of the `predicates` return
     * truthy when invoked with the arguments it receives.
     *
     * Following shorthands are possible for providing predicates.
     * Pass an `Object` and it will be used as an parameter for `_.matches` to create the predicate.
     * Pass an `Array` of parameters for `_.matchesProperty` and the predicate will be created using them.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Util
     * @param {...(Function|Function[])} [predicates=[_.identity]]
     *  The predicates to check.
     * @returns {Function} Returns the new function.
     * @example
     *
     * var func = _.overEvery([Boolean, isFinite]);
     *
     * func('1');
     * // => true
     *
     * func(null);
     * // => false
     *
     * func(NaN);
     * // => false
     */ var overEvery = createOver(arrayEvery);
        /**
     * Creates a function that checks if **any** of the `predicates` return
     * truthy when invoked with the arguments it receives.
     *
     * Following shorthands are possible for providing predicates.
     * Pass an `Object` and it will be used as an parameter for `_.matches` to create the predicate.
     * Pass an `Array` of parameters for `_.matchesProperty` and the predicate will be created using them.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Util
     * @param {...(Function|Function[])} [predicates=[_.identity]]
     *  The predicates to check.
     * @returns {Function} Returns the new function.
     * @example
     *
     * var func = _.overSome([Boolean, isFinite]);
     *
     * func('1');
     * // => true
     *
     * func(null);
     * // => true
     *
     * func(NaN);
     * // => false
     *
     * var matchesFunc = _.overSome([{ 'a': 1 }, { 'a': 2 }])
     * var matchesPropertyFunc = _.overSome([['a', 1], ['a', 2]])
     */ var overSome = createOver(arraySome);
        /**
     * Creates a function that returns the value at `path` of a given object.
     *
     * @static
     * @memberOf _
     * @since 2.4.0
     * @category Util
     * @param {Array|string} path The path of the property to get.
     * @returns {Function} Returns the new accessor function.
     * @example
     *
     * var objects = [
     *   { 'a': { 'b': 2 } },
     *   { 'a': { 'b': 1 } }
     * ];
     *
     * _.map(objects, _.property('a.b'));
     * // => [2, 1]
     *
     * _.map(_.sortBy(objects, _.property(['a', 'b'])), 'a.b');
     * // => [1, 2]
     */ function property(path) {
            return isKey(path) ? baseProperty(toKey(path)) : basePropertyDeep(path);
        }
        /**
     * The opposite of `_.property`; this method creates a function that returns
     * the value at a given path of `object`.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Util
     * @param {Object} object The object to query.
     * @returns {Function} Returns the new accessor function.
     * @example
     *
     * var array = [0, 1, 2],
     *     object = { 'a': array, 'b': array, 'c': array };
     *
     * _.map(['a[2]', 'c[0]'], _.propertyOf(object));
     * // => [2, 0]
     *
     * _.map([['a', '2'], ['c', '0']], _.propertyOf(object));
     * // => [2, 0]
     */ function propertyOf(object) {
            return function(path) {
                return object == null ? undefined : baseGet(object, path);
            };
        }
        /**
     * Creates an array of numbers (positive and/or negative) progressing from
     * `start` up to, but not including, `end`. A step of `-1` is used if a negative
     * `start` is specified without an `end` or `step`. If `end` is not specified,
     * it's set to `start` with `start` then set to `0`.
     *
     * **Note:** JavaScript follows the IEEE-754 standard for resolving
     * floating-point values which can produce unexpected results.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Util
     * @param {number} [start=0] The start of the range.
     * @param {number} end The end of the range.
     * @param {number} [step=1] The value to increment or decrement by.
     * @returns {Array} Returns the range of numbers.
     * @see _.inRange, _.rangeRight
     * @example
     *
     * _.range(4);
     * // => [0, 1, 2, 3]
     *
     * _.range(-4);
     * // => [0, -1, -2, -3]
     *
     * _.range(1, 5);
     * // => [1, 2, 3, 4]
     *
     * _.range(0, 20, 5);
     * // => [0, 5, 10, 15]
     *
     * _.range(0, -4, -1);
     * // => [0, -1, -2, -3]
     *
     * _.range(1, 4, 0);
     * // => [1, 1, 1]
     *
     * _.range(0);
     * // => []
     */ var range = createRange();
        /**
     * This method is like `_.range` except that it populates values in
     * descending order.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Util
     * @param {number} [start=0] The start of the range.
     * @param {number} end The end of the range.
     * @param {number} [step=1] The value to increment or decrement by.
     * @returns {Array} Returns the range of numbers.
     * @see _.inRange, _.range
     * @example
     *
     * _.rangeRight(4);
     * // => [3, 2, 1, 0]
     *
     * _.rangeRight(-4);
     * // => [-3, -2, -1, 0]
     *
     * _.rangeRight(1, 5);
     * // => [4, 3, 2, 1]
     *
     * _.rangeRight(0, 20, 5);
     * // => [15, 10, 5, 0]
     *
     * _.rangeRight(0, -4, -1);
     * // => [-3, -2, -1, 0]
     *
     * _.rangeRight(1, 4, 0);
     * // => [1, 1, 1]
     *
     * _.rangeRight(0);
     * // => []
     */ var rangeRight = createRange(true);
        /**
     * This method returns a new empty array.
     *
     * @static
     * @memberOf _
     * @since 4.13.0
     * @category Util
     * @returns {Array} Returns the new empty array.
     * @example
     *
     * var arrays = _.times(2, _.stubArray);
     *
     * console.log(arrays);
     * // => [[], []]
     *
     * console.log(arrays[0] === arrays[1]);
     * // => false
     */ function stubArray() {
            return [];
        }
        /**
     * This method returns `false`.
     *
     * @static
     * @memberOf _
     * @since 4.13.0
     * @category Util
     * @returns {boolean} Returns `false`.
     * @example
     *
     * _.times(2, _.stubFalse);
     * // => [false, false]
     */ function stubFalse() {
            return false;
        }
        /**
     * This method returns a new empty object.
     *
     * @static
     * @memberOf _
     * @since 4.13.0
     * @category Util
     * @returns {Object} Returns the new empty object.
     * @example
     *
     * var objects = _.times(2, _.stubObject);
     *
     * console.log(objects);
     * // => [{}, {}]
     *
     * console.log(objects[0] === objects[1]);
     * // => false
     */ function stubObject() {
            return {};
        }
        /**
     * This method returns an empty string.
     *
     * @static
     * @memberOf _
     * @since 4.13.0
     * @category Util
     * @returns {string} Returns the empty string.
     * @example
     *
     * _.times(2, _.stubString);
     * // => ['', '']
     */ function stubString() {
            return "";
        }
        /**
     * This method returns `true`.
     *
     * @static
     * @memberOf _
     * @since 4.13.0
     * @category Util
     * @returns {boolean} Returns `true`.
     * @example
     *
     * _.times(2, _.stubTrue);
     * // => [true, true]
     */ function stubTrue() {
            return true;
        }
        /**
     * Invokes the iteratee `n` times, returning an array of the results of
     * each invocation. The iteratee is invoked with one argument; (index).
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Util
     * @param {number} n The number of times to invoke `iteratee`.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the array of results.
     * @example
     *
     * _.times(3, String);
     * // => ['0', '1', '2']
     *
     *  _.times(4, _.constant(0));
     * // => [0, 0, 0, 0]
     */ function times(n, iteratee) {
            n = toInteger(n);
            if (n < 1 || n > MAX_SAFE_INTEGER) return [];
            var index = MAX_ARRAY_LENGTH, length = nativeMin(n, MAX_ARRAY_LENGTH);
            iteratee = getIteratee(iteratee);
            n -= MAX_ARRAY_LENGTH;
            var result = baseTimes(length, iteratee);
            while(++index < n)iteratee(index);
            return result;
        }
        /**
     * Converts `value` to a property path array.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Util
     * @param {*} value The value to convert.
     * @returns {Array} Returns the new property path array.
     * @example
     *
     * _.toPath('a.b.c');
     * // => ['a', 'b', 'c']
     *
     * _.toPath('a[0].b.c');
     * // => ['a', '0', 'b', 'c']
     */ function toPath(value) {
            if (isArray(value)) return arrayMap(value, toKey);
            return isSymbol(value) ? [
                value
            ] : copyArray(stringToPath(toString(value)));
        }
        /**
     * Generates a unique ID. If `prefix` is given, the ID is appended to it.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Util
     * @param {string} [prefix=''] The value to prefix the ID with.
     * @returns {string} Returns the unique ID.
     * @example
     *
     * _.uniqueId('contact_');
     * // => 'contact_104'
     *
     * _.uniqueId();
     * // => '105'
     */ function uniqueId(prefix) {
            var id = ++idCounter;
            return toString(prefix) + id;
        }
        /*------------------------------------------------------------------------*/ /**
     * Adds two numbers.
     *
     * @static
     * @memberOf _
     * @since 3.4.0
     * @category Math
     * @param {number} augend The first number in an addition.
     * @param {number} addend The second number in an addition.
     * @returns {number} Returns the total.
     * @example
     *
     * _.add(6, 4);
     * // => 10
     */ var add = createMathOperation(function(augend, addend) {
            return augend + addend;
        }, 0);
        /**
     * Computes `number` rounded up to `precision`.
     *
     * @static
     * @memberOf _
     * @since 3.10.0
     * @category Math
     * @param {number} number The number to round up.
     * @param {number} [precision=0] The precision to round up to.
     * @returns {number} Returns the rounded up number.
     * @example
     *
     * _.ceil(4.006);
     * // => 5
     *
     * _.ceil(6.004, 2);
     * // => 6.01
     *
     * _.ceil(6040, -2);
     * // => 6100
     */ var ceil = createRound("ceil");
        /**
     * Divide two numbers.
     *
     * @static
     * @memberOf _
     * @since 4.7.0
     * @category Math
     * @param {number} dividend The first number in a division.
     * @param {number} divisor The second number in a division.
     * @returns {number} Returns the quotient.
     * @example
     *
     * _.divide(6, 4);
     * // => 1.5
     */ var divide = createMathOperation(function(dividend, divisor) {
            return dividend / divisor;
        }, 1);
        /**
     * Computes `number` rounded down to `precision`.
     *
     * @static
     * @memberOf _
     * @since 3.10.0
     * @category Math
     * @param {number} number The number to round down.
     * @param {number} [precision=0] The precision to round down to.
     * @returns {number} Returns the rounded down number.
     * @example
     *
     * _.floor(4.006);
     * // => 4
     *
     * _.floor(0.046, 2);
     * // => 0.04
     *
     * _.floor(4060, -2);
     * // => 4000
     */ var floor = createRound("floor");
        /**
     * Computes the maximum value of `array`. If `array` is empty or falsey,
     * `undefined` is returned.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Math
     * @param {Array} array The array to iterate over.
     * @returns {*} Returns the maximum value.
     * @example
     *
     * _.max([4, 2, 8, 6]);
     * // => 8
     *
     * _.max([]);
     * // => undefined
     */ function max(array) {
            return array && array.length ? baseExtremum(array, identity, baseGt) : undefined;
        }
        /**
     * This method is like `_.max` except that it accepts `iteratee` which is
     * invoked for each element in `array` to generate the criterion by which
     * the value is ranked. The iteratee is invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Math
     * @param {Array} array The array to iterate over.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {*} Returns the maximum value.
     * @example
     *
     * var objects = [{ 'n': 1 }, { 'n': 2 }];
     *
     * _.maxBy(objects, function(o) { return o.n; });
     * // => { 'n': 2 }
     *
     * // The `_.property` iteratee shorthand.
     * _.maxBy(objects, 'n');
     * // => { 'n': 2 }
     */ function maxBy(array, iteratee) {
            return array && array.length ? baseExtremum(array, getIteratee(iteratee, 2), baseGt) : undefined;
        }
        /**
     * Computes the mean of the values in `array`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Math
     * @param {Array} array The array to iterate over.
     * @returns {number} Returns the mean.
     * @example
     *
     * _.mean([4, 2, 8, 6]);
     * // => 5
     */ function mean(array) {
            return baseMean(array, identity);
        }
        /**
     * This method is like `_.mean` except that it accepts `iteratee` which is
     * invoked for each element in `array` to generate the value to be averaged.
     * The iteratee is invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 4.7.0
     * @category Math
     * @param {Array} array The array to iterate over.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {number} Returns the mean.
     * @example
     *
     * var objects = [{ 'n': 4 }, { 'n': 2 }, { 'n': 8 }, { 'n': 6 }];
     *
     * _.meanBy(objects, function(o) { return o.n; });
     * // => 5
     *
     * // The `_.property` iteratee shorthand.
     * _.meanBy(objects, 'n');
     * // => 5
     */ function meanBy(array, iteratee) {
            return baseMean(array, getIteratee(iteratee, 2));
        }
        /**
     * Computes the minimum value of `array`. If `array` is empty or falsey,
     * `undefined` is returned.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Math
     * @param {Array} array The array to iterate over.
     * @returns {*} Returns the minimum value.
     * @example
     *
     * _.min([4, 2, 8, 6]);
     * // => 2
     *
     * _.min([]);
     * // => undefined
     */ function min(array) {
            return array && array.length ? baseExtremum(array, identity, baseLt) : undefined;
        }
        /**
     * This method is like `_.min` except that it accepts `iteratee` which is
     * invoked for each element in `array` to generate the criterion by which
     * the value is ranked. The iteratee is invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Math
     * @param {Array} array The array to iterate over.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {*} Returns the minimum value.
     * @example
     *
     * var objects = [{ 'n': 1 }, { 'n': 2 }];
     *
     * _.minBy(objects, function(o) { return o.n; });
     * // => { 'n': 1 }
     *
     * // The `_.property` iteratee shorthand.
     * _.minBy(objects, 'n');
     * // => { 'n': 1 }
     */ function minBy(array, iteratee) {
            return array && array.length ? baseExtremum(array, getIteratee(iteratee, 2), baseLt) : undefined;
        }
        /**
     * Multiply two numbers.
     *
     * @static
     * @memberOf _
     * @since 4.7.0
     * @category Math
     * @param {number} multiplier The first number in a multiplication.
     * @param {number} multiplicand The second number in a multiplication.
     * @returns {number} Returns the product.
     * @example
     *
     * _.multiply(6, 4);
     * // => 24
     */ var multiply = createMathOperation(function(multiplier, multiplicand) {
            return multiplier * multiplicand;
        }, 1);
        /**
     * Computes `number` rounded to `precision`.
     *
     * @static
     * @memberOf _
     * @since 3.10.0
     * @category Math
     * @param {number} number The number to round.
     * @param {number} [precision=0] The precision to round to.
     * @returns {number} Returns the rounded number.
     * @example
     *
     * _.round(4.006);
     * // => 4
     *
     * _.round(4.006, 2);
     * // => 4.01
     *
     * _.round(4060, -2);
     * // => 4100
     */ var round = createRound("round");
        /**
     * Subtract two numbers.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Math
     * @param {number} minuend The first number in a subtraction.
     * @param {number} subtrahend The second number in a subtraction.
     * @returns {number} Returns the difference.
     * @example
     *
     * _.subtract(6, 4);
     * // => 2
     */ var subtract = createMathOperation(function(minuend, subtrahend) {
            return minuend - subtrahend;
        }, 0);
        /**
     * Computes the sum of the values in `array`.
     *
     * @static
     * @memberOf _
     * @since 3.4.0
     * @category Math
     * @param {Array} array The array to iterate over.
     * @returns {number} Returns the sum.
     * @example
     *
     * _.sum([4, 2, 8, 6]);
     * // => 20
     */ function sum(array) {
            return array && array.length ? baseSum(array, identity) : 0;
        }
        /**
     * This method is like `_.sum` except that it accepts `iteratee` which is
     * invoked for each element in `array` to generate the value to be summed.
     * The iteratee is invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Math
     * @param {Array} array The array to iterate over.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {number} Returns the sum.
     * @example
     *
     * var objects = [{ 'n': 4 }, { 'n': 2 }, { 'n': 8 }, { 'n': 6 }];
     *
     * _.sumBy(objects, function(o) { return o.n; });
     * // => 20
     *
     * // The `_.property` iteratee shorthand.
     * _.sumBy(objects, 'n');
     * // => 20
     */ function sumBy(array, iteratee) {
            return array && array.length ? baseSum(array, getIteratee(iteratee, 2)) : 0;
        }
        /*------------------------------------------------------------------------*/ // Add methods that return wrapped values in chain sequences.
        lodash.after = after;
        lodash.ary = ary;
        lodash.assign = assign;
        lodash.assignIn = assignIn;
        lodash.assignInWith = assignInWith;
        lodash.assignWith = assignWith;
        lodash.at = at;
        lodash.before = before;
        lodash.bind = bind;
        lodash.bindAll = bindAll;
        lodash.bindKey = bindKey;
        lodash.castArray = castArray;
        lodash.chain = chain;
        lodash.chunk = chunk;
        lodash.compact = compact;
        lodash.concat = concat;
        lodash.cond = cond;
        lodash.conforms = conforms;
        lodash.constant = constant;
        lodash.countBy = countBy;
        lodash.create = create;
        lodash.curry = curry;
        lodash.curryRight = curryRight;
        lodash.debounce = debounce;
        lodash.defaults = defaults;
        lodash.defaultsDeep = defaultsDeep;
        lodash.defer = defer;
        lodash.delay = delay;
        lodash.difference = difference;
        lodash.differenceBy = differenceBy;
        lodash.differenceWith = differenceWith;
        lodash.drop = drop;
        lodash.dropRight = dropRight;
        lodash.dropRightWhile = dropRightWhile;
        lodash.dropWhile = dropWhile;
        lodash.fill = fill;
        lodash.filter = filter;
        lodash.flatMap = flatMap;
        lodash.flatMapDeep = flatMapDeep;
        lodash.flatMapDepth = flatMapDepth;
        lodash.flatten = flatten;
        lodash.flattenDeep = flattenDeep;
        lodash.flattenDepth = flattenDepth;
        lodash.flip = flip;
        lodash.flow = flow;
        lodash.flowRight = flowRight;
        lodash.fromPairs = fromPairs;
        lodash.functions = functions;
        lodash.functionsIn = functionsIn;
        lodash.groupBy = groupBy;
        lodash.initial = initial;
        lodash.intersection = intersection;
        lodash.intersectionBy = intersectionBy;
        lodash.intersectionWith = intersectionWith;
        lodash.invert = invert;
        lodash.invertBy = invertBy;
        lodash.invokeMap = invokeMap;
        lodash.iteratee = iteratee;
        lodash.keyBy = keyBy;
        lodash.keys = keys;
        lodash.keysIn = keysIn;
        lodash.map = map;
        lodash.mapKeys = mapKeys;
        lodash.mapValues = mapValues;
        lodash.matches = matches;
        lodash.matchesProperty = matchesProperty;
        lodash.memoize = memoize;
        lodash.merge = merge;
        lodash.mergeWith = mergeWith;
        lodash.method = method;
        lodash.methodOf = methodOf;
        lodash.mixin = mixin;
        lodash.negate = negate;
        lodash.nthArg = nthArg;
        lodash.omit = omit;
        lodash.omitBy = omitBy;
        lodash.once = once;
        lodash.orderBy = orderBy;
        lodash.over = over;
        lodash.overArgs = overArgs;
        lodash.overEvery = overEvery;
        lodash.overSome = overSome;
        lodash.partial = partial;
        lodash.partialRight = partialRight;
        lodash.partition = partition;
        lodash.pick = pick;
        lodash.pickBy = pickBy;
        lodash.property = property;
        lodash.propertyOf = propertyOf;
        lodash.pull = pull;
        lodash.pullAll = pullAll;
        lodash.pullAllBy = pullAllBy;
        lodash.pullAllWith = pullAllWith;
        lodash.pullAt = pullAt;
        lodash.range = range;
        lodash.rangeRight = rangeRight;
        lodash.rearg = rearg;
        lodash.reject = reject;
        lodash.remove = remove;
        lodash.rest = rest;
        lodash.reverse = reverse;
        lodash.sampleSize = sampleSize;
        lodash.set = set;
        lodash.setWith = setWith;
        lodash.shuffle = shuffle;
        lodash.slice = slice;
        lodash.sortBy = sortBy;
        lodash.sortedUniq = sortedUniq;
        lodash.sortedUniqBy = sortedUniqBy;
        lodash.split = split;
        lodash.spread = spread;
        lodash.tail = tail;
        lodash.take = take;
        lodash.takeRight = takeRight;
        lodash.takeRightWhile = takeRightWhile;
        lodash.takeWhile = takeWhile;
        lodash.tap = tap;
        lodash.throttle = throttle;
        lodash.thru = thru;
        lodash.toArray = toArray;
        lodash.toPairs = toPairs;
        lodash.toPairsIn = toPairsIn;
        lodash.toPath = toPath;
        lodash.toPlainObject = toPlainObject;
        lodash.transform = transform;
        lodash.unary = unary;
        lodash.union = union;
        lodash.unionBy = unionBy;
        lodash.unionWith = unionWith;
        lodash.uniq = uniq;
        lodash.uniqBy = uniqBy;
        lodash.uniqWith = uniqWith;
        lodash.unset = unset;
        lodash.unzip = unzip;
        lodash.unzipWith = unzipWith;
        lodash.update = update;
        lodash.updateWith = updateWith;
        lodash.values = values;
        lodash.valuesIn = valuesIn;
        lodash.without = without;
        lodash.words = words;
        lodash.wrap = wrap;
        lodash.xor = xor;
        lodash.xorBy = xorBy;
        lodash.xorWith = xorWith;
        lodash.zip = zip;
        lodash.zipObject = zipObject;
        lodash.zipObjectDeep = zipObjectDeep;
        lodash.zipWith = zipWith;
        // Add aliases.
        lodash.entries = toPairs;
        lodash.entriesIn = toPairsIn;
        lodash.extend = assignIn;
        lodash.extendWith = assignInWith;
        // Add methods to `lodash.prototype`.
        mixin(lodash, lodash);
        /*------------------------------------------------------------------------*/ // Add methods that return unwrapped values in chain sequences.
        lodash.add = add;
        lodash.attempt = attempt;
        lodash.camelCase = camelCase;
        lodash.capitalize = capitalize;
        lodash.ceil = ceil;
        lodash.clamp = clamp;
        lodash.clone = clone;
        lodash.cloneDeep = cloneDeep;
        lodash.cloneDeepWith = cloneDeepWith;
        lodash.cloneWith = cloneWith;
        lodash.conformsTo = conformsTo;
        lodash.deburr = deburr;
        lodash.defaultTo = defaultTo;
        lodash.divide = divide;
        lodash.endsWith = endsWith;
        lodash.eq = eq;
        lodash.escape = escape;
        lodash.escapeRegExp = escapeRegExp;
        lodash.every = every;
        lodash.find = find;
        lodash.findIndex = findIndex;
        lodash.findKey = findKey;
        lodash.findLast = findLast;
        lodash.findLastIndex = findLastIndex;
        lodash.findLastKey = findLastKey;
        lodash.floor = floor;
        lodash.forEach = forEach;
        lodash.forEachRight = forEachRight;
        lodash.forIn = forIn;
        lodash.forInRight = forInRight;
        lodash.forOwn = forOwn;
        lodash.forOwnRight = forOwnRight;
        lodash.get = get;
        lodash.gt = gt;
        lodash.gte = gte;
        lodash.has = has;
        lodash.hasIn = hasIn;
        lodash.head = head;
        lodash.identity = identity;
        lodash.includes = includes;
        lodash.indexOf = indexOf;
        lodash.inRange = inRange;
        lodash.invoke = invoke;
        lodash.isArguments = isArguments;
        lodash.isArray = isArray;
        lodash.isArrayBuffer = isArrayBuffer;
        lodash.isArrayLike = isArrayLike;
        lodash.isArrayLikeObject = isArrayLikeObject;
        lodash.isBoolean = isBoolean;
        lodash.isBuffer = isBuffer;
        lodash.isDate = isDate;
        lodash.isElement = isElement;
        lodash.isEmpty = isEmpty;
        lodash.isEqual = isEqual;
        lodash.isEqualWith = isEqualWith;
        lodash.isError = isError;
        lodash.isFinite = isFinite;
        lodash.isFunction = isFunction;
        lodash.isInteger = isInteger;
        lodash.isLength = isLength;
        lodash.isMap = isMap;
        lodash.isMatch = isMatch;
        lodash.isMatchWith = isMatchWith;
        lodash.isNaN = isNaN;
        lodash.isNative = isNative;
        lodash.isNil = isNil;
        lodash.isNull = isNull;
        lodash.isNumber = isNumber;
        lodash.isObject = isObject;
        lodash.isObjectLike = isObjectLike;
        lodash.isPlainObject = isPlainObject;
        lodash.isRegExp = isRegExp;
        lodash.isSafeInteger = isSafeInteger;
        lodash.isSet = isSet;
        lodash.isString = isString;
        lodash.isSymbol = isSymbol;
        lodash.isTypedArray = isTypedArray;
        lodash.isUndefined = isUndefined;
        lodash.isWeakMap = isWeakMap;
        lodash.isWeakSet = isWeakSet;
        lodash.join = join;
        lodash.kebabCase = kebabCase;
        lodash.last = last;
        lodash.lastIndexOf = lastIndexOf;
        lodash.lowerCase = lowerCase;
        lodash.lowerFirst = lowerFirst;
        lodash.lt = lt;
        lodash.lte = lte;
        lodash.max = max;
        lodash.maxBy = maxBy;
        lodash.mean = mean;
        lodash.meanBy = meanBy;
        lodash.min = min;
        lodash.minBy = minBy;
        lodash.stubArray = stubArray;
        lodash.stubFalse = stubFalse;
        lodash.stubObject = stubObject;
        lodash.stubString = stubString;
        lodash.stubTrue = stubTrue;
        lodash.multiply = multiply;
        lodash.nth = nth;
        lodash.noConflict = noConflict;
        lodash.noop = noop;
        lodash.now = now;
        lodash.pad = pad;
        lodash.padEnd = padEnd;
        lodash.padStart = padStart;
        lodash.parseInt = parseInt1;
        lodash.random = random;
        lodash.reduce = reduce;
        lodash.reduceRight = reduceRight;
        lodash.repeat = repeat;
        lodash.replace = replace;
        lodash.result = result;
        lodash.round = round;
        lodash.runInContext = runInContext;
        lodash.sample = sample;
        lodash.size = size;
        lodash.snakeCase = snakeCase;
        lodash.some = some;
        lodash.sortedIndex = sortedIndex;
        lodash.sortedIndexBy = sortedIndexBy;
        lodash.sortedIndexOf = sortedIndexOf;
        lodash.sortedLastIndex = sortedLastIndex;
        lodash.sortedLastIndexBy = sortedLastIndexBy;
        lodash.sortedLastIndexOf = sortedLastIndexOf;
        lodash.startCase = startCase;
        lodash.startsWith = startsWith;
        lodash.subtract = subtract;
        lodash.sum = sum;
        lodash.sumBy = sumBy;
        lodash.template = template;
        lodash.times = times;
        lodash.toFinite = toFinite;
        lodash.toInteger = toInteger;
        lodash.toLength = toLength;
        lodash.toLower = toLower;
        lodash.toNumber = toNumber;
        lodash.toSafeInteger = toSafeInteger;
        lodash.toString = toString;
        lodash.toUpper = toUpper;
        lodash.trim = trim;
        lodash.trimEnd = trimEnd;
        lodash.trimStart = trimStart;
        lodash.truncate = truncate;
        lodash.unescape = unescape;
        lodash.uniqueId = uniqueId;
        lodash.upperCase = upperCase;
        lodash.upperFirst = upperFirst;
        // Add aliases.
        lodash.each = forEach;
        lodash.eachRight = forEachRight;
        lodash.first = head;
        mixin(lodash, function() {
            var source = {};
            baseForOwn(lodash, function(func, methodName) {
                if (!hasOwnProperty.call(lodash.prototype, methodName)) source[methodName] = func;
            });
            return source;
        }(), {
            "chain": false
        });
        /*------------------------------------------------------------------------*/ /**
     * The semantic version number.
     *
     * @static
     * @memberOf _
     * @type {string}
     */ lodash.VERSION = VERSION;
        // Assign default placeholders.
        arrayEach([
            "bind",
            "bindKey",
            "curry",
            "curryRight",
            "partial",
            "partialRight"
        ], function(methodName) {
            lodash[methodName].placeholder = lodash;
        });
        // Add `LazyWrapper` methods for `_.drop` and `_.take` variants.
        arrayEach([
            "drop",
            "take"
        ], function(methodName, index) {
            LazyWrapper.prototype[methodName] = function(n) {
                n = n === undefined ? 1 : nativeMax(toInteger(n), 0);
                var result = this.__filtered__ && !index ? new LazyWrapper(this) : this.clone();
                if (result.__filtered__) result.__takeCount__ = nativeMin(n, result.__takeCount__);
                else result.__views__.push({
                    "size": nativeMin(n, MAX_ARRAY_LENGTH),
                    "type": methodName + (result.__dir__ < 0 ? "Right" : "")
                });
                return result;
            };
            LazyWrapper.prototype[methodName + "Right"] = function(n) {
                return this.reverse()[methodName](n).reverse();
            };
        });
        // Add `LazyWrapper` methods that accept an `iteratee` value.
        arrayEach([
            "filter",
            "map",
            "takeWhile"
        ], function(methodName, index) {
            var type = index + 1, isFilter = type == LAZY_FILTER_FLAG || type == LAZY_WHILE_FLAG;
            LazyWrapper.prototype[methodName] = function(iteratee) {
                var result = this.clone();
                result.__iteratees__.push({
                    "iteratee": getIteratee(iteratee, 3),
                    "type": type
                });
                result.__filtered__ = result.__filtered__ || isFilter;
                return result;
            };
        });
        // Add `LazyWrapper` methods for `_.head` and `_.last`.
        arrayEach([
            "head",
            "last"
        ], function(methodName, index) {
            var takeName = "take" + (index ? "Right" : "");
            LazyWrapper.prototype[methodName] = function() {
                return this[takeName](1).value()[0];
            };
        });
        // Add `LazyWrapper` methods for `_.initial` and `_.tail`.
        arrayEach([
            "initial",
            "tail"
        ], function(methodName, index) {
            var dropName = "drop" + (index ? "" : "Right");
            LazyWrapper.prototype[methodName] = function() {
                return this.__filtered__ ? new LazyWrapper(this) : this[dropName](1);
            };
        });
        LazyWrapper.prototype.compact = function() {
            return this.filter(identity);
        };
        LazyWrapper.prototype.find = function(predicate) {
            return this.filter(predicate).head();
        };
        LazyWrapper.prototype.findLast = function(predicate) {
            return this.reverse().find(predicate);
        };
        LazyWrapper.prototype.invokeMap = baseRest(function(path, args) {
            if (typeof path == "function") return new LazyWrapper(this);
            return this.map(function(value) {
                return baseInvoke(value, path, args);
            });
        });
        LazyWrapper.prototype.reject = function(predicate) {
            return this.filter(negate(getIteratee(predicate)));
        };
        LazyWrapper.prototype.slice = function(start, end) {
            start = toInteger(start);
            var result = this;
            if (result.__filtered__ && (start > 0 || end < 0)) return new LazyWrapper(result);
            if (start < 0) result = result.takeRight(-start);
            else if (start) result = result.drop(start);
            if (end !== undefined) {
                end = toInteger(end);
                result = end < 0 ? result.dropRight(-end) : result.take(end - start);
            }
            return result;
        };
        LazyWrapper.prototype.takeRightWhile = function(predicate) {
            return this.reverse().takeWhile(predicate).reverse();
        };
        LazyWrapper.prototype.toArray = function() {
            return this.take(MAX_ARRAY_LENGTH);
        };
        // Add `LazyWrapper` methods to `lodash.prototype`.
        baseForOwn(LazyWrapper.prototype, function(func, methodName) {
            var checkIteratee = /^(?:filter|find|map|reject)|While$/.test(methodName), isTaker = /^(?:head|last)$/.test(methodName), lodashFunc = lodash[isTaker ? "take" + (methodName == "last" ? "Right" : "") : methodName], retUnwrapped = isTaker || /^find/.test(methodName);
            if (!lodashFunc) return;
            lodash.prototype[methodName] = function() {
                var value = this.__wrapped__, args = isTaker ? [
                    1
                ] : arguments, isLazy = value instanceof LazyWrapper, iteratee = args[0], useLazy = isLazy || isArray(value);
                var interceptor = function(value) {
                    var result = lodashFunc.apply(lodash, arrayPush([
                        value
                    ], args));
                    return isTaker && chainAll ? result[0] : result;
                };
                if (useLazy && checkIteratee && typeof iteratee == "function" && iteratee.length != 1) // Avoid lazy use if the iteratee has a "length" value other than `1`.
                isLazy = useLazy = false;
                var chainAll = this.__chain__, isHybrid = !!this.__actions__.length, isUnwrapped = retUnwrapped && !chainAll, onlyLazy = isLazy && !isHybrid;
                if (!retUnwrapped && useLazy) {
                    value = onlyLazy ? value : new LazyWrapper(this);
                    var result = func.apply(value, args);
                    result.__actions__.push({
                        "func": thru,
                        "args": [
                            interceptor
                        ],
                        "thisArg": undefined
                    });
                    return new LodashWrapper(result, chainAll);
                }
                if (isUnwrapped && onlyLazy) return func.apply(this, args);
                result = this.thru(interceptor);
                return isUnwrapped ? isTaker ? result.value()[0] : result.value() : result;
            };
        });
        // Add `Array` methods to `lodash.prototype`.
        arrayEach([
            "pop",
            "push",
            "shift",
            "sort",
            "splice",
            "unshift"
        ], function(methodName) {
            var func = arrayProto[methodName], chainName = /^(?:push|sort|unshift)$/.test(methodName) ? "tap" : "thru", retUnwrapped = /^(?:pop|shift)$/.test(methodName);
            lodash.prototype[methodName] = function() {
                var args = arguments;
                if (retUnwrapped && !this.__chain__) {
                    var value = this.value();
                    return func.apply(isArray(value) ? value : [], args);
                }
                return this[chainName](function(value) {
                    return func.apply(isArray(value) ? value : [], args);
                });
            };
        });
        // Map minified method names to their real names.
        baseForOwn(LazyWrapper.prototype, function(func, methodName) {
            var lodashFunc = lodash[methodName];
            if (lodashFunc) {
                var key = lodashFunc.name + "";
                if (!hasOwnProperty.call(realNames, key)) realNames[key] = [];
                realNames[key].push({
                    "name": methodName,
                    "func": lodashFunc
                });
            }
        });
        realNames[createHybrid(undefined, WRAP_BIND_KEY_FLAG).name] = [
            {
                "name": "wrapper",
                "func": undefined
            }
        ];
        // Add methods to `LazyWrapper`.
        LazyWrapper.prototype.clone = lazyClone;
        LazyWrapper.prototype.reverse = lazyReverse;
        LazyWrapper.prototype.value = lazyValue;
        // Add chain sequence methods to the `lodash` wrapper.
        lodash.prototype.at = wrapperAt;
        lodash.prototype.chain = wrapperChain;
        lodash.prototype.commit = wrapperCommit;
        lodash.prototype.next = wrapperNext;
        lodash.prototype.plant = wrapperPlant;
        lodash.prototype.reverse = wrapperReverse;
        lodash.prototype.toJSON = lodash.prototype.valueOf = lodash.prototype.value = wrapperValue;
        // Add lazy aliases.
        lodash.prototype.first = lodash.prototype.head;
        if (symIterator) lodash.prototype[symIterator] = wrapperToIterator;
        return lodash;
    };
    /*--------------------------------------------------------------------------*/ // Export lodash.
    var _ = runInContext();
    // Some AMD build optimizers, like r.js, check for condition patterns like:
    if (typeof define == "function" && typeof define.amd == "object" && define.amd) {
        // Expose Lodash on the global object to prevent errors when Lodash is
        // loaded by a script tag in the presence of an AMD loader.
        // See http://requirejs.org/docs/errors.html#mismatch for more details.
        // Use `_.noConflict` to remove Lodash from the global object.
        root._ = _;
        // Define as an anonymous module so, through path mapping, it can be
        // referenced as the "underscore" module.
        define(function() {
            return _;
        });
    } else if (freeModule) {
        // Export for Node.js.
        (freeModule.exports = _)._ = _;
        // Export for CommonJS support.
        freeExports._ = _;
    } else // Export to the global object.
    root._ = _;
}).call(this);

});

parcelRequire.register("gFMb8", function(module, exports) {
"use strict";

var $9tVw0 = parcelRequire("9tVw0");

var $auGSw = parcelRequire("auGSw");

var $9xuA6 = parcelRequire("9xuA6");

var $5uM6n = parcelRequire("5uM6n");

var $3LfRI = parcelRequire("3LfRI");
/**
 * Create an instance of Axios
 *
 * @param {Object} defaultConfig The default config for the instance
 * @return {Axios} A new instance of Axios
 */ function $c235d8ec9831ff1b$var$createInstance(defaultConfig) {
    var context = new $9xuA6(defaultConfig);
    var instance = $auGSw($9xuA6.prototype.request, context);
    // Copy axios.prototype to instance
    $9tVw0.extend(instance, $9xuA6.prototype, context);
    // Copy context to instance
    $9tVw0.extend(instance, context);
    // Factory for creating new instances
    instance.create = function create(instanceConfig) {
        return $c235d8ec9831ff1b$var$createInstance($5uM6n(defaultConfig, instanceConfig));
    };
    return instance;
}
// Create the default instance to be exported
var $c235d8ec9831ff1b$var$axios = $c235d8ec9831ff1b$var$createInstance($3LfRI);
// Expose Axios class to allow class inheritance
$c235d8ec9831ff1b$var$axios.Axios = $9xuA6;

// Expose Cancel & CancelToken
$c235d8ec9831ff1b$var$axios.CanceledError = (parcelRequire("8vQjK"));

$c235d8ec9831ff1b$var$axios.CancelToken = (parcelRequire("jZO5r"));

$c235d8ec9831ff1b$var$axios.isCancel = (parcelRequire("9HX5z"));

$c235d8ec9831ff1b$var$axios.VERSION = (parcelRequire("gwc5k")).version;

$c235d8ec9831ff1b$var$axios.toFormData = (parcelRequire("jQcPa"));

// Expose AxiosError class
$c235d8ec9831ff1b$var$axios.AxiosError = (parcelRequire("gguHS"));
// alias for CanceledError for backward compatibility
$c235d8ec9831ff1b$var$axios.Cancel = $c235d8ec9831ff1b$var$axios.CanceledError;
// Expose all/spread
$c235d8ec9831ff1b$var$axios.all = function all(promises) {
    return Promise.all(promises);
};

$c235d8ec9831ff1b$var$axios.spread = (parcelRequire("bYx0q"));

// Expose isAxiosError
$c235d8ec9831ff1b$var$axios.isAxiosError = (parcelRequire("kF3M9"));
module.exports = $c235d8ec9831ff1b$var$axios;
// Allow use of default import syntax in TypeScript
module.exports.default = $c235d8ec9831ff1b$var$axios;

});
parcelRequire.register("9tVw0", function(module, exports) {
"use strict";

var $auGSw = parcelRequire("auGSw");
// utils is a library of generic helper functions non-specific to axios
var $6e736fcbdd97ddb2$var$toString = Object.prototype.toString;
// eslint-disable-next-line func-names
var $6e736fcbdd97ddb2$var$kindOf = function(cache) {
    // eslint-disable-next-line func-names
    return function(thing) {
        var str = $6e736fcbdd97ddb2$var$toString.call(thing);
        return cache[str] || (cache[str] = str.slice(8, -1).toLowerCase());
    };
}(Object.create(null));
function $6e736fcbdd97ddb2$var$kindOfTest(type) {
    type = type.toLowerCase();
    return function isKindOf(thing) {
        return $6e736fcbdd97ddb2$var$kindOf(thing) === type;
    };
}
/**
 * Determine if a value is an Array
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is an Array, otherwise false
 */ function $6e736fcbdd97ddb2$var$isArray(val) {
    return Array.isArray(val);
}
/**
 * Determine if a value is undefined
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if the value is undefined, otherwise false
 */ function $6e736fcbdd97ddb2$var$isUndefined(val) {
    return typeof val === "undefined";
}
/**
 * Determine if a value is a Buffer
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a Buffer, otherwise false
 */ function $6e736fcbdd97ddb2$var$isBuffer(val) {
    return val !== null && !$6e736fcbdd97ddb2$var$isUndefined(val) && val.constructor !== null && !$6e736fcbdd97ddb2$var$isUndefined(val.constructor) && typeof val.constructor.isBuffer === "function" && val.constructor.isBuffer(val);
}
/**
 * Determine if a value is an ArrayBuffer
 *
 * @function
 * @param {Object} val The value to test
 * @returns {boolean} True if value is an ArrayBuffer, otherwise false
 */ var $6e736fcbdd97ddb2$var$isArrayBuffer = $6e736fcbdd97ddb2$var$kindOfTest("ArrayBuffer");
/**
 * Determine if a value is a view on an ArrayBuffer
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a view on an ArrayBuffer, otherwise false
 */ function $6e736fcbdd97ddb2$var$isArrayBufferView(val) {
    var result;
    if (typeof ArrayBuffer !== "undefined" && ArrayBuffer.isView) result = ArrayBuffer.isView(val);
    else result = val && val.buffer && $6e736fcbdd97ddb2$var$isArrayBuffer(val.buffer);
    return result;
}
/**
 * Determine if a value is a String
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a String, otherwise false
 */ function $6e736fcbdd97ddb2$var$isString(val) {
    return typeof val === "string";
}
/**
 * Determine if a value is a Number
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a Number, otherwise false
 */ function $6e736fcbdd97ddb2$var$isNumber(val) {
    return typeof val === "number";
}
/**
 * Determine if a value is an Object
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is an Object, otherwise false
 */ function $6e736fcbdd97ddb2$var$isObject(val) {
    return val !== null && typeof val === "object";
}
/**
 * Determine if a value is a plain Object
 *
 * @param {Object} val The value to test
 * @return {boolean} True if value is a plain Object, otherwise false
 */ function $6e736fcbdd97ddb2$var$isPlainObject(val) {
    if ($6e736fcbdd97ddb2$var$kindOf(val) !== "object") return false;
    var prototype = Object.getPrototypeOf(val);
    return prototype === null || prototype === Object.prototype;
}
/**
 * Determine if a value is a Date
 *
 * @function
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a Date, otherwise false
 */ var $6e736fcbdd97ddb2$var$isDate = $6e736fcbdd97ddb2$var$kindOfTest("Date");
/**
 * Determine if a value is a File
 *
 * @function
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a File, otherwise false
 */ var $6e736fcbdd97ddb2$var$isFile = $6e736fcbdd97ddb2$var$kindOfTest("File");
/**
 * Determine if a value is a Blob
 *
 * @function
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a Blob, otherwise false
 */ var $6e736fcbdd97ddb2$var$isBlob = $6e736fcbdd97ddb2$var$kindOfTest("Blob");
/**
 * Determine if a value is a FileList
 *
 * @function
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a File, otherwise false
 */ var $6e736fcbdd97ddb2$var$isFileList = $6e736fcbdd97ddb2$var$kindOfTest("FileList");
/**
 * Determine if a value is a Function
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a Function, otherwise false
 */ function $6e736fcbdd97ddb2$var$isFunction(val) {
    return $6e736fcbdd97ddb2$var$toString.call(val) === "[object Function]";
}
/**
 * Determine if a value is a Stream
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a Stream, otherwise false
 */ function $6e736fcbdd97ddb2$var$isStream(val) {
    return $6e736fcbdd97ddb2$var$isObject(val) && $6e736fcbdd97ddb2$var$isFunction(val.pipe);
}
/**
 * Determine if a value is a FormData
 *
 * @param {Object} thing The value to test
 * @returns {boolean} True if value is an FormData, otherwise false
 */ function $6e736fcbdd97ddb2$var$isFormData(thing) {
    var pattern = "[object FormData]";
    return thing && (typeof FormData === "function" && thing instanceof FormData || $6e736fcbdd97ddb2$var$toString.call(thing) === pattern || $6e736fcbdd97ddb2$var$isFunction(thing.toString) && thing.toString() === pattern);
}
/**
 * Determine if a value is a URLSearchParams object
 * @function
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a URLSearchParams object, otherwise false
 */ var $6e736fcbdd97ddb2$var$isURLSearchParams = $6e736fcbdd97ddb2$var$kindOfTest("URLSearchParams");
/**
 * Trim excess whitespace off the beginning and end of a string
 *
 * @param {String} str The String to trim
 * @returns {String} The String freed of excess whitespace
 */ function $6e736fcbdd97ddb2$var$trim(str) {
    return str.trim ? str.trim() : str.replace(/^\s+|\s+$/g, "");
}
/**
 * Determine if we're running in a standard browser environment
 *
 * This allows axios to run in a web worker, and react-native.
 * Both environments support XMLHttpRequest, but not fully standard globals.
 *
 * web workers:
 *  typeof window -> undefined
 *  typeof document -> undefined
 *
 * react-native:
 *  navigator.product -> 'ReactNative'
 * nativescript
 *  navigator.product -> 'NativeScript' or 'NS'
 */ function $6e736fcbdd97ddb2$var$isStandardBrowserEnv() {
    if (typeof navigator !== "undefined" && (navigator.product === "ReactNative" || navigator.product === "NativeScript" || navigator.product === "NS")) return false;
    return typeof window !== "undefined" && typeof document !== "undefined";
}
/**
 * Iterate over an Array or an Object invoking a function for each item.
 *
 * If `obj` is an Array callback will be called passing
 * the value, index, and complete array for each item.
 *
 * If 'obj' is an Object callback will be called passing
 * the value, key, and complete object for each property.
 *
 * @param {Object|Array} obj The object to iterate
 * @param {Function} fn The callback to invoke for each item
 */ function $6e736fcbdd97ddb2$var$forEach(obj, fn) {
    // Don't bother if no value provided
    if (obj === null || typeof obj === "undefined") return;
    // Force an array if not already something iterable
    if (typeof obj !== "object") /*eslint no-param-reassign:0*/ obj = [
        obj
    ];
    if ($6e736fcbdd97ddb2$var$isArray(obj)) // Iterate over array values
    for(var i = 0, l = obj.length; i < l; i++)fn.call(null, obj[i], i, obj);
    else {
        // Iterate over object keys
        for(var key in obj)if (Object.prototype.hasOwnProperty.call(obj, key)) fn.call(null, obj[key], key, obj);
    }
}
/**
 * Accepts varargs expecting each argument to be an object, then
 * immutably merges the properties of each object and returns result.
 *
 * When multiple objects contain the same key the later object in
 * the arguments list will take precedence.
 *
 * Example:
 *
 * ```js
 * var result = merge({foo: 123}, {foo: 456});
 * console.log(result.foo); // outputs 456
 * ```
 *
 * @param {Object} obj1 Object to merge
 * @returns {Object} Result of all merge properties
 */ function $6e736fcbdd97ddb2$var$merge() {
    var result = {};
    function assignValue(val, key) {
        if ($6e736fcbdd97ddb2$var$isPlainObject(result[key]) && $6e736fcbdd97ddb2$var$isPlainObject(val)) result[key] = $6e736fcbdd97ddb2$var$merge(result[key], val);
        else if ($6e736fcbdd97ddb2$var$isPlainObject(val)) result[key] = $6e736fcbdd97ddb2$var$merge({}, val);
        else if ($6e736fcbdd97ddb2$var$isArray(val)) result[key] = val.slice();
        else result[key] = val;
    }
    for(var i = 0, l = arguments.length; i < l; i++)$6e736fcbdd97ddb2$var$forEach(arguments[i], assignValue);
    return result;
}
/**
 * Extends object a by mutably adding to it the properties of object b.
 *
 * @param {Object} a The object to be extended
 * @param {Object} b The object to copy properties from
 * @param {Object} thisArg The object to bind function to
 * @return {Object} The resulting value of object a
 */ function $6e736fcbdd97ddb2$var$extend(a, b, thisArg) {
    $6e736fcbdd97ddb2$var$forEach(b, function assignValue(val, key) {
        if (thisArg && typeof val === "function") a[key] = $auGSw(val, thisArg);
        else a[key] = val;
    });
    return a;
}
/**
 * Remove byte order marker. This catches EF BB BF (the UTF-8 BOM)
 *
 * @param {string} content with BOM
 * @return {string} content value without BOM
 */ function $6e736fcbdd97ddb2$var$stripBOM(content) {
    if (content.charCodeAt(0) === 0xFEFF) content = content.slice(1);
    return content;
}
/**
 * Inherit the prototype methods from one constructor into another
 * @param {function} constructor
 * @param {function} superConstructor
 * @param {object} [props]
 * @param {object} [descriptors]
 */ function $6e736fcbdd97ddb2$var$inherits(constructor, superConstructor, props, descriptors) {
    constructor.prototype = Object.create(superConstructor.prototype, descriptors);
    constructor.prototype.constructor = constructor;
    props && Object.assign(constructor.prototype, props);
}
/**
 * Resolve object with deep prototype chain to a flat object
 * @param {Object} sourceObj source object
 * @param {Object} [destObj]
 * @param {Function} [filter]
 * @returns {Object}
 */ function $6e736fcbdd97ddb2$var$toFlatObject(sourceObj, destObj, filter) {
    var props;
    var i;
    var prop;
    var merged = {};
    destObj = destObj || {};
    do {
        props = Object.getOwnPropertyNames(sourceObj);
        i = props.length;
        while(i-- > 0){
            prop = props[i];
            if (!merged[prop]) {
                destObj[prop] = sourceObj[prop];
                merged[prop] = true;
            }
        }
        sourceObj = Object.getPrototypeOf(sourceObj);
    }while (sourceObj && (!filter || filter(sourceObj, destObj)) && sourceObj !== Object.prototype);
    return destObj;
}
/*
 * determines whether a string ends with the characters of a specified string
 * @param {String} str
 * @param {String} searchString
 * @param {Number} [position= 0]
 * @returns {boolean}
 */ function $6e736fcbdd97ddb2$var$endsWith(str, searchString, position) {
    str = String(str);
    if (position === undefined || position > str.length) position = str.length;
    position -= searchString.length;
    var lastIndex = str.indexOf(searchString, position);
    return lastIndex !== -1 && lastIndex === position;
}
/**
 * Returns new array from array like object
 * @param {*} [thing]
 * @returns {Array}
 */ function $6e736fcbdd97ddb2$var$toArray(thing) {
    if (!thing) return null;
    var i = thing.length;
    if ($6e736fcbdd97ddb2$var$isUndefined(i)) return null;
    var arr = new Array(i);
    while(i-- > 0)arr[i] = thing[i];
    return arr;
}
// eslint-disable-next-line func-names
var $6e736fcbdd97ddb2$var$isTypedArray = function(TypedArray) {
    // eslint-disable-next-line func-names
    return function(thing) {
        return TypedArray && thing instanceof TypedArray;
    };
}(typeof Uint8Array !== "undefined" && Object.getPrototypeOf(Uint8Array));
module.exports = {
    isArray: $6e736fcbdd97ddb2$var$isArray,
    isArrayBuffer: $6e736fcbdd97ddb2$var$isArrayBuffer,
    isBuffer: $6e736fcbdd97ddb2$var$isBuffer,
    isFormData: $6e736fcbdd97ddb2$var$isFormData,
    isArrayBufferView: $6e736fcbdd97ddb2$var$isArrayBufferView,
    isString: $6e736fcbdd97ddb2$var$isString,
    isNumber: $6e736fcbdd97ddb2$var$isNumber,
    isObject: $6e736fcbdd97ddb2$var$isObject,
    isPlainObject: $6e736fcbdd97ddb2$var$isPlainObject,
    isUndefined: $6e736fcbdd97ddb2$var$isUndefined,
    isDate: $6e736fcbdd97ddb2$var$isDate,
    isFile: $6e736fcbdd97ddb2$var$isFile,
    isBlob: $6e736fcbdd97ddb2$var$isBlob,
    isFunction: $6e736fcbdd97ddb2$var$isFunction,
    isStream: $6e736fcbdd97ddb2$var$isStream,
    isURLSearchParams: $6e736fcbdd97ddb2$var$isURLSearchParams,
    isStandardBrowserEnv: $6e736fcbdd97ddb2$var$isStandardBrowserEnv,
    forEach: $6e736fcbdd97ddb2$var$forEach,
    merge: $6e736fcbdd97ddb2$var$merge,
    extend: $6e736fcbdd97ddb2$var$extend,
    trim: $6e736fcbdd97ddb2$var$trim,
    stripBOM: $6e736fcbdd97ddb2$var$stripBOM,
    inherits: $6e736fcbdd97ddb2$var$inherits,
    toFlatObject: $6e736fcbdd97ddb2$var$toFlatObject,
    kindOf: $6e736fcbdd97ddb2$var$kindOf,
    kindOfTest: $6e736fcbdd97ddb2$var$kindOfTest,
    endsWith: $6e736fcbdd97ddb2$var$endsWith,
    toArray: $6e736fcbdd97ddb2$var$toArray,
    isTypedArray: $6e736fcbdd97ddb2$var$isTypedArray,
    isFileList: $6e736fcbdd97ddb2$var$isFileList
};

});
parcelRequire.register("auGSw", function(module, exports) {
"use strict";
module.exports = function bind(fn, thisArg) {
    return function wrap() {
        var args = new Array(arguments.length);
        for(var i = 0; i < args.length; i++)args[i] = arguments[i];
        return fn.apply(thisArg, args);
    };
};

});


parcelRequire.register("9xuA6", function(module, exports) {
"use strict";

var $9tVw0 = parcelRequire("9tVw0");

var $7VdEp = parcelRequire("7VdEp");

var $jblQ5 = parcelRequire("jblQ5");

var $hZZvB = parcelRequire("hZZvB");

var $5uM6n = parcelRequire("5uM6n");

var $e3pkI = parcelRequire("e3pkI");

var $bnH3B = parcelRequire("bnH3B");
var $6f1eeaf24b5b480f$var$validators = $bnH3B.validators;
/**
 * Create a new instance of Axios
 *
 * @param {Object} instanceConfig The default config for the instance
 */ function $6f1eeaf24b5b480f$var$Axios(instanceConfig) {
    this.defaults = instanceConfig;
    this.interceptors = {
        request: new $jblQ5(),
        response: new $jblQ5()
    };
}
/**
 * Dispatch a request
 *
 * @param {Object} config The config specific for this request (merged with this.defaults)
 */ $6f1eeaf24b5b480f$var$Axios.prototype.request = function request(configOrUrl, config) {
    /*eslint no-param-reassign:0*/ // Allow for axios('example/url'[, config]) a la fetch API
    if (typeof configOrUrl === "string") {
        config = config || {};
        config.url = configOrUrl;
    } else config = configOrUrl || {};
    config = $5uM6n(this.defaults, config);
    // Set config.method
    if (config.method) config.method = config.method.toLowerCase();
    else if (this.defaults.method) config.method = this.defaults.method.toLowerCase();
    else config.method = "get";
    var transitional = config.transitional;
    if (transitional !== undefined) $bnH3B.assertOptions(transitional, {
        silentJSONParsing: $6f1eeaf24b5b480f$var$validators.transitional($6f1eeaf24b5b480f$var$validators.boolean),
        forcedJSONParsing: $6f1eeaf24b5b480f$var$validators.transitional($6f1eeaf24b5b480f$var$validators.boolean),
        clarifyTimeoutError: $6f1eeaf24b5b480f$var$validators.transitional($6f1eeaf24b5b480f$var$validators.boolean)
    }, false);
    // filter out skipped interceptors
    var requestInterceptorChain = [];
    var synchronousRequestInterceptors = true;
    this.interceptors.request.forEach(function unshiftRequestInterceptors(interceptor) {
        if (typeof interceptor.runWhen === "function" && interceptor.runWhen(config) === false) return;
        synchronousRequestInterceptors = synchronousRequestInterceptors && interceptor.synchronous;
        requestInterceptorChain.unshift(interceptor.fulfilled, interceptor.rejected);
    });
    var responseInterceptorChain = [];
    this.interceptors.response.forEach(function pushResponseInterceptors(interceptor) {
        responseInterceptorChain.push(interceptor.fulfilled, interceptor.rejected);
    });
    var promise;
    if (!synchronousRequestInterceptors) {
        var chain = [
            $hZZvB,
            undefined
        ];
        Array.prototype.unshift.apply(chain, requestInterceptorChain);
        chain = chain.concat(responseInterceptorChain);
        promise = Promise.resolve(config);
        while(chain.length)promise = promise.then(chain.shift(), chain.shift());
        return promise;
    }
    var newConfig = config;
    while(requestInterceptorChain.length){
        var onFulfilled = requestInterceptorChain.shift();
        var onRejected = requestInterceptorChain.shift();
        try {
            newConfig = onFulfilled(newConfig);
        } catch (error) {
            onRejected(error);
            break;
        }
    }
    try {
        promise = $hZZvB(newConfig);
    } catch (error) {
        return Promise.reject(error);
    }
    while(responseInterceptorChain.length)promise = promise.then(responseInterceptorChain.shift(), responseInterceptorChain.shift());
    return promise;
};
$6f1eeaf24b5b480f$var$Axios.prototype.getUri = function getUri(config) {
    config = $5uM6n(this.defaults, config);
    var fullPath = $e3pkI(config.baseURL, config.url);
    return $7VdEp(fullPath, config.params, config.paramsSerializer);
};
// Provide aliases for supported request methods
$9tVw0.forEach([
    "delete",
    "get",
    "head",
    "options"
], function forEachMethodNoData(method) {
    /*eslint func-names:0*/ $6f1eeaf24b5b480f$var$Axios.prototype[method] = function(url, config) {
        return this.request($5uM6n(config || {}, {
            method: method,
            url: url,
            data: (config || {}).data
        }));
    };
});
$9tVw0.forEach([
    "post",
    "put",
    "patch"
], function forEachMethodWithData(method) {
    /*eslint func-names:0*/ function generateHTTPMethod(isForm) {
        return function httpMethod(url, data, config) {
            return this.request($5uM6n(config || {}, {
                method: method,
                headers: isForm ? {
                    "Content-Type": "multipart/form-data"
                } : {},
                url: url,
                data: data
            }));
        };
    }
    $6f1eeaf24b5b480f$var$Axios.prototype[method] = generateHTTPMethod();
    $6f1eeaf24b5b480f$var$Axios.prototype[method + "Form"] = generateHTTPMethod(true);
});
module.exports = $6f1eeaf24b5b480f$var$Axios;

});
parcelRequire.register("7VdEp", function(module, exports) {
"use strict";

var $9tVw0 = parcelRequire("9tVw0");
function $5c487204cf93665d$var$encode(val) {
    return encodeURIComponent(val).replace(/%3A/gi, ":").replace(/%24/g, "$").replace(/%2C/gi, ",").replace(/%20/g, "+").replace(/%5B/gi, "[").replace(/%5D/gi, "]");
}
/**
 * Build a URL by appending params to the end
 *
 * @param {string} url The base of the url (e.g., http://www.google.com)
 * @param {object} [params] The params to be appended
 * @returns {string} The formatted url
 */ module.exports = function buildURL(url, params, paramsSerializer) {
    /*eslint no-param-reassign:0*/ if (!params) return url;
    var serializedParams;
    if (paramsSerializer) serializedParams = paramsSerializer(params);
    else if ($9tVw0.isURLSearchParams(params)) serializedParams = params.toString();
    else {
        var parts = [];
        $9tVw0.forEach(params, function serialize(val, key) {
            if (val === null || typeof val === "undefined") return;
            if ($9tVw0.isArray(val)) key = key + "[]";
            else val = [
                val
            ];
            $9tVw0.forEach(val, function parseValue(v) {
                if ($9tVw0.isDate(v)) v = v.toISOString();
                else if ($9tVw0.isObject(v)) v = JSON.stringify(v);
                parts.push($5c487204cf93665d$var$encode(key) + "=" + $5c487204cf93665d$var$encode(v));
            });
        });
        serializedParams = parts.join("&");
    }
    if (serializedParams) {
        var hashmarkIndex = url.indexOf("#");
        if (hashmarkIndex !== -1) url = url.slice(0, hashmarkIndex);
        url += (url.indexOf("?") === -1 ? "?" : "&") + serializedParams;
    }
    return url;
};

});

parcelRequire.register("jblQ5", function(module, exports) {
"use strict";

var $9tVw0 = parcelRequire("9tVw0");
function $df6ffc2f2a785d2c$var$InterceptorManager() {
    this.handlers = [];
}
/**
 * Add a new interceptor to the stack
 *
 * @param {Function} fulfilled The function to handle `then` for a `Promise`
 * @param {Function} rejected The function to handle `reject` for a `Promise`
 *
 * @return {Number} An ID used to remove interceptor later
 */ $df6ffc2f2a785d2c$var$InterceptorManager.prototype.use = function use(fulfilled, rejected, options) {
    this.handlers.push({
        fulfilled: fulfilled,
        rejected: rejected,
        synchronous: options ? options.synchronous : false,
        runWhen: options ? options.runWhen : null
    });
    return this.handlers.length - 1;
};
/**
 * Remove an interceptor from the stack
 *
 * @param {Number} id The ID that was returned by `use`
 */ $df6ffc2f2a785d2c$var$InterceptorManager.prototype.eject = function eject(id) {
    if (this.handlers[id]) this.handlers[id] = null;
};
/**
 * Iterate over all the registered interceptors
 *
 * This method is particularly useful for skipping over any
 * interceptors that may have become `null` calling `eject`.
 *
 * @param {Function} fn The function to call for each interceptor
 */ $df6ffc2f2a785d2c$var$InterceptorManager.prototype.forEach = function forEach(fn) {
    $9tVw0.forEach(this.handlers, function forEachHandler(h) {
        if (h !== null) fn(h);
    });
};
module.exports = $df6ffc2f2a785d2c$var$InterceptorManager;

});

parcelRequire.register("hZZvB", function(module, exports) {
"use strict";

var $9tVw0 = parcelRequire("9tVw0");

var $gP3P1 = parcelRequire("gP3P1");

var $9HX5z = parcelRequire("9HX5z");

var $3LfRI = parcelRequire("3LfRI");

var $8vQjK = parcelRequire("8vQjK");
/**
 * Throws a `CanceledError` if cancellation has been requested.
 */ function $d1a7d88b6f9cb65d$var$throwIfCancellationRequested(config) {
    if (config.cancelToken) config.cancelToken.throwIfRequested();
    if (config.signal && config.signal.aborted) throw new $8vQjK();
}
/**
 * Dispatch a request to the server using the configured adapter.
 *
 * @param {object} config The config that is to be used for the request
 * @returns {Promise} The Promise to be fulfilled
 */ module.exports = function dispatchRequest(config) {
    $d1a7d88b6f9cb65d$var$throwIfCancellationRequested(config);
    // Ensure headers exist
    config.headers = config.headers || {};
    // Transform request data
    config.data = $gP3P1.call(config, config.data, config.headers, config.transformRequest);
    // Flatten headers
    config.headers = $9tVw0.merge(config.headers.common || {}, config.headers[config.method] || {}, config.headers);
    $9tVw0.forEach([
        "delete",
        "get",
        "head",
        "post",
        "put",
        "patch",
        "common"
    ], function cleanHeaderConfig(method) {
        delete config.headers[method];
    });
    var adapter = config.adapter || $3LfRI.adapter;
    return adapter(config).then(function onAdapterResolution(response) {
        $d1a7d88b6f9cb65d$var$throwIfCancellationRequested(config);
        // Transform response data
        response.data = $gP3P1.call(config, response.data, response.headers, config.transformResponse);
        return response;
    }, function onAdapterRejection(reason) {
        if (!$9HX5z(reason)) {
            $d1a7d88b6f9cb65d$var$throwIfCancellationRequested(config);
            // Transform response data
            if (reason && reason.response) reason.response.data = $gP3P1.call(config, reason.response.data, reason.response.headers, config.transformResponse);
        }
        return Promise.reject(reason);
    });
};

});
parcelRequire.register("gP3P1", function(module, exports) {
"use strict";

var $9tVw0 = parcelRequire("9tVw0");

var $3LfRI = parcelRequire("3LfRI");
/**
 * Transform the data for a request or a response
 *
 * @param {Object|String} data The data to be transformed
 * @param {Array} headers The headers for the request or response
 * @param {Array|Function} fns A single function or Array of functions
 * @returns {*} The resulting transformed data
 */ module.exports = function transformData(data, headers, fns) {
    var context = this || $3LfRI;
    /*eslint no-param-reassign:0*/ $9tVw0.forEach(fns, function transform(fn) {
        data = fn.call(context, data, headers);
    });
    return data;
};

});
parcelRequire.register("3LfRI", function(module, exports) {

var $c1Pic = parcelRequire("c1Pic");
"use strict";

var $9tVw0 = parcelRequire("9tVw0");

var $bwcuk = parcelRequire("bwcuk");

var $gguHS = parcelRequire("gguHS");

var $bPcbR = parcelRequire("bPcbR");

var $jQcPa = parcelRequire("jQcPa");
var $2bd21164819a2890$var$DEFAULT_CONTENT_TYPE = {
    "Content-Type": "application/x-www-form-urlencoded"
};
function $2bd21164819a2890$var$setContentTypeIfUnset(headers, value) {
    if (!$9tVw0.isUndefined(headers) && $9tVw0.isUndefined(headers["Content-Type"])) headers["Content-Type"] = value;
}


function $2bd21164819a2890$var$getDefaultAdapter() {
    var adapter;
    if (typeof XMLHttpRequest !== "undefined") // For browsers use XHR adapter
    adapter = (parcelRequire("fAFKj"));
    else if (typeof $c1Pic !== "undefined" && Object.prototype.toString.call($c1Pic) === "[object process]") // For node use HTTP adapter
    adapter = (parcelRequire("fAFKj"));
    return adapter;
}
function $2bd21164819a2890$var$stringifySafely(rawValue, parser, encoder) {
    if ($9tVw0.isString(rawValue)) try {
        (parser || JSON.parse)(rawValue);
        return $9tVw0.trim(rawValue);
    } catch (e) {
        if (e.name !== "SyntaxError") throw e;
    }
    return (encoder || JSON.stringify)(rawValue);
}

var $2bd21164819a2890$var$defaults = {
    transitional: $bPcbR,
    adapter: $2bd21164819a2890$var$getDefaultAdapter(),
    transformRequest: [
        function transformRequest(data, headers) {
            $bwcuk(headers, "Accept");
            $bwcuk(headers, "Content-Type");
            if ($9tVw0.isFormData(data) || $9tVw0.isArrayBuffer(data) || $9tVw0.isBuffer(data) || $9tVw0.isStream(data) || $9tVw0.isFile(data) || $9tVw0.isBlob(data)) return data;
            if ($9tVw0.isArrayBufferView(data)) return data.buffer;
            if ($9tVw0.isURLSearchParams(data)) {
                $2bd21164819a2890$var$setContentTypeIfUnset(headers, "application/x-www-form-urlencoded;charset=utf-8");
                return data.toString();
            }
            var isObjectPayload = $9tVw0.isObject(data);
            var contentType = headers && headers["Content-Type"];
            var isFileList;
            if ((isFileList = $9tVw0.isFileList(data)) || isObjectPayload && contentType === "multipart/form-data") {
                var _FormData = this.env && this.env.FormData;
                return $jQcPa(isFileList ? {
                    "files[]": data
                } : data, _FormData && new _FormData());
            } else if (isObjectPayload || contentType === "application/json") {
                $2bd21164819a2890$var$setContentTypeIfUnset(headers, "application/json");
                return $2bd21164819a2890$var$stringifySafely(data);
            }
            return data;
        }
    ],
    transformResponse: [
        function transformResponse(data) {
            var transitional = this.transitional || $2bd21164819a2890$var$defaults.transitional;
            var silentJSONParsing = transitional && transitional.silentJSONParsing;
            var forcedJSONParsing = transitional && transitional.forcedJSONParsing;
            var strictJSONParsing = !silentJSONParsing && this.responseType === "json";
            if (strictJSONParsing || forcedJSONParsing && $9tVw0.isString(data) && data.length) try {
                return JSON.parse(data);
            } catch (e) {
                if (strictJSONParsing) {
                    if (e.name === "SyntaxError") throw $gguHS.from(e, $gguHS.ERR_BAD_RESPONSE, this, null, this.response);
                    throw e;
                }
            }
            return data;
        }
    ],
    /**
   * A timeout in milliseconds to abort a request. If set to 0 (default) a
   * timeout is not created.
   */ timeout: 0,
    xsrfCookieName: "XSRF-TOKEN",
    xsrfHeaderName: "X-XSRF-TOKEN",
    maxContentLength: -1,
    maxBodyLength: -1,
    env: {
        FormData: (parcelRequire("h3mi1"))
    },
    validateStatus: function validateStatus(status) {
        return status >= 200 && status < 300;
    },
    headers: {
        common: {
            "Accept": "application/json, text/plain, */*"
        }
    }
};
$9tVw0.forEach([
    "delete",
    "get",
    "head"
], function forEachMethodNoData(method) {
    $2bd21164819a2890$var$defaults.headers[method] = {};
});
$9tVw0.forEach([
    "post",
    "put",
    "patch"
], function forEachMethodWithData(method) {
    $2bd21164819a2890$var$defaults.headers[method] = $9tVw0.merge($2bd21164819a2890$var$DEFAULT_CONTENT_TYPE);
});
module.exports = $2bd21164819a2890$var$defaults;

});
parcelRequire.register("c1Pic", function(module, exports) {
// shim for using process in browser
var $8c1d5da921d2dd22$var$process = module.exports = {};
// cached from whatever global is present so that test runners that stub it
// don't break things.  But we need to wrap it in a try catch in case it is
// wrapped in strict mode code which doesn't define any globals.  It's inside a
// function because try/catches deoptimize in certain engines.
var $8c1d5da921d2dd22$var$cachedSetTimeout;
var $8c1d5da921d2dd22$var$cachedClearTimeout;
function $8c1d5da921d2dd22$var$defaultSetTimout() {
    throw new Error("setTimeout has not been defined");
}
function $8c1d5da921d2dd22$var$defaultClearTimeout() {
    throw new Error("clearTimeout has not been defined");
}
(function() {
    try {
        if (typeof setTimeout === "function") $8c1d5da921d2dd22$var$cachedSetTimeout = setTimeout;
        else $8c1d5da921d2dd22$var$cachedSetTimeout = $8c1d5da921d2dd22$var$defaultSetTimout;
    } catch (e) {
        $8c1d5da921d2dd22$var$cachedSetTimeout = $8c1d5da921d2dd22$var$defaultSetTimout;
    }
    try {
        if (typeof clearTimeout === "function") $8c1d5da921d2dd22$var$cachedClearTimeout = clearTimeout;
        else $8c1d5da921d2dd22$var$cachedClearTimeout = $8c1d5da921d2dd22$var$defaultClearTimeout;
    } catch (e) {
        $8c1d5da921d2dd22$var$cachedClearTimeout = $8c1d5da921d2dd22$var$defaultClearTimeout;
    }
})();
function $8c1d5da921d2dd22$var$runTimeout(fun) {
    if ($8c1d5da921d2dd22$var$cachedSetTimeout === setTimeout) //normal enviroments in sane situations
    return setTimeout(fun, 0);
    // if setTimeout wasn't available but was latter defined
    if (($8c1d5da921d2dd22$var$cachedSetTimeout === $8c1d5da921d2dd22$var$defaultSetTimout || !$8c1d5da921d2dd22$var$cachedSetTimeout) && setTimeout) {
        $8c1d5da921d2dd22$var$cachedSetTimeout = setTimeout;
        return setTimeout(fun, 0);
    }
    try {
        // when when somebody has screwed with setTimeout but no I.E. maddness
        return $8c1d5da921d2dd22$var$cachedSetTimeout(fun, 0);
    } catch (e) {
        try {
            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally
            return $8c1d5da921d2dd22$var$cachedSetTimeout.call(null, fun, 0);
        } catch (e) {
            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error
            return $8c1d5da921d2dd22$var$cachedSetTimeout.call(this, fun, 0);
        }
    }
}
function $8c1d5da921d2dd22$var$runClearTimeout(marker) {
    if ($8c1d5da921d2dd22$var$cachedClearTimeout === clearTimeout) //normal enviroments in sane situations
    return clearTimeout(marker);
    // if clearTimeout wasn't available but was latter defined
    if (($8c1d5da921d2dd22$var$cachedClearTimeout === $8c1d5da921d2dd22$var$defaultClearTimeout || !$8c1d5da921d2dd22$var$cachedClearTimeout) && clearTimeout) {
        $8c1d5da921d2dd22$var$cachedClearTimeout = clearTimeout;
        return clearTimeout(marker);
    }
    try {
        // when when somebody has screwed with setTimeout but no I.E. maddness
        return $8c1d5da921d2dd22$var$cachedClearTimeout(marker);
    } catch (e) {
        try {
            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally
            return $8c1d5da921d2dd22$var$cachedClearTimeout.call(null, marker);
        } catch (e) {
            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.
            // Some versions of I.E. have different rules for clearTimeout vs setTimeout
            return $8c1d5da921d2dd22$var$cachedClearTimeout.call(this, marker);
        }
    }
}
var $8c1d5da921d2dd22$var$queue = [];
var $8c1d5da921d2dd22$var$draining = false;
var $8c1d5da921d2dd22$var$currentQueue;
var $8c1d5da921d2dd22$var$queueIndex = -1;
function $8c1d5da921d2dd22$var$cleanUpNextTick() {
    if (!$8c1d5da921d2dd22$var$draining || !$8c1d5da921d2dd22$var$currentQueue) return;
    $8c1d5da921d2dd22$var$draining = false;
    if ($8c1d5da921d2dd22$var$currentQueue.length) $8c1d5da921d2dd22$var$queue = $8c1d5da921d2dd22$var$currentQueue.concat($8c1d5da921d2dd22$var$queue);
    else $8c1d5da921d2dd22$var$queueIndex = -1;
    if ($8c1d5da921d2dd22$var$queue.length) $8c1d5da921d2dd22$var$drainQueue();
}
function $8c1d5da921d2dd22$var$drainQueue() {
    if ($8c1d5da921d2dd22$var$draining) return;
    var timeout = $8c1d5da921d2dd22$var$runTimeout($8c1d5da921d2dd22$var$cleanUpNextTick);
    $8c1d5da921d2dd22$var$draining = true;
    var len = $8c1d5da921d2dd22$var$queue.length;
    while(len){
        $8c1d5da921d2dd22$var$currentQueue = $8c1d5da921d2dd22$var$queue;
        $8c1d5da921d2dd22$var$queue = [];
        while(++$8c1d5da921d2dd22$var$queueIndex < len)if ($8c1d5da921d2dd22$var$currentQueue) $8c1d5da921d2dd22$var$currentQueue[$8c1d5da921d2dd22$var$queueIndex].run();
        $8c1d5da921d2dd22$var$queueIndex = -1;
        len = $8c1d5da921d2dd22$var$queue.length;
    }
    $8c1d5da921d2dd22$var$currentQueue = null;
    $8c1d5da921d2dd22$var$draining = false;
    $8c1d5da921d2dd22$var$runClearTimeout(timeout);
}
$8c1d5da921d2dd22$var$process.nextTick = function(fun) {
    var args = new Array(arguments.length - 1);
    if (arguments.length > 1) for(var i = 1; i < arguments.length; i++)args[i - 1] = arguments[i];
    $8c1d5da921d2dd22$var$queue.push(new $8c1d5da921d2dd22$var$Item(fun, args));
    if ($8c1d5da921d2dd22$var$queue.length === 1 && !$8c1d5da921d2dd22$var$draining) $8c1d5da921d2dd22$var$runTimeout($8c1d5da921d2dd22$var$drainQueue);
};
// v8 likes predictible objects
function $8c1d5da921d2dd22$var$Item(fun, array) {
    this.fun = fun;
    this.array = array;
}
$8c1d5da921d2dd22$var$Item.prototype.run = function() {
    this.fun.apply(null, this.array);
};
$8c1d5da921d2dd22$var$process.title = "browser";
$8c1d5da921d2dd22$var$process.browser = true;
$8c1d5da921d2dd22$var$process.env = {};
$8c1d5da921d2dd22$var$process.argv = [];
$8c1d5da921d2dd22$var$process.version = ""; // empty string to avoid regexp issues
$8c1d5da921d2dd22$var$process.versions = {};
function $8c1d5da921d2dd22$var$noop() {}
$8c1d5da921d2dd22$var$process.on = $8c1d5da921d2dd22$var$noop;
$8c1d5da921d2dd22$var$process.addListener = $8c1d5da921d2dd22$var$noop;
$8c1d5da921d2dd22$var$process.once = $8c1d5da921d2dd22$var$noop;
$8c1d5da921d2dd22$var$process.off = $8c1d5da921d2dd22$var$noop;
$8c1d5da921d2dd22$var$process.removeListener = $8c1d5da921d2dd22$var$noop;
$8c1d5da921d2dd22$var$process.removeAllListeners = $8c1d5da921d2dd22$var$noop;
$8c1d5da921d2dd22$var$process.emit = $8c1d5da921d2dd22$var$noop;
$8c1d5da921d2dd22$var$process.prependListener = $8c1d5da921d2dd22$var$noop;
$8c1d5da921d2dd22$var$process.prependOnceListener = $8c1d5da921d2dd22$var$noop;
$8c1d5da921d2dd22$var$process.listeners = function(name) {
    return [];
};
$8c1d5da921d2dd22$var$process.binding = function(name) {
    throw new Error("process.binding is not supported");
};
$8c1d5da921d2dd22$var$process.cwd = function() {
    return "/";
};
$8c1d5da921d2dd22$var$process.chdir = function(dir) {
    throw new Error("process.chdir is not supported");
};
$8c1d5da921d2dd22$var$process.umask = function() {
    return 0;
};

});

parcelRequire.register("bwcuk", function(module, exports) {
"use strict";

var $9tVw0 = parcelRequire("9tVw0");
module.exports = function normalizeHeaderName(headers, normalizedName) {
    $9tVw0.forEach(headers, function processHeader(value, name) {
        if (name !== normalizedName && name.toUpperCase() === normalizedName.toUpperCase()) {
            headers[normalizedName] = value;
            delete headers[name];
        }
    });
};

});

parcelRequire.register("gguHS", function(module, exports) {
"use strict";

var $9tVw0 = parcelRequire("9tVw0");
/**
 * Create an Error with the specified message, config, error code, request and response.
 *
 * @param {string} message The error message.
 * @param {string} [code] The error code (for example, 'ECONNABORTED').
 * @param {Object} [config] The config.
 * @param {Object} [request] The request.
 * @param {Object} [response] The response.
 * @returns {Error} The created error.
 */ function $bd75f5a64ba0bf9a$var$AxiosError(message, code, config, request, response) {
    Error.call(this);
    this.message = message;
    this.name = "AxiosError";
    code && (this.code = code);
    config && (this.config = config);
    request && (this.request = request);
    response && (this.response = response);
}
$9tVw0.inherits($bd75f5a64ba0bf9a$var$AxiosError, Error, {
    toJSON: function toJSON() {
        return {
            // Standard
            message: this.message,
            name: this.name,
            // Microsoft
            description: this.description,
            number: this.number,
            // Mozilla
            fileName: this.fileName,
            lineNumber: this.lineNumber,
            columnNumber: this.columnNumber,
            stack: this.stack,
            // Axios
            config: this.config,
            code: this.code,
            status: this.response && this.response.status ? this.response.status : null
        };
    }
});
var $bd75f5a64ba0bf9a$var$prototype = $bd75f5a64ba0bf9a$var$AxiosError.prototype;
var $bd75f5a64ba0bf9a$var$descriptors = {};
[
    "ERR_BAD_OPTION_VALUE",
    "ERR_BAD_OPTION",
    "ECONNABORTED",
    "ETIMEDOUT",
    "ERR_NETWORK",
    "ERR_FR_TOO_MANY_REDIRECTS",
    "ERR_DEPRECATED",
    "ERR_BAD_RESPONSE",
    "ERR_BAD_REQUEST",
    "ERR_CANCELED"
].forEach(function(code) {
    $bd75f5a64ba0bf9a$var$descriptors[code] = {
        value: code
    };
});
Object.defineProperties($bd75f5a64ba0bf9a$var$AxiosError, $bd75f5a64ba0bf9a$var$descriptors);
Object.defineProperty($bd75f5a64ba0bf9a$var$prototype, "isAxiosError", {
    value: true
});
// eslint-disable-next-line func-names
$bd75f5a64ba0bf9a$var$AxiosError.from = function(error, code, config, request, response, customProps) {
    var axiosError = Object.create($bd75f5a64ba0bf9a$var$prototype);
    $9tVw0.toFlatObject(error, axiosError, function filter(obj) {
        return obj !== Error.prototype;
    });
    $bd75f5a64ba0bf9a$var$AxiosError.call(axiosError, error.message, code, config, request, response);
    axiosError.name = error.name;
    customProps && Object.assign(axiosError, customProps);
    return axiosError;
};
module.exports = $bd75f5a64ba0bf9a$var$AxiosError;

});

parcelRequire.register("bPcbR", function(module, exports) {
"use strict";
module.exports = {
    silentJSONParsing: true,
    forcedJSONParsing: true,
    clarifyTimeoutError: false
};

});

parcelRequire.register("jQcPa", function(module, exports) {

var $hMptz = parcelRequire("hMptz");
var $e71cd24f37ba9dcc$require$Buffer = $hMptz.Buffer;
"use strict";

var $9tVw0 = parcelRequire("9tVw0");
/**
 * Convert a data object to FormData
 * @param {Object} obj
 * @param {?Object} [formData]
 * @returns {Object}
 **/ function $e71cd24f37ba9dcc$var$toFormData(obj, formData) {
    // eslint-disable-next-line no-param-reassign
    formData = formData || new FormData();
    var stack = [];
    function convertValue(value) {
        if (value === null) return "";
        if ($9tVw0.isDate(value)) return value.toISOString();
        if ($9tVw0.isArrayBuffer(value) || $9tVw0.isTypedArray(value)) return typeof Blob === "function" ? new Blob([
            value
        ]) : $e71cd24f37ba9dcc$require$Buffer.from(value);
        return value;
    }
    function build(data, parentKey) {
        if ($9tVw0.isPlainObject(data) || $9tVw0.isArray(data)) {
            if (stack.indexOf(data) !== -1) throw Error("Circular reference detected in " + parentKey);
            stack.push(data);
            $9tVw0.forEach(data, function each(value, key) {
                if ($9tVw0.isUndefined(value)) return;
                var fullKey = parentKey ? parentKey + "." + key : key;
                var arr;
                if (value && !parentKey && typeof value === "object") {
                    if ($9tVw0.endsWith(key, "{}")) // eslint-disable-next-line no-param-reassign
                    value = JSON.stringify(value);
                    else if ($9tVw0.endsWith(key, "[]") && (arr = $9tVw0.toArray(value))) {
                        // eslint-disable-next-line func-names
                        arr.forEach(function(el) {
                            !$9tVw0.isUndefined(el) && formData.append(fullKey, convertValue(el));
                        });
                        return;
                    }
                }
                build(value, fullKey);
            });
            stack.pop();
        } else formData.append(parentKey, convertValue(data));
    }
    build(obj);
    return formData;
}
module.exports = $e71cd24f37ba9dcc$var$toFormData;

});
parcelRequire.register("hMptz", function(module, exports) {

$parcel$export(module.exports, "Buffer", function () { return $cf1aae5e3aefcbf1$export$a143d493d941bafc; }, function (v) { return $cf1aae5e3aefcbf1$export$a143d493d941bafc = v; });
$parcel$export(module.exports, "INSPECT_MAX_BYTES", function () { return $cf1aae5e3aefcbf1$export$f99ded8fe4b79145; }, function (v) { return $cf1aae5e3aefcbf1$export$f99ded8fe4b79145 = v; });
/*!
 * The buffer module from node.js, for the browser.
 *
 * @author   Feross Aboukhadijeh <https://feross.org>
 * @license  MIT
 */ /* eslint-disable no-proto */ var $cf1aae5e3aefcbf1$export$a143d493d941bafc;
var $cf1aae5e3aefcbf1$export$e4cf37d7f6fb9e0a;
var $cf1aae5e3aefcbf1$export$f99ded8fe4b79145;
var $cf1aae5e3aefcbf1$export$599f31c3813fae4d;
"use strict";

var $jCgB5 = parcelRequire("jCgB5");

var $bHOP2 = parcelRequire("bHOP2");
var $cf1aae5e3aefcbf1$var$customInspectSymbol = typeof Symbol === "function" && typeof Symbol["for"] === "function" // eslint-disable-line dot-notation
 ? Symbol["for"]("nodejs.util.inspect.custom") // eslint-disable-line dot-notation
 : null;
$cf1aae5e3aefcbf1$export$a143d493d941bafc = $cf1aae5e3aefcbf1$var$Buffer;
$cf1aae5e3aefcbf1$export$e4cf37d7f6fb9e0a = $cf1aae5e3aefcbf1$var$SlowBuffer;
$cf1aae5e3aefcbf1$export$f99ded8fe4b79145 = 50;
var $cf1aae5e3aefcbf1$var$K_MAX_LENGTH = 0x7fffffff;
$cf1aae5e3aefcbf1$export$599f31c3813fae4d = $cf1aae5e3aefcbf1$var$K_MAX_LENGTH;
/**
 * If `Buffer.TYPED_ARRAY_SUPPORT`:
 *   === true    Use Uint8Array implementation (fastest)
 *   === false   Print warning and recommend using `buffer` v4.x which has an Object
 *               implementation (most compatible, even IE6)
 *
 * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,
 * Opera 11.6+, iOS 4.2+.
 *
 * We report that the browser does not support typed arrays if the are not subclassable
 * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`
 * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support
 * for __proto__ and has a buggy typed array implementation.
 */ $cf1aae5e3aefcbf1$var$Buffer.TYPED_ARRAY_SUPPORT = $cf1aae5e3aefcbf1$var$typedArraySupport();
if (!$cf1aae5e3aefcbf1$var$Buffer.TYPED_ARRAY_SUPPORT && typeof console !== "undefined" && typeof console.error === "function") console.error("This browser lacks typed array (Uint8Array) support which is required by `buffer` v5.x. Use `buffer` v4.x if you require old browser support.");
function $cf1aae5e3aefcbf1$var$typedArraySupport() {
    // Can typed array instances can be augmented?
    try {
        var arr = new Uint8Array(1);
        var proto = {
            foo: function() {
                return 42;
            }
        };
        Object.setPrototypeOf(proto, Uint8Array.prototype);
        Object.setPrototypeOf(arr, proto);
        return arr.foo() === 42;
    } catch (e) {
        return false;
    }
}
Object.defineProperty($cf1aae5e3aefcbf1$var$Buffer.prototype, "parent", {
    enumerable: true,
    get: function() {
        if (!$cf1aae5e3aefcbf1$var$Buffer.isBuffer(this)) return undefined;
        return this.buffer;
    }
});
Object.defineProperty($cf1aae5e3aefcbf1$var$Buffer.prototype, "offset", {
    enumerable: true,
    get: function() {
        if (!$cf1aae5e3aefcbf1$var$Buffer.isBuffer(this)) return undefined;
        return this.byteOffset;
    }
});
function $cf1aae5e3aefcbf1$var$createBuffer(length) {
    if (length > $cf1aae5e3aefcbf1$var$K_MAX_LENGTH) throw new RangeError('The value "' + length + '" is invalid for option "size"');
    // Return an augmented `Uint8Array` instance
    var buf = new Uint8Array(length);
    Object.setPrototypeOf(buf, $cf1aae5e3aefcbf1$var$Buffer.prototype);
    return buf;
}
/**
 * The Buffer constructor returns instances of `Uint8Array` that have their
 * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of
 * `Uint8Array`, so the returned instances will have all the node `Buffer` methods
 * and the `Uint8Array` methods. Square bracket notation works as expected -- it
 * returns a single octet.
 *
 * The `Uint8Array` prototype remains unmodified.
 */ function $cf1aae5e3aefcbf1$var$Buffer(arg, encodingOrOffset, length) {
    // Common case.
    if (typeof arg === "number") {
        if (typeof encodingOrOffset === "string") throw new TypeError('The "string" argument must be of type string. Received type number');
        return $cf1aae5e3aefcbf1$var$allocUnsafe(arg);
    }
    return $cf1aae5e3aefcbf1$var$from(arg, encodingOrOffset, length);
}
$cf1aae5e3aefcbf1$var$Buffer.poolSize = 8192 // not used by this implementation
;
function $cf1aae5e3aefcbf1$var$from(value, encodingOrOffset, length) {
    if (typeof value === "string") return $cf1aae5e3aefcbf1$var$fromString(value, encodingOrOffset);
    if (ArrayBuffer.isView(value)) return $cf1aae5e3aefcbf1$var$fromArrayView(value);
    if (value == null) throw new TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type " + typeof value);
    if ($cf1aae5e3aefcbf1$var$isInstance(value, ArrayBuffer) || value && $cf1aae5e3aefcbf1$var$isInstance(value.buffer, ArrayBuffer)) return $cf1aae5e3aefcbf1$var$fromArrayBuffer(value, encodingOrOffset, length);
    if (typeof SharedArrayBuffer !== "undefined" && ($cf1aae5e3aefcbf1$var$isInstance(value, SharedArrayBuffer) || value && $cf1aae5e3aefcbf1$var$isInstance(value.buffer, SharedArrayBuffer))) return $cf1aae5e3aefcbf1$var$fromArrayBuffer(value, encodingOrOffset, length);
    if (typeof value === "number") throw new TypeError('The "value" argument must not be of type number. Received type number');
    var valueOf = value.valueOf && value.valueOf();
    if (valueOf != null && valueOf !== value) return $cf1aae5e3aefcbf1$var$Buffer.from(valueOf, encodingOrOffset, length);
    var b = $cf1aae5e3aefcbf1$var$fromObject(value);
    if (b) return b;
    if (typeof Symbol !== "undefined" && Symbol.toPrimitive != null && typeof value[Symbol.toPrimitive] === "function") return $cf1aae5e3aefcbf1$var$Buffer.from(value[Symbol.toPrimitive]("string"), encodingOrOffset, length);
    throw new TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type " + typeof value);
}
/**
 * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError
 * if value is a number.
 * Buffer.from(str[, encoding])
 * Buffer.from(array)
 * Buffer.from(buffer)
 * Buffer.from(arrayBuffer[, byteOffset[, length]])
 **/ $cf1aae5e3aefcbf1$var$Buffer.from = function(value, encodingOrOffset, length) {
    return $cf1aae5e3aefcbf1$var$from(value, encodingOrOffset, length);
};
// Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:
// https://github.com/feross/buffer/pull/148
Object.setPrototypeOf($cf1aae5e3aefcbf1$var$Buffer.prototype, Uint8Array.prototype);
Object.setPrototypeOf($cf1aae5e3aefcbf1$var$Buffer, Uint8Array);
function $cf1aae5e3aefcbf1$var$assertSize(size) {
    if (typeof size !== "number") throw new TypeError('"size" argument must be of type number');
    else if (size < 0) throw new RangeError('The value "' + size + '" is invalid for option "size"');
}
function $cf1aae5e3aefcbf1$var$alloc(size, fill, encoding) {
    $cf1aae5e3aefcbf1$var$assertSize(size);
    if (size <= 0) return $cf1aae5e3aefcbf1$var$createBuffer(size);
    if (fill !== undefined) // Only pay attention to encoding if it's a string. This
    // prevents accidentally sending in a number that would
    // be interpreted as a start offset.
    return typeof encoding === "string" ? $cf1aae5e3aefcbf1$var$createBuffer(size).fill(fill, encoding) : $cf1aae5e3aefcbf1$var$createBuffer(size).fill(fill);
    return $cf1aae5e3aefcbf1$var$createBuffer(size);
}
/**
 * Creates a new filled Buffer instance.
 * alloc(size[, fill[, encoding]])
 **/ $cf1aae5e3aefcbf1$var$Buffer.alloc = function(size, fill, encoding) {
    return $cf1aae5e3aefcbf1$var$alloc(size, fill, encoding);
};
function $cf1aae5e3aefcbf1$var$allocUnsafe(size) {
    $cf1aae5e3aefcbf1$var$assertSize(size);
    return $cf1aae5e3aefcbf1$var$createBuffer(size < 0 ? 0 : $cf1aae5e3aefcbf1$var$checked(size) | 0);
}
/**
 * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.
 * */ $cf1aae5e3aefcbf1$var$Buffer.allocUnsafe = function(size) {
    return $cf1aae5e3aefcbf1$var$allocUnsafe(size);
};
/**
 * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.
 */ $cf1aae5e3aefcbf1$var$Buffer.allocUnsafeSlow = function(size) {
    return $cf1aae5e3aefcbf1$var$allocUnsafe(size);
};
function $cf1aae5e3aefcbf1$var$fromString(string, encoding) {
    if (typeof encoding !== "string" || encoding === "") encoding = "utf8";
    if (!$cf1aae5e3aefcbf1$var$Buffer.isEncoding(encoding)) throw new TypeError("Unknown encoding: " + encoding);
    var length = $cf1aae5e3aefcbf1$var$byteLength(string, encoding) | 0;
    var buf = $cf1aae5e3aefcbf1$var$createBuffer(length);
    var actual = buf.write(string, encoding);
    if (actual !== length) // Writing a hex string, for example, that contains invalid characters will
    // cause everything after the first invalid character to be ignored. (e.g.
    // 'abxxcd' will be treated as 'ab')
    buf = buf.slice(0, actual);
    return buf;
}
function $cf1aae5e3aefcbf1$var$fromArrayLike(array) {
    var length = array.length < 0 ? 0 : $cf1aae5e3aefcbf1$var$checked(array.length) | 0;
    var buf = $cf1aae5e3aefcbf1$var$createBuffer(length);
    for(var i = 0; i < length; i += 1)buf[i] = array[i] & 255;
    return buf;
}
function $cf1aae5e3aefcbf1$var$fromArrayView(arrayView) {
    if ($cf1aae5e3aefcbf1$var$isInstance(arrayView, Uint8Array)) {
        var copy = new Uint8Array(arrayView);
        return $cf1aae5e3aefcbf1$var$fromArrayBuffer(copy.buffer, copy.byteOffset, copy.byteLength);
    }
    return $cf1aae5e3aefcbf1$var$fromArrayLike(arrayView);
}
function $cf1aae5e3aefcbf1$var$fromArrayBuffer(array, byteOffset, length) {
    if (byteOffset < 0 || array.byteLength < byteOffset) throw new RangeError('"offset" is outside of buffer bounds');
    if (array.byteLength < byteOffset + (length || 0)) throw new RangeError('"length" is outside of buffer bounds');
    var buf;
    if (byteOffset === undefined && length === undefined) buf = new Uint8Array(array);
    else if (length === undefined) buf = new Uint8Array(array, byteOffset);
    else buf = new Uint8Array(array, byteOffset, length);
    // Return an augmented `Uint8Array` instance
    Object.setPrototypeOf(buf, $cf1aae5e3aefcbf1$var$Buffer.prototype);
    return buf;
}
function $cf1aae5e3aefcbf1$var$fromObject(obj) {
    if ($cf1aae5e3aefcbf1$var$Buffer.isBuffer(obj)) {
        var len = $cf1aae5e3aefcbf1$var$checked(obj.length) | 0;
        var buf = $cf1aae5e3aefcbf1$var$createBuffer(len);
        if (buf.length === 0) return buf;
        obj.copy(buf, 0, 0, len);
        return buf;
    }
    if (obj.length !== undefined) {
        if (typeof obj.length !== "number" || $cf1aae5e3aefcbf1$var$numberIsNaN(obj.length)) return $cf1aae5e3aefcbf1$var$createBuffer(0);
        return $cf1aae5e3aefcbf1$var$fromArrayLike(obj);
    }
    if (obj.type === "Buffer" && Array.isArray(obj.data)) return $cf1aae5e3aefcbf1$var$fromArrayLike(obj.data);
}
function $cf1aae5e3aefcbf1$var$checked(length) {
    // Note: cannot use `length < K_MAX_LENGTH` here because that fails when
    // length is NaN (which is otherwise coerced to zero.)
    if (length >= $cf1aae5e3aefcbf1$var$K_MAX_LENGTH) throw new RangeError("Attempt to allocate Buffer larger than maximum size: 0x" + $cf1aae5e3aefcbf1$var$K_MAX_LENGTH.toString(16) + " bytes");
    return length | 0;
}
function $cf1aae5e3aefcbf1$var$SlowBuffer(length) {
    if (+length != length) length = 0;
    return $cf1aae5e3aefcbf1$var$Buffer.alloc(+length);
}
$cf1aae5e3aefcbf1$var$Buffer.isBuffer = function isBuffer(b) {
    return b != null && b._isBuffer === true && b !== $cf1aae5e3aefcbf1$var$Buffer.prototype // so Buffer.isBuffer(Buffer.prototype) will be false
    ;
};
$cf1aae5e3aefcbf1$var$Buffer.compare = function compare(a, b) {
    if ($cf1aae5e3aefcbf1$var$isInstance(a, Uint8Array)) a = $cf1aae5e3aefcbf1$var$Buffer.from(a, a.offset, a.byteLength);
    if ($cf1aae5e3aefcbf1$var$isInstance(b, Uint8Array)) b = $cf1aae5e3aefcbf1$var$Buffer.from(b, b.offset, b.byteLength);
    if (!$cf1aae5e3aefcbf1$var$Buffer.isBuffer(a) || !$cf1aae5e3aefcbf1$var$Buffer.isBuffer(b)) throw new TypeError('The "buf1", "buf2" arguments must be one of type Buffer or Uint8Array');
    if (a === b) return 0;
    var x = a.length;
    var y = b.length;
    for(var i = 0, len = Math.min(x, y); i < len; ++i)if (a[i] !== b[i]) {
        x = a[i];
        y = b[i];
        break;
    }
    if (x < y) return -1;
    if (y < x) return 1;
    return 0;
};
$cf1aae5e3aefcbf1$var$Buffer.isEncoding = function isEncoding(encoding) {
    switch(String(encoding).toLowerCase()){
        case "hex":
        case "utf8":
        case "utf-8":
        case "ascii":
        case "latin1":
        case "binary":
        case "base64":
        case "ucs2":
        case "ucs-2":
        case "utf16le":
        case "utf-16le":
            return true;
        default:
            return false;
    }
};
$cf1aae5e3aefcbf1$var$Buffer.concat = function concat(list, length) {
    if (!Array.isArray(list)) throw new TypeError('"list" argument must be an Array of Buffers');
    if (list.length === 0) return $cf1aae5e3aefcbf1$var$Buffer.alloc(0);
    var i;
    if (length === undefined) {
        length = 0;
        for(i = 0; i < list.length; ++i)length += list[i].length;
    }
    var buffer = $cf1aae5e3aefcbf1$var$Buffer.allocUnsafe(length);
    var pos = 0;
    for(i = 0; i < list.length; ++i){
        var buf = list[i];
        if ($cf1aae5e3aefcbf1$var$isInstance(buf, Uint8Array)) {
            if (pos + buf.length > buffer.length) $cf1aae5e3aefcbf1$var$Buffer.from(buf).copy(buffer, pos);
            else Uint8Array.prototype.set.call(buffer, buf, pos);
        } else if (!$cf1aae5e3aefcbf1$var$Buffer.isBuffer(buf)) throw new TypeError('"list" argument must be an Array of Buffers');
        else buf.copy(buffer, pos);
        pos += buf.length;
    }
    return buffer;
};
function $cf1aae5e3aefcbf1$var$byteLength(string, encoding) {
    if ($cf1aae5e3aefcbf1$var$Buffer.isBuffer(string)) return string.length;
    if (ArrayBuffer.isView(string) || $cf1aae5e3aefcbf1$var$isInstance(string, ArrayBuffer)) return string.byteLength;
    if (typeof string !== "string") throw new TypeError('The "string" argument must be one of type string, Buffer, or ArrayBuffer. Received type ' + typeof string);
    var len = string.length;
    var mustMatch = arguments.length > 2 && arguments[2] === true;
    if (!mustMatch && len === 0) return 0;
    // Use a for loop to avoid recursion
    var loweredCase = false;
    for(;;)switch(encoding){
        case "ascii":
        case "latin1":
        case "binary":
            return len;
        case "utf8":
        case "utf-8":
            return $cf1aae5e3aefcbf1$var$utf8ToBytes(string).length;
        case "ucs2":
        case "ucs-2":
        case "utf16le":
        case "utf-16le":
            return len * 2;
        case "hex":
            return len >>> 1;
        case "base64":
            return $cf1aae5e3aefcbf1$var$base64ToBytes(string).length;
        default:
            if (loweredCase) return mustMatch ? -1 : $cf1aae5e3aefcbf1$var$utf8ToBytes(string).length // assume utf8
            ;
            encoding = ("" + encoding).toLowerCase();
            loweredCase = true;
    }
}
$cf1aae5e3aefcbf1$var$Buffer.byteLength = $cf1aae5e3aefcbf1$var$byteLength;
function $cf1aae5e3aefcbf1$var$slowToString(encoding, start, end) {
    var loweredCase = false;
    // No need to verify that "this.length <= MAX_UINT32" since it's a read-only
    // property of a typed array.
    // This behaves neither like String nor Uint8Array in that we set start/end
    // to their upper/lower bounds if the value passed is out of range.
    // undefined is handled specially as per ECMA-262 6th Edition,
    // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.
    if (start === undefined || start < 0) start = 0;
    // Return early if start > this.length. Done here to prevent potential uint32
    // coercion fail below.
    if (start > this.length) return "";
    if (end === undefined || end > this.length) end = this.length;
    if (end <= 0) return "";
    // Force coercion to uint32. This will also coerce falsey/NaN values to 0.
    end >>>= 0;
    start >>>= 0;
    if (end <= start) return "";
    if (!encoding) encoding = "utf8";
    while(true)switch(encoding){
        case "hex":
            return $cf1aae5e3aefcbf1$var$hexSlice(this, start, end);
        case "utf8":
        case "utf-8":
            return $cf1aae5e3aefcbf1$var$utf8Slice(this, start, end);
        case "ascii":
            return $cf1aae5e3aefcbf1$var$asciiSlice(this, start, end);
        case "latin1":
        case "binary":
            return $cf1aae5e3aefcbf1$var$latin1Slice(this, start, end);
        case "base64":
            return $cf1aae5e3aefcbf1$var$base64Slice(this, start, end);
        case "ucs2":
        case "ucs-2":
        case "utf16le":
        case "utf-16le":
            return $cf1aae5e3aefcbf1$var$utf16leSlice(this, start, end);
        default:
            if (loweredCase) throw new TypeError("Unknown encoding: " + encoding);
            encoding = (encoding + "").toLowerCase();
            loweredCase = true;
    }
}
// This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)
// to detect a Buffer instance. It's not possible to use `instanceof Buffer`
// reliably in a browserify context because there could be multiple different
// copies of the 'buffer' package in use. This method works even for Buffer
// instances that were created from another copy of the `buffer` package.
// See: https://github.com/feross/buffer/issues/154
$cf1aae5e3aefcbf1$var$Buffer.prototype._isBuffer = true;
function $cf1aae5e3aefcbf1$var$swap(b, n, m) {
    var i = b[n];
    b[n] = b[m];
    b[m] = i;
}
$cf1aae5e3aefcbf1$var$Buffer.prototype.swap16 = function swap16() {
    var len = this.length;
    if (len % 2 !== 0) throw new RangeError("Buffer size must be a multiple of 16-bits");
    for(var i = 0; i < len; i += 2)$cf1aae5e3aefcbf1$var$swap(this, i, i + 1);
    return this;
};
$cf1aae5e3aefcbf1$var$Buffer.prototype.swap32 = function swap32() {
    var len = this.length;
    if (len % 4 !== 0) throw new RangeError("Buffer size must be a multiple of 32-bits");
    for(var i = 0; i < len; i += 4){
        $cf1aae5e3aefcbf1$var$swap(this, i, i + 3);
        $cf1aae5e3aefcbf1$var$swap(this, i + 1, i + 2);
    }
    return this;
};
$cf1aae5e3aefcbf1$var$Buffer.prototype.swap64 = function swap64() {
    var len = this.length;
    if (len % 8 !== 0) throw new RangeError("Buffer size must be a multiple of 64-bits");
    for(var i = 0; i < len; i += 8){
        $cf1aae5e3aefcbf1$var$swap(this, i, i + 7);
        $cf1aae5e3aefcbf1$var$swap(this, i + 1, i + 6);
        $cf1aae5e3aefcbf1$var$swap(this, i + 2, i + 5);
        $cf1aae5e3aefcbf1$var$swap(this, i + 3, i + 4);
    }
    return this;
};
$cf1aae5e3aefcbf1$var$Buffer.prototype.toString = function toString() {
    var length = this.length;
    if (length === 0) return "";
    if (arguments.length === 0) return $cf1aae5e3aefcbf1$var$utf8Slice(this, 0, length);
    return $cf1aae5e3aefcbf1$var$slowToString.apply(this, arguments);
};
$cf1aae5e3aefcbf1$var$Buffer.prototype.toLocaleString = $cf1aae5e3aefcbf1$var$Buffer.prototype.toString;
$cf1aae5e3aefcbf1$var$Buffer.prototype.equals = function equals(b) {
    if (!$cf1aae5e3aefcbf1$var$Buffer.isBuffer(b)) throw new TypeError("Argument must be a Buffer");
    if (this === b) return true;
    return $cf1aae5e3aefcbf1$var$Buffer.compare(this, b) === 0;
};
$cf1aae5e3aefcbf1$var$Buffer.prototype.inspect = function inspect() {
    var str = "";
    var max = $cf1aae5e3aefcbf1$export$f99ded8fe4b79145;
    str = this.toString("hex", 0, max).replace(/(.{2})/g, "$1 ").trim();
    if (this.length > max) str += " ... ";
    return "<Buffer " + str + ">";
};
if ($cf1aae5e3aefcbf1$var$customInspectSymbol) $cf1aae5e3aefcbf1$var$Buffer.prototype[$cf1aae5e3aefcbf1$var$customInspectSymbol] = $cf1aae5e3aefcbf1$var$Buffer.prototype.inspect;
$cf1aae5e3aefcbf1$var$Buffer.prototype.compare = function compare(target, start, end, thisStart, thisEnd) {
    if ($cf1aae5e3aefcbf1$var$isInstance(target, Uint8Array)) target = $cf1aae5e3aefcbf1$var$Buffer.from(target, target.offset, target.byteLength);
    if (!$cf1aae5e3aefcbf1$var$Buffer.isBuffer(target)) throw new TypeError('The "target" argument must be one of type Buffer or Uint8Array. Received type ' + typeof target);
    if (start === undefined) start = 0;
    if (end === undefined) end = target ? target.length : 0;
    if (thisStart === undefined) thisStart = 0;
    if (thisEnd === undefined) thisEnd = this.length;
    if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) throw new RangeError("out of range index");
    if (thisStart >= thisEnd && start >= end) return 0;
    if (thisStart >= thisEnd) return -1;
    if (start >= end) return 1;
    start >>>= 0;
    end >>>= 0;
    thisStart >>>= 0;
    thisEnd >>>= 0;
    if (this === target) return 0;
    var x = thisEnd - thisStart;
    var y = end - start;
    var len = Math.min(x, y);
    var thisCopy = this.slice(thisStart, thisEnd);
    var targetCopy = target.slice(start, end);
    for(var i = 0; i < len; ++i)if (thisCopy[i] !== targetCopy[i]) {
        x = thisCopy[i];
        y = targetCopy[i];
        break;
    }
    if (x < y) return -1;
    if (y < x) return 1;
    return 0;
};
// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,
// OR the last index of `val` in `buffer` at offset <= `byteOffset`.
//
// Arguments:
// - buffer - a Buffer to search
// - val - a string, Buffer, or number
// - byteOffset - an index into `buffer`; will be clamped to an int32
// - encoding - an optional encoding, relevant is val is a string
// - dir - true for indexOf, false for lastIndexOf
function $cf1aae5e3aefcbf1$var$bidirectionalIndexOf(buffer, val, byteOffset, encoding, dir) {
    // Empty buffer means no match
    if (buffer.length === 0) return -1;
    // Normalize byteOffset
    if (typeof byteOffset === "string") {
        encoding = byteOffset;
        byteOffset = 0;
    } else if (byteOffset > 0x7fffffff) byteOffset = 0x7fffffff;
    else if (byteOffset < -2147483648) byteOffset = -2147483648;
    byteOffset = +byteOffset // Coerce to Number.
    ;
    if ($cf1aae5e3aefcbf1$var$numberIsNaN(byteOffset)) // byteOffset: it it's undefined, null, NaN, "foo", etc, search whole buffer
    byteOffset = dir ? 0 : buffer.length - 1;
    // Normalize byteOffset: negative offsets start from the end of the buffer
    if (byteOffset < 0) byteOffset = buffer.length + byteOffset;
    if (byteOffset >= buffer.length) {
        if (dir) return -1;
        else byteOffset = buffer.length - 1;
    } else if (byteOffset < 0) {
        if (dir) byteOffset = 0;
        else return -1;
    }
    // Normalize val
    if (typeof val === "string") val = $cf1aae5e3aefcbf1$var$Buffer.from(val, encoding);
    // Finally, search either indexOf (if dir is true) or lastIndexOf
    if ($cf1aae5e3aefcbf1$var$Buffer.isBuffer(val)) {
        // Special case: looking for empty string/buffer always fails
        if (val.length === 0) return -1;
        return $cf1aae5e3aefcbf1$var$arrayIndexOf(buffer, val, byteOffset, encoding, dir);
    } else if (typeof val === "number") {
        val = val & 0xFF // Search for a byte value [0-255]
        ;
        if (typeof Uint8Array.prototype.indexOf === "function") {
            if (dir) return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset);
            else return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset);
        }
        return $cf1aae5e3aefcbf1$var$arrayIndexOf(buffer, [
            val
        ], byteOffset, encoding, dir);
    }
    throw new TypeError("val must be string, number or Buffer");
}
function $cf1aae5e3aefcbf1$var$arrayIndexOf(arr, val, byteOffset, encoding, dir) {
    var indexSize = 1;
    var arrLength = arr.length;
    var valLength = val.length;
    if (encoding !== undefined) {
        encoding = String(encoding).toLowerCase();
        if (encoding === "ucs2" || encoding === "ucs-2" || encoding === "utf16le" || encoding === "utf-16le") {
            if (arr.length < 2 || val.length < 2) return -1;
            indexSize = 2;
            arrLength /= 2;
            valLength /= 2;
            byteOffset /= 2;
        }
    }
    function read(buf, i) {
        if (indexSize === 1) return buf[i];
        else return buf.readUInt16BE(i * indexSize);
    }
    var i;
    if (dir) {
        var foundIndex = -1;
        for(i = byteOffset; i < arrLength; i++)if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {
            if (foundIndex === -1) foundIndex = i;
            if (i - foundIndex + 1 === valLength) return foundIndex * indexSize;
        } else {
            if (foundIndex !== -1) i -= i - foundIndex;
            foundIndex = -1;
        }
    } else {
        if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength;
        for(i = byteOffset; i >= 0; i--){
            var found = true;
            for(var j = 0; j < valLength; j++)if (read(arr, i + j) !== read(val, j)) {
                found = false;
                break;
            }
            if (found) return i;
        }
    }
    return -1;
}
$cf1aae5e3aefcbf1$var$Buffer.prototype.includes = function includes(val, byteOffset, encoding) {
    return this.indexOf(val, byteOffset, encoding) !== -1;
};
$cf1aae5e3aefcbf1$var$Buffer.prototype.indexOf = function indexOf(val, byteOffset, encoding) {
    return $cf1aae5e3aefcbf1$var$bidirectionalIndexOf(this, val, byteOffset, encoding, true);
};
$cf1aae5e3aefcbf1$var$Buffer.prototype.lastIndexOf = function lastIndexOf(val, byteOffset, encoding) {
    return $cf1aae5e3aefcbf1$var$bidirectionalIndexOf(this, val, byteOffset, encoding, false);
};
function $cf1aae5e3aefcbf1$var$hexWrite(buf, string, offset, length) {
    offset = Number(offset) || 0;
    var remaining = buf.length - offset;
    if (!length) length = remaining;
    else {
        length = Number(length);
        if (length > remaining) length = remaining;
    }
    var strLen = string.length;
    if (length > strLen / 2) length = strLen / 2;
    for(var i = 0; i < length; ++i){
        var parsed = parseInt(string.substr(i * 2, 2), 16);
        if ($cf1aae5e3aefcbf1$var$numberIsNaN(parsed)) return i;
        buf[offset + i] = parsed;
    }
    return i;
}
function $cf1aae5e3aefcbf1$var$utf8Write(buf, string, offset, length) {
    return $cf1aae5e3aefcbf1$var$blitBuffer($cf1aae5e3aefcbf1$var$utf8ToBytes(string, buf.length - offset), buf, offset, length);
}
function $cf1aae5e3aefcbf1$var$asciiWrite(buf, string, offset, length) {
    return $cf1aae5e3aefcbf1$var$blitBuffer($cf1aae5e3aefcbf1$var$asciiToBytes(string), buf, offset, length);
}
function $cf1aae5e3aefcbf1$var$base64Write(buf, string, offset, length) {
    return $cf1aae5e3aefcbf1$var$blitBuffer($cf1aae5e3aefcbf1$var$base64ToBytes(string), buf, offset, length);
}
function $cf1aae5e3aefcbf1$var$ucs2Write(buf, string, offset, length) {
    return $cf1aae5e3aefcbf1$var$blitBuffer($cf1aae5e3aefcbf1$var$utf16leToBytes(string, buf.length - offset), buf, offset, length);
}
$cf1aae5e3aefcbf1$var$Buffer.prototype.write = function write(string, offset, length, encoding) {
    // Buffer#write(string)
    if (offset === undefined) {
        encoding = "utf8";
        length = this.length;
        offset = 0;
    // Buffer#write(string, encoding)
    } else if (length === undefined && typeof offset === "string") {
        encoding = offset;
        length = this.length;
        offset = 0;
    // Buffer#write(string, offset[, length][, encoding])
    } else if (isFinite(offset)) {
        offset = offset >>> 0;
        if (isFinite(length)) {
            length = length >>> 0;
            if (encoding === undefined) encoding = "utf8";
        } else {
            encoding = length;
            length = undefined;
        }
    } else throw new Error("Buffer.write(string, encoding, offset[, length]) is no longer supported");
    var remaining = this.length - offset;
    if (length === undefined || length > remaining) length = remaining;
    if (string.length > 0 && (length < 0 || offset < 0) || offset > this.length) throw new RangeError("Attempt to write outside buffer bounds");
    if (!encoding) encoding = "utf8";
    var loweredCase = false;
    for(;;)switch(encoding){
        case "hex":
            return $cf1aae5e3aefcbf1$var$hexWrite(this, string, offset, length);
        case "utf8":
        case "utf-8":
            return $cf1aae5e3aefcbf1$var$utf8Write(this, string, offset, length);
        case "ascii":
        case "latin1":
        case "binary":
            return $cf1aae5e3aefcbf1$var$asciiWrite(this, string, offset, length);
        case "base64":
            // Warning: maxLength not taken into account in base64Write
            return $cf1aae5e3aefcbf1$var$base64Write(this, string, offset, length);
        case "ucs2":
        case "ucs-2":
        case "utf16le":
        case "utf-16le":
            return $cf1aae5e3aefcbf1$var$ucs2Write(this, string, offset, length);
        default:
            if (loweredCase) throw new TypeError("Unknown encoding: " + encoding);
            encoding = ("" + encoding).toLowerCase();
            loweredCase = true;
    }
};
$cf1aae5e3aefcbf1$var$Buffer.prototype.toJSON = function toJSON() {
    return {
        type: "Buffer",
        data: Array.prototype.slice.call(this._arr || this, 0)
    };
};
function $cf1aae5e3aefcbf1$var$base64Slice(buf, start, end) {
    if (start === 0 && end === buf.length) return $jCgB5.fromByteArray(buf);
    else return $jCgB5.fromByteArray(buf.slice(start, end));
}
function $cf1aae5e3aefcbf1$var$utf8Slice(buf, start, end) {
    end = Math.min(buf.length, end);
    var res = [];
    var i = start;
    while(i < end){
        var firstByte = buf[i];
        var codePoint = null;
        var bytesPerSequence = firstByte > 0xEF ? 4 : firstByte > 0xDF ? 3 : firstByte > 0xBF ? 2 : 1;
        if (i + bytesPerSequence <= end) {
            var secondByte, thirdByte, fourthByte, tempCodePoint;
            switch(bytesPerSequence){
                case 1:
                    if (firstByte < 0x80) codePoint = firstByte;
                    break;
                case 2:
                    secondByte = buf[i + 1];
                    if ((secondByte & 0xC0) === 0x80) {
                        tempCodePoint = (firstByte & 0x1F) << 0x6 | secondByte & 0x3F;
                        if (tempCodePoint > 0x7F) codePoint = tempCodePoint;
                    }
                    break;
                case 3:
                    secondByte = buf[i + 1];
                    thirdByte = buf[i + 2];
                    if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {
                        tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | thirdByte & 0x3F;
                        if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) codePoint = tempCodePoint;
                    }
                    break;
                case 4:
                    secondByte = buf[i + 1];
                    thirdByte = buf[i + 2];
                    fourthByte = buf[i + 3];
                    if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {
                        tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | fourthByte & 0x3F;
                        if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) codePoint = tempCodePoint;
                    }
            }
        }
        if (codePoint === null) {
            // we did not generate a valid codePoint so insert a
            // replacement char (U+FFFD) and advance only 1 byte
            codePoint = 0xFFFD;
            bytesPerSequence = 1;
        } else if (codePoint > 0xFFFF) {
            // encode to utf16 (surrogate pair dance)
            codePoint -= 0x10000;
            res.push(codePoint >>> 10 & 0x3FF | 0xD800);
            codePoint = 0xDC00 | codePoint & 0x3FF;
        }
        res.push(codePoint);
        i += bytesPerSequence;
    }
    return $cf1aae5e3aefcbf1$var$decodeCodePointsArray(res);
}
// Based on http://stackoverflow.com/a/22747272/680742, the browser with
// the lowest limit is Chrome, with 0x10000 args.
// We go 1 magnitude less, for safety
var $cf1aae5e3aefcbf1$var$MAX_ARGUMENTS_LENGTH = 0x1000;
function $cf1aae5e3aefcbf1$var$decodeCodePointsArray(codePoints) {
    var len = codePoints.length;
    if (len <= $cf1aae5e3aefcbf1$var$MAX_ARGUMENTS_LENGTH) return String.fromCharCode.apply(String, codePoints) // avoid extra slice()
    ;
    // Decode in chunks to avoid "call stack size exceeded".
    var res = "";
    var i = 0;
    while(i < len)res += String.fromCharCode.apply(String, codePoints.slice(i, i += $cf1aae5e3aefcbf1$var$MAX_ARGUMENTS_LENGTH));
    return res;
}
function $cf1aae5e3aefcbf1$var$asciiSlice(buf, start, end) {
    var ret = "";
    end = Math.min(buf.length, end);
    for(var i = start; i < end; ++i)ret += String.fromCharCode(buf[i] & 0x7F);
    return ret;
}
function $cf1aae5e3aefcbf1$var$latin1Slice(buf, start, end) {
    var ret = "";
    end = Math.min(buf.length, end);
    for(var i = start; i < end; ++i)ret += String.fromCharCode(buf[i]);
    return ret;
}
function $cf1aae5e3aefcbf1$var$hexSlice(buf, start, end) {
    var len = buf.length;
    if (!start || start < 0) start = 0;
    if (!end || end < 0 || end > len) end = len;
    var out = "";
    for(var i = start; i < end; ++i)out += $cf1aae5e3aefcbf1$var$hexSliceLookupTable[buf[i]];
    return out;
}
function $cf1aae5e3aefcbf1$var$utf16leSlice(buf, start, end) {
    var bytes = buf.slice(start, end);
    var res = "";
    // If bytes.length is odd, the last 8 bits must be ignored (same as node.js)
    for(var i = 0; i < bytes.length - 1; i += 2)res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256);
    return res;
}
$cf1aae5e3aefcbf1$var$Buffer.prototype.slice = function slice(start, end) {
    var len = this.length;
    start = ~~start;
    end = end === undefined ? len : ~~end;
    if (start < 0) {
        start += len;
        if (start < 0) start = 0;
    } else if (start > len) start = len;
    if (end < 0) {
        end += len;
        if (end < 0) end = 0;
    } else if (end > len) end = len;
    if (end < start) end = start;
    var newBuf = this.subarray(start, end);
    // Return an augmented `Uint8Array` instance
    Object.setPrototypeOf(newBuf, $cf1aae5e3aefcbf1$var$Buffer.prototype);
    return newBuf;
};
/*
 * Need to make sure that buffer isn't trying to write out of bounds.
 */ function $cf1aae5e3aefcbf1$var$checkOffset(offset, ext, length) {
    if (offset % 1 !== 0 || offset < 0) throw new RangeError("offset is not uint");
    if (offset + ext > length) throw new RangeError("Trying to access beyond buffer length");
}
$cf1aae5e3aefcbf1$var$Buffer.prototype.readUintLE = $cf1aae5e3aefcbf1$var$Buffer.prototype.readUIntLE = function readUIntLE(offset, byteLength, noAssert) {
    offset = offset >>> 0;
    byteLength = byteLength >>> 0;
    if (!noAssert) $cf1aae5e3aefcbf1$var$checkOffset(offset, byteLength, this.length);
    var val = this[offset];
    var mul = 1;
    var i = 0;
    while(++i < byteLength && (mul *= 0x100))val += this[offset + i] * mul;
    return val;
};
$cf1aae5e3aefcbf1$var$Buffer.prototype.readUintBE = $cf1aae5e3aefcbf1$var$Buffer.prototype.readUIntBE = function readUIntBE(offset, byteLength, noAssert) {
    offset = offset >>> 0;
    byteLength = byteLength >>> 0;
    if (!noAssert) $cf1aae5e3aefcbf1$var$checkOffset(offset, byteLength, this.length);
    var val = this[offset + --byteLength];
    var mul = 1;
    while(byteLength > 0 && (mul *= 0x100))val += this[offset + --byteLength] * mul;
    return val;
};
$cf1aae5e3aefcbf1$var$Buffer.prototype.readUint8 = $cf1aae5e3aefcbf1$var$Buffer.prototype.readUInt8 = function readUInt8(offset, noAssert) {
    offset = offset >>> 0;
    if (!noAssert) $cf1aae5e3aefcbf1$var$checkOffset(offset, 1, this.length);
    return this[offset];
};
$cf1aae5e3aefcbf1$var$Buffer.prototype.readUint16LE = $cf1aae5e3aefcbf1$var$Buffer.prototype.readUInt16LE = function readUInt16LE(offset, noAssert) {
    offset = offset >>> 0;
    if (!noAssert) $cf1aae5e3aefcbf1$var$checkOffset(offset, 2, this.length);
    return this[offset] | this[offset + 1] << 8;
};
$cf1aae5e3aefcbf1$var$Buffer.prototype.readUint16BE = $cf1aae5e3aefcbf1$var$Buffer.prototype.readUInt16BE = function readUInt16BE(offset, noAssert) {
    offset = offset >>> 0;
    if (!noAssert) $cf1aae5e3aefcbf1$var$checkOffset(offset, 2, this.length);
    return this[offset] << 8 | this[offset + 1];
};
$cf1aae5e3aefcbf1$var$Buffer.prototype.readUint32LE = $cf1aae5e3aefcbf1$var$Buffer.prototype.readUInt32LE = function readUInt32LE(offset, noAssert) {
    offset = offset >>> 0;
    if (!noAssert) $cf1aae5e3aefcbf1$var$checkOffset(offset, 4, this.length);
    return (this[offset] | this[offset + 1] << 8 | this[offset + 2] << 16) + this[offset + 3] * 0x1000000;
};
$cf1aae5e3aefcbf1$var$Buffer.prototype.readUint32BE = $cf1aae5e3aefcbf1$var$Buffer.prototype.readUInt32BE = function readUInt32BE(offset, noAssert) {
    offset = offset >>> 0;
    if (!noAssert) $cf1aae5e3aefcbf1$var$checkOffset(offset, 4, this.length);
    return this[offset] * 0x1000000 + (this[offset + 1] << 16 | this[offset + 2] << 8 | this[offset + 3]);
};
$cf1aae5e3aefcbf1$var$Buffer.prototype.readIntLE = function readIntLE(offset, byteLength, noAssert) {
    offset = offset >>> 0;
    byteLength = byteLength >>> 0;
    if (!noAssert) $cf1aae5e3aefcbf1$var$checkOffset(offset, byteLength, this.length);
    var val = this[offset];
    var mul = 1;
    var i = 0;
    while(++i < byteLength && (mul *= 0x100))val += this[offset + i] * mul;
    mul *= 0x80;
    if (val >= mul) val -= Math.pow(2, 8 * byteLength);
    return val;
};
$cf1aae5e3aefcbf1$var$Buffer.prototype.readIntBE = function readIntBE(offset, byteLength, noAssert) {
    offset = offset >>> 0;
    byteLength = byteLength >>> 0;
    if (!noAssert) $cf1aae5e3aefcbf1$var$checkOffset(offset, byteLength, this.length);
    var i = byteLength;
    var mul = 1;
    var val = this[offset + --i];
    while(i > 0 && (mul *= 0x100))val += this[offset + --i] * mul;
    mul *= 0x80;
    if (val >= mul) val -= Math.pow(2, 8 * byteLength);
    return val;
};
$cf1aae5e3aefcbf1$var$Buffer.prototype.readInt8 = function readInt8(offset, noAssert) {
    offset = offset >>> 0;
    if (!noAssert) $cf1aae5e3aefcbf1$var$checkOffset(offset, 1, this.length);
    if (!(this[offset] & 0x80)) return this[offset];
    return (0xff - this[offset] + 1) * -1;
};
$cf1aae5e3aefcbf1$var$Buffer.prototype.readInt16LE = function readInt16LE(offset, noAssert) {
    offset = offset >>> 0;
    if (!noAssert) $cf1aae5e3aefcbf1$var$checkOffset(offset, 2, this.length);
    var val = this[offset] | this[offset + 1] << 8;
    return val & 0x8000 ? val | 0xFFFF0000 : val;
};
$cf1aae5e3aefcbf1$var$Buffer.prototype.readInt16BE = function readInt16BE(offset, noAssert) {
    offset = offset >>> 0;
    if (!noAssert) $cf1aae5e3aefcbf1$var$checkOffset(offset, 2, this.length);
    var val = this[offset + 1] | this[offset] << 8;
    return val & 0x8000 ? val | 0xFFFF0000 : val;
};
$cf1aae5e3aefcbf1$var$Buffer.prototype.readInt32LE = function readInt32LE(offset, noAssert) {
    offset = offset >>> 0;
    if (!noAssert) $cf1aae5e3aefcbf1$var$checkOffset(offset, 4, this.length);
    return this[offset] | this[offset + 1] << 8 | this[offset + 2] << 16 | this[offset + 3] << 24;
};
$cf1aae5e3aefcbf1$var$Buffer.prototype.readInt32BE = function readInt32BE(offset, noAssert) {
    offset = offset >>> 0;
    if (!noAssert) $cf1aae5e3aefcbf1$var$checkOffset(offset, 4, this.length);
    return this[offset] << 24 | this[offset + 1] << 16 | this[offset + 2] << 8 | this[offset + 3];
};
$cf1aae5e3aefcbf1$var$Buffer.prototype.readFloatLE = function readFloatLE(offset, noAssert) {
    offset = offset >>> 0;
    if (!noAssert) $cf1aae5e3aefcbf1$var$checkOffset(offset, 4, this.length);
    return $bHOP2.read(this, offset, true, 23, 4);
};
$cf1aae5e3aefcbf1$var$Buffer.prototype.readFloatBE = function readFloatBE(offset, noAssert) {
    offset = offset >>> 0;
    if (!noAssert) $cf1aae5e3aefcbf1$var$checkOffset(offset, 4, this.length);
    return $bHOP2.read(this, offset, false, 23, 4);
};
$cf1aae5e3aefcbf1$var$Buffer.prototype.readDoubleLE = function readDoubleLE(offset, noAssert) {
    offset = offset >>> 0;
    if (!noAssert) $cf1aae5e3aefcbf1$var$checkOffset(offset, 8, this.length);
    return $bHOP2.read(this, offset, true, 52, 8);
};
$cf1aae5e3aefcbf1$var$Buffer.prototype.readDoubleBE = function readDoubleBE(offset, noAssert) {
    offset = offset >>> 0;
    if (!noAssert) $cf1aae5e3aefcbf1$var$checkOffset(offset, 8, this.length);
    return $bHOP2.read(this, offset, false, 52, 8);
};
function $cf1aae5e3aefcbf1$var$checkInt(buf, value, offset, ext, max, min) {
    if (!$cf1aae5e3aefcbf1$var$Buffer.isBuffer(buf)) throw new TypeError('"buffer" argument must be a Buffer instance');
    if (value > max || value < min) throw new RangeError('"value" argument is out of bounds');
    if (offset + ext > buf.length) throw new RangeError("Index out of range");
}
$cf1aae5e3aefcbf1$var$Buffer.prototype.writeUintLE = $cf1aae5e3aefcbf1$var$Buffer.prototype.writeUIntLE = function writeUIntLE(value, offset, byteLength, noAssert) {
    value = +value;
    offset = offset >>> 0;
    byteLength = byteLength >>> 0;
    if (!noAssert) {
        var maxBytes = Math.pow(2, 8 * byteLength) - 1;
        $cf1aae5e3aefcbf1$var$checkInt(this, value, offset, byteLength, maxBytes, 0);
    }
    var mul = 1;
    var i = 0;
    this[offset] = value & 0xFF;
    while(++i < byteLength && (mul *= 0x100))this[offset + i] = value / mul & 0xFF;
    return offset + byteLength;
};
$cf1aae5e3aefcbf1$var$Buffer.prototype.writeUintBE = $cf1aae5e3aefcbf1$var$Buffer.prototype.writeUIntBE = function writeUIntBE(value, offset, byteLength, noAssert) {
    value = +value;
    offset = offset >>> 0;
    byteLength = byteLength >>> 0;
    if (!noAssert) {
        var maxBytes = Math.pow(2, 8 * byteLength) - 1;
        $cf1aae5e3aefcbf1$var$checkInt(this, value, offset, byteLength, maxBytes, 0);
    }
    var i = byteLength - 1;
    var mul = 1;
    this[offset + i] = value & 0xFF;
    while(--i >= 0 && (mul *= 0x100))this[offset + i] = value / mul & 0xFF;
    return offset + byteLength;
};
$cf1aae5e3aefcbf1$var$Buffer.prototype.writeUint8 = $cf1aae5e3aefcbf1$var$Buffer.prototype.writeUInt8 = function writeUInt8(value, offset, noAssert) {
    value = +value;
    offset = offset >>> 0;
    if (!noAssert) $cf1aae5e3aefcbf1$var$checkInt(this, value, offset, 1, 0xff, 0);
    this[offset] = value & 0xff;
    return offset + 1;
};
$cf1aae5e3aefcbf1$var$Buffer.prototype.writeUint16LE = $cf1aae5e3aefcbf1$var$Buffer.prototype.writeUInt16LE = function writeUInt16LE(value, offset, noAssert) {
    value = +value;
    offset = offset >>> 0;
    if (!noAssert) $cf1aae5e3aefcbf1$var$checkInt(this, value, offset, 2, 0xffff, 0);
    this[offset] = value & 0xff;
    this[offset + 1] = value >>> 8;
    return offset + 2;
};
$cf1aae5e3aefcbf1$var$Buffer.prototype.writeUint16BE = $cf1aae5e3aefcbf1$var$Buffer.prototype.writeUInt16BE = function writeUInt16BE(value, offset, noAssert) {
    value = +value;
    offset = offset >>> 0;
    if (!noAssert) $cf1aae5e3aefcbf1$var$checkInt(this, value, offset, 2, 0xffff, 0);
    this[offset] = value >>> 8;
    this[offset + 1] = value & 0xff;
    return offset + 2;
};
$cf1aae5e3aefcbf1$var$Buffer.prototype.writeUint32LE = $cf1aae5e3aefcbf1$var$Buffer.prototype.writeUInt32LE = function writeUInt32LE(value, offset, noAssert) {
    value = +value;
    offset = offset >>> 0;
    if (!noAssert) $cf1aae5e3aefcbf1$var$checkInt(this, value, offset, 4, 0xffffffff, 0);
    this[offset + 3] = value >>> 24;
    this[offset + 2] = value >>> 16;
    this[offset + 1] = value >>> 8;
    this[offset] = value & 0xff;
    return offset + 4;
};
$cf1aae5e3aefcbf1$var$Buffer.prototype.writeUint32BE = $cf1aae5e3aefcbf1$var$Buffer.prototype.writeUInt32BE = function writeUInt32BE(value, offset, noAssert) {
    value = +value;
    offset = offset >>> 0;
    if (!noAssert) $cf1aae5e3aefcbf1$var$checkInt(this, value, offset, 4, 0xffffffff, 0);
    this[offset] = value >>> 24;
    this[offset + 1] = value >>> 16;
    this[offset + 2] = value >>> 8;
    this[offset + 3] = value & 0xff;
    return offset + 4;
};
$cf1aae5e3aefcbf1$var$Buffer.prototype.writeIntLE = function writeIntLE(value, offset, byteLength, noAssert) {
    value = +value;
    offset = offset >>> 0;
    if (!noAssert) {
        var limit = Math.pow(2, 8 * byteLength - 1);
        $cf1aae5e3aefcbf1$var$checkInt(this, value, offset, byteLength, limit - 1, -limit);
    }
    var i = 0;
    var mul = 1;
    var sub = 0;
    this[offset] = value & 0xFF;
    while(++i < byteLength && (mul *= 0x100)){
        if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) sub = 1;
        this[offset + i] = (value / mul >> 0) - sub & 0xFF;
    }
    return offset + byteLength;
};
$cf1aae5e3aefcbf1$var$Buffer.prototype.writeIntBE = function writeIntBE(value, offset, byteLength, noAssert) {
    value = +value;
    offset = offset >>> 0;
    if (!noAssert) {
        var limit = Math.pow(2, 8 * byteLength - 1);
        $cf1aae5e3aefcbf1$var$checkInt(this, value, offset, byteLength, limit - 1, -limit);
    }
    var i = byteLength - 1;
    var mul = 1;
    var sub = 0;
    this[offset + i] = value & 0xFF;
    while(--i >= 0 && (mul *= 0x100)){
        if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) sub = 1;
        this[offset + i] = (value / mul >> 0) - sub & 0xFF;
    }
    return offset + byteLength;
};
$cf1aae5e3aefcbf1$var$Buffer.prototype.writeInt8 = function writeInt8(value, offset, noAssert) {
    value = +value;
    offset = offset >>> 0;
    if (!noAssert) $cf1aae5e3aefcbf1$var$checkInt(this, value, offset, 1, 0x7f, -128);
    if (value < 0) value = 0xff + value + 1;
    this[offset] = value & 0xff;
    return offset + 1;
};
$cf1aae5e3aefcbf1$var$Buffer.prototype.writeInt16LE = function writeInt16LE(value, offset, noAssert) {
    value = +value;
    offset = offset >>> 0;
    if (!noAssert) $cf1aae5e3aefcbf1$var$checkInt(this, value, offset, 2, 0x7fff, -32768);
    this[offset] = value & 0xff;
    this[offset + 1] = value >>> 8;
    return offset + 2;
};
$cf1aae5e3aefcbf1$var$Buffer.prototype.writeInt16BE = function writeInt16BE(value, offset, noAssert) {
    value = +value;
    offset = offset >>> 0;
    if (!noAssert) $cf1aae5e3aefcbf1$var$checkInt(this, value, offset, 2, 0x7fff, -32768);
    this[offset] = value >>> 8;
    this[offset + 1] = value & 0xff;
    return offset + 2;
};
$cf1aae5e3aefcbf1$var$Buffer.prototype.writeInt32LE = function writeInt32LE(value, offset, noAssert) {
    value = +value;
    offset = offset >>> 0;
    if (!noAssert) $cf1aae5e3aefcbf1$var$checkInt(this, value, offset, 4, 0x7fffffff, -2147483648);
    this[offset] = value & 0xff;
    this[offset + 1] = value >>> 8;
    this[offset + 2] = value >>> 16;
    this[offset + 3] = value >>> 24;
    return offset + 4;
};
$cf1aae5e3aefcbf1$var$Buffer.prototype.writeInt32BE = function writeInt32BE(value, offset, noAssert) {
    value = +value;
    offset = offset >>> 0;
    if (!noAssert) $cf1aae5e3aefcbf1$var$checkInt(this, value, offset, 4, 0x7fffffff, -2147483648);
    if (value < 0) value = 0xffffffff + value + 1;
    this[offset] = value >>> 24;
    this[offset + 1] = value >>> 16;
    this[offset + 2] = value >>> 8;
    this[offset + 3] = value & 0xff;
    return offset + 4;
};
function $cf1aae5e3aefcbf1$var$checkIEEE754(buf, value, offset, ext, max, min) {
    if (offset + ext > buf.length) throw new RangeError("Index out of range");
    if (offset < 0) throw new RangeError("Index out of range");
}
function $cf1aae5e3aefcbf1$var$writeFloat(buf, value, offset, littleEndian, noAssert) {
    value = +value;
    offset = offset >>> 0;
    if (!noAssert) $cf1aae5e3aefcbf1$var$checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -340282346638528860000000000000000000000);
    $bHOP2.write(buf, value, offset, littleEndian, 23, 4);
    return offset + 4;
}
$cf1aae5e3aefcbf1$var$Buffer.prototype.writeFloatLE = function writeFloatLE(value, offset, noAssert) {
    return $cf1aae5e3aefcbf1$var$writeFloat(this, value, offset, true, noAssert);
};
$cf1aae5e3aefcbf1$var$Buffer.prototype.writeFloatBE = function writeFloatBE(value, offset, noAssert) {
    return $cf1aae5e3aefcbf1$var$writeFloat(this, value, offset, false, noAssert);
};
function $cf1aae5e3aefcbf1$var$writeDouble(buf, value, offset, littleEndian, noAssert) {
    value = +value;
    offset = offset >>> 0;
    if (!noAssert) $cf1aae5e3aefcbf1$var$checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000);
    $bHOP2.write(buf, value, offset, littleEndian, 52, 8);
    return offset + 8;
}
$cf1aae5e3aefcbf1$var$Buffer.prototype.writeDoubleLE = function writeDoubleLE(value, offset, noAssert) {
    return $cf1aae5e3aefcbf1$var$writeDouble(this, value, offset, true, noAssert);
};
$cf1aae5e3aefcbf1$var$Buffer.prototype.writeDoubleBE = function writeDoubleBE(value, offset, noAssert) {
    return $cf1aae5e3aefcbf1$var$writeDouble(this, value, offset, false, noAssert);
};
// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)
$cf1aae5e3aefcbf1$var$Buffer.prototype.copy = function copy(target, targetStart, start, end) {
    if (!$cf1aae5e3aefcbf1$var$Buffer.isBuffer(target)) throw new TypeError("argument should be a Buffer");
    if (!start) start = 0;
    if (!end && end !== 0) end = this.length;
    if (targetStart >= target.length) targetStart = target.length;
    if (!targetStart) targetStart = 0;
    if (end > 0 && end < start) end = start;
    // Copy 0 bytes; we're done
    if (end === start) return 0;
    if (target.length === 0 || this.length === 0) return 0;
    // Fatal error conditions
    if (targetStart < 0) throw new RangeError("targetStart out of bounds");
    if (start < 0 || start >= this.length) throw new RangeError("Index out of range");
    if (end < 0) throw new RangeError("sourceEnd out of bounds");
    // Are we oob?
    if (end > this.length) end = this.length;
    if (target.length - targetStart < end - start) end = target.length - targetStart + start;
    var len = end - start;
    if (this === target && typeof Uint8Array.prototype.copyWithin === "function") // Use built-in when available, missing from IE11
    this.copyWithin(targetStart, start, end);
    else Uint8Array.prototype.set.call(target, this.subarray(start, end), targetStart);
    return len;
};
// Usage:
//    buffer.fill(number[, offset[, end]])
//    buffer.fill(buffer[, offset[, end]])
//    buffer.fill(string[, offset[, end]][, encoding])
$cf1aae5e3aefcbf1$var$Buffer.prototype.fill = function fill(val, start, end, encoding) {
    // Handle string cases:
    if (typeof val === "string") {
        if (typeof start === "string") {
            encoding = start;
            start = 0;
            end = this.length;
        } else if (typeof end === "string") {
            encoding = end;
            end = this.length;
        }
        if (encoding !== undefined && typeof encoding !== "string") throw new TypeError("encoding must be a string");
        if (typeof encoding === "string" && !$cf1aae5e3aefcbf1$var$Buffer.isEncoding(encoding)) throw new TypeError("Unknown encoding: " + encoding);
        if (val.length === 1) {
            var code = val.charCodeAt(0);
            if (encoding === "utf8" && code < 128 || encoding === "latin1") // Fast path: If `val` fits into a single byte, use that numeric value.
            val = code;
        }
    } else if (typeof val === "number") val = val & 255;
    else if (typeof val === "boolean") val = Number(val);
    // Invalid ranges are not set to a default, so can range check early.
    if (start < 0 || this.length < start || this.length < end) throw new RangeError("Out of range index");
    if (end <= start) return this;
    start = start >>> 0;
    end = end === undefined ? this.length : end >>> 0;
    if (!val) val = 0;
    var i;
    if (typeof val === "number") for(i = start; i < end; ++i)this[i] = val;
    else {
        var bytes = $cf1aae5e3aefcbf1$var$Buffer.isBuffer(val) ? val : $cf1aae5e3aefcbf1$var$Buffer.from(val, encoding);
        var len = bytes.length;
        if (len === 0) throw new TypeError('The value "' + val + '" is invalid for argument "value"');
        for(i = 0; i < end - start; ++i)this[i + start] = bytes[i % len];
    }
    return this;
};
// HELPER FUNCTIONS
// ================
var $cf1aae5e3aefcbf1$var$INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g;
function $cf1aae5e3aefcbf1$var$base64clean(str) {
    // Node takes equal signs as end of the Base64 encoding
    str = str.split("=")[0];
    // Node strips out invalid characters like \n and \t from the string, base64-js does not
    str = str.trim().replace($cf1aae5e3aefcbf1$var$INVALID_BASE64_RE, "");
    // Node converts strings with length < 2 to ''
    if (str.length < 2) return "";
    // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not
    while(str.length % 4 !== 0)str = str + "=";
    return str;
}
function $cf1aae5e3aefcbf1$var$utf8ToBytes(string, units) {
    units = units || Infinity;
    var codePoint;
    var length = string.length;
    var leadSurrogate = null;
    var bytes = [];
    for(var i = 0; i < length; ++i){
        codePoint = string.charCodeAt(i);
        // is surrogate component
        if (codePoint > 0xD7FF && codePoint < 0xE000) {
            // last char was a lead
            if (!leadSurrogate) {
                // no lead yet
                if (codePoint > 0xDBFF) {
                    // unexpected trail
                    if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);
                    continue;
                } else if (i + 1 === length) {
                    // unpaired lead
                    if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);
                    continue;
                }
                // valid lead
                leadSurrogate = codePoint;
                continue;
            }
            // 2 leads in a row
            if (codePoint < 0xDC00) {
                if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);
                leadSurrogate = codePoint;
                continue;
            }
            // valid surrogate pair
            codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000;
        } else if (leadSurrogate) // valid bmp char, but last char was a lead
        {
            if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);
        }
        leadSurrogate = null;
        // encode utf8
        if (codePoint < 0x80) {
            if ((units -= 1) < 0) break;
            bytes.push(codePoint);
        } else if (codePoint < 0x800) {
            if ((units -= 2) < 0) break;
            bytes.push(codePoint >> 0x6 | 0xC0, codePoint & 0x3F | 0x80);
        } else if (codePoint < 0x10000) {
            if ((units -= 3) < 0) break;
            bytes.push(codePoint >> 0xC | 0xE0, codePoint >> 0x6 & 0x3F | 0x80, codePoint & 0x3F | 0x80);
        } else if (codePoint < 0x110000) {
            if ((units -= 4) < 0) break;
            bytes.push(codePoint >> 0x12 | 0xF0, codePoint >> 0xC & 0x3F | 0x80, codePoint >> 0x6 & 0x3F | 0x80, codePoint & 0x3F | 0x80);
        } else throw new Error("Invalid code point");
    }
    return bytes;
}
function $cf1aae5e3aefcbf1$var$asciiToBytes(str) {
    var byteArray = [];
    for(var i = 0; i < str.length; ++i)// Node's code seems to be doing this and not & 0x7F..
    byteArray.push(str.charCodeAt(i) & 0xFF);
    return byteArray;
}
function $cf1aae5e3aefcbf1$var$utf16leToBytes(str, units) {
    var c, hi, lo;
    var byteArray = [];
    for(var i = 0; i < str.length; ++i){
        if ((units -= 2) < 0) break;
        c = str.charCodeAt(i);
        hi = c >> 8;
        lo = c % 256;
        byteArray.push(lo);
        byteArray.push(hi);
    }
    return byteArray;
}
function $cf1aae5e3aefcbf1$var$base64ToBytes(str) {
    return $jCgB5.toByteArray($cf1aae5e3aefcbf1$var$base64clean(str));
}
function $cf1aae5e3aefcbf1$var$blitBuffer(src, dst, offset, length) {
    for(var i = 0; i < length; ++i){
        if (i + offset >= dst.length || i >= src.length) break;
        dst[i + offset] = src[i];
    }
    return i;
}
// ArrayBuffer or Uint8Array objects from other contexts (i.e. iframes) do not pass
// the `instanceof` check but they should be treated as of that type.
// See: https://github.com/feross/buffer/issues/166
function $cf1aae5e3aefcbf1$var$isInstance(obj, type) {
    return obj instanceof type || obj != null && obj.constructor != null && obj.constructor.name != null && obj.constructor.name === type.name;
}
function $cf1aae5e3aefcbf1$var$numberIsNaN(obj) {
    // For IE11 support
    return obj !== obj // eslint-disable-line no-self-compare
    ;
}
// Create lookup table for `toString('hex')`
// See: https://github.com/feross/buffer/issues/219
var $cf1aae5e3aefcbf1$var$hexSliceLookupTable = function() {
    var alphabet = "0123456789abcdef";
    var table = new Array(256);
    for(var i = 0; i < 16; ++i){
        var i16 = i * 16;
        for(var j = 0; j < 16; ++j)table[i16 + j] = alphabet[i] + alphabet[j];
    }
    return table;
}();

});
parcelRequire.register("jCgB5", function(module, exports) {

$parcel$export(module.exports, "toByteArray", function () { return $e47e70ccd421cfd6$export$d622b2ad8d90c771; }, function (v) { return $e47e70ccd421cfd6$export$d622b2ad8d90c771 = v; });
$parcel$export(module.exports, "fromByteArray", function () { return $e47e70ccd421cfd6$export$6100ba28696e12de; }, function (v) { return $e47e70ccd421cfd6$export$6100ba28696e12de = v; });
var $e47e70ccd421cfd6$export$a48f0734ac7c2329;
var $e47e70ccd421cfd6$export$d622b2ad8d90c771;
var $e47e70ccd421cfd6$export$6100ba28696e12de;
"use strict";
$e47e70ccd421cfd6$export$a48f0734ac7c2329 = $e47e70ccd421cfd6$var$byteLength;
$e47e70ccd421cfd6$export$d622b2ad8d90c771 = $e47e70ccd421cfd6$var$toByteArray;
$e47e70ccd421cfd6$export$6100ba28696e12de = $e47e70ccd421cfd6$var$fromByteArray;
var $e47e70ccd421cfd6$var$lookup = [];
var $e47e70ccd421cfd6$var$revLookup = [];
var $e47e70ccd421cfd6$var$Arr = typeof Uint8Array !== "undefined" ? Uint8Array : Array;
var $e47e70ccd421cfd6$var$code = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/";
for(var $e47e70ccd421cfd6$var$i = 0, $e47e70ccd421cfd6$var$len = $e47e70ccd421cfd6$var$code.length; $e47e70ccd421cfd6$var$i < $e47e70ccd421cfd6$var$len; ++$e47e70ccd421cfd6$var$i){
    $e47e70ccd421cfd6$var$lookup[$e47e70ccd421cfd6$var$i] = $e47e70ccd421cfd6$var$code[$e47e70ccd421cfd6$var$i];
    $e47e70ccd421cfd6$var$revLookup[$e47e70ccd421cfd6$var$code.charCodeAt($e47e70ccd421cfd6$var$i)] = $e47e70ccd421cfd6$var$i;
}
// Support decoding URL-safe base64 strings, as Node.js does.
// See: https://en.wikipedia.org/wiki/Base64#URL_applications
$e47e70ccd421cfd6$var$revLookup["-".charCodeAt(0)] = 62;
$e47e70ccd421cfd6$var$revLookup["_".charCodeAt(0)] = 63;
function $e47e70ccd421cfd6$var$getLens(b64) {
    var len = b64.length;
    if (len % 4 > 0) throw new Error("Invalid string. Length must be a multiple of 4");
    // Trim off extra bytes after placeholder bytes are found
    // See: https://github.com/beatgammit/base64-js/issues/42
    var validLen = b64.indexOf("=");
    if (validLen === -1) validLen = len;
    var placeHoldersLen = validLen === len ? 0 : 4 - validLen % 4;
    return [
        validLen,
        placeHoldersLen
    ];
}
// base64 is 4/3 + up to two characters of the original data
function $e47e70ccd421cfd6$var$byteLength(b64) {
    var lens = $e47e70ccd421cfd6$var$getLens(b64);
    var validLen = lens[0];
    var placeHoldersLen = lens[1];
    return (validLen + placeHoldersLen) * 3 / 4 - placeHoldersLen;
}
function $e47e70ccd421cfd6$var$_byteLength(b64, validLen, placeHoldersLen) {
    return (validLen + placeHoldersLen) * 3 / 4 - placeHoldersLen;
}
function $e47e70ccd421cfd6$var$toByteArray(b64) {
    var tmp;
    var lens = $e47e70ccd421cfd6$var$getLens(b64);
    var validLen = lens[0];
    var placeHoldersLen = lens[1];
    var arr = new $e47e70ccd421cfd6$var$Arr($e47e70ccd421cfd6$var$_byteLength(b64, validLen, placeHoldersLen));
    var curByte = 0;
    // if there are placeholders, only get up to the last complete 4 chars
    var len = placeHoldersLen > 0 ? validLen - 4 : validLen;
    var i;
    for(i = 0; i < len; i += 4){
        tmp = $e47e70ccd421cfd6$var$revLookup[b64.charCodeAt(i)] << 18 | $e47e70ccd421cfd6$var$revLookup[b64.charCodeAt(i + 1)] << 12 | $e47e70ccd421cfd6$var$revLookup[b64.charCodeAt(i + 2)] << 6 | $e47e70ccd421cfd6$var$revLookup[b64.charCodeAt(i + 3)];
        arr[curByte++] = tmp >> 16 & 0xFF;
        arr[curByte++] = tmp >> 8 & 0xFF;
        arr[curByte++] = tmp & 0xFF;
    }
    if (placeHoldersLen === 2) {
        tmp = $e47e70ccd421cfd6$var$revLookup[b64.charCodeAt(i)] << 2 | $e47e70ccd421cfd6$var$revLookup[b64.charCodeAt(i + 1)] >> 4;
        arr[curByte++] = tmp & 0xFF;
    }
    if (placeHoldersLen === 1) {
        tmp = $e47e70ccd421cfd6$var$revLookup[b64.charCodeAt(i)] << 10 | $e47e70ccd421cfd6$var$revLookup[b64.charCodeAt(i + 1)] << 4 | $e47e70ccd421cfd6$var$revLookup[b64.charCodeAt(i + 2)] >> 2;
        arr[curByte++] = tmp >> 8 & 0xFF;
        arr[curByte++] = tmp & 0xFF;
    }
    return arr;
}
function $e47e70ccd421cfd6$var$tripletToBase64(num) {
    return $e47e70ccd421cfd6$var$lookup[num >> 18 & 0x3F] + $e47e70ccd421cfd6$var$lookup[num >> 12 & 0x3F] + $e47e70ccd421cfd6$var$lookup[num >> 6 & 0x3F] + $e47e70ccd421cfd6$var$lookup[num & 0x3F];
}
function $e47e70ccd421cfd6$var$encodeChunk(uint8, start, end) {
    var tmp;
    var output = [];
    for(var i = start; i < end; i += 3){
        tmp = (uint8[i] << 16 & 0xFF0000) + (uint8[i + 1] << 8 & 0xFF00) + (uint8[i + 2] & 0xFF);
        output.push($e47e70ccd421cfd6$var$tripletToBase64(tmp));
    }
    return output.join("");
}
function $e47e70ccd421cfd6$var$fromByteArray(uint8) {
    var tmp;
    var len = uint8.length;
    var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes
    ;
    var parts = [];
    var maxChunkLength = 16383 // must be multiple of 3
    ;
    // go through the array every three bytes, we'll deal with trailing stuff later
    for(var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength)parts.push($e47e70ccd421cfd6$var$encodeChunk(uint8, i, i + maxChunkLength > len2 ? len2 : i + maxChunkLength));
    // pad the end with zeros, but make sure to not forget the extra bytes
    if (extraBytes === 1) {
        tmp = uint8[len - 1];
        parts.push($e47e70ccd421cfd6$var$lookup[tmp >> 2] + $e47e70ccd421cfd6$var$lookup[tmp << 4 & 0x3F] + "==");
    } else if (extraBytes === 2) {
        tmp = (uint8[len - 2] << 8) + uint8[len - 1];
        parts.push($e47e70ccd421cfd6$var$lookup[tmp >> 10] + $e47e70ccd421cfd6$var$lookup[tmp >> 4 & 0x3F] + $e47e70ccd421cfd6$var$lookup[tmp << 2 & 0x3F] + "=");
    }
    return parts.join("");
}

});

parcelRequire.register("bHOP2", function(module, exports) {

$parcel$export(module.exports, "read", function () { return $885b221a6018ec93$export$aafa59e2e03f2942; }, function (v) { return $885b221a6018ec93$export$aafa59e2e03f2942 = v; });
$parcel$export(module.exports, "write", function () { return $885b221a6018ec93$export$68d8715fc104d294; }, function (v) { return $885b221a6018ec93$export$68d8715fc104d294 = v; });
/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */ var $885b221a6018ec93$export$aafa59e2e03f2942;
var $885b221a6018ec93$export$68d8715fc104d294;
$885b221a6018ec93$export$aafa59e2e03f2942 = function(buffer, offset, isLE, mLen, nBytes) {
    var e, m;
    var eLen = nBytes * 8 - mLen - 1;
    var eMax = (1 << eLen) - 1;
    var eBias = eMax >> 1;
    var nBits = -7;
    var i = isLE ? nBytes - 1 : 0;
    var d = isLE ? -1 : 1;
    var s = buffer[offset + i];
    i += d;
    e = s & (1 << -nBits) - 1;
    s >>= -nBits;
    nBits += eLen;
    for(; nBits > 0; e = e * 256 + buffer[offset + i], i += d, nBits -= 8);
    m = e & (1 << -nBits) - 1;
    e >>= -nBits;
    nBits += mLen;
    for(; nBits > 0; m = m * 256 + buffer[offset + i], i += d, nBits -= 8);
    if (e === 0) e = 1 - eBias;
    else if (e === eMax) return m ? NaN : (s ? -1 : 1) * Infinity;
    else {
        m = m + Math.pow(2, mLen);
        e = e - eBias;
    }
    return (s ? -1 : 1) * m * Math.pow(2, e - mLen);
};
$885b221a6018ec93$export$68d8715fc104d294 = function(buffer, value, offset, isLE, mLen, nBytes) {
    var e, m, c;
    var eLen = nBytes * 8 - mLen - 1;
    var eMax = (1 << eLen) - 1;
    var eBias = eMax >> 1;
    var rt = mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0;
    var i = isLE ? 0 : nBytes - 1;
    var d = isLE ? 1 : -1;
    var s = value < 0 || value === 0 && 1 / value < 0 ? 1 : 0;
    value = Math.abs(value);
    if (isNaN(value) || value === Infinity) {
        m = isNaN(value) ? 1 : 0;
        e = eMax;
    } else {
        e = Math.floor(Math.log(value) / Math.LN2);
        if (value * (c = Math.pow(2, -e)) < 1) {
            e--;
            c *= 2;
        }
        if (e + eBias >= 1) value += rt / c;
        else value += rt * Math.pow(2, 1 - eBias);
        if (value * c >= 2) {
            e++;
            c /= 2;
        }
        if (e + eBias >= eMax) {
            m = 0;
            e = eMax;
        } else if (e + eBias >= 1) {
            m = (value * c - 1) * Math.pow(2, mLen);
            e = e + eBias;
        } else {
            m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen);
            e = 0;
        }
    }
    for(; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8);
    e = e << mLen | m;
    eLen += mLen;
    for(; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8);
    buffer[offset + i - d] |= s * 128;
};

});



parcelRequire.register("fAFKj", function(module, exports) {
"use strict";

var $9tVw0 = parcelRequire("9tVw0");

var $9hpll = parcelRequire("9hpll");

var $HwNUK = parcelRequire("HwNUK");

var $7VdEp = parcelRequire("7VdEp");

var $e3pkI = parcelRequire("e3pkI");

var $cTxLc = parcelRequire("cTxLc");

var $ilRBA = parcelRequire("ilRBA");

var $bPcbR = parcelRequire("bPcbR");

var $gguHS = parcelRequire("gguHS");

var $8vQjK = parcelRequire("8vQjK");

var $ayLh2 = parcelRequire("ayLh2");
module.exports = function xhrAdapter(config) {
    return new Promise(function dispatchXhrRequest(resolve, reject) {
        var requestData = config.data;
        var requestHeaders = config.headers;
        var responseType = config.responseType;
        var onCanceled;
        function done() {
            if (config.cancelToken) config.cancelToken.unsubscribe(onCanceled);
            if (config.signal) config.signal.removeEventListener("abort", onCanceled);
        }
        if ($9tVw0.isFormData(requestData) && $9tVw0.isStandardBrowserEnv()) delete requestHeaders["Content-Type"]; // Let the browser set it
        var request = new XMLHttpRequest();
        // HTTP basic authentication
        if (config.auth) {
            var username = config.auth.username || "";
            var password = config.auth.password ? unescape(encodeURIComponent(config.auth.password)) : "";
            requestHeaders.Authorization = "Basic " + btoa(username + ":" + password);
        }
        var fullPath = $e3pkI(config.baseURL, config.url);
        request.open(config.method.toUpperCase(), $7VdEp(fullPath, config.params, config.paramsSerializer), true);
        // Set the request timeout in MS
        request.timeout = config.timeout;
        function onloadend() {
            if (!request) return;
            // Prepare the response
            var responseHeaders = "getAllResponseHeaders" in request ? $cTxLc(request.getAllResponseHeaders()) : null;
            var responseData = !responseType || responseType === "text" || responseType === "json" ? request.responseText : request.response;
            var response = {
                data: responseData,
                status: request.status,
                statusText: request.statusText,
                headers: responseHeaders,
                config: config,
                request: request
            };
            $9hpll(function _resolve(value) {
                resolve(value);
                done();
            }, function _reject(err) {
                reject(err);
                done();
            }, response);
            // Clean up request
            request = null;
        }
        if ("onloadend" in request) // Use onloadend if available
        request.onloadend = onloadend;
        else // Listen for ready state to emulate onloadend
        request.onreadystatechange = function handleLoad() {
            if (!request || request.readyState !== 4) return;
            // The request errored out and we didn't get a response, this will be
            // handled by onerror instead
            // With one exception: request that using file: protocol, most browsers
            // will return status as 0 even though it's a successful request
            if (request.status === 0 && !(request.responseURL && request.responseURL.indexOf("file:") === 0)) return;
            // readystate handler is calling before onerror or ontimeout handlers,
            // so we should call onloadend on the next 'tick'
            setTimeout(onloadend);
        };
        // Handle browser request cancellation (as opposed to a manual cancellation)
        request.onabort = function handleAbort() {
            if (!request) return;
            reject(new $gguHS("Request aborted", $gguHS.ECONNABORTED, config, request));
            // Clean up request
            request = null;
        };
        // Handle low level network errors
        request.onerror = function handleError() {
            // Real errors are hidden from us by the browser
            // onerror should only fire if it's a network error
            reject(new $gguHS("Network Error", $gguHS.ERR_NETWORK, config, request, request));
            // Clean up request
            request = null;
        };
        // Handle timeout
        request.ontimeout = function handleTimeout() {
            var timeoutErrorMessage = config.timeout ? "timeout of " + config.timeout + "ms exceeded" : "timeout exceeded";
            var transitional = config.transitional || $bPcbR;
            if (config.timeoutErrorMessage) timeoutErrorMessage = config.timeoutErrorMessage;
            reject(new $gguHS(timeoutErrorMessage, transitional.clarifyTimeoutError ? $gguHS.ETIMEDOUT : $gguHS.ECONNABORTED, config, request));
            // Clean up request
            request = null;
        };
        // Add xsrf header
        // This is only done if running in a standard browser environment.
        // Specifically not if we're in a web worker, or react-native.
        if ($9tVw0.isStandardBrowserEnv()) {
            // Add xsrf header
            var xsrfValue = (config.withCredentials || $ilRBA(fullPath)) && config.xsrfCookieName ? $HwNUK.read(config.xsrfCookieName) : undefined;
            if (xsrfValue) requestHeaders[config.xsrfHeaderName] = xsrfValue;
        }
        // Add headers to the request
        if ("setRequestHeader" in request) $9tVw0.forEach(requestHeaders, function setRequestHeader(val, key) {
            if (typeof requestData === "undefined" && key.toLowerCase() === "content-type") // Remove Content-Type if data is undefined
            delete requestHeaders[key];
            else // Otherwise add header to the request
            request.setRequestHeader(key, val);
        });
        // Add withCredentials to request if needed
        if (!$9tVw0.isUndefined(config.withCredentials)) request.withCredentials = !!config.withCredentials;
        // Add responseType to request if needed
        if (responseType && responseType !== "json") request.responseType = config.responseType;
        // Handle progress if needed
        if (typeof config.onDownloadProgress === "function") request.addEventListener("progress", config.onDownloadProgress);
        // Not all browsers support upload events
        if (typeof config.onUploadProgress === "function" && request.upload) request.upload.addEventListener("progress", config.onUploadProgress);
        if (config.cancelToken || config.signal) {
            // Handle cancellation
            // eslint-disable-next-line func-names
            onCanceled = function(cancel) {
                if (!request) return;
                reject(!cancel || cancel && cancel.type ? new $8vQjK() : cancel);
                request.abort();
                request = null;
            };
            config.cancelToken && config.cancelToken.subscribe(onCanceled);
            if (config.signal) config.signal.aborted ? onCanceled() : config.signal.addEventListener("abort", onCanceled);
        }
        if (!requestData) requestData = null;
        var protocol = $ayLh2(fullPath);
        if (protocol && [
            "http",
            "https",
            "file"
        ].indexOf(protocol) === -1) {
            reject(new $gguHS("Unsupported protocol " + protocol + ":", $gguHS.ERR_BAD_REQUEST, config));
            return;
        }
        // Send the request
        request.send(requestData);
    });
};

});
parcelRequire.register("9hpll", function(module, exports) {
"use strict";

var $gguHS = parcelRequire("gguHS");
/**
 * Resolve or reject a Promise based on response status.
 *
 * @param {Function} resolve A function that resolves the promise.
 * @param {Function} reject A function that rejects the promise.
 * @param {object} response The response.
 */ module.exports = function settle(resolve, reject, response) {
    var validateStatus = response.config.validateStatus;
    if (!response.status || !validateStatus || validateStatus(response.status)) resolve(response);
    else reject(new $gguHS("Request failed with status code " + response.status, [
        $gguHS.ERR_BAD_REQUEST,
        $gguHS.ERR_BAD_RESPONSE
    ][Math.floor(response.status / 100) - 4], response.config, response.request, response));
};

});

parcelRequire.register("HwNUK", function(module, exports) {
"use strict";

var $9tVw0 = parcelRequire("9tVw0");
module.exports = $9tVw0.isStandardBrowserEnv() ? // Standard browser envs support document.cookie
function standardBrowserEnv() {
    return {
        write: function write(name, value, expires, path, domain, secure) {
            var cookie = [];
            cookie.push(name + "=" + encodeURIComponent(value));
            if ($9tVw0.isNumber(expires)) cookie.push("expires=" + new Date(expires).toGMTString());
            if ($9tVw0.isString(path)) cookie.push("path=" + path);
            if ($9tVw0.isString(domain)) cookie.push("domain=" + domain);
            if (secure === true) cookie.push("secure");
            document.cookie = cookie.join("; ");
        },
        read: function read(name) {
            var match = document.cookie.match(new RegExp("(^|;\\s*)(" + name + ")=([^;]*)"));
            return match ? decodeURIComponent(match[3]) : null;
        },
        remove: function remove(name) {
            this.write(name, "", Date.now() - 86400000);
        }
    };
}() : // Non standard browser env (web workers, react-native) lack needed support.
function nonStandardBrowserEnv() {
    return {
        write: function write() {},
        read: function read() {
            return null;
        },
        remove: function remove() {}
    };
}();

});

parcelRequire.register("e3pkI", function(module, exports) {
"use strict";

var $hrf1h = parcelRequire("hrf1h");

var $eqHTJ = parcelRequire("eqHTJ");
/**
 * Creates a new URL by combining the baseURL with the requestedURL,
 * only when the requestedURL is not already an absolute URL.
 * If the requestURL is absolute, this function returns the requestedURL untouched.
 *
 * @param {string} baseURL The base URL
 * @param {string} requestedURL Absolute or relative URL to combine
 * @returns {string} The combined full path
 */ module.exports = function buildFullPath(baseURL, requestedURL) {
    if (baseURL && !$hrf1h(requestedURL)) return $eqHTJ(baseURL, requestedURL);
    return requestedURL;
};

});
parcelRequire.register("hrf1h", function(module, exports) {
"use strict";
/**
 * Determines whether the specified URL is absolute
 *
 * @param {string} url The URL to test
 * @returns {boolean} True if the specified URL is absolute, otherwise false
 */ module.exports = function isAbsoluteURL(url) {
    // A URL is considered absolute if it begins with "<scheme>://" or "//" (protocol-relative URL).
    // RFC 3986 defines scheme name as a sequence of characters beginning with a letter and followed
    // by any combination of letters, digits, plus, period, or hyphen.
    return /^([a-z][a-z\d+\-.]*:)?\/\//i.test(url);
};

});

parcelRequire.register("eqHTJ", function(module, exports) {
"use strict";
/**
 * Creates a new URL by combining the specified URLs
 *
 * @param {string} baseURL The base URL
 * @param {string} relativeURL The relative URL
 * @returns {string} The combined URL
 */ module.exports = function combineURLs(baseURL, relativeURL) {
    return relativeURL ? baseURL.replace(/\/+$/, "") + "/" + relativeURL.replace(/^\/+/, "") : baseURL;
};

});


parcelRequire.register("cTxLc", function(module, exports) {
"use strict";

var $9tVw0 = parcelRequire("9tVw0");
// Headers whose duplicates are ignored by node
// c.f. https://nodejs.org/api/http.html#http_message_headers
var $9634cf2e3cb92bbf$var$ignoreDuplicateOf = [
    "age",
    "authorization",
    "content-length",
    "content-type",
    "etag",
    "expires",
    "from",
    "host",
    "if-modified-since",
    "if-unmodified-since",
    "last-modified",
    "location",
    "max-forwards",
    "proxy-authorization",
    "referer",
    "retry-after",
    "user-agent"
];
/**
 * Parse headers into an object
 *
 * ```
 * Date: Wed, 27 Aug 2014 08:58:49 GMT
 * Content-Type: application/json
 * Connection: keep-alive
 * Transfer-Encoding: chunked
 * ```
 *
 * @param {String} headers Headers needing to be parsed
 * @returns {Object} Headers parsed into an object
 */ module.exports = function parseHeaders(headers) {
    var parsed = {};
    var key;
    var val;
    var i;
    if (!headers) return parsed;
    $9tVw0.forEach(headers.split("\n"), function parser(line) {
        i = line.indexOf(":");
        key = $9tVw0.trim(line.substr(0, i)).toLowerCase();
        val = $9tVw0.trim(line.substr(i + 1));
        if (key) {
            if (parsed[key] && $9634cf2e3cb92bbf$var$ignoreDuplicateOf.indexOf(key) >= 0) return;
            if (key === "set-cookie") parsed[key] = (parsed[key] ? parsed[key] : []).concat([
                val
            ]);
            else parsed[key] = parsed[key] ? parsed[key] + ", " + val : val;
        }
    });
    return parsed;
};

});

parcelRequire.register("ilRBA", function(module, exports) {
"use strict";

var $9tVw0 = parcelRequire("9tVw0");
module.exports = $9tVw0.isStandardBrowserEnv() ? // Standard browser envs have full support of the APIs needed to test
// whether the request URL is of the same origin as current location.
function standardBrowserEnv() {
    var msie = /(msie|trident)/i.test(navigator.userAgent);
    var urlParsingNode = document.createElement("a");
    var originURL;
    /**
    * Parse a URL to discover it's components
    *
    * @param {String} url The URL to be parsed
    * @returns {Object}
    */ function resolveURL(url) {
        var href = url;
        if (msie) {
            // IE needs attribute set twice to normalize properties
            urlParsingNode.setAttribute("href", href);
            href = urlParsingNode.href;
        }
        urlParsingNode.setAttribute("href", href);
        // urlParsingNode provides the UrlUtils interface - http://url.spec.whatwg.org/#urlutils
        return {
            href: urlParsingNode.href,
            protocol: urlParsingNode.protocol ? urlParsingNode.protocol.replace(/:$/, "") : "",
            host: urlParsingNode.host,
            search: urlParsingNode.search ? urlParsingNode.search.replace(/^\?/, "") : "",
            hash: urlParsingNode.hash ? urlParsingNode.hash.replace(/^#/, "") : "",
            hostname: urlParsingNode.hostname,
            port: urlParsingNode.port,
            pathname: urlParsingNode.pathname.charAt(0) === "/" ? urlParsingNode.pathname : "/" + urlParsingNode.pathname
        };
    }
    originURL = resolveURL(window.location.href);
    /**
    * Determine if a URL shares the same origin as the current location
    *
    * @param {String} requestURL The URL to test
    * @returns {boolean} True if URL shares the same origin, otherwise false
    */ return function isURLSameOrigin(requestURL) {
        var parsed = $9tVw0.isString(requestURL) ? resolveURL(requestURL) : requestURL;
        return parsed.protocol === originURL.protocol && parsed.host === originURL.host;
    };
}() : // Non standard browser envs (web workers, react-native) lack needed support.
function nonStandardBrowserEnv() {
    return function isURLSameOrigin() {
        return true;
    };
}();

});

parcelRequire.register("8vQjK", function(module, exports) {
"use strict";

var $gguHS = parcelRequire("gguHS");

var $9tVw0 = parcelRequire("9tVw0");
/**
 * A `CanceledError` is an object that is thrown when an operation is canceled.
 *
 * @class
 * @param {string=} message The message.
 */ function $6329cd293e3fae12$var$CanceledError(message) {
    // eslint-disable-next-line no-eq-null,eqeqeq
    $gguHS.call(this, message == null ? "canceled" : message, $gguHS.ERR_CANCELED);
    this.name = "CanceledError";
}
$9tVw0.inherits($6329cd293e3fae12$var$CanceledError, $gguHS, {
    __CANCEL__: true
});
module.exports = $6329cd293e3fae12$var$CanceledError;

});

parcelRequire.register("ayLh2", function(module, exports) {
"use strict";
module.exports = function parseProtocol(url) {
    var match = /^([-+\w]{1,25})(:?\/\/|:)/.exec(url);
    return match && match[1] || "";
};

});


parcelRequire.register("h3mi1", function(module, exports) {
// eslint-disable-next-line strict
module.exports = null;

});



parcelRequire.register("9HX5z", function(module, exports) {
"use strict";
module.exports = function isCancel(value) {
    return !!(value && value.__CANCEL__);
};

});


parcelRequire.register("5uM6n", function(module, exports) {
"use strict";

var $9tVw0 = parcelRequire("9tVw0");
/**
 * Config-specific merge-function which creates a new config-object
 * by merging two configuration objects together.
 *
 * @param {Object} config1
 * @param {Object} config2
 * @returns {Object} New object resulting from merging config2 to config1
 */ module.exports = function mergeConfig(config1, config2) {
    // eslint-disable-next-line no-param-reassign
    config2 = config2 || {};
    var config = {};
    function getMergedValue(target, source) {
        if ($9tVw0.isPlainObject(target) && $9tVw0.isPlainObject(source)) return $9tVw0.merge(target, source);
        else if ($9tVw0.isPlainObject(source)) return $9tVw0.merge({}, source);
        else if ($9tVw0.isArray(source)) return source.slice();
        return source;
    }
    // eslint-disable-next-line consistent-return
    function mergeDeepProperties(prop) {
        if (!$9tVw0.isUndefined(config2[prop])) return getMergedValue(config1[prop], config2[prop]);
        else if (!$9tVw0.isUndefined(config1[prop])) return getMergedValue(undefined, config1[prop]);
    }
    // eslint-disable-next-line consistent-return
    function valueFromConfig2(prop) {
        if (!$9tVw0.isUndefined(config2[prop])) return getMergedValue(undefined, config2[prop]);
    }
    // eslint-disable-next-line consistent-return
    function defaultToConfig2(prop) {
        if (!$9tVw0.isUndefined(config2[prop])) return getMergedValue(undefined, config2[prop]);
        else if (!$9tVw0.isUndefined(config1[prop])) return getMergedValue(undefined, config1[prop]);
    }
    // eslint-disable-next-line consistent-return
    function mergeDirectKeys(prop) {
        if (prop in config2) return getMergedValue(config1[prop], config2[prop]);
        else if (prop in config1) return getMergedValue(undefined, config1[prop]);
    }
    var mergeMap = {
        "url": valueFromConfig2,
        "method": valueFromConfig2,
        "data": valueFromConfig2,
        "baseURL": defaultToConfig2,
        "transformRequest": defaultToConfig2,
        "transformResponse": defaultToConfig2,
        "paramsSerializer": defaultToConfig2,
        "timeout": defaultToConfig2,
        "timeoutMessage": defaultToConfig2,
        "withCredentials": defaultToConfig2,
        "adapter": defaultToConfig2,
        "responseType": defaultToConfig2,
        "xsrfCookieName": defaultToConfig2,
        "xsrfHeaderName": defaultToConfig2,
        "onUploadProgress": defaultToConfig2,
        "onDownloadProgress": defaultToConfig2,
        "decompress": defaultToConfig2,
        "maxContentLength": defaultToConfig2,
        "maxBodyLength": defaultToConfig2,
        "beforeRedirect": defaultToConfig2,
        "transport": defaultToConfig2,
        "httpAgent": defaultToConfig2,
        "httpsAgent": defaultToConfig2,
        "cancelToken": defaultToConfig2,
        "socketPath": defaultToConfig2,
        "responseEncoding": defaultToConfig2,
        "validateStatus": mergeDirectKeys
    };
    $9tVw0.forEach(Object.keys(config1).concat(Object.keys(config2)), function computeConfigValue(prop) {
        var merge = mergeMap[prop] || mergeDeepProperties;
        var configValue = merge(prop);
        $9tVw0.isUndefined(configValue) && merge !== mergeDirectKeys || (config[prop] = configValue);
    });
    return config;
};

});

parcelRequire.register("bnH3B", function(module, exports) {
"use strict";

var $gwc5k = parcelRequire("gwc5k");
var $84933dedeb679867$require$VERSION = $gwc5k.version;

var $gguHS = parcelRequire("gguHS");
var $84933dedeb679867$var$validators = {};
// eslint-disable-next-line func-names
[
    "object",
    "boolean",
    "number",
    "function",
    "string",
    "symbol"
].forEach(function(type, i) {
    $84933dedeb679867$var$validators[type] = function validator(thing) {
        return typeof thing === type || "a" + (i < 1 ? "n " : " ") + type;
    };
});
var $84933dedeb679867$var$deprecatedWarnings = {};
/**
 * Transitional option validator
 * @param {function|boolean?} validator - set to false if the transitional option has been removed
 * @param {string?} version - deprecated version / removed since version
 * @param {string?} message - some message with additional info
 * @returns {function}
 */ $84933dedeb679867$var$validators.transitional = function transitional(validator, version, message) {
    function formatMessage(opt, desc) {
        return "[Axios v" + $84933dedeb679867$require$VERSION + "] Transitional option '" + opt + "'" + desc + (message ? ". " + message : "");
    }
    // eslint-disable-next-line func-names
    return function(value, opt, opts) {
        if (validator === false) throw new $gguHS(formatMessage(opt, " has been removed" + (version ? " in " + version : "")), $gguHS.ERR_DEPRECATED);
        if (version && !$84933dedeb679867$var$deprecatedWarnings[opt]) {
            $84933dedeb679867$var$deprecatedWarnings[opt] = true;
            // eslint-disable-next-line no-console
            console.warn(formatMessage(opt, " has been deprecated since v" + version + " and will be removed in the near future"));
        }
        return validator ? validator(value, opt, opts) : true;
    };
};
/**
 * Assert object's properties type
 * @param {object} options
 * @param {object} schema
 * @param {boolean?} allowUnknown
 */ function $84933dedeb679867$var$assertOptions(options, schema, allowUnknown) {
    if (typeof options !== "object") throw new $gguHS("options must be an object", $gguHS.ERR_BAD_OPTION_VALUE);
    var keys = Object.keys(options);
    var i = keys.length;
    while(i-- > 0){
        var opt = keys[i];
        var validator = schema[opt];
        if (validator) {
            var value = options[opt];
            var result = value === undefined || validator(value, opt, options);
            if (result !== true) throw new $gguHS("option " + opt + " must be " + result, $gguHS.ERR_BAD_OPTION_VALUE);
            continue;
        }
        if (allowUnknown !== true) throw new $gguHS("Unknown option " + opt, $gguHS.ERR_BAD_OPTION);
    }
}
module.exports = {
    assertOptions: $84933dedeb679867$var$assertOptions,
    validators: $84933dedeb679867$var$validators
};

});
parcelRequire.register("gwc5k", function(module, exports) {
module.exports = {
    "version": "0.27.2"
};

});



parcelRequire.register("jZO5r", function(module, exports) {
"use strict";

var $8vQjK = parcelRequire("8vQjK");
/**
 * A `CancelToken` is an object that can be used to request cancellation of an operation.
 *
 * @class
 * @param {Function} executor The executor function.
 */ function $e8ea910349c6e02f$var$CancelToken(executor) {
    if (typeof executor !== "function") throw new TypeError("executor must be a function.");
    var resolvePromise;
    this.promise = new Promise(function promiseExecutor(resolve) {
        resolvePromise = resolve;
    });
    var token = this;
    // eslint-disable-next-line func-names
    this.promise.then(function(cancel) {
        if (!token._listeners) return;
        var i;
        var l = token._listeners.length;
        for(i = 0; i < l; i++)token._listeners[i](cancel);
        token._listeners = null;
    });
    // eslint-disable-next-line func-names
    this.promise.then = function(onfulfilled) {
        var _resolve;
        // eslint-disable-next-line func-names
        var promise = new Promise(function(resolve) {
            token.subscribe(resolve);
            _resolve = resolve;
        }).then(onfulfilled);
        promise.cancel = function reject() {
            token.unsubscribe(_resolve);
        };
        return promise;
    };
    executor(function cancel(message) {
        if (token.reason) // Cancellation has already been requested
        return;
        token.reason = new $8vQjK(message);
        resolvePromise(token.reason);
    });
}
/**
 * Throws a `CanceledError` if cancellation has been requested.
 */ $e8ea910349c6e02f$var$CancelToken.prototype.throwIfRequested = function throwIfRequested() {
    if (this.reason) throw this.reason;
};
/**
 * Subscribe to the cancel signal
 */ $e8ea910349c6e02f$var$CancelToken.prototype.subscribe = function subscribe(listener) {
    if (this.reason) {
        listener(this.reason);
        return;
    }
    if (this._listeners) this._listeners.push(listener);
    else this._listeners = [
        listener
    ];
};
/**
 * Unsubscribe from the cancel signal
 */ $e8ea910349c6e02f$var$CancelToken.prototype.unsubscribe = function unsubscribe(listener) {
    if (!this._listeners) return;
    var index = this._listeners.indexOf(listener);
    if (index !== -1) this._listeners.splice(index, 1);
};
/**
 * Returns an object that contains a new `CancelToken` and a function that, when called,
 * cancels the `CancelToken`.
 */ $e8ea910349c6e02f$var$CancelToken.source = function source() {
    var cancel;
    var token = new $e8ea910349c6e02f$var$CancelToken(function executor(c) {
        cancel = c;
    });
    return {
        token: token,
        cancel: cancel
    };
};
module.exports = $e8ea910349c6e02f$var$CancelToken;

});

parcelRequire.register("bYx0q", function(module, exports) {
"use strict";
/**
 * Syntactic sugar for invoking a function and expanding an array for arguments.
 *
 * Common use case would be to use `Function.prototype.apply`.
 *
 *  ```js
 *  function f(x, y, z) {}
 *  var args = [1, 2, 3];
 *  f.apply(null, args);
 *  ```
 *
 * With `spread` this example can be re-written.
 *
 *  ```js
 *  spread(function(x, y, z) {})([1, 2, 3]);
 *  ```
 *
 * @param {Function} callback
 * @returns {Function}
 */ module.exports = function spread(callback) {
    return function wrap(arr) {
        return callback.apply(null, arr);
    };
};

});

parcelRequire.register("kF3M9", function(module, exports) {
"use strict";

var $9tVw0 = parcelRequire("9tVw0");
/**
 * Determines whether the payload is an error thrown by Axios
 *
 * @param {*} payload The value to test
 * @returns {boolean} True if the payload is an error thrown by Axios, otherwise false
 */ module.exports = function isAxiosError(payload) {
    return $9tVw0.isObject(payload) && payload.isAxiosError === true;
};

});


parcelRequire.register("5vvYE", function(module, exports) {



module.exports = (parcelRequire("80edz"))((parcelRequire("lMPD6")).getBundleURL("5VYGf") + (parcelRequire("cXafQ")).resolve("kIpIl")).then(()=>parcelRequire("hKXWV"));

});
parcelRequire.register("80edz", function(module, exports) {
"use strict";

var $brode = parcelRequire("brode");
module.exports = $brode(function(bundle) {
    return new Promise(function(resolve, reject) {
        // Don't insert the same script twice (e.g. if it was already in the HTML)
        var existingScripts = document.getElementsByTagName("script");
        if ([].concat(existingScripts).some(function isCurrentBundle(script) {
            return script.src === bundle;
        })) {
            resolve();
            return;
        }
        var preloadLink = document.createElement("link");
        preloadLink.href = bundle;
        preloadLink.rel = "preload";
        preloadLink.as = "script";
        document.head.appendChild(preloadLink);
        var script = document.createElement("script");
        script.async = true;
        script.type = "text/javascript";
        script.src = bundle;
        script.onerror = function(e) {
            var error = new TypeError("Failed to fetch dynamically imported module: ".concat(bundle, ". Error: ").concat(e.message));
            script.onerror = script.onload = null;
            script.remove();
            reject(error);
        };
        script.onload = function() {
            script.onerror = script.onload = null;
            resolve();
        };
        document.getElementsByTagName("head")[0].appendChild(script);
    });
});

});
parcelRequire.register("brode", function(module, exports) {
"use strict";
var $8544ff69229d0634$var$cachedBundles = {};
var $8544ff69229d0634$var$cachedPreloads = {};
var $8544ff69229d0634$var$cachedPrefetches = {};
function $8544ff69229d0634$var$getCache(type) {
    switch(type){
        case "preload":
            return $8544ff69229d0634$var$cachedPreloads;
        case "prefetch":
            return $8544ff69229d0634$var$cachedPrefetches;
        default:
            return $8544ff69229d0634$var$cachedBundles;
    }
}
module.exports = function(loader, type) {
    return function(bundle) {
        var cache = $8544ff69229d0634$var$getCache(type);
        if (cache[bundle]) return cache[bundle];
        return cache[bundle] = loader.apply(null, arguments).catch(function(e) {
            delete cache[bundle];
            throw e;
        });
    };
};

});


parcelRequire.register("lMPD6", function(module, exports) {

$parcel$export(module.exports, "getBundleURL", function () { return $fdc6213f386665cb$export$bdfd709ae4826697; }, function (v) { return $fdc6213f386665cb$export$bdfd709ae4826697 = v; });
var $fdc6213f386665cb$export$bdfd709ae4826697;
var $fdc6213f386665cb$export$c9e73fbda7da57b6;
var $fdc6213f386665cb$export$5a759dc7a1cfb72a;
"use strict";
var $fdc6213f386665cb$var$bundleURL = {};
function $fdc6213f386665cb$var$getBundleURLCached(id) {
    var value = $fdc6213f386665cb$var$bundleURL[id];
    if (!value) {
        value = $fdc6213f386665cb$var$getBundleURL();
        $fdc6213f386665cb$var$bundleURL[id] = value;
    }
    return value;
}
function $fdc6213f386665cb$var$getBundleURL() {
    try {
        throw new Error();
    } catch (err) {
        var matches = ("" + err.stack).match(/(https?|file|ftp|(chrome|moz|safari-web)-extension):\/\/[^)\n]+/g);
        if (matches) // The first two stack frames will be this function and getBundleURLCached.
        // Use the 3rd one, which will be a runtime in the original bundle.
        return $fdc6213f386665cb$var$getBaseURL(matches[2]);
    }
    return "/";
}
function $fdc6213f386665cb$var$getBaseURL(url) {
    return ("" + url).replace(/^((?:https?|file|ftp|(chrome|moz|safari-web)-extension):\/\/.+)\/[^/]+$/, "$1") + "/";
} // TODO: Replace uses with `new URL(url).origin` when ie11 is no longer supported.
function $fdc6213f386665cb$var$getOrigin(url) {
    var matches = ("" + url).match(/(https?|file|ftp|(chrome|moz|safari-web)-extension):\/\/[^/]+/);
    if (!matches) throw new Error("Origin not found");
    return matches[0];
}
$fdc6213f386665cb$export$bdfd709ae4826697 = $fdc6213f386665cb$var$getBundleURLCached;
$fdc6213f386665cb$export$c9e73fbda7da57b6 = $fdc6213f386665cb$var$getBaseURL;
$fdc6213f386665cb$export$5a759dc7a1cfb72a = $fdc6213f386665cb$var$getOrigin;

});


parcelRequire.register("ldyI0", function(module, exports) {
var global = typeof self !== "undefined" ? self : this;
var __self__ = function() {
    function F() {
        this.fetch = false;
        this.DOMException = global.DOMException;
    }
    F.prototype = global;
    return new F();
}();
(function(self1) {
    var irrelevant = function(exports1) {
        var support = {
            searchParams: "URLSearchParams" in self1,
            iterable: "Symbol" in self1 && "iterator" in Symbol,
            blob: "FileReader" in self1 && "Blob" in self1 && function() {
                try {
                    new Blob();
                    return true;
                } catch (e) {
                    return false;
                }
            }(),
            formData: "FormData" in self1,
            arrayBuffer: "ArrayBuffer" in self1
        };
        function isDataView(obj) {
            return obj && DataView.prototype.isPrototypeOf(obj);
        }
        if (support.arrayBuffer) {
            var viewClasses = [
                "[object Int8Array]",
                "[object Uint8Array]",
                "[object Uint8ClampedArray]",
                "[object Int16Array]",
                "[object Uint16Array]",
                "[object Int32Array]",
                "[object Uint32Array]",
                "[object Float32Array]",
                "[object Float64Array]"
            ];
            var isArrayBufferView = ArrayBuffer.isView || function(obj) {
                return obj && viewClasses.indexOf(Object.prototype.toString.call(obj)) > -1;
            };
        }
        function normalizeName(name) {
            if (typeof name !== "string") name = String(name);
            if (/[^a-z0-9\-#$%&'*+.^_`|~]/i.test(name)) throw new TypeError("Invalid character in header field name");
            return name.toLowerCase();
        }
        function normalizeValue(value) {
            if (typeof value !== "string") value = String(value);
            return value;
        }
        // Build a destructive iterator for the value list
        function iteratorFor(items) {
            var iterator = {
                next: function() {
                    var value = items.shift();
                    return {
                        done: value === undefined,
                        value: value
                    };
                }
            };
            if (support.iterable) iterator[Symbol.iterator] = function() {
                return iterator;
            };
            return iterator;
        }
        function Headers(headers) {
            this.map = {};
            if (headers instanceof Headers) headers.forEach(function(value, name) {
                this.append(name, value);
            }, this);
            else if (Array.isArray(headers)) headers.forEach(function(header) {
                this.append(header[0], header[1]);
            }, this);
            else if (headers) Object.getOwnPropertyNames(headers).forEach(function(name) {
                this.append(name, headers[name]);
            }, this);
        }
        Headers.prototype.append = function(name, value) {
            name = normalizeName(name);
            value = normalizeValue(value);
            var oldValue = this.map[name];
            this.map[name] = oldValue ? oldValue + ", " + value : value;
        };
        Headers.prototype["delete"] = function(name) {
            delete this.map[normalizeName(name)];
        };
        Headers.prototype.get = function(name) {
            name = normalizeName(name);
            return this.has(name) ? this.map[name] : null;
        };
        Headers.prototype.has = function(name) {
            return this.map.hasOwnProperty(normalizeName(name));
        };
        Headers.prototype.set = function(name, value) {
            this.map[normalizeName(name)] = normalizeValue(value);
        };
        Headers.prototype.forEach = function(callback, thisArg) {
            for(var name in this.map)if (this.map.hasOwnProperty(name)) callback.call(thisArg, this.map[name], name, this);
        };
        Headers.prototype.keys = function() {
            var items = [];
            this.forEach(function(value, name) {
                items.push(name);
            });
            return iteratorFor(items);
        };
        Headers.prototype.values = function() {
            var items = [];
            this.forEach(function(value) {
                items.push(value);
            });
            return iteratorFor(items);
        };
        Headers.prototype.entries = function() {
            var items = [];
            this.forEach(function(value, name) {
                items.push([
                    name,
                    value
                ]);
            });
            return iteratorFor(items);
        };
        if (support.iterable) Headers.prototype[Symbol.iterator] = Headers.prototype.entries;
        function consumed(body) {
            if (body.bodyUsed) return Promise.reject(new TypeError("Already read"));
            body.bodyUsed = true;
        }
        function fileReaderReady(reader) {
            return new Promise(function(resolve, reject) {
                reader.onload = function() {
                    resolve(reader.result);
                };
                reader.onerror = function() {
                    reject(reader.error);
                };
            });
        }
        function readBlobAsArrayBuffer(blob) {
            var reader = new FileReader();
            var promise = fileReaderReady(reader);
            reader.readAsArrayBuffer(blob);
            return promise;
        }
        function readBlobAsText(blob) {
            var reader = new FileReader();
            var promise = fileReaderReady(reader);
            reader.readAsText(blob);
            return promise;
        }
        function readArrayBufferAsText(buf) {
            var view = new Uint8Array(buf);
            var chars = new Array(view.length);
            for(var i = 0; i < view.length; i++)chars[i] = String.fromCharCode(view[i]);
            return chars.join("");
        }
        function bufferClone(buf) {
            if (buf.slice) return buf.slice(0);
            else {
                var view = new Uint8Array(buf.byteLength);
                view.set(new Uint8Array(buf));
                return view.buffer;
            }
        }
        function Body() {
            this.bodyUsed = false;
            this._initBody = function(body) {
                this._bodyInit = body;
                if (!body) this._bodyText = "";
                else if (typeof body === "string") this._bodyText = body;
                else if (support.blob && Blob.prototype.isPrototypeOf(body)) this._bodyBlob = body;
                else if (support.formData && FormData.prototype.isPrototypeOf(body)) this._bodyFormData = body;
                else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) this._bodyText = body.toString();
                else if (support.arrayBuffer && support.blob && isDataView(body)) {
                    this._bodyArrayBuffer = bufferClone(body.buffer);
                    // IE 10-11 can't handle a DataView body.
                    this._bodyInit = new Blob([
                        this._bodyArrayBuffer
                    ]);
                } else if (support.arrayBuffer && (ArrayBuffer.prototype.isPrototypeOf(body) || isArrayBufferView(body))) this._bodyArrayBuffer = bufferClone(body);
                else this._bodyText = body = Object.prototype.toString.call(body);
                if (!this.headers.get("content-type")) {
                    if (typeof body === "string") this.headers.set("content-type", "text/plain;charset=UTF-8");
                    else if (this._bodyBlob && this._bodyBlob.type) this.headers.set("content-type", this._bodyBlob.type);
                    else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) this.headers.set("content-type", "application/x-www-form-urlencoded;charset=UTF-8");
                }
            };
            if (support.blob) {
                this.blob = function() {
                    var rejected = consumed(this);
                    if (rejected) return rejected;
                    if (this._bodyBlob) return Promise.resolve(this._bodyBlob);
                    else if (this._bodyArrayBuffer) return Promise.resolve(new Blob([
                        this._bodyArrayBuffer
                    ]));
                    else if (this._bodyFormData) throw new Error("could not read FormData body as blob");
                    else return Promise.resolve(new Blob([
                        this._bodyText
                    ]));
                };
                this.arrayBuffer = function() {
                    if (this._bodyArrayBuffer) return consumed(this) || Promise.resolve(this._bodyArrayBuffer);
                    else return this.blob().then(readBlobAsArrayBuffer);
                };
            }
            this.text = function() {
                var rejected = consumed(this);
                if (rejected) return rejected;
                if (this._bodyBlob) return readBlobAsText(this._bodyBlob);
                else if (this._bodyArrayBuffer) return Promise.resolve(readArrayBufferAsText(this._bodyArrayBuffer));
                else if (this._bodyFormData) throw new Error("could not read FormData body as text");
                else return Promise.resolve(this._bodyText);
            };
            if (support.formData) this.formData = function() {
                return this.text().then(decode);
            };
            this.json = function() {
                return this.text().then(JSON.parse);
            };
            return this;
        }
        // HTTP methods whose capitalization should be normalized
        var methods = [
            "DELETE",
            "GET",
            "HEAD",
            "OPTIONS",
            "POST",
            "PUT"
        ];
        function normalizeMethod(method) {
            var upcased = method.toUpperCase();
            return methods.indexOf(upcased) > -1 ? upcased : method;
        }
        function Request(input, options) {
            options = options || {};
            var body = options.body;
            if (input instanceof Request) {
                if (input.bodyUsed) throw new TypeError("Already read");
                this.url = input.url;
                this.credentials = input.credentials;
                if (!options.headers) this.headers = new Headers(input.headers);
                this.method = input.method;
                this.mode = input.mode;
                this.signal = input.signal;
                if (!body && input._bodyInit != null) {
                    body = input._bodyInit;
                    input.bodyUsed = true;
                }
            } else this.url = String(input);
            this.credentials = options.credentials || this.credentials || "same-origin";
            if (options.headers || !this.headers) this.headers = new Headers(options.headers);
            this.method = normalizeMethod(options.method || this.method || "GET");
            this.mode = options.mode || this.mode || null;
            this.signal = options.signal || this.signal;
            this.referrer = null;
            if ((this.method === "GET" || this.method === "HEAD") && body) throw new TypeError("Body not allowed for GET or HEAD requests");
            this._initBody(body);
        }
        Request.prototype.clone = function() {
            return new Request(this, {
                body: this._bodyInit
            });
        };
        function decode(body) {
            var form = new FormData();
            body.trim().split("&").forEach(function(bytes) {
                if (bytes) {
                    var split = bytes.split("=");
                    var name = split.shift().replace(/\+/g, " ");
                    var value = split.join("=").replace(/\+/g, " ");
                    form.append(decodeURIComponent(name), decodeURIComponent(value));
                }
            });
            return form;
        }
        function parseHeaders(rawHeaders) {
            var headers = new Headers();
            // Replace instances of \r\n and \n followed by at least one space or horizontal tab with a space
            // https://tools.ietf.org/html/rfc7230#section-3.2
            var preProcessedHeaders = rawHeaders.replace(/\r?\n[\t ]+/g, " ");
            preProcessedHeaders.split(/\r?\n/).forEach(function(line) {
                var parts = line.split(":");
                var key = parts.shift().trim();
                if (key) {
                    var value = parts.join(":").trim();
                    headers.append(key, value);
                }
            });
            return headers;
        }
        Body.call(Request.prototype);
        function Response(bodyInit, options) {
            if (!options) options = {};
            this.type = "default";
            this.status = options.status === undefined ? 200 : options.status;
            this.ok = this.status >= 200 && this.status < 300;
            this.statusText = "statusText" in options ? options.statusText : "OK";
            this.headers = new Headers(options.headers);
            this.url = options.url || "";
            this._initBody(bodyInit);
        }
        Body.call(Response.prototype);
        Response.prototype.clone = function() {
            return new Response(this._bodyInit, {
                status: this.status,
                statusText: this.statusText,
                headers: new Headers(this.headers),
                url: this.url
            });
        };
        Response.error = function() {
            var response = new Response(null, {
                status: 0,
                statusText: ""
            });
            response.type = "error";
            return response;
        };
        var redirectStatuses = [
            301,
            302,
            303,
            307,
            308
        ];
        Response.redirect = function(url, status) {
            if (redirectStatuses.indexOf(status) === -1) throw new RangeError("Invalid status code");
            return new Response(null, {
                status: status,
                headers: {
                    location: url
                }
            });
        };
        exports1.DOMException = self1.DOMException;
        try {
            new exports1.DOMException();
        } catch (err) {
            exports1.DOMException = function(message, name) {
                this.message = message;
                this.name = name;
                var error = Error(message);
                this.stack = error.stack;
            };
            exports1.DOMException.prototype = Object.create(Error.prototype);
            exports1.DOMException.prototype.constructor = exports1.DOMException;
        }
        function fetch(input, init) {
            return new Promise(function(resolve, reject) {
                var request = new Request(input, init);
                if (request.signal && request.signal.aborted) return reject(new exports1.DOMException("Aborted", "AbortError"));
                var xhr = new XMLHttpRequest();
                function abortXhr() {
                    xhr.abort();
                }
                xhr.onload = function() {
                    var options = {
                        status: xhr.status,
                        statusText: xhr.statusText,
                        headers: parseHeaders(xhr.getAllResponseHeaders() || "")
                    };
                    options.url = "responseURL" in xhr ? xhr.responseURL : options.headers.get("X-Request-URL");
                    var body = "response" in xhr ? xhr.response : xhr.responseText;
                    resolve(new Response(body, options));
                };
                xhr.onerror = function() {
                    reject(new TypeError("Network request failed"));
                };
                xhr.ontimeout = function() {
                    reject(new TypeError("Network request failed"));
                };
                xhr.onabort = function() {
                    reject(new exports1.DOMException("Aborted", "AbortError"));
                };
                xhr.open(request.method, request.url, true);
                if (request.credentials === "include") xhr.withCredentials = true;
                else if (request.credentials === "omit") xhr.withCredentials = false;
                if ("responseType" in xhr && support.blob) xhr.responseType = "blob";
                request.headers.forEach(function(value, name) {
                    xhr.setRequestHeader(name, value);
                });
                if (request.signal) {
                    request.signal.addEventListener("abort", abortXhr);
                    xhr.onreadystatechange = function() {
                        // DONE (success or failure)
                        if (xhr.readyState === 4) request.signal.removeEventListener("abort", abortXhr);
                    };
                }
                xhr.send(typeof request._bodyInit === "undefined" ? null : request._bodyInit);
            });
        }
        fetch.polyfill = true;
        if (!self1.fetch) {
            self1.fetch = fetch;
            self1.Headers = Headers;
            self1.Request = Request;
            self1.Response = Response;
        }
        exports1.Headers = Headers;
        exports1.Request = Request;
        exports1.Response = Response;
        exports1.fetch = fetch;
        Object.defineProperty(exports1, "__esModule", {
            value: true
        });
        return exports1;
    }({});
})(__self__);
__self__.fetch.ponyfill = true;
// Remove "polyfill" property added by whatwg-fetch
delete __self__.fetch.polyfill;
// Choose between native implementation (global) or custom implementation (__self__)
// var ctx = global.fetch ? global : __self__;
var ctx = __self__; // this line disable service worker support temporarily
exports = ctx.fetch // To enable: import fetch from 'cross-fetch'
;
exports.default = ctx.fetch // For TypeScript consumers without esModuleInterop.
;
exports.fetch = ctx.fetch // To enable: import {fetch} from 'cross-fetch'
;
exports.Headers = ctx.Headers;
exports.Request = ctx.Request;
exports.Response = ctx.Response;
module.exports = exports;

});

parcelRequire.register("aImsM", function(module, exports) {
"use strict";
Object.defineProperty(module.exports, "__esModule", {
    value: true
});
module.exports.__internal__setErrorThrowerOptions = module.exports.ClerkProvider = void 0;

var $lFz1l = parcelRequire("lFz1l");
Object.defineProperty(module.exports, "ClerkProvider", {
    enumerable: true,
    get: function() {
        return $lFz1l.ClerkProvider;
    }
});
Object.defineProperty(module.exports, "__internal__setErrorThrowerOptions", {
    enumerable: true,
    get: function() {
        return $lFz1l.__internal__setErrorThrowerOptions;
    }
});

});
parcelRequire.register("lFz1l", function(module, exports) {
"use strict";
Object.defineProperty(module.exports, "__esModule", {
    value: true
});
module.exports.__internal__setErrorThrowerOptions = module.exports.ClerkProvider = void 0;

var $fOt1z = parcelRequire("fOt1z");

var $6aCOC = parcelRequire("6aCOC");

const $fc6897addcfed0c3$var$react_1 = $fOt1z.__importDefault((parcelRequire("laauJ")));

var $rLPvf = parcelRequire("rLPvf");

var $9LdOB = parcelRequire("9LdOB");
Object.defineProperty(module.exports, "__internal__setErrorThrowerOptions", {
    enumerable: true,
    get: function() {
        return $9LdOB.__internal__setErrorThrowerOptions;
    }
});

var $3IiGL = parcelRequire("3IiGL");

var $1dBnc = parcelRequire("1dBnc");
(0, $9LdOB.__internal__setErrorThrowerOptions)({
    packageName: "@clerk/clerk-react"
});
function $fc6897addcfed0c3$var$ClerkProviderBase(props) {
    const { initialState: initialState , children: children  } = props, restIsomorphicClerkOptions = $fOt1z.__rest(props, [
        "initialState",
        "children"
    ]);
    const { frontendApi: frontendApi = "" , publishableKey: publishableKey = "" , Clerk: userInitialisedClerk  } = restIsomorphicClerkOptions;
    if (!userInitialisedClerk) {
        if (!publishableKey && !frontendApi) $9LdOB.errorThrower.throwMissingPublishableKeyError();
        else if (publishableKey && !(0, $6aCOC.isPublishableKey)(publishableKey)) $9LdOB.errorThrower.throwInvalidPublishableKeyError({
            key: publishableKey
        });
        else if (!publishableKey && frontendApi && !(0, $6aCOC.isLegacyFrontendApiKey)(frontendApi)) $9LdOB.errorThrower.throwInvalidFrontendApiError({
            key: frontendApi
        });
    }
    return $fc6897addcfed0c3$var$react_1.default.createElement($1dBnc.StructureContext.Provider, {
        value: $1dBnc.StructureContextStates.noGuarantees
    }, $fc6897addcfed0c3$var$react_1.default.createElement($3IiGL.ClerkContextProvider, {
        initialState: initialState,
        isomorphicClerkOptions: restIsomorphicClerkOptions
    }, children));
}
const $fc6897addcfed0c3$var$ClerkProvider = (0, $9LdOB.withMaxAllowedInstancesGuard)($fc6897addcfed0c3$var$ClerkProviderBase, "ClerkProvider", $rLPvf.multipleClerkProvidersError);
module.exports.ClerkProvider = $fc6897addcfed0c3$var$ClerkProvider;
$fc6897addcfed0c3$var$ClerkProvider.displayName = "ClerkProvider";

});
parcelRequire.register("fOt1z", function(module, exports) {

$parcel$export(module.exports, "__rest", function () { return $b8320a2cbac41856$export$3c9a16f847548506; });
$parcel$export(module.exports, "__exportStar", function () { return $b8320a2cbac41856$export$f33643c0debef087; });
$parcel$export(module.exports, "__importDefault", function () { return $b8320a2cbac41856$export$da59b14a69baef04; });
$parcel$export(module.exports, "__classPrivateFieldGet", function () { return $b8320a2cbac41856$export$d5dcaf168c640c35; });
$parcel$export(module.exports, "__classPrivateFieldSet", function () { return $b8320a2cbac41856$export$d40a35129aaff81f; });
/******************************************************************************
Copyright (c) Microsoft Corporation.

Permission to use, copy, modify, and/or distribute this software for any
purpose with or without fee is hereby granted.

THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
PERFORMANCE OF THIS SOFTWARE.
***************************************************************************** */ /* global Reflect, Promise */ var $b8320a2cbac41856$var$extendStatics = function(d, b) {
    $b8320a2cbac41856$var$extendStatics = Object.setPrototypeOf || ({
        __proto__: []
    }) instanceof Array && function(d, b) {
        d.__proto__ = b;
    } || function(d, b) {
        for(var p in b)if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];
    };
    return $b8320a2cbac41856$var$extendStatics(d, b);
};
function $b8320a2cbac41856$export$a8ba968b8961cb8a(d, b) {
    if (typeof b !== "function" && b !== null) throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
    $b8320a2cbac41856$var$extendStatics(d, b);
    function __() {
        this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
}
var $b8320a2cbac41856$export$18ce0697a983be9b = function() {
    $b8320a2cbac41856$export$18ce0697a983be9b = Object.assign || function __assign(t) {
        for(var s, i = 1, n = arguments.length; i < n; i++){
            s = arguments[i];
            for(var p in s)if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
        }
        return t;
    };
    return $b8320a2cbac41856$export$18ce0697a983be9b.apply(this, arguments);
};
function $b8320a2cbac41856$export$3c9a16f847548506(s, e) {
    var t = {};
    for(var p in s)if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function") {
        for(var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++)if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];
    }
    return t;
}
function $b8320a2cbac41856$export$29e00dfd3077644b(decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for(var i = decorators.length - 1; i >= 0; i--)if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
}
function $b8320a2cbac41856$export$d5ad3fd78186038f(paramIndex, decorator) {
    return function(target, key) {
        decorator(target, key, paramIndex);
    };
}
function $b8320a2cbac41856$export$f1db080c865becb9(metadataKey, metadataValue) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(metadataKey, metadataValue);
}
function $b8320a2cbac41856$export$1050f835b63b671e(thisArg, _arguments, P, generator) {
    function adopt(value) {
        return value instanceof P ? value : new P(function(resolve) {
            resolve(value);
        });
    }
    return new (P || (P = Promise))(function(resolve, reject) {
        function fulfilled(value) {
            try {
                step(generator.next(value));
            } catch (e) {
                reject(e);
            }
        }
        function rejected(value) {
            try {
                step(generator["throw"](value));
            } catch (e) {
                reject(e);
            }
        }
        function step(result) {
            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
        }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
}
function $b8320a2cbac41856$export$67ebef60e6f28a6(thisArg, body) {
    var _ = {
        label: 0,
        sent: function() {
            if (t[0] & 1) throw t[1];
            return t[1];
        },
        trys: [],
        ops: []
    }, f, y, t, g;
    return g = {
        next: verb(0),
        "throw": verb(1),
        "return": verb(2)
    }, typeof Symbol === "function" && (g[Symbol.iterator] = function() {
        return this;
    }), g;
    function verb(n) {
        return function(v) {
            return step([
                n,
                v
            ]);
        };
    }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while(g && (g = 0, op[0] && (_ = 0)), _)try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [
                op[0] & 2,
                t.value
            ];
            switch(op[0]){
                case 0:
                case 1:
                    t = op;
                    break;
                case 4:
                    _.label++;
                    return {
                        value: op[1],
                        done: false
                    };
                case 5:
                    _.label++;
                    y = op[1];
                    op = [
                        0
                    ];
                    continue;
                case 7:
                    op = _.ops.pop();
                    _.trys.pop();
                    continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
                        _ = 0;
                        continue;
                    }
                    if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {
                        _.label = op[1];
                        break;
                    }
                    if (op[0] === 6 && _.label < t[1]) {
                        _.label = t[1];
                        t = op;
                        break;
                    }
                    if (t && _.label < t[2]) {
                        _.label = t[2];
                        _.ops.push(op);
                        break;
                    }
                    if (t[2]) _.ops.pop();
                    _.trys.pop();
                    continue;
            }
            op = body.call(thisArg, _);
        } catch (e) {
            op = [
                6,
                e
            ];
            y = 0;
        } finally{
            f = t = 0;
        }
        if (op[0] & 5) throw op[1];
        return {
            value: op[0] ? op[1] : void 0,
            done: true
        };
    }
}
var $b8320a2cbac41856$export$45d3717a4c69092e = Object.create ? function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) desc = {
        enumerable: true,
        get: function() {
            return m[k];
        }
    };
    Object.defineProperty(o, k2, desc);
} : function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
};
function $b8320a2cbac41856$export$f33643c0debef087(m, o) {
    for(var p in m)if (p !== "default" && !Object.prototype.hasOwnProperty.call(o, p)) $b8320a2cbac41856$export$45d3717a4c69092e(o, m, p);
}
function $b8320a2cbac41856$export$19a8beecd37a4c45(o) {
    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
    if (m) return m.call(o);
    if (o && typeof o.length === "number") return {
        next: function() {
            if (o && i >= o.length) o = void 0;
            return {
                value: o && o[i++],
                done: !o
            };
        }
    };
    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
}
function $b8320a2cbac41856$export$8d051b38c9118094(o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while((n === void 0 || n-- > 0) && !(r = i.next()).done)ar.push(r.value);
    } catch (error) {
        e = {
            error: error
        };
    } finally{
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        } finally{
            if (e) throw e.error;
        }
    }
    return ar;
}
function $b8320a2cbac41856$export$afc72e2116322959() {
    for(var ar = [], i = 0; i < arguments.length; i++)ar = ar.concat($b8320a2cbac41856$export$8d051b38c9118094(arguments[i]));
    return ar;
}
function $b8320a2cbac41856$export$6388937ca91ccae8() {
    for(var s = 0, i = 0, il = arguments.length; i < il; i++)s += arguments[i].length;
    for(var r = Array(s), k = 0, i = 0; i < il; i++)for(var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)r[k] = a[j];
    return r;
}
function $b8320a2cbac41856$export$1216008129fb82ed(to, from, pack) {
    if (pack || arguments.length === 2) {
        for(var i = 0, l = from.length, ar; i < l; i++)if (ar || !(i in from)) {
            if (!ar) ar = Array.prototype.slice.call(from, 0, i);
            ar[i] = from[i];
        }
    }
    return to.concat(ar || Array.prototype.slice.call(from));
}
function $b8320a2cbac41856$export$10c90e4f7922046c(v) {
    return this instanceof $b8320a2cbac41856$export$10c90e4f7922046c ? (this.v = v, this) : new $b8320a2cbac41856$export$10c90e4f7922046c(v);
}
function $b8320a2cbac41856$export$e427f37a30a4de9b(thisArg, _arguments, generator) {
    if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
    var g = generator.apply(thisArg, _arguments || []), i, q = [];
    return i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function() {
        return this;
    }, i;
    function verb(n) {
        if (g[n]) i[n] = function(v) {
            return new Promise(function(a, b) {
                q.push([
                    n,
                    v,
                    a,
                    b
                ]) > 1 || resume(n, v);
            });
        };
    }
    function resume(n, v) {
        try {
            step(g[n](v));
        } catch (e) {
            settle(q[0][3], e);
        }
    }
    function step(r) {
        r.value instanceof $b8320a2cbac41856$export$10c90e4f7922046c ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r);
    }
    function fulfill(value) {
        resume("next", value);
    }
    function reject(value) {
        resume("throw", value);
    }
    function settle(f, v) {
        if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]);
    }
}
function $b8320a2cbac41856$export$bbd80228419bb833(o) {
    var i, p;
    return i = {}, verb("next"), verb("throw", function(e) {
        throw e;
    }), verb("return"), i[Symbol.iterator] = function() {
        return this;
    }, i;
    function verb(n, f) {
        i[n] = o[n] ? function(v) {
            return (p = !p) ? {
                value: $b8320a2cbac41856$export$10c90e4f7922046c(o[n](v)),
                done: n === "return"
            } : f ? f(v) : v;
        } : f;
    }
}
function $b8320a2cbac41856$export$e3b29a3d6162315f(o) {
    if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
    var m = o[Symbol.asyncIterator], i;
    return m ? m.call(o) : (o = typeof $b8320a2cbac41856$export$19a8beecd37a4c45 === "function" ? $b8320a2cbac41856$export$19a8beecd37a4c45(o) : o[Symbol.iterator](), i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function() {
        return this;
    }, i);
    function verb(n) {
        i[n] = o[n] && function(v) {
            return new Promise(function(resolve, reject) {
                v = o[n](v), settle(resolve, reject, v.done, v.value);
            });
        };
    }
    function settle(resolve, reject, d, v) {
        Promise.resolve(v).then(function(v) {
            resolve({
                value: v,
                done: d
            });
        }, reject);
    }
}
function $b8320a2cbac41856$export$4fb47efe1390b86f(cooked, raw) {
    if (Object.defineProperty) Object.defineProperty(cooked, "raw", {
        value: raw
    });
    else cooked.raw = raw;
    return cooked;
}
var $b8320a2cbac41856$var$__setModuleDefault = Object.create ? function(o, v) {
    Object.defineProperty(o, "default", {
        enumerable: true,
        value: v
    });
} : function(o, v) {
    o["default"] = v;
};
function $b8320a2cbac41856$export$c21735bcef00d192(mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) {
        for(var k in mod)if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) $b8320a2cbac41856$export$45d3717a4c69092e(result, mod, k);
    }
    $b8320a2cbac41856$var$__setModuleDefault(result, mod);
    return result;
}
function $b8320a2cbac41856$export$da59b14a69baef04(mod) {
    return mod && mod.__esModule ? mod : {
        default: mod
    };
}
function $b8320a2cbac41856$export$d5dcaf168c640c35(receiver, state, kind, f) {
    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a getter");
    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot read private member from an object whose class did not declare it");
    return kind === "m" ? f : kind === "a" ? f.call(receiver) : f ? f.value : state.get(receiver);
}
function $b8320a2cbac41856$export$d40a35129aaff81f(receiver, state, value, kind, f) {
    if (kind === "m") throw new TypeError("Private method is not writable");
    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a setter");
    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot write private member to an object whose class did not declare it");
    return kind === "a" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value), value;
}
function $b8320a2cbac41856$export$81fdc39f203e4e04(state, receiver) {
    if (receiver === null || typeof receiver !== "object" && typeof receiver !== "function") throw new TypeError("Cannot use 'in' operator on non-object");
    return typeof state === "function" ? receiver === state : state.has(receiver);
}

});

parcelRequire.register("6aCOC", function(module, exports) {

$parcel$export(module.exports, "buildErrorThrower", function () { return $47e1c9301463c82b$export$d6149cfe10ecbed3; });
$parcel$export(module.exports, "parsePublishableKey", function () { return $47e1c9301463c82b$export$e714dbd47ccca8af; });
$parcel$export(module.exports, "isPublishableKey", function () { return $47e1c9301463c82b$export$e7b0b0686142f5e8; });
$parcel$export(module.exports, "isLegacyFrontendApiKey", function () { return $47e1c9301463c82b$export$64ce68e329c0c00a; });
$parcel$export(module.exports, "createDevOrStagingUrlCache", function () { return $47e1c9301463c82b$export$31072de0539b233; });
$parcel$export(module.exports, "handleValueOrFn", function () { return $47e1c9301463c82b$export$af80d780caaebdea; });
$parcel$export(module.exports, "isValidProxyUrl", function () { return $47e1c9301463c82b$export$e2743abb42a775d; });
$parcel$export(module.exports, "proxyUrlToAbsoluteURL", function () { return $47e1c9301463c82b$export$b5f197fdba327544; });
$parcel$export(module.exports, "inClientSide", function () { return $47e1c9301463c82b$export$8176888a712f743c; });
$parcel$export(module.exports, "addClerkPrefix", function () { return $47e1c9301463c82b$export$34d7ddd66a763253; });
$parcel$export(module.exports, "createContextAndHook", function () { return $47e1c9301463c82b$export$b4f021037e6d7d3f; });
$parcel$export(module.exports, "ClerkInstanceContext", function () { return $47e1c9301463c82b$export$8aa96e0f8b054cda; });
$parcel$export(module.exports, "useClerkInstanceContext", function () { return $47e1c9301463c82b$export$5ebbb6ccfffc7393; });
$parcel$export(module.exports, "UserContext", function () { return $47e1c9301463c82b$export$38ee920e59704589; });
$parcel$export(module.exports, "useUserContext", function () { return $47e1c9301463c82b$export$87c54b525b914dab; });
$parcel$export(module.exports, "ClientContext", function () { return $47e1c9301463c82b$export$56e68f8f57ecfde4; });
$parcel$export(module.exports, "useClientContext", function () { return $47e1c9301463c82b$export$6627e187bf6ba3fd; });
$parcel$export(module.exports, "SessionContext", function () { return $47e1c9301463c82b$export$3285420c698bc605; });
$parcel$export(module.exports, "useSessionContext", function () { return $47e1c9301463c82b$export$a3931362f3958630; });
$parcel$export(module.exports, "OrganizationContext", function () { return $47e1c9301463c82b$export$14ec650242c84392; });
$parcel$export(module.exports, "useOrganizationContext", function () { return $47e1c9301463c82b$export$7305fb39264bef77; });
$parcel$export(module.exports, "useOrganization", function () { return $47e1c9301463c82b$export$ae85931d305e13b1; });
$parcel$export(module.exports, "useOrganizationList", function () { return $47e1c9301463c82b$export$70272151be64739d; });
$parcel$export(module.exports, "useOrganizations", function () { return $47e1c9301463c82b$export$5fc38fde58f5cf66; });

var $kbVfw = parcelRequire("kbVfw");

var $kVsbi = parcelRequire("kVsbi");

var $laauJ = parcelRequire("laauJ");

var $laauJ = parcelRequire("laauJ");

var $laauJ = parcelRequire("laauJ");
var $47e1c9301463c82b$var$St = Object.freeze({
    InvalidFrontendApiErrorMessage: "The frontendApi passed to Clerk is invalid. You can get your Frontend API key at https://dashboard.clerk.com/last-active?path=api-keys. (key={{key}})",
    InvalidProxyUrlErrorMessage: "The proxyUrl passed to Clerk is invalid. The expected value for proxyUrl is an absolute URL or a relative path with a leading '/'. (key={{url}})",
    InvalidPublishableKeyErrorMessage: "The publishableKey passed to Clerk is invalid. You can get your Publishable key at https://dashboard.clerk.com/last-active?path=api-keys. (key={{key}})",
    MissingPublishableKeyErrorMessage: "Missing publishableKey. You can get your key at https://dashboard.clerk.com/last-active?path=api-keys."
});
function $47e1c9301463c82b$export$d6149cfe10ecbed3({ packageName: e , customMessages: r  }) {
    let t = e, n = {
        ...$47e1c9301463c82b$var$St,
        ...r
    };
    function o(i, a) {
        if (!a) return `${t}: ${i}`;
        let u = i, f = i.matchAll(/{{([a-zA-Z0-9-_]+)}}/g);
        for (let s of f){
            let l = (a[s[1]] || "").toString();
            u = u.replace(`{{${s[1]}}}`, l);
        }
        return `${t}: ${u}`;
    }
    return {
        setPackageName ({ packageName: i  }) {
            return typeof i == "string" && (t = i), this;
        },
        setMessages ({ customMessages: i  }) {
            return Object.assign(n, i || {}), this;
        },
        throwInvalidPublishableKeyError (i) {
            throw new Error(o(n.InvalidPublishableKeyErrorMessage, i));
        },
        throwInvalidFrontendApiError (i) {
            throw new Error(o(n.InvalidFrontendApiErrorMessage, i));
        },
        throwInvalidProxyUrl (i) {
            throw new Error(o(n.InvalidProxyUrlErrorMessage, i));
        },
        throwMissingPublishableKeyError () {
            throw new Error(o(n.MissingPublishableKeyErrorMessage));
        }
    };
}
var $47e1c9301463c82b$export$65cb8af9798db83d = (e)=>{
    if (e.length == 0) return "";
    if (e.length == 1) return e[0];
    let r = e.slice(0, -1).join(", ");
    return r += `, or ${e.slice(-1)}`, r;
};
function $47e1c9301463c82b$export$620a268685f0ac45() {
    return typeof window < "u";
}
function $47e1c9301463c82b$export$c17cdb790e99cd44(e) {
    return new RegExp([
        /bot/,
        /spider/,
        /crawl/,
        /APIs-Google/,
        /AdsBot/,
        /Googlebot/,
        /mediapartners/,
        /Google Favicon/,
        /FeedFetcher/,
        /Google-Read-Aloud/,
        /DuplexWeb-Google/,
        /googleweblight/,
        /bing/,
        /yandex/,
        /baidu/,
        /duckduck/,
        /yahoo/,
        /ecosia/,
        /ia_archiver/,
        /facebook/,
        /instagram/,
        /pinterest/,
        /reddit/,
        /slack/,
        /twitter/,
        /whatsapp/,
        /youtube/,
        /semrush/
    ].map((t)=>t.source).join("|"), "i").test(e);
}
function $47e1c9301463c82b$export$aa41b89db26550c5() {
    let e = window?.navigator;
    if (!$47e1c9301463c82b$export$620a268685f0ac45() || !e) return !1;
    let r = $47e1c9301463c82b$export$c17cdb790e99cd44(e?.userAgent), t = e?.webdriver, n = e?.onLine, o = e?.connection?.rtt !== 0 && e?.connection?.downlink !== 0;
    return !r && !t && o && n;
}
var $47e1c9301463c82b$var$Mt = /^#?([A-F0-9]{6}|[A-F0-9]{3})$/i, $47e1c9301463c82b$var$Dt = /^rgb\((\d+),\s*(\d+),\s*(\d+)\)$/i, $47e1c9301463c82b$var$Pt = /^rgba\((\d+),\s*(\d+),\s*(\d+)(,\s*\d+(\.\d+)?)\)$/i, $47e1c9301463c82b$var$At = /^hsl\((\d+),\s*([\d.]+)%,\s*([\d.]+)%\)$/i, $47e1c9301463c82b$var$Ut = /^hsla\((\d+),\s*([\d.]+)%,\s*([\d.]+)%(,\s*\d+(\.\d+)?)*\)$/i, $47e1c9301463c82b$export$d65a36119baa393e = (e)=>!!e.match($47e1c9301463c82b$var$Mt), $47e1c9301463c82b$export$219fded437b850e2 = (e)=>!!(e.match($47e1c9301463c82b$var$Dt) || e.match($47e1c9301463c82b$var$Pt)), $47e1c9301463c82b$export$2122b77a09d043a3 = (e)=>!!e.match($47e1c9301463c82b$var$At) || !!e.match($47e1c9301463c82b$var$Ut), $47e1c9301463c82b$export$9b9bf1db1bd6d350 = (e)=>typeof e != "string" && "r" in e, $47e1c9301463c82b$export$c2b843a3f636a08c = (e)=>typeof e != "string" && "h" in e, $47e1c9301463c82b$export$b5066e04f2f87723 = (e)=>e === "transparent", $47e1c9301463c82b$export$7c6623716c246f1 = (e)=>typeof e != "string" && e.a != null && e.a < 1;
var $47e1c9301463c82b$var$_t = /[hsla()]/g, $47e1c9301463c82b$var$Ft = /[rgba()]/g, $47e1c9301463c82b$export$2ddd6e970c7527b7 = (e)=>e === "transparent" ? {
        h: 0,
        s: 0,
        l: 0,
        a: 0
    } : $47e1c9301463c82b$export$d65a36119baa393e(e) ? $47e1c9301463c82b$var$Nt(e) : $47e1c9301463c82b$export$2122b77a09d043a3(e) ? $47e1c9301463c82b$var$qe(e) : $47e1c9301463c82b$export$219fded437b850e2(e) ? $47e1c9301463c82b$var$Xe(e) : null, $47e1c9301463c82b$export$6375abddade00d53 = (e)=>(e = e.trim(), $47e1c9301463c82b$export$d65a36119baa393e(e) ? e.startsWith("#") ? e : `#${e}` : $47e1c9301463c82b$export$219fded437b850e2(e) ? $47e1c9301463c82b$var$Ye(e) : $47e1c9301463c82b$export$2122b77a09d043a3(e) ? $47e1c9301463c82b$var$qe(e) : $47e1c9301463c82b$export$b5066e04f2f87723(e) ? e : ""), $47e1c9301463c82b$export$fd9b4b6e61e89f57 = (e)=>typeof e == "string" && ($47e1c9301463c82b$export$d65a36119baa393e(e) || $47e1c9301463c82b$export$b5066e04f2f87723(e)) ? e : $47e1c9301463c82b$export$9b9bf1db1bd6d350(e) ? $47e1c9301463c82b$var$$t(e) : $47e1c9301463c82b$export$c2b843a3f636a08c(e) ? $47e1c9301463c82b$var$Ht(e) : "", $47e1c9301463c82b$export$d8d8fd9aec3aff47 = (e)=>{
    e = e.replace("#", "");
    let r = parseInt(e.substring(0, 2), 16), t = parseInt(e.substring(2, 4), 16), n = parseInt(e.substring(4, 6), 16);
    return {
        r: r,
        g: t,
        b: n
    };
}, $47e1c9301463c82b$var$$t = (e)=>{
    let { a: r , b: t , g: n , r: o  } = e;
    return e.a === 0 ? "transparent" : e.a != null ? `rgba(${o},${n},${t},${r})` : `rgb(${o},${n},${t})`;
}, $47e1c9301463c82b$var$Ht = (e)=>{
    let { h: r , s: t , l: n , a: o  } = e, i = Math.round(t * 100), a = Math.round(n * 100);
    return e.a === 0 ? "transparent" : e.a != null ? `hsla(${r},${i}%,${a}%,${o})` : `hsl(${r},${i}%,${a}%)`;
}, $47e1c9301463c82b$var$Nt = (e)=>{
    let r = $47e1c9301463c82b$export$fd9b4b6e61e89f57($47e1c9301463c82b$export$d8d8fd9aec3aff47(e));
    return $47e1c9301463c82b$var$Xe(r);
}, $47e1c9301463c82b$var$Xe = (e)=>{
    let r = $47e1c9301463c82b$var$Ye(e), t = r.r / 255, n = r.g / 255, o = r.b / 255, i = Math.max(t, n, o), a = Math.min(t, n, o), u, f, s = (i + a) / 2;
    if (i == a) u = f = 0;
    else {
        let c = i - a;
        switch(f = s >= .5 ? c / (2 - (i + a)) : c / (i + a), i){
            case t:
                u = (n - o) / c * 60;
                break;
            case n:
                u = ((o - t) / c + 2) * 60;
                break;
            default:
                u = ((t - n) / c + 4) * 60;
                break;
        }
    }
    let l = {
        h: Math.round(u),
        s: f,
        l: s
    }, p = r.a;
    return p != null && (l.a = p), l;
}, $47e1c9301463c82b$var$Ye = (e)=>{
    let [r, t, n, o] = e.replace($47e1c9301463c82b$var$Ft, "").split(",").map((i)=>Number.parseFloat(i));
    return {
        r: r,
        g: t,
        b: n,
        a: o
    };
}, $47e1c9301463c82b$var$qe = (e)=>{
    let [r, t, n, o] = e.replace($47e1c9301463c82b$var$_t, "").split(",").map((i)=>Number.parseFloat(i));
    return {
        h: r,
        s: t / 100,
        l: n / 100,
        a: o
    };
};
function $47e1c9301463c82b$var$ae(e) {
    for(var r = 1; r < arguments.length; r++){
        var t = arguments[r];
        for(var n in t)e[n] = t[n];
    }
    return e;
}
var $47e1c9301463c82b$var$Gt = {
    read: function(e) {
        return e[0] === '"' && (e = e.slice(1, -1)), e.replace(/(%[\dA-F]{2})+/gi, decodeURIComponent);
    },
    write: function(e) {
        return encodeURIComponent(e).replace(/%(2[346BF]|3[AC-F]|40|5[BDE]|60|7[BCD])/g, decodeURIComponent);
    }
};
function $47e1c9301463c82b$var$ye(e, r) {
    function t(o, i, a) {
        if (!(typeof document > "u")) {
            a = $47e1c9301463c82b$var$ae({}, r, a), typeof a.expires == "number" && (a.expires = new Date(Date.now() + a.expires * 864e5)), a.expires && (a.expires = a.expires.toUTCString()), o = encodeURIComponent(o).replace(/%(2[346B]|5E|60|7C)/g, decodeURIComponent).replace(/[()]/g, escape);
            var u = "";
            for(var f in a)a[f] && (u += "; " + f, a[f] !== !0 && (u += "=" + a[f].split(";")[0]));
            return document.cookie = o + "=" + e.write(i, o) + u;
        }
    }
    function n(o) {
        if (!(typeof document > "u" || arguments.length && !o)) {
            for(var i = document.cookie ? document.cookie.split("; ") : [], a = {}, u = 0; u < i.length; u++){
                var f = i[u].split("="), s = f.slice(1).join("=");
                try {
                    var l = decodeURIComponent(f[0]);
                    if (a[l] = e.read(s, l), o === l) break;
                } catch  {}
            }
            return o ? a[o] : a;
        }
    }
    return Object.create({
        set: t,
        get: n,
        remove: function(o, i) {
            t(o, "", $47e1c9301463c82b$var$ae({}, i, {
                expires: -1
            }));
        },
        withAttributes: function(o) {
            return $47e1c9301463c82b$var$ye(this.converter, $47e1c9301463c82b$var$ae({}, this.attributes, o));
        },
        withConverter: function(o) {
            return $47e1c9301463c82b$var$ye($47e1c9301463c82b$var$ae({}, this.converter, o), this.attributes);
        }
    }, {
        attributes: {
            value: Object.freeze(r)
        },
        converter: {
            value: Object.freeze(e)
        }
    });
}
var $47e1c9301463c82b$var$Kt = $47e1c9301463c82b$var$ye($47e1c9301463c82b$var$Gt, {
    path: "/"
}), $47e1c9301463c82b$var$se = $47e1c9301463c82b$var$Kt;
function $47e1c9301463c82b$export$492cdf8e65f2099e(e) {
    return {
        get () {
            return $47e1c9301463c82b$var$se.get(e);
        },
        set (r, t = {}) {
            return $47e1c9301463c82b$var$se.set(e, r, t);
        },
        remove (r) {
            $47e1c9301463c82b$var$se.remove(e, r);
        }
    };
}
var $47e1c9301463c82b$export$87a845ded7190bfc = ()=>{
    let e = (0, $kbVfw.c), r = (0, $kbVfw.c);
    return {
        promise: new Promise((n, o)=>{
            e = n, r = o;
        }),
        resolve: e,
        reject: r
    };
};
function $47e1c9301463c82b$export$95edd8e74ffdc7e7(e) {
    return e ? e.toLocaleString("en-US", {
        hour: "2-digit",
        minute: "numeric",
        hour12: !0
    }) : "";
}
function $47e1c9301463c82b$export$4a02e9c37dab4871(e, r, { absolute: t = !0  } = {}) {
    if (!e || !r) return 0;
    let n = Date.UTC(e.getFullYear(), e.getMonth(), e.getDate()), o = Date.UTC(r.getFullYear(), r.getMonth(), r.getDate()), i = Math.floor((o - n) / 864e5);
    return t ? Math.abs(i) : i;
}
function $47e1c9301463c82b$export$fcc71269590ba0a8(e) {
    try {
        return new Date(e || new Date);
    } catch  {
        return new Date;
    }
}
function $47e1c9301463c82b$export$8fbbfd65594f46a0(e) {
    let { date: r , relativeTo: t  } = e;
    if (!r || !t) return null;
    let n = $47e1c9301463c82b$export$fcc71269590ba0a8(r), o = $47e1c9301463c82b$export$fcc71269590ba0a8(t), i = $47e1c9301463c82b$export$4a02e9c37dab4871(o, n, {
        absolute: !1
    });
    return i < -6 ? {
        relativeDateCase: "other",
        date: n
    } : i < -1 ? {
        relativeDateCase: "previous6Days",
        date: n
    } : i === -1 ? {
        relativeDateCase: "lastDay",
        date: n
    } : i === 0 ? {
        relativeDateCase: "sameDay",
        date: n
    } : i === 1 ? {
        relativeDateCase: "nextDay",
        date: n
    } : i < 7 ? {
        relativeDateCase: "next6Days",
        date: n
    } : {
        relativeDateCase: "other",
        date: n
    };
}
function $47e1c9301463c82b$export$3d83eec43f4ea476(e, r) {
    let t = $47e1c9301463c82b$export$fcc71269590ba0a8(e);
    return t.setFullYear(t.getFullYear() + r), t;
}
function $47e1c9301463c82b$export$55152de1f925fd05(e) {
    let r = e?.status;
    return e?.errors?.[0]?.code === "authentication_invalid" && r === 401;
}
function $47e1c9301463c82b$export$476aa014e2fd89d5(e) {
    return (`${e.message}${e.name}` || "").toLowerCase().replace(/\s+/g, "").includes("networkerror");
}
function $47e1c9301463c82b$export$aa2c7ad2063c8ec6(e) {
    return new Promise((r, t)=>{
        let n = new FileReader;
        n.addEventListener("load", function() {
            let o = JSON.parse(n.result);
            r(o);
        }), n.addEventListener("error", t), n.readAsText(e);
    });
}
var $47e1c9301463c82b$export$c1e1b7be43d0d063 = (e)=>typeof atob < "u" && typeof atob == "function" ? atob(e) : typeof $parcel$global < "u" && $parcel$global.Buffer ? new $parcel$global.Buffer(e, "base64").toString() : e;
var $47e1c9301463c82b$var$Re = "pk_live_", $47e1c9301463c82b$var$Je = "pk_test_", $47e1c9301463c82b$var$jt = /^(([a-z]+)-){2}([0-9]{1,2})\.clerk\.accounts([a-z.]*)(dev|com)$/i;
function $47e1c9301463c82b$export$dbd57dddc2edde62(e) {
    return `${$47e1c9301463c82b$var$jt.test(e) ? $47e1c9301463c82b$var$Je : $47e1c9301463c82b$var$Re}${btoa(`${e}$`)}`;
}
function $47e1c9301463c82b$export$e714dbd47ccca8af(e) {
    if (e = e || "", !$47e1c9301463c82b$export$e7b0b0686142f5e8(e)) return null;
    let r = e.startsWith($47e1c9301463c82b$var$Re) ? "production" : "development", t = $47e1c9301463c82b$export$c1e1b7be43d0d063(e.split("_")[2]);
    return t.endsWith("$") ? (t = t.slice(0, -1), {
        instanceType: r,
        frontendApi: t
    }) : null;
}
function $47e1c9301463c82b$export$e7b0b0686142f5e8(e) {
    e = e || "";
    let r = e.startsWith($47e1c9301463c82b$var$Re) || e.startsWith($47e1c9301463c82b$var$Je), t = $47e1c9301463c82b$export$c1e1b7be43d0d063(e.split("_")[2] || "").endsWith("$");
    return r && t;
}
function $47e1c9301463c82b$export$64ce68e329c0c00a(e) {
    return e = e || "", e.startsWith("clerk.");
}
function $47e1c9301463c82b$export$31072de0539b233() {
    let e = [
        ".lcl.dev",
        ".stg.dev",
        ".lclstage.dev",
        ".stgstage.dev",
        ".dev.lclclerk.com",
        ".stg.lclclerk.com",
        ".accounts.lclclerk.com",
        "accountsstage.dev",
        "accounts.dev"
    ], r = new Map;
    return {
        isDevOrStagingUrl: (t)=>{
            if (!t) return !1;
            let n = typeof t == "string" ? t : t.hostname, o = r.get(n);
            return o === void 0 && (o = e.some((i)=>n.endsWith(i)), r.set(n, o)), o;
        }
    };
}
function $47e1c9301463c82b$export$4c012cc1e603e93() {
    if (!window.matchMedia) return !1;
    let e = window.matchMedia("only screen and (min--moz-device-pixel-ratio: 1.3), only screen and (-o-min-device-pixel-ratio: 2.6/2), only screen and (-webkit-min-device-pixel-ratio: 1.3), only screen  and (min-device-pixel-ratio: 1.3), only screen and (min-resolution: 1.3dppx)");
    return e && e.matches || window.devicePixelRatio > 1;
}
var $47e1c9301463c82b$var$Yt = "__lsbc__", $47e1c9301463c82b$export$e30d1d60d460c8ce = class {
    constructor(r){
        this.eventTarget = window;
        this.postMessage = (r)=>{
            try {
                localStorage.setItem(this.channelKey, JSON.stringify(r)), localStorage.removeItem(this.channelKey);
            } catch  {}
        };
        this.addEventListener = (r, t)=>{
            this.eventTarget.addEventListener(this.prefixEventName(r), (n)=>{
                t(n);
            });
        };
        this.setupLocalStorageListener = ()=>{
            let r = (t)=>{
                if (!(t.key !== this.channelKey || !t.newValue)) try {
                    let n = JSON.parse(t.newValue || ""), o = new MessageEvent(this.prefixEventName("message"), {
                        data: n
                    });
                    this.eventTarget.dispatchEvent(o);
                } catch  {}
            };
            window.addEventListener("storage", r);
        };
        this.channelKey = $47e1c9301463c82b$var$Yt + r, this.setupLocalStorageListener();
    }
    prefixEventName(r) {
        return this.channelKey + r;
    }
};
var $47e1c9301463c82b$var$qt = Object.freeze({
    "image/png": "png",
    "image/jpeg": "jpg",
    "image/gif": "gif",
    "image/webp": "webp",
    "image/x-icon": "ico",
    "image/vnd.microsoft.icon": "ico"
}), $47e1c9301463c82b$export$1b45514b112dd749 = (e)=>$47e1c9301463c82b$var$qt[e];
function $47e1c9301463c82b$export$af80d780caaebdea(e, r, t) {
    if (typeof e == "function") return e(r);
    if (typeof e < "u") return e;
    if (typeof t < "u") return t;
}
var $47e1c9301463c82b$var$Jt = /^(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$/;
function $47e1c9301463c82b$export$402d6c4b260c768(e) {
    return $47e1c9301463c82b$var$Jt.test(e || "");
}
function $47e1c9301463c82b$export$29d0dd1cc36cee26(e) {
    let r = e || "";
    return r.charAt(0).toUpperCase() + r.slice(1);
}
function $47e1c9301463c82b$export$b70dcce1c70696bf(e) {
    return e ? e.replace(/([-_][a-z])/g, (r)=>r.toUpperCase().replace(/-|_/, "")) : "";
}
function $47e1c9301463c82b$export$e12f55f9c91df96a(e) {
    return e ? e.replace(/[A-Z]/g, (r)=>`_${r.toLowerCase()}`) : "";
}
var $47e1c9301463c82b$var$tt = (e)=>{
    let r = (t)=>{
        if (!t) return t;
        if (Array.isArray(t)) return t.map((i)=>typeof i == "object" || Array.isArray(i) ? r(i) : i);
        let n = {
            ...t
        }, o = Object.keys(n);
        for (let i of o){
            let a = e(i.toString());
            a !== i && (n[a] = n[i], delete n[i]), typeof n[a] == "object" && (n[a] = r(n[a]));
        }
        return n;
    };
    return r;
}, $47e1c9301463c82b$export$962fa8d541f74d2b = $47e1c9301463c82b$var$tt($47e1c9301463c82b$export$e12f55f9c91df96a), $47e1c9301463c82b$export$b0c2d4a93e16a70b = $47e1c9301463c82b$var$tt($47e1c9301463c82b$export$b70dcce1c70696bf);
var $47e1c9301463c82b$var$Te = `const respond=r=>{self.postMessage(r)},workerToTabIds={};self.addEventListener("message",r=>{const e=r.data;switch(e.type){case"setTimeout":workerToTabIds[e.id]=setTimeout(()=>{respond({id:e.id})},e.ms);break;case"clearTimeout":workerToTabIds[e.id]&&(clearTimeout(workerToTabIds[e.id]),delete workerToTabIds[e.id]);break;case"setInterval":workerToTabIds[e.id]=setInterval(()=>{respond({id:e.id})},e.ms);break;case"clearInterval":workerToTabIds[e.id]&&(clearInterval(workerToTabIds[e.id]),delete workerToTabIds[e.id]);break}});
`;
var $47e1c9301463c82b$var$rt = (e, r = {})=>{
    if (typeof Worker > "u") return null;
    try {
        let t = new Blob([
            e
        ], {
            type: "application/javascript; charset=utf-8"
        }), n = globalThis.URL.createObjectURL(t);
        return new Worker(n, r);
    } catch  {
        return console.warn("Clerk: Cannot create worker from blob. Consider adding worker-src blob:; to your CSP"), null;
    }
}, $47e1c9301463c82b$var$Qt = ()=>{
    let e = globalThis.setTimeout.bind(globalThis), r = globalThis.setInterval.bind(globalThis), t = globalThis.clearTimeout.bind(globalThis), n = globalThis.clearInterval.bind(globalThis);
    return {
        setTimeout: e,
        setInterval: r,
        clearTimeout: t,
        clearInterval: n,
        cleanup: (0, $kbVfw.c)
    };
}, $47e1c9301463c82b$export$aaca7980e2aa3e57 = ()=>{
    let e = 0, r = ()=>e++, t = new Map, n = (c, m)=>c?.postMessage(m), o = (c)=>{
        t.get(c.data.id)?.();
    }, i = $47e1c9301463c82b$var$rt($47e1c9301463c82b$var$Te, {
        name: "clerk-timers"
    });
    if (i?.addEventListener("message", o), !i) return $47e1c9301463c82b$var$Qt();
    let a = ()=>{
        i || (i = $47e1c9301463c82b$var$rt($47e1c9301463c82b$var$Te, {
            name: "clerk-timers"
        }), i?.addEventListener("message", o));
    };
    return {
        setTimeout: (c, m)=>{
            a();
            let C = r();
            return t.set(C, c), n(i, {
                type: "setTimeout",
                id: C,
                ms: m
            }), C;
        },
        setInterval: (c, m)=>{
            a();
            let C = r();
            return t.set(C, c), n(i, {
                type: "setInterval",
                id: C,
                ms: m
            }), C;
        },
        clearTimeout: (c)=>{
            a(), t.delete(c), n(i, {
                type: "clearTimeout",
                id: c
            });
        },
        clearInterval: (c)=>{
            a(), t.delete(c), n(i, {
                type: "clearInterval",
                id: c
            });
        },
        cleanup: ()=>{
            i && (i.terminate(), i = null, t.clear());
        }
    };
};
function $47e1c9301463c82b$export$d7350d97c7b41caa({ delayInMs: e  } = {
    delayInMs: 1e3
}) {
    let r = $47e1c9301463c82b$export$aaca7980e2aa3e57(), t, n = !1, o = ()=>{
        t && (r.clearTimeout(t), r.cleanup()), n = !0;
    }, i = async (a)=>{
        n = !1, await a(o), !n && (t = r.setTimeout(()=>{
            i(a);
        }, e));
    };
    return {
        run: i,
        stop: o
    };
}
function $47e1c9301463c82b$export$e2743abb42a775d(e) {
    return e ? $47e1c9301463c82b$export$10e521722f10e8f7(e) || $47e1c9301463c82b$export$b9e876062c8906fe(e) : !0;
}
function $47e1c9301463c82b$export$10e521722f10e8f7(e) {
    return /^http(s)?:\/\//.test(e || "");
}
function $47e1c9301463c82b$export$b9e876062c8906fe(e) {
    return e.startsWith("/");
}
function $47e1c9301463c82b$export$b5f197fdba327544(e) {
    return e ? $47e1c9301463c82b$export$b9e876062c8906fe(e) ? new URL(e, window.location.origin).toString() : e : "";
}
function $47e1c9301463c82b$export$14619c0eed01a470({ request: e , relativePath: r  }) {
    let { headers: t , url: n  } = e, o = new URL(n), i = t.get("X-Forwarded-Host") ?? t.get("host") ?? t.host ?? o.host, a = (t.get("X-Forwarded-Proto") ?? t["X-Forwarded-Proto"])?.split(",")[0] ?? o.protocol;
    return a = a.replace(/[:/]/, ""), new URL(r || o.pathname, `${a}://${i}`);
}
var $47e1c9301463c82b$export$8176888a712f743c = ()=>typeof window < "u";
function $47e1c9301463c82b$export$9a9a4ec1b3864074(e = "") {
    return e.startsWith("?") && (e = e.slice(1)), new URLSearchParams(e);
}
function $47e1c9301463c82b$export$c5f13991f66aa26a(e = "") {
    return (e || "").replace(/^.+:\/\//, "");
}
function $47e1c9301463c82b$export$34d7ddd66a763253(e) {
    if (!e) return "";
    let r;
    if (e.match(/^(clerk\.)+\w*$/)) r = /(clerk\.)*(?=clerk\.)/;
    else {
        if (e.match(/\.clerk.accounts/)) return e;
        r = /^(clerk\.)*/gi;
    }
    return `clerk.${e.replace(r, "")}`;
}
var $47e1c9301463c82b$var$tr = {
    maxRetries: 10,
    firstDelay: 125,
    maxDelay: 0,
    timeMultiple: 2,
    shouldRetry: ()=>!0
}, $47e1c9301463c82b$var$rr = async (e)=>new Promise((r)=>setTimeout(r, e)), $47e1c9301463c82b$var$nr = (e)=>{
    let r = 0, t = ()=>{
        let n = e.firstDelay, o = e.timeMultiple, i = n * Math.pow(o, r);
        return Math.min(e.maxDelay || i, i);
    };
    return async ()=>{
        await $47e1c9301463c82b$var$rr(t()), r++;
    };
}, $47e1c9301463c82b$export$66fdaba09a8b6da = async (e, r = {})=>{
    let t = 0, { maxRetries: n , shouldRetry: o , firstDelay: i , maxDelay: a , timeMultiple: u  } = {
        ...$47e1c9301463c82b$var$tr,
        ...r
    }, f = ()=>t === n, s = $47e1c9301463c82b$var$nr({
        firstDelay: i,
        maxDelay: a,
        timeMultiple: u
    });
    for(; !f();)try {
        return await e();
    } catch (l) {
        if (t++, !o(l, t) || f()) throw l;
        await s();
    }
    throw new Error("Something went wrong");
};
var $47e1c9301463c82b$export$9f1ac3e4ddeb29bb = {
    toRegexp: (e)=>{
        try {
            return (0, (/*@__PURE__*/$parcel$interopDefault($kVsbi)))(e);
        } catch (r) {
            throw new Error(`Invalid pattern: ${e}.
Consult the documentation of glob-to-regexp here: https://www.npmjs.com/package/glob-to-regexp.
${r.message}`);
        }
    }
};
function $47e1c9301463c82b$export$9f6298504fcd4ed(e, r) {
    if (!e) throw typeof r == "string" ? new Error(r) : new Error(`${r.displayName} not found`);
}
var $47e1c9301463c82b$export$b4f021037e6d7d3f = (e, r)=>{
    let { assertCtxFn: t = $47e1c9301463c82b$export$9f6298504fcd4ed  } = r || {}, n = (0, (/*@__PURE__*/$parcel$interopDefault($laauJ))).createContext(void 0);
    return n.displayName = e, [
        n,
        ()=>{
            let a = (0, (/*@__PURE__*/$parcel$interopDefault($laauJ))).useContext(n);
            return t(a, `${e} not found`), a.value;
        },
        ()=>{
            let a = (0, (/*@__PURE__*/$parcel$interopDefault($laauJ))).useContext(n);
            return a ? a.value : {};
        }
    ];
};
function $47e1c9301463c82b$var$ct(e, r, t, n) {
    function o(i) {
        return i instanceof t ? i : new t(function(a) {
            a(i);
        });
    }
    return new (t || (t = Promise))(function(i, a) {
        function u(l) {
            try {
                s(n.next(l));
            } catch (p) {
                a(p);
            }
        }
        function f(l) {
            try {
                s(n.throw(l));
            } catch (p) {
                a(p);
            }
        }
        function s(l) {
            l.done ? i(l.value) : o(l.value).then(u, f);
        }
        s((n = n.apply(e, r || [])).next());
    });
}
function $47e1c9301463c82b$var$dt(e, r) {
    var t = {
        label: 0,
        sent: function() {
            if (i[0] & 1) throw i[1];
            return i[1];
        },
        trys: [],
        ops: []
    }, n, o, i, a;
    return a = {
        next: u(0),
        throw: u(1),
        return: u(2)
    }, typeof Symbol == "function" && (a[Symbol.iterator] = function() {
        return this;
    }), a;
    function u(s) {
        return function(l) {
            return f([
                s,
                l
            ]);
        };
    }
    function f(s) {
        if (n) throw new TypeError("Generator is already executing.");
        for(; t;)try {
            if (n = 1, o && (i = s[0] & 2 ? o.return : s[0] ? o.throw || ((i = o.return) && i.call(o), 0) : o.next) && !(i = i.call(o, s[1])).done) return i;
            switch(o = 0, i && (s = [
                s[0] & 2,
                i.value
            ]), s[0]){
                case 0:
                case 1:
                    i = s;
                    break;
                case 4:
                    return t.label++, {
                        value: s[1],
                        done: !1
                    };
                case 5:
                    t.label++, o = s[1], s = [
                        0
                    ];
                    continue;
                case 7:
                    s = t.ops.pop(), t.trys.pop();
                    continue;
                default:
                    if (i = t.trys, !(i = i.length > 0 && i[i.length - 1]) && (s[0] === 6 || s[0] === 2)) {
                        t = 0;
                        continue;
                    }
                    if (s[0] === 3 && (!i || s[1] > i[0] && s[1] < i[3])) {
                        t.label = s[1];
                        break;
                    }
                    if (s[0] === 6 && t.label < i[1]) {
                        t.label = i[1], i = s;
                        break;
                    }
                    if (i && t.label < i[2]) {
                        t.label = i[2], t.ops.push(s);
                        break;
                    }
                    i[2] && t.ops.pop(), t.trys.pop();
                    continue;
            }
            s = r.call(e, t);
        } catch (l) {
            s = [
                6,
                l
            ], o = 0;
        } finally{
            n = i = 0;
        }
        if (s[0] & 5) throw s[1];
        return {
            value: s[0] ? s[1] : void 0,
            done: !0
        };
    }
}
var $47e1c9301463c82b$var$I = function() {}, $47e1c9301463c82b$var$h = $47e1c9301463c82b$var$I(), $47e1c9301463c82b$var$Q = Object, $47e1c9301463c82b$var$y = function(e) {
    return e === $47e1c9301463c82b$var$h;
}, $47e1c9301463c82b$var$A = function(e) {
    return typeof e == "function";
}, $47e1c9301463c82b$var$M = function(e, r) {
    return $47e1c9301463c82b$var$Q.assign({}, e, r);
}, $47e1c9301463c82b$var$Pe = "undefined", $47e1c9301463c82b$var$Ae = function() {
    return typeof window != $47e1c9301463c82b$var$Pe;
}, $47e1c9301463c82b$var$cr = function() {
    return typeof document != $47e1c9301463c82b$var$Pe;
}, $47e1c9301463c82b$var$dr = function() {
    return $47e1c9301463c82b$var$Ae() && typeof window.requestAnimationFrame != $47e1c9301463c82b$var$Pe;
}, $47e1c9301463c82b$var$ue = new WeakMap, $47e1c9301463c82b$var$fr = 0, $47e1c9301463c82b$var$re = function(e) {
    var r = typeof e, t = e && e.constructor, n = t == Date, o, i;
    if ($47e1c9301463c82b$var$Q(e) === e && !n && t != RegExp) {
        if (o = $47e1c9301463c82b$var$ue.get(e), o) return o;
        if (o = ++$47e1c9301463c82b$var$fr + "~", $47e1c9301463c82b$var$ue.set(e, o), t == Array) {
            for(o = "@", i = 0; i < e.length; i++)o += $47e1c9301463c82b$var$re(e[i]) + ",";
            $47e1c9301463c82b$var$ue.set(e, o);
        }
        if (t == $47e1c9301463c82b$var$Q) {
            o = "#";
            for(var a = $47e1c9301463c82b$var$Q.keys(e).sort(); !$47e1c9301463c82b$var$y(i = a.pop());)$47e1c9301463c82b$var$y(e[i]) || (o += i + ":" + $47e1c9301463c82b$var$re(e[i]) + ",");
            $47e1c9301463c82b$var$ue.set(e, o);
        }
    } else o = n ? e.toJSON() : r == "symbol" ? e.toString() : r == "string" ? JSON.stringify(e) : "" + e;
    return o;
}, $47e1c9301463c82b$var$Ie = !0, $47e1c9301463c82b$var$pr = function() {
    return $47e1c9301463c82b$var$Ie;
}, $47e1c9301463c82b$var$ft = $47e1c9301463c82b$var$Ae(), $47e1c9301463c82b$var$Ue = $47e1c9301463c82b$var$cr(), $47e1c9301463c82b$var$Le = $47e1c9301463c82b$var$ft && window.addEventListener ? window.addEventListener.bind(window) : $47e1c9301463c82b$var$I, $47e1c9301463c82b$var$gr = $47e1c9301463c82b$var$Ue ? document.addEventListener.bind(document) : $47e1c9301463c82b$var$I, $47e1c9301463c82b$var$ze = $47e1c9301463c82b$var$ft && window.removeEventListener ? window.removeEventListener.bind(window) : $47e1c9301463c82b$var$I, $47e1c9301463c82b$var$mr = $47e1c9301463c82b$var$Ue ? document.removeEventListener.bind(document) : $47e1c9301463c82b$var$I, $47e1c9301463c82b$var$vr = function() {
    var e = $47e1c9301463c82b$var$Ue && document.visibilityState;
    return $47e1c9301463c82b$var$y(e) || e !== "hidden";
}, $47e1c9301463c82b$var$hr = function(e) {
    return $47e1c9301463c82b$var$gr("visibilitychange", e), $47e1c9301463c82b$var$Le("focus", e), function() {
        $47e1c9301463c82b$var$mr("visibilitychange", e), $47e1c9301463c82b$var$ze("focus", e);
    };
}, $47e1c9301463c82b$var$br = function(e) {
    var r = function() {
        $47e1c9301463c82b$var$Ie = !0, e();
    }, t = function() {
        $47e1c9301463c82b$var$Ie = !1;
    };
    return $47e1c9301463c82b$var$Le("online", r), $47e1c9301463c82b$var$Le("offline", t), function() {
        $47e1c9301463c82b$var$ze("online", r), $47e1c9301463c82b$var$ze("offline", t);
    };
}, $47e1c9301463c82b$var$yr = {
    isOnline: $47e1c9301463c82b$var$pr,
    isVisible: $47e1c9301463c82b$var$vr
}, $47e1c9301463c82b$var$Cr = {
    initFocus: $47e1c9301463c82b$var$hr,
    initReconnect: $47e1c9301463c82b$var$br
}, $47e1c9301463c82b$var$le = !$47e1c9301463c82b$var$Ae() || "Deno" in window, $47e1c9301463c82b$var$xr = function(e) {
    return $47e1c9301463c82b$var$dr() ? window.requestAnimationFrame(e) : setTimeout(e, 1);
}, $47e1c9301463c82b$var$ee = $47e1c9301463c82b$var$le ? (0, $laauJ.useEffect) : (0, $laauJ.useLayoutEffect), $47e1c9301463c82b$var$Ee = typeof navigator < "u" && navigator.connection, $47e1c9301463c82b$var$ot = !$47e1c9301463c82b$var$le && $47e1c9301463c82b$var$Ee && ([
    "slow-2g",
    "2g"
].includes($47e1c9301463c82b$var$Ee.effectiveType) || $47e1c9301463c82b$var$Ee.saveData), $47e1c9301463c82b$var$pt = function(e) {
    if ($47e1c9301463c82b$var$A(e)) try {
        e = e();
    } catch  {
        e = "";
    }
    var r = [].concat(e);
    e = typeof e == "string" ? e : (Array.isArray(e) ? e.length : e) ? $47e1c9301463c82b$var$re(e) : "";
    var t = e ? "$swr$" + e : "";
    return [
        e,
        r,
        t
    ];
}, $47e1c9301463c82b$var$H = new WeakMap, $47e1c9301463c82b$var$gt = 0, $47e1c9301463c82b$var$mt = 1, $47e1c9301463c82b$var$vt = 2, $47e1c9301463c82b$var$te = function(e, r, t, n, o, i, a) {
    a === void 0 && (a = !0);
    var u = $47e1c9301463c82b$var$H.get(e), f = u[0], s = u[1], l = u[3], p = f[r], c = s[r];
    if (a && c) for(var m = 0; m < c.length; ++m)c[m](t, n, o);
    return i && (delete l[r], p && p[0]) ? p[0]($47e1c9301463c82b$var$vt).then(function() {
        return e.get(r);
    }) : e.get(r);
}, $47e1c9301463c82b$var$Rr = 0, $47e1c9301463c82b$var$Me = function() {
    return ++$47e1c9301463c82b$var$Rr;
}, $47e1c9301463c82b$var$ht = function() {
    for(var e = [], r = 0; r < arguments.length; r++)e[r] = arguments[r];
    return $47e1c9301463c82b$var$ct(void 0, void 0, void 0, function() {
        var t, n, o, i, a, u, f, s, l, p, c, m, C, x, g, d, B, U, L, E, _;
        return $47e1c9301463c82b$var$dt(this, function(D) {
            switch(D.label){
                case 0:
                    if (t = e[0], n = e[1], o = e[2], i = e[3], a = typeof i == "boolean" ? {
                        revalidate: i
                    } : i || {}, u = $47e1c9301463c82b$var$y(a.populateCache) ? !0 : a.populateCache, f = a.revalidate !== !1, s = a.rollbackOnError !== !1, l = a.optimisticData, p = $47e1c9301463c82b$var$pt(n), c = p[0], m = p[2], !c) return [
                        2
                    ];
                    if (C = $47e1c9301463c82b$var$H.get(t), x = C[2], e.length < 3) return [
                        2,
                        $47e1c9301463c82b$var$te(t, c, t.get(c), $47e1c9301463c82b$var$h, $47e1c9301463c82b$var$h, f, !0)
                    ];
                    if (g = o, B = $47e1c9301463c82b$var$Me(), x[c] = [
                        B,
                        0
                    ], U = !$47e1c9301463c82b$var$y(l), L = t.get(c), U && (E = $47e1c9301463c82b$var$A(l) ? l(L) : l, t.set(c, E), $47e1c9301463c82b$var$te(t, c, E)), $47e1c9301463c82b$var$A(g)) try {
                        g = g(t.get(c));
                    } catch (F) {
                        d = F;
                    }
                    return g && $47e1c9301463c82b$var$A(g.then) ? [
                        4,
                        g.catch(function(F) {
                            d = F;
                        })
                    ] : [
                        3,
                        2
                    ];
                case 1:
                    if (g = D.sent(), B !== x[c][0]) {
                        if (d) throw d;
                        return [
                            2,
                            g
                        ];
                    } else d && U && s && (u = !0, g = L, t.set(c, L));
                    D.label = 2;
                case 2:
                    return u && (d || ($47e1c9301463c82b$var$A(u) && (g = u(g, L)), t.set(c, g)), t.set(m, $47e1c9301463c82b$var$M(t.get(m), {
                        error: d
                    }))), x[c][1] = $47e1c9301463c82b$var$Me(), [
                        4,
                        $47e1c9301463c82b$var$te(t, c, g, d, $47e1c9301463c82b$var$h, f, !!u)
                    ];
                case 3:
                    if (_ = D.sent(), d) throw d;
                    return [
                        2,
                        u ? _ : g
                    ];
            }
        });
    });
}, $47e1c9301463c82b$var$at = function(e, r) {
    for(var t in e)e[t][0] && e[t][0](r);
}, $47e1c9301463c82b$var$bt = function(e, r) {
    if (!$47e1c9301463c82b$var$H.has(e)) {
        var t = $47e1c9301463c82b$var$M($47e1c9301463c82b$var$Cr, r), n = {}, o = $47e1c9301463c82b$var$ht.bind($47e1c9301463c82b$var$h, e), i = $47e1c9301463c82b$var$I;
        if ($47e1c9301463c82b$var$H.set(e, [
            n,
            {},
            {},
            {},
            o
        ]), !$47e1c9301463c82b$var$le) {
            var a = t.initFocus(setTimeout.bind($47e1c9301463c82b$var$h, $47e1c9301463c82b$var$at.bind($47e1c9301463c82b$var$h, n, $47e1c9301463c82b$var$gt))), u = t.initReconnect(setTimeout.bind($47e1c9301463c82b$var$h, $47e1c9301463c82b$var$at.bind($47e1c9301463c82b$var$h, n, $47e1c9301463c82b$var$mt)));
            i = function() {
                a && a(), u && u(), $47e1c9301463c82b$var$H.delete(e);
            };
        }
        return [
            e,
            o,
            i
        ];
    }
    return [
        e,
        $47e1c9301463c82b$var$H.get(e)[4]
    ];
}, $47e1c9301463c82b$var$Tr = function(e, r, t, n, o) {
    var i = t.errorRetryCount, a = o.retryCount, u = ~~((Math.random() + .5) * (1 << (a < 8 ? a : 8))) * t.errorRetryInterval;
    !$47e1c9301463c82b$var$y(i) && a > i || setTimeout(n, u, o);
}, $47e1c9301463c82b$var$yt = $47e1c9301463c82b$var$bt(new Map), $47e1c9301463c82b$var$Ct = $47e1c9301463c82b$var$yt[0], $47e1c9301463c82b$var$wr = $47e1c9301463c82b$var$yt[1], $47e1c9301463c82b$var$xt = $47e1c9301463c82b$var$M({
    onLoadingSlow: $47e1c9301463c82b$var$I,
    onSuccess: $47e1c9301463c82b$var$I,
    onError: $47e1c9301463c82b$var$I,
    onErrorRetry: $47e1c9301463c82b$var$Tr,
    onDiscarded: $47e1c9301463c82b$var$I,
    revalidateOnFocus: !0,
    revalidateOnReconnect: !0,
    revalidateIfStale: !0,
    shouldRetryOnError: !0,
    errorRetryInterval: $47e1c9301463c82b$var$ot ? 1e4 : 5e3,
    focusThrottleInterval: 5000,
    dedupingInterval: 2000,
    loadingTimeout: $47e1c9301463c82b$var$ot ? 5e3 : 3e3,
    compare: function(e, r) {
        return $47e1c9301463c82b$var$re(e) == $47e1c9301463c82b$var$re(r);
    },
    isPaused: function() {
        return !1;
    },
    cache: $47e1c9301463c82b$var$Ct,
    mutate: $47e1c9301463c82b$var$wr,
    fallback: {}
}, $47e1c9301463c82b$var$yr), $47e1c9301463c82b$var$Rt = function(e, r) {
    var t = $47e1c9301463c82b$var$M(e, r);
    if (r) {
        var n = e.use, o = e.fallback, i = r.use, a = r.fallback;
        n && i && (t.use = n.concat(i)), o && a && (t.fallback = $47e1c9301463c82b$var$M(o, a));
    }
    return t;
}, $47e1c9301463c82b$var$De = (0, $laauJ.createContext)({}), $47e1c9301463c82b$var$Or = function(e) {
    var r = e.value, t = $47e1c9301463c82b$var$Rt((0, $laauJ.useContext)($47e1c9301463c82b$var$De), r), n = r && r.provider, o = (0, $laauJ.useState)(function() {
        return n ? $47e1c9301463c82b$var$bt(n(t.cache || $47e1c9301463c82b$var$Ct), r) : $47e1c9301463c82b$var$h;
    })[0];
    return o && (t.cache = o[0], t.mutate = o[1]), $47e1c9301463c82b$var$ee(function() {
        return o ? o[2] : $47e1c9301463c82b$var$h;
    }, []), (0, $laauJ.createElement)($47e1c9301463c82b$var$De.Provider, $47e1c9301463c82b$var$M(e, {
        value: t
    }));
}, $47e1c9301463c82b$var$Er = function(e, r) {
    var t = (0, $laauJ.useState)({})[1], n = (0, $laauJ.useRef)(e), o = (0, $laauJ.useRef)({
        data: !1,
        error: !1,
        isValidating: !1
    }), i = (0, $laauJ.useCallback)(function(a) {
        var u = !1, f = n.current;
        for(var s in a){
            var l = s;
            f[l] !== a[l] && (f[l] = a[l], o.current[l] && (u = !0));
        }
        u && !r.current && t({});
    }, []);
    return $47e1c9301463c82b$var$ee(function() {
        n.current = e;
    }), [
        n,
        o.current,
        i
    ];
}, $47e1c9301463c82b$var$kr = function(e) {
    return $47e1c9301463c82b$var$A(e[1]) ? [
        e[0],
        e[1],
        e[2] || {}
    ] : [
        e[0],
        null,
        (e[1] === null ? e[2] : e[1]) || {}
    ];
}, $47e1c9301463c82b$var$Sr = function() {
    return $47e1c9301463c82b$var$M($47e1c9301463c82b$var$xt, (0, $laauJ.useContext)($47e1c9301463c82b$var$De));
}, $47e1c9301463c82b$var$Ir = function(e) {
    return function() {
        for(var t = [], n = 0; n < arguments.length; n++)t[n] = arguments[n];
        var o = $47e1c9301463c82b$var$Sr(), i = $47e1c9301463c82b$var$kr(t), a = i[0], u = i[1], f = i[2], s = $47e1c9301463c82b$var$Rt(o, f), l = e, p = s.use;
        if (p) for(var c = p.length; c-- > 0;)l = p[c](l);
        return l(a, u || s.fetcher, s);
    };
}, $47e1c9301463c82b$var$st = function(e, r, t) {
    var n = r[e] || (r[e] = []);
    return n.push(t), function() {
        var o = n.indexOf(t);
        o >= 0 && (n[o] = n[n.length - 1], n.pop());
    };
}, $47e1c9301463c82b$var$ke = {
    dedupe: !0
}, $47e1c9301463c82b$var$Lr = function(e, r, t) {
    var n = t.cache, o = t.compare, i = t.fallbackData, a = t.suspense, u = t.revalidateOnMount, f = t.refreshInterval, s = t.refreshWhenHidden, l = t.refreshWhenOffline, p = $47e1c9301463c82b$var$H.get(n), c = p[0], m = p[1], C = p[2], x = p[3], g = $47e1c9301463c82b$var$pt(e), d = g[0], B = g[1], U = g[2], L = (0, $laauJ.useRef)(!1), E = (0, $laauJ.useRef)(!1), _ = (0, $laauJ.useRef)(d), D = (0, $laauJ.useRef)(r), F = (0, $laauJ.useRef)(t), v = function() {
        return F.current;
    }, ce = function() {
        return v().isVisible() && v().isOnline();
    }, ne = function(w) {
        return n.set(U, $47e1c9301463c82b$var$M(n.get(U), w));
    }, $e = n.get(d), Ot = $47e1c9301463c82b$var$y(i) ? t.fallback[d] : i, z = $47e1c9301463c82b$var$y($e) ? Ot : $e, He = n.get(U) || {}, j = He.error, Ne = !L.current, Ge = function() {
        return Ne && !$47e1c9301463c82b$var$y(u) ? u : v().isPaused() ? !1 : a ? $47e1c9301463c82b$var$y(z) ? !1 : t.revalidateIfStale : $47e1c9301463c82b$var$y(z) || t.revalidateIfStale;
    }, Et = function() {
        return !d || !r ? !1 : He.isValidating ? !0 : Ne && Ge();
    }, de = Et(), fe = $47e1c9301463c82b$var$Er({
        data: z,
        error: j,
        isValidating: de
    }, E), G = fe[0], pe = fe[1], ie = fe[2], W = (0, $laauJ.useCallback)(function(w) {
        return $47e1c9301463c82b$var$ct(void 0, void 0, void 0, function() {
            var R, T, O, X, Y, k, b, P, S, ge, q, K, me;
            return $47e1c9301463c82b$var$dt(this, function(J) {
                switch(J.label){
                    case 0:
                        if (R = D.current, !d || !R || E.current || v().isPaused()) return [
                            2,
                            !1
                        ];
                        X = !0, Y = w || {}, k = !x[d] || !Y.dedupe, b = function() {
                            return !E.current && d === _.current && L.current;
                        }, P = function() {
                            var Ke = x[d];
                            Ke && Ke[1] === O && delete x[d];
                        }, S = {
                            isValidating: !1
                        }, ge = function() {
                            ne({
                                isValidating: !1
                            }), b() && ie(S);
                        }, ne({
                            isValidating: !0
                        }), ie({
                            isValidating: !0
                        }), J.label = 1;
                    case 1:
                        return J.trys.push([
                            1,
                            3,
                            ,
                            4
                        ]), k && ($47e1c9301463c82b$var$te(n, d, G.current.data, G.current.error, !0), t.loadingTimeout && !n.get(d) && setTimeout(function() {
                            X && b() && v().onLoadingSlow(d, t);
                        }, t.loadingTimeout), x[d] = [
                            R.apply(void 0, B),
                            $47e1c9301463c82b$var$Me()
                        ]), me = x[d], T = me[0], O = me[1], [
                            4,
                            T
                        ];
                    case 2:
                        return T = J.sent(), k && setTimeout(P, t.dedupingInterval), !x[d] || x[d][1] !== O ? (k && b() && v().onDiscarded(d), [
                            2,
                            !1
                        ]) : (ne({
                            error: $47e1c9301463c82b$var$h
                        }), S.error = $47e1c9301463c82b$var$h, q = C[d], !$47e1c9301463c82b$var$y(q) && (O <= q[0] || O <= q[1] || q[1] === 0) ? (ge(), k && b() && v().onDiscarded(d), [
                            2,
                            !1
                        ]) : (o(G.current.data, T) ? S.data = G.current.data : S.data = T, o(n.get(d), T) || n.set(d, T), k && b() && v().onSuccess(T, d, t), [
                            3,
                            4
                        ]));
                    case 3:
                        return K = J.sent(), P(), v().isPaused() || (ne({
                            error: K
                        }), S.error = K, k && b() && (v().onError(K, d, t), (typeof t.shouldRetryOnError == "boolean" && t.shouldRetryOnError || $47e1c9301463c82b$var$A(t.shouldRetryOnError) && t.shouldRetryOnError(K)) && ce() && v().onErrorRetry(K, d, t, W, {
                            retryCount: (Y.retryCount || 0) + 1,
                            dedupe: !0
                        }))), [
                            3,
                            4
                        ];
                    case 4:
                        return X = !1, ge(), b() && k && $47e1c9301463c82b$var$te(n, d, S.data, S.error, !1), [
                            2,
                            !0
                        ];
                }
            });
        });
    }, [
        d
    ]), kt = (0, $laauJ.useCallback)($47e1c9301463c82b$var$ht.bind($47e1c9301463c82b$var$h, n, function() {
        return _.current;
    }), []);
    if ($47e1c9301463c82b$var$ee(function() {
        D.current = r, F.current = t;
    }), $47e1c9301463c82b$var$ee(function() {
        if (d) {
            var w = d !== _.current, R = W.bind($47e1c9301463c82b$var$h, $47e1c9301463c82b$var$ke), T = function(b, P, S) {
                ie($47e1c9301463c82b$var$M({
                    error: P,
                    isValidating: S
                }, o(G.current.data, b) ? $47e1c9301463c82b$var$h : {
                    data: b
                }));
            }, O = 0, X = function(b) {
                if (b == $47e1c9301463c82b$var$gt) {
                    var P = Date.now();
                    v().revalidateOnFocus && P > O && ce() && (O = P + v().focusThrottleInterval, R());
                } else if (b == $47e1c9301463c82b$var$mt) v().revalidateOnReconnect && ce() && R();
                else if (b == $47e1c9301463c82b$var$vt) return W();
            }, Y = $47e1c9301463c82b$var$st(d, m, T), k = $47e1c9301463c82b$var$st(d, c, X);
            return E.current = !1, _.current = d, L.current = !0, w && ie({
                data: z,
                error: j,
                isValidating: de
            }), Ge() && ($47e1c9301463c82b$var$y(z) || $47e1c9301463c82b$var$le ? R() : $47e1c9301463c82b$var$xr(R)), function() {
                E.current = !0, Y(), k();
            };
        }
    }, [
        d,
        W
    ]), $47e1c9301463c82b$var$ee(function() {
        var w;
        function R() {
            var O = $47e1c9301463c82b$var$A(f) ? f(z) : f;
            O && w !== -1 && (w = setTimeout(T, O));
        }
        function T() {
            !G.current.error && (s || v().isVisible()) && (l || v().isOnline()) ? W($47e1c9301463c82b$var$ke).then(R) : R();
        }
        return R(), function() {
            w && (clearTimeout(w), w = -1);
        };
    }, [
        f,
        s,
        l,
        W
    ]), (0, $laauJ.useDebugValue)(z), a && $47e1c9301463c82b$var$y(z) && d) throw D.current = r, F.current = t, E.current = !1, $47e1c9301463c82b$var$y(j) ? W($47e1c9301463c82b$var$ke) : j;
    return {
        mutate: kt,
        get data () {
            return pe.data = !0, z;
        },
        get error () {
            return pe.error = !0, j;
        },
        get isValidating () {
            return pe.isValidating = !0, de;
        }
    };
}, $47e1c9301463c82b$var$di = $47e1c9301463c82b$var$Q.defineProperty($47e1c9301463c82b$var$Or, "default", {
    value: $47e1c9301463c82b$var$xt
});
var $47e1c9301463c82b$var$_e = $47e1c9301463c82b$var$Ir($47e1c9301463c82b$var$Lr);
var [$47e1c9301463c82b$export$8aa96e0f8b054cda, $47e1c9301463c82b$export$5ebbb6ccfffc7393] = $47e1c9301463c82b$export$b4f021037e6d7d3f("ClerkInstanceContext"), [$47e1c9301463c82b$export$38ee920e59704589, $47e1c9301463c82b$export$87c54b525b914dab] = $47e1c9301463c82b$export$b4f021037e6d7d3f("UserContext"), [$47e1c9301463c82b$export$56e68f8f57ecfde4, $47e1c9301463c82b$export$6627e187bf6ba3fd] = $47e1c9301463c82b$export$b4f021037e6d7d3f("ClientContext"), [$47e1c9301463c82b$export$3285420c698bc605, $47e1c9301463c82b$export$a3931362f3958630] = $47e1c9301463c82b$export$b4f021037e6d7d3f("SessionContext"), [$47e1c9301463c82b$export$14ec650242c84392, $47e1c9301463c82b$export$7305fb39264bef77] = $47e1c9301463c82b$export$b4f021037e6d7d3f("OrganizationContext");
var $47e1c9301463c82b$export$ae85931d305e13b1 = (e)=>{
    let { invitationList: r , membershipList: t  } = e || {}, { organization: n , lastOrganizationMember: o , lastOrganizationInvitation: i  } = $47e1c9301463c82b$export$7305fb39264bef77(), a = $47e1c9301463c82b$export$a3931362f3958630(), u = $47e1c9301463c82b$export$5ebbb6ccfffc7393(), f = u.loaded && a && n, s = u.loaded ? ()=>u.organization?.getPendingInvitations(r) : ()=>[], l = u.loaded ? ()=>u.organization?.getMemberships(t) : ()=>[], { data: p , isValidating: c , mutate: m  } = $47e1c9301463c82b$var$_e(f && r ? $47e1c9301463c82b$var$Tt("invites", n, i, r) : null, s), { data: C , isValidating: x , mutate: g  } = $47e1c9301463c82b$var$_e(f && t ? $47e1c9301463c82b$var$Tt("memberships", n, o, t) : null, l);
    return n === void 0 ? {
        isLoaded: !1,
        organization: void 0,
        invitationList: void 0,
        membershipList: void 0,
        membership: void 0
    } : n === null ? {
        isLoaded: !0,
        organization: null,
        invitationList: null,
        membershipList: null,
        membership: null
    } : !u.loaded && n ? {
        isLoaded: !0,
        organization: n,
        invitationList: void 0,
        membershipList: void 0,
        membership: void 0
    } : {
        isLoaded: !x && !c,
        organization: n,
        membershipList: C,
        membership: $47e1c9301463c82b$var$Fr(a.user.organizationMemberships, n.id),
        invitationList: p,
        unstable__mutate: ()=>{
            g(), m();
        }
    };
};
function $47e1c9301463c82b$var$Fr(e, r) {
    return e.find((t)=>t.organization.id === r);
}
function $47e1c9301463c82b$var$Tt(e, r, t, n) {
    return [
        e,
        r.id,
        t?.id,
        t?.updatedAt,
        n.offset,
        n.limit
    ].filter(Boolean).join("-");
}
var $47e1c9301463c82b$export$70272151be64739d = ()=>{
    let e = $47e1c9301463c82b$export$5ebbb6ccfffc7393(), r = $47e1c9301463c82b$export$87c54b525b914dab();
    return !e.loaded || !r ? {
        isLoaded: !1,
        organizationList: void 0,
        createOrganization: void 0,
        setActive: void 0
    } : {
        isLoaded: !0,
        organizationList: $47e1c9301463c82b$var$Vr(r.organizationMemberships),
        setActive: e.setActive,
        createOrganization: e.createOrganization
    };
};
function $47e1c9301463c82b$var$Vr(e) {
    return e.map((r)=>({
            membership: r,
            organization: r.organization
        }));
}
var $47e1c9301463c82b$export$5fc38fde58f5cf66 = ()=>{
    let e = $47e1c9301463c82b$export$5ebbb6ccfffc7393();
    return e.loaded ? {
        isLoaded: !0,
        createOrganization: e.createOrganization,
        getOrganizationMemberships: e.getOrganizationMemberships,
        getOrganization: e.getOrganization
    } : {
        isLoaded: !1,
        createOrganization: void 0,
        getOrganizationMemberships: void 0,
        getOrganization: void 0
    };
};
var $47e1c9301463c82b$export$deebe11a338de063 = typeof window < "u" ? (0, (/*@__PURE__*/$parcel$interopDefault($laauJ))).useLayoutEffect : (0, (/*@__PURE__*/$parcel$interopDefault($laauJ))).useEffect;
 /*! Bundled license information:

js-cookie/dist/js.cookie.mjs:
  (*! js-cookie v3.0.1 | MIT *)

swr/dist/index.mjs:
  (*! *****************************************************************************
  Copyright (c) Microsoft Corporation.
  
  Permission to use, copy, modify, and/or distribute this software for any
  purpose with or without fee is hereby granted.
  
  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
  REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
  AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
  INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
  LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
  OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
  PERFORMANCE OF THIS SOFTWARE.
  ***************************************************************************** *)
*/ 
});
parcelRequire.register("kbVfw", function(module, exports) {

$parcel$export(module.exports, "c", function () { return $eb313e3fdea4c561$export$db3b6bfb95261072; });
var $eb313e3fdea4c561$var$t = Object.defineProperty;
var $eb313e3fdea4c561$var$c = Object.getOwnPropertyDescriptor;
var $eb313e3fdea4c561$var$d = Object.getOwnPropertyNames;
var $eb313e3fdea4c561$var$e = Object.prototype.hasOwnProperty;
var $eb313e3fdea4c561$export$407448d2b89b1813 = (n, o)=>{
    for(var a in o)$eb313e3fdea4c561$var$t(n, a, {
        get: o[a],
        enumerable: !0
    });
}, $eb313e3fdea4c561$var$s = (n, o, a, r)=>{
    if (o && typeof o == "object" || typeof o == "function") for (let p of $eb313e3fdea4c561$var$d(o))!$eb313e3fdea4c561$var$e.call(n, p) && p !== a && $eb313e3fdea4c561$var$t(n, p, {
        get: ()=>o[p],
        enumerable: !(r = $eb313e3fdea4c561$var$c(o, p)) || r.enumerable
    });
    return n;
}, $eb313e3fdea4c561$export$8b22cf2602fb60ce = (n, o, a)=>($eb313e3fdea4c561$var$s(n, o, "default"), a && $eb313e3fdea4c561$var$s(a, o, "default"));
var $eb313e3fdea4c561$export$db3b6bfb95261072 = (...n)=>{};

});

parcelRequire.register("kVsbi", function(module, exports) {
module.exports = function(glob, opts) {
    if (typeof glob !== "string") throw new TypeError("Expected a string");
    var str = String(glob);
    // The regexp we are building, as a string.
    var reStr = "";
    // Whether we are matching so called "extended" globs (like bash) and should
    // support single character matching, matching ranges of characters, group
    // matching, etc.
    var extended = opts ? !!opts.extended : false;
    // When globstar is _false_ (default), '/foo/*' is translated a regexp like
    // '^\/foo\/.*$' which will match any string beginning with '/foo/'
    // When globstar is _true_, '/foo/*' is translated to regexp like
    // '^\/foo\/[^/]*$' which will match any string beginning with '/foo/' BUT
    // which does not have a '/' to the right of it.
    // E.g. with '/foo/*' these will match: '/foo/bar', '/foo/bar.txt' but
    // these will not '/foo/bar/baz', '/foo/bar/baz.txt'
    // Lastely, when globstar is _true_, '/foo/**' is equivelant to '/foo/*' when
    // globstar is _false_
    var globstar = opts ? !!opts.globstar : false;
    // If we are doing extended matching, this boolean is true when we are inside
    // a group (eg {*.html,*.js}), and false otherwise.
    var inGroup = false;
    // RegExp flags (eg "i" ) to pass in to RegExp constructor.
    var flags = opts && typeof opts.flags === "string" ? opts.flags : "";
    var c;
    for(var i = 0, len = str.length; i < len; i++){
        c = str[i];
        switch(c){
            case "/":
            case "$":
            case "^":
            case "+":
            case ".":
            case "(":
            case ")":
            case "=":
            case "!":
            case "|":
                reStr += "\\" + c;
                break;
            case "?":
                if (extended) {
                    reStr += ".";
                    break;
                }
            case "[":
            case "]":
                if (extended) {
                    reStr += c;
                    break;
                }
            case "{":
                if (extended) {
                    inGroup = true;
                    reStr += "(";
                    break;
                }
            case "}":
                if (extended) {
                    inGroup = false;
                    reStr += ")";
                    break;
                }
            case ",":
                if (inGroup) {
                    reStr += "|";
                    break;
                }
                reStr += "\\" + c;
                break;
            case "*":
                // Move over all consecutive "*"'s.
                // Also store the previous and next characters
                var prevChar = str[i - 1];
                var starCount = 1;
                while(str[i + 1] === "*"){
                    starCount++;
                    i++;
                }
                var nextChar = str[i + 1];
                if (!globstar) // globstar is disabled, so treat any number of "*" as one
                reStr += ".*";
                else {
                    // globstar is enabled, so determine if this is a globstar segment
                    var isGlobstar = starCount > 1 // multiple "*"'s
                     && (prevChar === "/" || prevChar === undefined // from the start of the segment
                    ) && (nextChar === "/" || nextChar === undefined // to the end of the segment
                    );
                    if (isGlobstar) {
                        // it's a globstar, so match zero or more path segments
                        reStr += "((?:[^/]*(?:/|$))*)";
                        i++; // move over the "/"
                    } else // it's not a globstar, so only match one path segment
                    reStr += "([^/]*)";
                }
                break;
            default:
                reStr += c;
        }
    }
    // When regexp 'g' flag is specified don't
    // constrain the regular expression with ^ & $
    if (!flags || !~flags.indexOf("g")) reStr = "^" + reStr + "$";
    return new RegExp(reStr, flags);
};

});


parcelRequire.register("rLPvf", function(module, exports) {
"use strict";
Object.defineProperty(module.exports, "__esModule", {
    value: true
});
module.exports.unsupportedNonBrowserDomainOrProxyUrlFunction = module.exports.invalidStateError = module.exports.isMagicLinkError = module.exports.MagicLinkErrorCode = module.exports.multipleChildrenInButtonComponent = module.exports.hocChildrenNotAFunctionError = module.exports.multipleClerkProvidersError = module.exports.noGuaranteedUserError = module.exports.noGuaranteedLoadedError = module.exports.noClerkProviderError = module.exports.noFrontendApiError = void 0;
module.exports.noFrontendApiError = "Clerk: You must add the frontendApi prop to your <ClerkProvider>";
module.exports.noClerkProviderError = "Clerk: You must wrap your application in a <ClerkProvider> component.";
const $05379fb651e9abd4$var$noGuaranteedLoadedError = (hookName)=>`Clerk: You're calling ${hookName} before there's a guarantee the client has been loaded. Call ${hookName} from a child of <SignedIn>, <SignedOut>, or <ClerkLoaded>, or use the withClerk() HOC.`;
module.exports.noGuaranteedLoadedError = $05379fb651e9abd4$var$noGuaranteedLoadedError;
const $05379fb651e9abd4$var$noGuaranteedUserError = (hookName)=>`Clerk: You're calling ${hookName} before there's a guarantee there's an active user. Call ${hookName} from a child of <SignedIn> or use the withUser() HOC.`;
module.exports.noGuaranteedUserError = $05379fb651e9abd4$var$noGuaranteedUserError;
module.exports.multipleClerkProvidersError = "Clerk: You've added multiple <ClerkProvider> components in your React component tree. Wrap your components in a single <ClerkProvider>.";
module.exports.hocChildrenNotAFunctionError = "Clerk: Child of WithClerk must be a function.";
const $05379fb651e9abd4$var$multipleChildrenInButtonComponent = (name)=>`Clerk: You've passed multiple children components to <${name}/>. You can only pass a single child component or text.`;
module.exports.multipleChildrenInButtonComponent = $05379fb651e9abd4$var$multipleChildrenInButtonComponent;
module.exports.MagicLinkErrorCode = {
    Expired: "expired",
    Failed: "failed"
};
function $05379fb651e9abd4$var$isMagicLinkError(err) {
    return !!err && (err.code === module.exports.MagicLinkErrorCode.Expired || err.code === module.exports.MagicLinkErrorCode.Failed);
}
module.exports.isMagicLinkError = $05379fb651e9abd4$var$isMagicLinkError;
module.exports.invalidStateError = "Invalid state. Feel free to submit a bug or reach out to support here: https://clerk.com/support";
module.exports.unsupportedNonBrowserDomainOrProxyUrlFunction = "Unsupported usage of domain or proxyUrl. The usage of domain or proxyUrl as function is not supported in non-browser environments.";

});

parcelRequire.register("9LdOB", function(module, exports) {
"use strict";
Object.defineProperty(module.exports, "__esModule", {
    value: true
});

var $fOt1z = parcelRequire("fOt1z");

$fOt1z.__exportStar((parcelRequire("k6YWg")), module.exports);

$fOt1z.__exportStar((parcelRequire("jUgI1")), module.exports);

$fOt1z.__exportStar((parcelRequire("a8qQh")), module.exports);

$fOt1z.__exportStar((parcelRequire("byN9Y")), module.exports);

$fOt1z.__exportStar((parcelRequire("1ewZq")), module.exports);

});
parcelRequire.register("k6YWg", function(module, exports) {
"use strict";
Object.defineProperty(module.exports, "__esModule", {
    value: true
});
module.exports.safeExecute = module.exports.normalizeWithDefaultValue = module.exports.assertSingleChild = void 0;

var $fOt1z = parcelRequire("fOt1z");

const $ea43a35d4a1a070f$var$react_1 = $fOt1z.__importDefault((parcelRequire("laauJ")));

var $rLPvf = parcelRequire("rLPvf");
const $ea43a35d4a1a070f$var$assertSingleChild = (children)=>(name)=>{
        try {
            return $ea43a35d4a1a070f$var$react_1.default.Children.only(children);
        } catch (e) {
            throw new Error((0, $rLPvf.multipleChildrenInButtonComponent)(name));
        }
    };
module.exports.assertSingleChild = $ea43a35d4a1a070f$var$assertSingleChild;
const $ea43a35d4a1a070f$var$normalizeWithDefaultValue = (children, defaultText)=>{
    if (!children) children = defaultText;
    if (typeof children === "string") children = $ea43a35d4a1a070f$var$react_1.default.createElement("button", null, children);
    return children;
};
module.exports.normalizeWithDefaultValue = $ea43a35d4a1a070f$var$normalizeWithDefaultValue;
const $ea43a35d4a1a070f$var$safeExecute = (cb)=>(...args)=>{
        if (cb && typeof cb === "function") return cb(...args);
    };
module.exports.safeExecute = $ea43a35d4a1a070f$var$safeExecute;

});

parcelRequire.register("jUgI1", function(module, exports) {
"use strict";
Object.defineProperty(module.exports, "__esModule", {
    value: true
});
module.exports.__internal__setErrorThrowerOptions = module.exports.errorThrower = void 0;

var $6aCOC = parcelRequire("6aCOC");
const $e7e0355adb5bb330$var$errorThrower = (0, $6aCOC.buildErrorThrower)({
    packageName: "@clerk/react"
});
module.exports.errorThrower = $e7e0355adb5bb330$var$errorThrower;
function $e7e0355adb5bb330$var$__internal__setErrorThrowerOptions(options) {
    $e7e0355adb5bb330$var$errorThrower.setMessages(options).setPackageName(options);
}
module.exports.__internal__setErrorThrowerOptions = $e7e0355adb5bb330$var$__internal__setErrorThrowerOptions;

});

parcelRequire.register("a8qQh", function(module, exports) {
"use strict";
Object.defineProperty(module.exports, "__esModule", {
    value: true
});
module.exports.isConstructor = void 0;
function $760f7911f28c7a49$var$isConstructor(f) {
    return typeof f === "function";
}
module.exports.isConstructor = $760f7911f28c7a49$var$isConstructor;

});

parcelRequire.register("byN9Y", function(module, exports) {
"use strict";
Object.defineProperty(module.exports, "__esModule", {
    value: true
});
module.exports.loadScript = void 0;

var $6aCOC = parcelRequire("6aCOC");

var $36PYC = parcelRequire("36PYC");

var $jUgI1 = parcelRequire("jUgI1");

var $eGbF5 = parcelRequire("eGbF5");
const $86a900d373e006c9$var$FAILED_TO_LOAD_ERROR = "Clerk: Failed to load Clerk";
const $86a900d373e006c9$var$MISSING_BODY_ERROR = "Clerk: Missing <body> element.";
const $86a900d373e006c9$var$UNSTABLE_RELEASE_TAGS = [
    "staging",
    "next"
];
const $86a900d373e006c9$var$extractNonStableTag = (packageVersion)=>{
    var _a;
    const tag = (_a = packageVersion.match(/-(.*)\./)) === null || _a === void 0 ? void 0 : _a[1];
    return tag && $86a900d373e006c9$var$UNSTABLE_RELEASE_TAGS.includes(tag) ? tag : undefined;
};
const $86a900d373e006c9$var$extractMajorVersion = (packageVersion)=>{
    return packageVersion.split(".")[0];
};
const $86a900d373e006c9$var$forceStagingReleaseForClerkFapi = (frontendApi)=>{
    return frontendApi.endsWith(".lclstage.dev") || frontendApi.endsWith(".stgstage.dev") || frontendApi.endsWith(".clerkstage.dev") || frontendApi.endsWith(".accountsstage.dev");
};
function $86a900d373e006c9$var$getScriptSrc({ publishableKey: publishableKey , frontendApi: frontendApi , domain: domain , scriptUrl: scriptUrl , scriptVariant: scriptVariant = "" , proxyUrl: proxyUrl  }) {
    var _a, _b;
    if (scriptUrl) return scriptUrl;
    let scriptHost = "";
    if (!!proxyUrl && (0, $6aCOC.isValidProxyUrl)(proxyUrl)) scriptHost = (0, $6aCOC.proxyUrlToAbsoluteURL)(proxyUrl).replace(/http(s)?:\/\//, "");
    else if (domain && !(0, $eGbF5.isDevOrStagingUrl)(((_a = (0, $6aCOC.parsePublishableKey)(publishableKey)) === null || _a === void 0 ? void 0 : _a.frontendApi) || frontendApi || "")) scriptHost = (0, $6aCOC.addClerkPrefix)(domain);
    else scriptHost = ((_b = (0, $6aCOC.parsePublishableKey)(publishableKey)) === null || _b === void 0 ? void 0 : _b.frontendApi) || frontendApi || "";
    if (!scriptHost) $jUgI1.errorThrower.throwMissingPublishableKeyError();
    const variant = scriptVariant ? `${scriptVariant.replace(/\.+$/, "")}.` : "";
    const getUrlForTag = (target)=>{
        return `https://${scriptHost}/npm/@clerk/clerk-js@${target}/dist/clerk.${variant}browser.js`;
    };
    const nonStableTag = $86a900d373e006c9$var$extractNonStableTag($36PYC.LIB_VERSION);
    if ($86a900d373e006c9$var$forceStagingReleaseForClerkFapi(scriptHost)) return nonStableTag ? getUrlForTag(nonStableTag) : getUrlForTag("staging");
    if (nonStableTag) return getUrlForTag(nonStableTag);
    return getUrlForTag($86a900d373e006c9$var$extractMajorVersion($36PYC.LIB_VERSION));
}
async function $86a900d373e006c9$var$loadScript(params) {
    return new Promise((resolve, reject)=>{
        const { frontendApi: frontendApi , publishableKey: publishableKey , proxyUrl: proxyUrl , domain: domain  } = params;
        if ($parcel$global.Clerk) resolve(null);
        const script = document.createElement("script");
        if (!publishableKey && !frontendApi) $jUgI1.errorThrower.throwMissingPublishableKeyError();
        if (publishableKey) script.setAttribute("data-clerk-publishable-key", publishableKey);
        else if (frontendApi) script.setAttribute("data-clerk-frontend-api", frontendApi);
        if (proxyUrl) script.setAttribute("data-clerk-proxy-url", proxyUrl);
        if (domain) script.setAttribute("data-clerk-domain", domain);
        script.setAttribute("crossorigin", "anonymous");
        script.async = true;
        if (!document.body) reject($86a900d373e006c9$var$MISSING_BODY_ERROR);
        script.addEventListener("load", ()=>resolve(script));
        script.addEventListener("error", ()=>reject($86a900d373e006c9$var$FAILED_TO_LOAD_ERROR));
        script.src = $86a900d373e006c9$var$getScriptSrc(params);
        document.body.appendChild(script);
    });
}
module.exports.loadScript = $86a900d373e006c9$var$loadScript;

});
parcelRequire.register("36PYC", function(module, exports) {
"use strict";
Object.defineProperty(module.exports, "__esModule", {
    value: true
});
module.exports.LIB_NAME = module.exports.LIB_VERSION = void 0;
/** DO NOT EDIT: This file is automatically generated by ../scripts/info.js */ module.exports.LIB_VERSION = "4.16.1";
module.exports.LIB_NAME = "@clerk/clerk-react";

});

parcelRequire.register("eGbF5", function(module, exports) {
"use strict";
Object.defineProperty(module.exports, "__esModule", {
    value: true
});
module.exports.isDevOrStagingUrl = void 0;

var $6aCOC = parcelRequire("6aCOC");
const { isDevOrStagingUrl: $aafe08b109f9411b$var$isDevOrStagingUrl  } = (0, $6aCOC.createDevOrStagingUrlCache)();
module.exports.isDevOrStagingUrl = $aafe08b109f9411b$var$isDevOrStagingUrl;

});


parcelRequire.register("1ewZq", function(module, exports) {
"use strict";
Object.defineProperty(module.exports, "__esModule", {
    value: true
});
module.exports.withMaxAllowedInstancesGuard = module.exports.useMaxAllowedInstancesGuard = void 0;

var $fOt1z = parcelRequire("fOt1z");

const $0e60b04ced22656b$var$react_1 = $fOt1z.__importDefault((parcelRequire("laauJ")));
const $0e60b04ced22656b$var$counts = new Map();
function $0e60b04ced22656b$var$useMaxAllowedInstancesGuard(name, error, maxCount = 1) {
    $0e60b04ced22656b$var$react_1.default.useEffect(()=>{
        const count = $0e60b04ced22656b$var$counts.get(name) || 0;
        if (count == maxCount) throw new Error(error);
        $0e60b04ced22656b$var$counts.set(name, count + 1);
        return ()=>{
            $0e60b04ced22656b$var$counts.set(name, ($0e60b04ced22656b$var$counts.get(name) || 1) - 1);
        };
    }, []);
}
module.exports.useMaxAllowedInstancesGuard = $0e60b04ced22656b$var$useMaxAllowedInstancesGuard;
function $0e60b04ced22656b$var$withMaxAllowedInstancesGuard(WrappedComponent, name, error) {
    const displayName = WrappedComponent.displayName || WrappedComponent.name || name || "Component";
    const Hoc = (props)=>{
        $0e60b04ced22656b$var$useMaxAllowedInstancesGuard(name, error);
        return $0e60b04ced22656b$var$react_1.default.createElement(WrappedComponent, Object.assign({}, props));
    };
    Hoc.displayName = `withMaxAllowedInstancesGuard(${displayName})`;
    return Hoc;
}
module.exports.withMaxAllowedInstancesGuard = $0e60b04ced22656b$var$withMaxAllowedInstancesGuard;

});


parcelRequire.register("3IiGL", function(module, exports) {
"use strict";
Object.defineProperty(module.exports, "__esModule", {
    value: true
});
module.exports.ClerkContextProvider = void 0;

var $fOt1z = parcelRequire("fOt1z");

const $2b43fa5cc42c47e3$var$react_1 = $fOt1z.__importDefault((parcelRequire("laauJ")));

const $2b43fa5cc42c47e3$var$isomorphicClerk_1 = $fOt1z.__importDefault((parcelRequire("9zmC9")));

var $k01wq = parcelRequire("k01wq");

var $3DzEQ = parcelRequire("3DzEQ");

var $2sApG = parcelRequire("2sApG");

var $1g6nu = parcelRequire("1g6nu");

var $i5neq = parcelRequire("i5neq");

var $4ajRi = parcelRequire("4ajRi");

var $4uQd8 = parcelRequire("4uQd8");
function $2b43fa5cc42c47e3$var$ClerkContextProvider(props) {
    const { isomorphicClerkOptions: isomorphicClerkOptions , initialState: initialState , children: children  } = props;
    const { isomorphicClerk: clerk , loaded: clerkLoaded  } = $2b43fa5cc42c47e3$var$useLoadedIsomorphicClerk(isomorphicClerkOptions);
    const [state, setState] = $2b43fa5cc42c47e3$var$react_1.default.useState({
        client: clerk.client,
        session: clerk.session,
        user: clerk.user,
        organization: clerk.organization,
        lastOrganizationInvitation: null,
        lastOrganizationMember: null
    });
    $2b43fa5cc42c47e3$var$react_1.default.useEffect(()=>{
        return clerk.addListener((e)=>setState(Object.assign({}, e)));
    }, []);
    const derivedState = (0, $k01wq.deriveState)(clerkLoaded, state, initialState);
    const clerkCtx = $2b43fa5cc42c47e3$var$react_1.default.useMemo(()=>({
            value: clerk
        }), [
        clerkLoaded
    ]);
    const clientCtx = $2b43fa5cc42c47e3$var$react_1.default.useMemo(()=>({
            value: state.client
        }), [
        state.client
    ]);
    const { sessionId: sessionId , session: session , userId: userId , user: user , orgId: orgId , actor: actor , lastOrganizationInvitation: lastOrganizationInvitation , lastOrganizationMember: lastOrganizationMember , organization: organization , orgRole: orgRole , orgSlug: orgSlug  } = derivedState;
    const authCtx = $2b43fa5cc42c47e3$var$react_1.default.useMemo(()=>{
        const value = {
            sessionId: sessionId,
            userId: userId,
            actor: actor,
            orgId: orgId,
            orgRole: orgRole,
            orgSlug: orgSlug
        };
        return {
            value: value
        };
    }, [
        sessionId,
        userId,
        actor,
        orgId,
        orgRole,
        orgSlug
    ]);
    const userCtx = $2b43fa5cc42c47e3$var$react_1.default.useMemo(()=>({
            value: user
        }), [
        userId,
        user
    ]);
    const sessionCtx = $2b43fa5cc42c47e3$var$react_1.default.useMemo(()=>({
            value: session
        }), [
        sessionId,
        session
    ]);
    const organizationCtx = $2b43fa5cc42c47e3$var$react_1.default.useMemo(()=>{
        const value = {
            organization: organization,
            lastOrganizationInvitation: lastOrganizationInvitation,
            lastOrganizationMember: lastOrganizationMember
        };
        return {
            value: value
        };
    }, [
        orgId,
        organization,
        lastOrganizationInvitation,
        lastOrganizationMember
    ]);
    return(// @ts-expect-error
    $2b43fa5cc42c47e3$var$react_1.default.createElement($1g6nu.IsomorphicClerkContext.Provider, {
        value: clerkCtx
    }, $2b43fa5cc42c47e3$var$react_1.default.createElement($2sApG.ClientContext.Provider, {
        value: clientCtx
    }, $2b43fa5cc42c47e3$var$react_1.default.createElement($4ajRi.SessionContext.Provider, {
        value: sessionCtx
    }, $2b43fa5cc42c47e3$var$react_1.default.createElement($i5neq.OrganizationContext.Provider, {
        value: organizationCtx
    }, $2b43fa5cc42c47e3$var$react_1.default.createElement($3DzEQ.AuthContext.Provider, {
        value: authCtx
    }, $2b43fa5cc42c47e3$var$react_1.default.createElement($4uQd8.UserContext.Provider, {
        value: userCtx
    }, children)))))));
}
module.exports.ClerkContextProvider = $2b43fa5cc42c47e3$var$ClerkContextProvider;
const $2b43fa5cc42c47e3$var$useLoadedIsomorphicClerk = (options)=>{
    const [loaded, setLoaded] = $2b43fa5cc42c47e3$var$react_1.default.useState(false);
    const isomorphicClerk = $2b43fa5cc42c47e3$var$react_1.default.useMemo(()=>$2b43fa5cc42c47e3$var$isomorphicClerk_1.default.getOrCreateInstance(options), []);
    $2b43fa5cc42c47e3$var$react_1.default.useEffect(()=>{
        isomorphicClerk.__unstable__updateProps({
            appearance: options.appearance
        });
    }, [
        options.appearance
    ]);
    $2b43fa5cc42c47e3$var$react_1.default.useEffect(()=>{
        isomorphicClerk.__unstable__updateProps({
            options: options
        });
    }, [
        options.localization
    ]);
    $2b43fa5cc42c47e3$var$react_1.default.useEffect(()=>{
        isomorphicClerk.addOnLoaded(()=>setLoaded(true));
    }, []);
    return {
        isomorphicClerk: isomorphicClerk,
        loaded: loaded
    };
};

});
parcelRequire.register("9zmC9", function(module, exports) {
"use strict";
var $6f78eca7b0b72923$var$_a, $6f78eca7b0b72923$var$_IsomorphicClerk_loaded, $6f78eca7b0b72923$var$_IsomorphicClerk_domain, $6f78eca7b0b72923$var$_IsomorphicClerk_proxyUrl, $6f78eca7b0b72923$var$_IsomorphicClerk_instance;
Object.defineProperty(module.exports, "__esModule", {
    value: true
});

var $fOt1z = parcelRequire("fOt1z");

var $6aCOC = parcelRequire("6aCOC");

var $rLPvf = parcelRequire("rLPvf");

var $9LdOB = parcelRequire("9LdOB");
class $6f78eca7b0b72923$var$IsomorphicClerk {
    get loaded() {
        return $fOt1z.__classPrivateFieldGet(this, $6f78eca7b0b72923$var$_IsomorphicClerk_loaded, "f");
    }
    static getOrCreateInstance(options) {
        // During SSR: a new instance should be created for every request
        // During CSR: use the cached instance for the whole lifetime of the app
        // This method should be idempotent in both scenarios
        if (!(0, $6aCOC.inClientSide)() || !$fOt1z.__classPrivateFieldGet(this, $6f78eca7b0b72923$var$_a, "f", $6f78eca7b0b72923$var$_IsomorphicClerk_instance)) $fOt1z.__classPrivateFieldSet(this, $6f78eca7b0b72923$var$_a, new $6f78eca7b0b72923$var$IsomorphicClerk(options), "f", $6f78eca7b0b72923$var$_IsomorphicClerk_instance);
        return $fOt1z.__classPrivateFieldGet(this, $6f78eca7b0b72923$var$_a, "f", $6f78eca7b0b72923$var$_IsomorphicClerk_instance);
    }
    get domain() {
        // This getter can run in environments where window is not available.
        // In those cases we should expect and use domain as a string
        if (typeof window !== "undefined" && window.location) return (0, $6aCOC.handleValueOrFn)($fOt1z.__classPrivateFieldGet(this, $6f78eca7b0b72923$var$_IsomorphicClerk_domain, "f"), new URL(window.location.href), "");
        if (typeof $fOt1z.__classPrivateFieldGet(this, $6f78eca7b0b72923$var$_IsomorphicClerk_domain, "f") === "function") throw new Error($rLPvf.unsupportedNonBrowserDomainOrProxyUrlFunction);
        return $fOt1z.__classPrivateFieldGet(this, $6f78eca7b0b72923$var$_IsomorphicClerk_domain, "f") || "";
    }
    get proxyUrl() {
        // This getter can run in environments where window is not available.
        // In those cases we should expect and use proxy as a string
        if (typeof window !== "undefined" && window.location) return (0, $6aCOC.handleValueOrFn)($fOt1z.__classPrivateFieldGet(this, $6f78eca7b0b72923$var$_IsomorphicClerk_proxyUrl, "f"), new URL(window.location.href), "");
        if (typeof $fOt1z.__classPrivateFieldGet(this, $6f78eca7b0b72923$var$_IsomorphicClerk_proxyUrl, "f") === "function") throw new Error($rLPvf.unsupportedNonBrowserDomainOrProxyUrlFunction);
        return $fOt1z.__classPrivateFieldGet(this, $6f78eca7b0b72923$var$_IsomorphicClerk_proxyUrl, "f") || "";
    }
    constructor(options){
        this.clerkjs = null;
        this.preopenSignIn = null;
        this.preopenSignUp = null;
        this.preopenUserProfile = null;
        this.preopenOrganizationProfile = null;
        this.premountSignInNodes = new Map();
        this.premountSignUpNodes = new Map();
        this.premountUserProfileNodes = new Map();
        this.premountUserButtonNodes = new Map();
        this.premountOrganizationProfileNodes = new Map();
        this.premountCreateOrganizationNodes = new Map();
        this.premountOrganizationSwitcherNodes = new Map();
        this.premountMethodCalls = new Map();
        this.loadedListeners = [];
        $6f78eca7b0b72923$var$_IsomorphicClerk_loaded.set(this, false);
        $6f78eca7b0b72923$var$_IsomorphicClerk_domain.set(this, void 0);
        $6f78eca7b0b72923$var$_IsomorphicClerk_proxyUrl.set(this, void 0);
        this.addOnLoaded = (cb)=>{
            this.loadedListeners.push(cb);
        };
        this.emitLoaded = ()=>{
            this.loadedListeners.forEach((cb)=>cb());
            this.loadedListeners = [];
        };
        this.hydrateClerkJS = (clerkjs)=>{
            if (!clerkjs) throw new Error("Failed to hydrate latest Clerk JS");
            this.clerkjs = clerkjs;
            this.premountMethodCalls.forEach((cb)=>cb());
            if (this.preopenSignIn !== null) clerkjs.openSignIn(this.preopenSignIn);
            if (this.preopenSignUp !== null) clerkjs.openSignUp(this.preopenSignUp);
            if (this.preopenUserProfile !== null) clerkjs.openUserProfile(this.preopenUserProfile);
            this.premountSignInNodes.forEach((props, node)=>{
                clerkjs.mountSignIn(node, props);
            });
            this.premountSignUpNodes.forEach((props, node)=>{
                clerkjs.mountSignUp(node, props);
            });
            this.premountUserProfileNodes.forEach((props, node)=>{
                clerkjs.mountUserProfile(node, props);
            });
            this.premountUserButtonNodes.forEach((props, node)=>{
                clerkjs.mountUserButton(node, props);
            });
            $fOt1z.__classPrivateFieldSet(this, $6f78eca7b0b72923$var$_IsomorphicClerk_loaded, true, "f");
            this.emitLoaded();
            return this.clerkjs;
        };
        this.__unstable__updateProps = (props)=>{
            // Handle case where accounts has clerk-react@4 installed, but clerk-js@3 is manually loaded
            if (this.clerkjs && "__unstable__updateProps" in this.clerkjs) this.clerkjs.__unstable__updateProps(props);
            else return undefined;
        };
        /**
         * `setActive` can be used to set the active session and/or organization.
         * It will eventually replace `setSession`.
         *
         * @experimental
         */ this.setActive = ({ session: session , organization: organization , beforeEmit: beforeEmit  })=>{
            if (this.clerkjs) return this.clerkjs.setActive({
                session: session,
                organization: organization,
                beforeEmit: beforeEmit
            });
            else return Promise.reject();
        };
        this.setSession = (session, beforeEmit)=>{
            return this.setActive({
                session: session,
                beforeEmit: beforeEmit
            });
        };
        this.openSignIn = (props)=>{
            if (this.clerkjs && $fOt1z.__classPrivateFieldGet(this, $6f78eca7b0b72923$var$_IsomorphicClerk_loaded, "f")) this.clerkjs.openSignIn(props);
            else this.preopenSignIn = props;
        };
        this.closeSignIn = ()=>{
            if (this.clerkjs && $fOt1z.__classPrivateFieldGet(this, $6f78eca7b0b72923$var$_IsomorphicClerk_loaded, "f")) this.clerkjs.closeSignIn();
            else this.preopenSignIn = null;
        };
        this.openUserProfile = (props)=>{
            if (this.clerkjs && $fOt1z.__classPrivateFieldGet(this, $6f78eca7b0b72923$var$_IsomorphicClerk_loaded, "f")) this.clerkjs.openUserProfile(props);
            else this.preopenUserProfile = props;
        };
        this.closeUserProfile = ()=>{
            if (this.clerkjs && $fOt1z.__classPrivateFieldGet(this, $6f78eca7b0b72923$var$_IsomorphicClerk_loaded, "f")) this.clerkjs.closeUserProfile();
            else this.preopenUserProfile = null;
        };
        this.openOrganizationProfile = (props)=>{
            if (this.clerkjs && $fOt1z.__classPrivateFieldGet(this, $6f78eca7b0b72923$var$_IsomorphicClerk_loaded, "f")) this.clerkjs.openOrganizationProfile(props);
            else this.preopenOrganizationProfile = props;
        };
        this.closeOrganizationProfile = ()=>{
            if (this.clerkjs && $fOt1z.__classPrivateFieldGet(this, $6f78eca7b0b72923$var$_IsomorphicClerk_loaded, "f")) this.clerkjs.closeOrganizationProfile();
            else this.preopenOrganizationProfile = null;
        };
        this.openSignUp = (props)=>{
            if (this.clerkjs && $fOt1z.__classPrivateFieldGet(this, $6f78eca7b0b72923$var$_IsomorphicClerk_loaded, "f")) this.clerkjs.openSignUp(props);
            else this.preopenSignUp = props;
        };
        this.closeSignUp = ()=>{
            if (this.clerkjs && $fOt1z.__classPrivateFieldGet(this, $6f78eca7b0b72923$var$_IsomorphicClerk_loaded, "f")) this.clerkjs.closeSignUp();
            else this.preopenSignUp = null;
        };
        this.mountSignIn = (node, props)=>{
            if (this.clerkjs && $fOt1z.__classPrivateFieldGet(this, $6f78eca7b0b72923$var$_IsomorphicClerk_loaded, "f")) this.clerkjs.mountSignIn(node, props);
            else this.premountSignInNodes.set(node, props);
        };
        this.unmountSignIn = (node)=>{
            if (this.clerkjs && $fOt1z.__classPrivateFieldGet(this, $6f78eca7b0b72923$var$_IsomorphicClerk_loaded, "f")) this.clerkjs.unmountSignIn(node);
            else this.premountSignInNodes.delete(node);
        };
        this.mountSignUp = (node, props)=>{
            if (this.clerkjs && $fOt1z.__classPrivateFieldGet(this, $6f78eca7b0b72923$var$_IsomorphicClerk_loaded, "f")) this.clerkjs.mountSignUp(node, props);
            else this.premountSignUpNodes.set(node, props);
        };
        this.unmountSignUp = (node)=>{
            if (this.clerkjs && $fOt1z.__classPrivateFieldGet(this, $6f78eca7b0b72923$var$_IsomorphicClerk_loaded, "f")) this.clerkjs.unmountSignUp(node);
            else this.premountSignUpNodes.delete(node);
        };
        this.mountUserProfile = (node, props)=>{
            if (this.clerkjs && $fOt1z.__classPrivateFieldGet(this, $6f78eca7b0b72923$var$_IsomorphicClerk_loaded, "f")) this.clerkjs.mountUserProfile(node, props);
            else this.premountUserProfileNodes.set(node, props);
        };
        this.unmountUserProfile = (node)=>{
            if (this.clerkjs && $fOt1z.__classPrivateFieldGet(this, $6f78eca7b0b72923$var$_IsomorphicClerk_loaded, "f")) this.clerkjs.unmountUserProfile(node);
            else this.premountUserProfileNodes.delete(node);
        };
        this.mountOrganizationProfile = (node, props)=>{
            if (this.clerkjs && $fOt1z.__classPrivateFieldGet(this, $6f78eca7b0b72923$var$_IsomorphicClerk_loaded, "f")) this.clerkjs.mountOrganizationProfile(node, props);
            else this.premountOrganizationProfileNodes.set(node, props);
        };
        this.unmountOrganizationProfile = (node)=>{
            if (this.clerkjs && $fOt1z.__classPrivateFieldGet(this, $6f78eca7b0b72923$var$_IsomorphicClerk_loaded, "f")) this.clerkjs.unmountOrganizationProfile(node);
            else this.premountOrganizationProfileNodes.delete(node);
        };
        this.mountCreateOrganization = (node, props)=>{
            if (this.clerkjs && $fOt1z.__classPrivateFieldGet(this, $6f78eca7b0b72923$var$_IsomorphicClerk_loaded, "f")) this.clerkjs.mountCreateOrganization(node, props);
            else this.premountCreateOrganizationNodes.set(node, props);
        };
        this.unmountCreateOrganization = (node)=>{
            if (this.clerkjs && $fOt1z.__classPrivateFieldGet(this, $6f78eca7b0b72923$var$_IsomorphicClerk_loaded, "f")) this.clerkjs.unmountCreateOrganization(node);
            else this.premountCreateOrganizationNodes.delete(node);
        };
        this.mountOrganizationSwitcher = (node, props)=>{
            if (this.clerkjs && $fOt1z.__classPrivateFieldGet(this, $6f78eca7b0b72923$var$_IsomorphicClerk_loaded, "f")) this.clerkjs.mountOrganizationSwitcher(node, props);
            else this.premountOrganizationSwitcherNodes.set(node, props);
        };
        this.unmountOrganizationSwitcher = (node)=>{
            if (this.clerkjs && $fOt1z.__classPrivateFieldGet(this, $6f78eca7b0b72923$var$_IsomorphicClerk_loaded, "f")) this.clerkjs.unmountOrganizationSwitcher(node);
            else this.premountOrganizationSwitcherNodes.delete(node);
        };
        this.mountUserButton = (node, userButtonProps)=>{
            if (this.clerkjs && $fOt1z.__classPrivateFieldGet(this, $6f78eca7b0b72923$var$_IsomorphicClerk_loaded, "f")) this.clerkjs.mountUserButton(node, userButtonProps);
            else this.premountUserButtonNodes.set(node, userButtonProps);
        };
        this.unmountUserButton = (node)=>{
            if (this.clerkjs && $fOt1z.__classPrivateFieldGet(this, $6f78eca7b0b72923$var$_IsomorphicClerk_loaded, "f")) this.clerkjs.unmountUserButton(node);
            else this.premountUserButtonNodes.delete(node);
        };
        this.addListener = (listener)=>{
            const callback = ()=>{
                var _b;
                return (_b = this.clerkjs) === null || _b === void 0 ? void 0 : _b.addListener(listener);
            };
            if (this.clerkjs) callback();
            else this.premountMethodCalls.set("addListener", callback);
        };
        this.navigate = (to)=>{
            const callback = ()=>{
                var _b;
                return (_b = this.clerkjs) === null || _b === void 0 ? void 0 : _b.navigate(to);
            };
            if (this.clerkjs && $fOt1z.__classPrivateFieldGet(this, $6f78eca7b0b72923$var$_IsomorphicClerk_loaded, "f")) callback();
            else this.premountMethodCalls.set("navigate", callback);
        };
        this.redirectWithAuth = (...args)=>{
            const callback = ()=>{
                var _b;
                return (_b = this.clerkjs) === null || _b === void 0 ? void 0 : _b.redirectWithAuth(...args);
            };
            if (this.clerkjs && $fOt1z.__classPrivateFieldGet(this, $6f78eca7b0b72923$var$_IsomorphicClerk_loaded, "f")) callback();
            else this.premountMethodCalls.set("redirectWithAuth", callback);
        };
        this.redirectToSignIn = (opts)=>{
            const callback = ()=>{
                var _b;
                return (_b = this.clerkjs) === null || _b === void 0 ? void 0 : _b.redirectToSignIn(opts);
            };
            if (this.clerkjs && $fOt1z.__classPrivateFieldGet(this, $6f78eca7b0b72923$var$_IsomorphicClerk_loaded, "f")) callback();
            else this.premountMethodCalls.set("redirectToSignIn", callback);
        };
        this.redirectToSignUp = (opts)=>{
            const callback = ()=>{
                var _b;
                return (_b = this.clerkjs) === null || _b === void 0 ? void 0 : _b.redirectToSignUp(opts);
            };
            if (this.clerkjs && $fOt1z.__classPrivateFieldGet(this, $6f78eca7b0b72923$var$_IsomorphicClerk_loaded, "f")) callback();
            else this.premountMethodCalls.set("redirectToSignUp", callback);
        };
        this.redirectToUserProfile = ()=>{
            const callback = ()=>{
                var _b;
                return (_b = this.clerkjs) === null || _b === void 0 ? void 0 : _b.redirectToUserProfile();
            };
            if (this.clerkjs && $fOt1z.__classPrivateFieldGet(this, $6f78eca7b0b72923$var$_IsomorphicClerk_loaded, "f")) callback();
            else this.premountMethodCalls.set("redirectToUserProfile", callback);
        };
        this.redirectToHome = ()=>{
            const callback = ()=>{
                var _b;
                return (_b = this.clerkjs) === null || _b === void 0 ? void 0 : _b.redirectToHome();
            };
            if (this.clerkjs && $fOt1z.__classPrivateFieldGet(this, $6f78eca7b0b72923$var$_IsomorphicClerk_loaded, "f")) callback();
            else this.premountMethodCalls.set("redirectToHome", callback);
        };
        this.redirectToOrganizationProfile = ()=>{
            const callback = ()=>{
                var _b;
                return (_b = this.clerkjs) === null || _b === void 0 ? void 0 : _b.redirectToOrganizationProfile();
            };
            if (this.clerkjs && $fOt1z.__classPrivateFieldGet(this, $6f78eca7b0b72923$var$_IsomorphicClerk_loaded, "f")) callback();
            else this.premountMethodCalls.set("redirectToOrganizationProfile", callback);
        };
        this.redirectToCreateOrganization = ()=>{
            const callback = ()=>{
                var _b;
                return (_b = this.clerkjs) === null || _b === void 0 ? void 0 : _b.redirectToCreateOrganization();
            };
            if (this.clerkjs && $fOt1z.__classPrivateFieldGet(this, $6f78eca7b0b72923$var$_IsomorphicClerk_loaded, "f")) callback();
            else this.premountMethodCalls.set("redirectToCreateOrganization", callback);
        };
        this.handleRedirectCallback = (params)=>{
            var _b;
            const callback = ()=>{
                var _b;
                return (_b = this.clerkjs) === null || _b === void 0 ? void 0 : _b.handleRedirectCallback(params);
            };
            if (this.clerkjs && $fOt1z.__classPrivateFieldGet(this, $6f78eca7b0b72923$var$_IsomorphicClerk_loaded, "f")) (_b = callback()) === null || _b === void 0 || _b.catch(()=>{
            // This error is caused when the host app is using React18
            // and strictMode is enabled. This useEffects runs twice because
            // the clerk-react ui components mounts, unmounts and mounts again
            // so the clerk-js component loses its state because of the custom
            // unmount callback we're using.
            // This needs to be solved by tweaking the logic in uiComponents.tsx
            // or by making handleRedirectCallback idempotent
            });
            else this.premountMethodCalls.set("handleRedirectCallback", callback);
        };
        this.handleMagicLinkVerification = async (params)=>{
            const callback = ()=>{
                var _b;
                return (_b = this.clerkjs) === null || _b === void 0 ? void 0 : _b.handleMagicLinkVerification(params);
            };
            if (this.clerkjs && $fOt1z.__classPrivateFieldGet(this, $6f78eca7b0b72923$var$_IsomorphicClerk_loaded, "f")) return callback();
            else this.premountMethodCalls.set("handleMagicLinkVerification", callback);
        };
        this.authenticateWithMetamask = async (params)=>{
            const callback = ()=>{
                var _b;
                return (_b = this.clerkjs) === null || _b === void 0 ? void 0 : _b.authenticateWithMetamask(params);
            };
            if (this.clerkjs && $fOt1z.__classPrivateFieldGet(this, $6f78eca7b0b72923$var$_IsomorphicClerk_loaded, "f")) return callback();
            else this.premountMethodCalls.set("authenticateWithMetamask", callback);
        };
        this.createOrganization = async (params)=>{
            const callback = ()=>{
                var _b;
                return (_b = this.clerkjs) === null || _b === void 0 ? void 0 : _b.createOrganization(params);
            };
            if (this.clerkjs && $fOt1z.__classPrivateFieldGet(this, $6f78eca7b0b72923$var$_IsomorphicClerk_loaded, "f")) return callback();
            else this.premountMethodCalls.set("createOrganization", callback);
        };
        this.getOrganizationMemberships = async ()=>{
            const callback = ()=>{
                var _b;
                return (_b = this.clerkjs) === null || _b === void 0 ? void 0 : _b.getOrganizationMemberships();
            };
            if (this.clerkjs && $fOt1z.__classPrivateFieldGet(this, $6f78eca7b0b72923$var$_IsomorphicClerk_loaded, "f")) return callback();
            else this.premountMethodCalls.set("getOrganizationMemberships", callback);
        };
        this.getOrganization = async (organizationId)=>{
            const callback = ()=>{
                var _b;
                return (_b = this.clerkjs) === null || _b === void 0 ? void 0 : _b.getOrganization(organizationId);
            };
            if (this.clerkjs && $fOt1z.__classPrivateFieldGet(this, $6f78eca7b0b72923$var$_IsomorphicClerk_loaded, "f")) return callback();
            else this.premountMethodCalls.set("getOrganization", callback);
        };
        this.signOut = async (signOutCallbackOrOptions, options)=>{
            const callback = ()=>{
                var _b;
                return (_b = this.clerkjs) === null || _b === void 0 ? void 0 : _b.signOut(signOutCallbackOrOptions, options);
            };
            if (this.clerkjs && $fOt1z.__classPrivateFieldGet(this, $6f78eca7b0b72923$var$_IsomorphicClerk_loaded, "f")) return callback();
            else this.premountMethodCalls.set("signOut", callback);
        };
        const { Clerk: Clerk = null , frontendApi: frontendApi , publishableKey: publishableKey  } = options || {};
        this.frontendApi = frontendApi;
        this.publishableKey = publishableKey;
        $fOt1z.__classPrivateFieldSet(this, $6f78eca7b0b72923$var$_IsomorphicClerk_proxyUrl, options === null || options === void 0 ? void 0 : options.proxyUrl, "f");
        $fOt1z.__classPrivateFieldSet(this, $6f78eca7b0b72923$var$_IsomorphicClerk_domain, options === null || options === void 0 ? void 0 : options.domain, "f");
        this.options = options;
        this.Clerk = Clerk;
        this.mode = (0, $6aCOC.inClientSide)() ? "browser" : "server";
        this.loadClerkJS();
    }
    async loadClerkJS() {
        var _b, _c;
        if (this.mode !== "browser" || $fOt1z.__classPrivateFieldGet(this, $6f78eca7b0b72923$var$_IsomorphicClerk_loaded, "f")) return;
        // Store frontendAPI value on window as a fallback. This value can be used as a
        // fallback during ClerkJS hot loading in case ClerkJS fails to find the
        // "data-clerk-frontend-api" attribute on its script tag.
        // This can happen when the DOM is altered completely during client rehydration.
        // For example, in Remix with React 18 the document changes completely via `hydrateRoot(document)`.
        // For more information refer to:
        // - https://github.com/remix-run/remix/issues/2947
        // - https://github.com/facebook/react/issues/24430
        if (typeof window !== "undefined") {
            window.__clerk_frontend_api = this.frontendApi;
            window.__clerk_publishable_key = this.publishableKey;
            window.__clerk_proxy_url = this.proxyUrl;
            window.__clerk_domain = this.domain;
        }
        try {
            if (this.Clerk) {
                // Set a fixed Clerk version
                let c;
                if ((0, $9LdOB.isConstructor)(this.Clerk)) {
                    // Construct a new Clerk object if a constructor is passed
                    c = new this.Clerk(this.publishableKey || this.frontendApi || "", {
                        proxyUrl: this.proxyUrl,
                        domain: this.domain
                    });
                    await c.load(this.options);
                } else {
                    // Otherwise use the instantiated Clerk object
                    c = this.Clerk;
                    if (!c.isReady()) await c.load(this.options);
                }
                $parcel$global.Clerk = c;
            } else {
                // Hot-load latest ClerkJS from Clerk CDN
                await (0, $9LdOB.loadScript)({
                    frontendApi: this.frontendApi,
                    publishableKey: this.publishableKey,
                    proxyUrl: this.proxyUrl,
                    domain: this.domain,
                    scriptUrl: this.options.clerkJSUrl,
                    scriptVariant: this.options.clerkJSVariant
                });
                if (!$parcel$global.Clerk) throw new Error("Failed to download latest ClerkJS. Contact support@clerk.com.");
                await $parcel$global.Clerk.load(this.options);
            }
            if (((_b = $parcel$global.Clerk) === null || _b === void 0 ? void 0 : _b.loaded) || ((_c = $parcel$global.Clerk) === null || _c === void 0 ? void 0 : _c.isReady())) return this.hydrateClerkJS($parcel$global.Clerk);
            return;
        } catch (err) {
            const error = err;
            console.error(error.stack || error.message || error);
            return;
        }
    }
    get version() {
        var _b;
        return (_b = this.clerkjs) === null || _b === void 0 ? void 0 : _b.version;
    }
    get client() {
        if (this.clerkjs) return this.clerkjs.client;
        else return undefined;
    }
    get session() {
        if (this.clerkjs) return this.clerkjs.session;
        else return undefined;
    }
    get user() {
        if (this.clerkjs) return this.clerkjs.user;
        else return undefined;
    }
    get organization() {
        if (this.clerkjs) return this.clerkjs.organization;
        else return undefined;
    }
    get __unstable__environment() {
        if (this.clerkjs) return this.clerkjs.__unstable__environment;
        else return undefined;
    }
    __unstable__setEnvironment(...args) {
        if (this.clerkjs && "__unstable__setEnvironment" in this.clerkjs) this.clerkjs.__unstable__setEnvironment(args);
        else return undefined;
    }
}
module.exports.default = $6f78eca7b0b72923$var$IsomorphicClerk;
$6f78eca7b0b72923$var$_a = $6f78eca7b0b72923$var$IsomorphicClerk, $6f78eca7b0b72923$var$_IsomorphicClerk_loaded = new WeakMap(), $6f78eca7b0b72923$var$_IsomorphicClerk_domain = new WeakMap(), $6f78eca7b0b72923$var$_IsomorphicClerk_proxyUrl = new WeakMap();
$6f78eca7b0b72923$var$_IsomorphicClerk_instance = {
    value: void 0
};

});

parcelRequire.register("k01wq", function(module, exports) {
"use strict";
Object.defineProperty(module.exports, "__esModule", {
    value: true
});
module.exports.deriveState = void 0;
const $e8f4fcfda0a0544e$var$deriveState = (clerkLoaded, state, initialState)=>{
    if (!clerkLoaded && initialState) return $e8f4fcfda0a0544e$var$deriveFromSsrInitialState(initialState);
    return $e8f4fcfda0a0544e$var$deriveFromClientSideState(state);
};
module.exports.deriveState = $e8f4fcfda0a0544e$var$deriveState;
const $e8f4fcfda0a0544e$var$deriveFromSsrInitialState = (initialState)=>{
    const userId = initialState.userId;
    const user = initialState.user;
    const sessionId = initialState.sessionId;
    const session = initialState.session;
    const organization = initialState.organization;
    const orgId = initialState.orgId;
    const orgRole = initialState.orgRole;
    const orgSlug = initialState.orgSlug;
    const actor = initialState.actor;
    return {
        userId: userId,
        user: user,
        sessionId: sessionId,
        session: session,
        organization: organization,
        orgId: orgId,
        orgRole: orgRole,
        orgSlug: orgSlug,
        actor: actor,
        lastOrganizationInvitation: null,
        lastOrganizationMember: null
    };
};
const $e8f4fcfda0a0544e$var$deriveFromClientSideState = (state)=>{
    var _a;
    const userId = state.user ? state.user.id : state.user;
    const user = state.user;
    const sessionId = state.session ? state.session.id : state.session;
    const session = state.session;
    const actor = session === null || session === void 0 ? void 0 : session.actor;
    const organization = state.organization;
    const orgId = state.organization ? state.organization.id : state.organization;
    const orgSlug = organization === null || organization === void 0 ? void 0 : organization.slug;
    const membership = organization ? (_a = user === null || user === void 0 ? void 0 : user.organizationMemberships) === null || _a === void 0 ? void 0 : _a.find((om)=>om.organization.id === orgId) : organization;
    const orgRole = membership ? membership.role : membership;
    const lastOrganizationInvitation = state.lastOrganizationInvitation;
    const lastOrganizationMember = state.lastOrganizationMember;
    return {
        userId: userId,
        user: user,
        sessionId: sessionId,
        session: session,
        organization: organization,
        orgId: orgId,
        orgRole: orgRole,
        orgSlug: orgSlug,
        actor: actor,
        lastOrganizationInvitation: lastOrganizationInvitation,
        lastOrganizationMember: lastOrganizationMember
    };
};

});

parcelRequire.register("3DzEQ", function(module, exports) {
"use strict";
var $2a60ac7ef818f051$var$_a;
Object.defineProperty(module.exports, "__esModule", {
    value: true
});
module.exports.useAuthContext = module.exports.AuthContext = void 0;

var $6aCOC = parcelRequire("6aCOC");
$2a60ac7ef818f051$var$_a = (0, $6aCOC.createContextAndHook)("AuthContext"), module.exports.AuthContext = $2a60ac7ef818f051$var$_a[0], module.exports.useAuthContext = $2a60ac7ef818f051$var$_a[1];

});

parcelRequire.register("2sApG", function(module, exports) {
"use strict";
Object.defineProperty(module.exports, "__esModule", {
    value: true
});
module.exports.useClientContext = module.exports.ClientContext = void 0;

var $6aCOC = parcelRequire("6aCOC");
Object.defineProperty(module.exports, "ClientContext", {
    enumerable: true,
    get: function() {
        return $6aCOC.ClientContext;
    }
});
Object.defineProperty(module.exports, "useClientContext", {
    enumerable: true,
    get: function() {
        return $6aCOC.useClientContext;
    }
});

});

parcelRequire.register("1g6nu", function(module, exports) {
"use strict";
var $0eac3b8e999e30e3$var$_a;
Object.defineProperty(module.exports, "__esModule", {
    value: true
});
module.exports.useIsomorphicClerkContext = module.exports.IsomorphicClerkContext = void 0;

var $6aCOC = parcelRequire("6aCOC");
$0eac3b8e999e30e3$var$_a = [
    $6aCOC.ClerkInstanceContext,
    $6aCOC.useClerkInstanceContext
], module.exports.IsomorphicClerkContext = $0eac3b8e999e30e3$var$_a[0], module.exports.useIsomorphicClerkContext = $0eac3b8e999e30e3$var$_a[1];

});

parcelRequire.register("i5neq", function(module, exports) {
"use strict";
Object.defineProperty(module.exports, "__esModule", {
    value: true
});
module.exports.useOrganizationContext = module.exports.OrganizationContext = void 0;

var $6aCOC = parcelRequire("6aCOC");
Object.defineProperty(module.exports, "OrganizationContext", {
    enumerable: true,
    get: function() {
        return $6aCOC.OrganizationContext;
    }
});
Object.defineProperty(module.exports, "useOrganizationContext", {
    enumerable: true,
    get: function() {
        return $6aCOC.useOrganizationContext;
    }
});

});

parcelRequire.register("4ajRi", function(module, exports) {
"use strict";
Object.defineProperty(module.exports, "__esModule", {
    value: true
});
module.exports.useSessionContext = module.exports.SessionContext = void 0;

var $6aCOC = parcelRequire("6aCOC");
Object.defineProperty(module.exports, "SessionContext", {
    enumerable: true,
    get: function() {
        return $6aCOC.SessionContext;
    }
});
Object.defineProperty(module.exports, "useSessionContext", {
    enumerable: true,
    get: function() {
        return $6aCOC.useSessionContext;
    }
});

});

parcelRequire.register("4uQd8", function(module, exports) {
"use strict";
Object.defineProperty(module.exports, "__esModule", {
    value: true
});
module.exports.useUserContext = module.exports.UserContext = void 0;

var $6aCOC = parcelRequire("6aCOC");
Object.defineProperty(module.exports, "UserContext", {
    enumerable: true,
    get: function() {
        return $6aCOC.UserContext;
    }
});
Object.defineProperty(module.exports, "useUserContext", {
    enumerable: true,
    get: function() {
        return $6aCOC.useUserContext;
    }
});

});


parcelRequire.register("1dBnc", function(module, exports) {
"use strict";
Object.defineProperty(module.exports, "__esModule", {
    value: true
});
module.exports.LoadedGuarantee = module.exports.StructureContext = module.exports.StructureContextStates = void 0;

var $fOt1z = parcelRequire("fOt1z");

const $0e33fedd2c3a6d66$var$react_1 = $fOt1z.__importDefault((parcelRequire("laauJ")));

var $4zoRo = parcelRequire("4zoRo");
module.exports.StructureContextStates = Object.freeze({
    noGuarantees: Object.freeze({
        guaranteedLoaded: false
    }),
    guaranteedLoaded: Object.freeze({
        guaranteedLoaded: true
    })
});
module.exports.StructureContext = $0e33fedd2c3a6d66$var$react_1.default.createContext(undefined);
module.exports.StructureContext.displayName = "StructureContext";
const $0e33fedd2c3a6d66$var$useStructureContext = ()=>{
    const structureCtx = $0e33fedd2c3a6d66$var$react_1.default.useContext(module.exports.StructureContext);
    (0, $4zoRo.assertWrappedByClerkProvider)(structureCtx);
    return structureCtx;
};
const $0e33fedd2c3a6d66$var$LoadedGuarantee = ({ children: children  })=>{
    const structure = $0e33fedd2c3a6d66$var$useStructureContext();
    if (structure.guaranteedLoaded) return $0e33fedd2c3a6d66$var$react_1.default.createElement($0e33fedd2c3a6d66$var$react_1.default.Fragment, null, children);
    return $0e33fedd2c3a6d66$var$react_1.default.createElement(module.exports.StructureContext.Provider, {
        value: module.exports.StructureContextStates.guaranteedLoaded
    }, children);
};
module.exports.LoadedGuarantee = $0e33fedd2c3a6d66$var$LoadedGuarantee;

});
parcelRequire.register("4zoRo", function(module, exports) {
"use strict";
Object.defineProperty(module.exports, "__esModule", {
    value: true
});
module.exports.assertClerkLoadedGuarantee = module.exports.assertWrappedByClerkProvider = void 0;

var $rLPvf = parcelRequire("rLPvf");
function $353db703fa58a975$var$assertWrappedByClerkProvider(contextVal) {
    if (!contextVal) throw new Error($rLPvf.noClerkProviderError);
}
module.exports.assertWrappedByClerkProvider = $353db703fa58a975$var$assertWrappedByClerkProvider;
function $353db703fa58a975$var$assertClerkLoadedGuarantee(guarantee, hookName) {
    if (!guarantee) throw new Error((0, $rLPvf.noGuaranteedLoadedError)(hookName));
}
module.exports.assertClerkLoadedGuarantee = $353db703fa58a975$var$assertClerkLoadedGuarantee;

});




parcelRequire.register("dp31I", function(module, exports) {
"use strict";
Object.defineProperty(module.exports, "__esModule", {
    value: true
});
module.exports.RedirectToOrganizationProfile = module.exports.RedirectToCreateOrganization = module.exports.MultisessionAppSupport = module.exports.AuthenticateWithRedirectCallback = module.exports.RedirectToUserProfile = module.exports.RedirectToSignUp = module.exports.RedirectToSignIn = module.exports.SignedIn = module.exports.SignedOut = module.exports.ClerkLoading = module.exports.ClerkLoaded = module.exports.CreateOrganization = module.exports.OrganizationProfile = module.exports.OrganizationSwitcher = module.exports.UserButton = module.exports.UserProfile = module.exports.SignIn = module.exports.SignUp = void 0;

var $fOt1z = parcelRequire("fOt1z");

var $u7OCS = parcelRequire("u7OCS");
Object.defineProperty(module.exports, "SignUp", {
    enumerable: true,
    get: function() {
        return $u7OCS.SignUp;
    }
});
Object.defineProperty(module.exports, "SignIn", {
    enumerable: true,
    get: function() {
        return $u7OCS.SignIn;
    }
});
Object.defineProperty(module.exports, "UserProfile", {
    enumerable: true,
    get: function() {
        return $u7OCS.UserProfile;
    }
});
Object.defineProperty(module.exports, "UserButton", {
    enumerable: true,
    get: function() {
        return $u7OCS.UserButton;
    }
});
Object.defineProperty(module.exports, "OrganizationSwitcher", {
    enumerable: true,
    get: function() {
        return $u7OCS.OrganizationSwitcher;
    }
});
Object.defineProperty(module.exports, "OrganizationProfile", {
    enumerable: true,
    get: function() {
        return $u7OCS.OrganizationProfile;
    }
});
Object.defineProperty(module.exports, "CreateOrganization", {
    enumerable: true,
    get: function() {
        return $u7OCS.CreateOrganization;
    }
});

var $ekggE = parcelRequire("ekggE");
Object.defineProperty(module.exports, "ClerkLoaded", {
    enumerable: true,
    get: function() {
        return $ekggE.ClerkLoaded;
    }
});
Object.defineProperty(module.exports, "ClerkLoading", {
    enumerable: true,
    get: function() {
        return $ekggE.ClerkLoading;
    }
});
Object.defineProperty(module.exports, "SignedOut", {
    enumerable: true,
    get: function() {
        return $ekggE.SignedOut;
    }
});
Object.defineProperty(module.exports, "SignedIn", {
    enumerable: true,
    get: function() {
        return $ekggE.SignedIn;
    }
});
Object.defineProperty(module.exports, "RedirectToSignIn", {
    enumerable: true,
    get: function() {
        return $ekggE.RedirectToSignIn;
    }
});
Object.defineProperty(module.exports, "RedirectToSignUp", {
    enumerable: true,
    get: function() {
        return $ekggE.RedirectToSignUp;
    }
});
Object.defineProperty(module.exports, "RedirectToUserProfile", {
    enumerable: true,
    get: function() {
        return $ekggE.RedirectToUserProfile;
    }
});
Object.defineProperty(module.exports, "AuthenticateWithRedirectCallback", {
    enumerable: true,
    get: function() {
        return $ekggE.AuthenticateWithRedirectCallback;
    }
});
Object.defineProperty(module.exports, "MultisessionAppSupport", {
    enumerable: true,
    get: function() {
        return $ekggE.MultisessionAppSupport;
    }
});
Object.defineProperty(module.exports, "RedirectToCreateOrganization", {
    enumerable: true,
    get: function() {
        return $ekggE.RedirectToCreateOrganization;
    }
});
Object.defineProperty(module.exports, "RedirectToOrganizationProfile", {
    enumerable: true,
    get: function() {
        return $ekggE.RedirectToOrganizationProfile;
    }
});

$fOt1z.__exportStar((parcelRequire("j8dDK")), module.exports);

$fOt1z.__exportStar((parcelRequire("iRL1m")), module.exports);

$fOt1z.__exportStar((parcelRequire("3gu9c")), module.exports);

$fOt1z.__exportStar((parcelRequire("k30tb")), module.exports);

$fOt1z.__exportStar((parcelRequire("7DS5w")), module.exports);

$fOt1z.__exportStar((parcelRequire("22KNZ")), module.exports);

$fOt1z.__exportStar((parcelRequire("1TdDM")), module.exports);

});
parcelRequire.register("u7OCS", function(module, exports) {
"use strict";
Object.defineProperty(module.exports, "__esModule", {
    value: true
});
module.exports.OrganizationSwitcher = module.exports.CreateOrganization = module.exports.OrganizationProfile = module.exports.UserButton = module.exports.UserProfile = module.exports.SignUp = module.exports.SignIn = void 0;

var $fOt1z = parcelRequire("fOt1z");

const $05a8dd7636f3aca2$var$react_1 = $fOt1z.__importDefault((parcelRequire("laauJ")));

var $j8dDK = parcelRequire("j8dDK");
// README: <Portal/> should be a class pure component in order for mount and unmount
// lifecycle props to be invoked correctly. Replacing the class component with a
// functional component wrapped with a React.memo is not identical to the original
// class implementation due to React intricacies such as the useEffect’s cleanup
// seems to run AFTER unmount, while componentWillUnmount runs BEFORE.
// More information can be found at https://clerkinc.slack.com/archives/C015S0BGH8R/p1624891993016300
// The function Portal implementation is commented out for future reference.
// const Portal = React.memo(({ props, mount, unmount }: MountProps) => {
//   const portalRef = React.createRef<HTMLDivElement>();
//   useEffect(() => {
//     if (portalRef.current) {
//       mount(portalRef.current, props);
//     }
//     return () => {
//       if (portalRef.current) {
//         unmount(portalRef.current);
//       }
//     };
//   }, []);
//   return <div ref={portalRef} />;
// });
// Portal.displayName = 'ClerkPortal';
class $05a8dd7636f3aca2$var$Portal extends $05a8dd7636f3aca2$var$react_1.default.PureComponent {
    constructor(){
        super(...arguments);
        this.portalRef = $05a8dd7636f3aca2$var$react_1.default.createRef();
    }
    componentDidUpdate(prevProps) {
        if (prevProps.props.appearance !== this.props.props.appearance) this.props.updateProps({
            node: this.portalRef.current,
            props: this.props.props
        });
    }
    componentDidMount() {
        if (this.portalRef.current) this.props.mount(this.portalRef.current, this.props.props);
    }
    componentWillUnmount() {
        if (this.portalRef.current) this.props.unmount(this.portalRef.current);
    }
    render() {
        return $05a8dd7636f3aca2$var$react_1.default.createElement("div", {
            ref: this.portalRef
        });
    }
}
module.exports.SignIn = (0, $j8dDK.withClerk)((_a)=>{
    var { clerk: clerk  } = _a, props = $fOt1z.__rest(_a, [
        "clerk"
    ]);
    return $05a8dd7636f3aca2$var$react_1.default.createElement($05a8dd7636f3aca2$var$Portal, {
        mount: clerk.mountSignIn,
        unmount: clerk.unmountSignIn,
        updateProps: clerk.__unstable__updateProps,
        props: props
    });
}, "SignIn");
module.exports.SignUp = (0, $j8dDK.withClerk)((_a)=>{
    var { clerk: clerk  } = _a, props = $fOt1z.__rest(_a, [
        "clerk"
    ]);
    return $05a8dd7636f3aca2$var$react_1.default.createElement($05a8dd7636f3aca2$var$Portal, {
        mount: clerk.mountSignUp,
        unmount: clerk.unmountSignUp,
        updateProps: clerk.__unstable__updateProps,
        props: props
    });
}, "SignUp");
module.exports.UserProfile = (0, $j8dDK.withClerk)((_a)=>{
    var { clerk: clerk  } = _a, props = $fOt1z.__rest(_a, [
        "clerk"
    ]);
    return $05a8dd7636f3aca2$var$react_1.default.createElement($05a8dd7636f3aca2$var$Portal, {
        mount: clerk.mountUserProfile,
        unmount: clerk.unmountUserProfile,
        updateProps: clerk.__unstable__updateProps,
        props: props
    });
}, "UserProfile");
module.exports.UserButton = (0, $j8dDK.withClerk)((_a)=>{
    var { clerk: clerk  } = _a, props = $fOt1z.__rest(_a, [
        "clerk"
    ]);
    return $05a8dd7636f3aca2$var$react_1.default.createElement($05a8dd7636f3aca2$var$Portal, {
        mount: clerk.mountUserButton,
        unmount: clerk.unmountUserButton,
        updateProps: clerk.__unstable__updateProps,
        props: props
    });
}, "UserButton");
module.exports.OrganizationProfile = (0, $j8dDK.withClerk)((_a)=>{
    var { clerk: clerk  } = _a, props = $fOt1z.__rest(_a, [
        "clerk"
    ]);
    return $05a8dd7636f3aca2$var$react_1.default.createElement($05a8dd7636f3aca2$var$Portal, {
        mount: clerk.mountOrganizationProfile,
        unmount: clerk.unmountOrganizationProfile,
        updateProps: clerk.__unstable__updateProps,
        props: props
    });
}, "OrganizationProfile");
module.exports.CreateOrganization = (0, $j8dDK.withClerk)((_a)=>{
    var { clerk: clerk  } = _a, props = $fOt1z.__rest(_a, [
        "clerk"
    ]);
    return $05a8dd7636f3aca2$var$react_1.default.createElement($05a8dd7636f3aca2$var$Portal, {
        mount: clerk.mountCreateOrganization,
        unmount: clerk.unmountCreateOrganization,
        updateProps: clerk.__unstable__updateProps,
        props: props
    });
}, "CreateOrganization");
module.exports.OrganizationSwitcher = (0, $j8dDK.withClerk)((_a)=>{
    var { clerk: clerk  } = _a, props = $fOt1z.__rest(_a, [
        "clerk"
    ]);
    return $05a8dd7636f3aca2$var$react_1.default.createElement($05a8dd7636f3aca2$var$Portal, {
        mount: clerk.mountOrganizationSwitcher,
        unmount: clerk.unmountOrganizationSwitcher,
        updateProps: clerk.__unstable__updateProps,
        props: props
    });
}, "OrganizationSwitcher");

});
parcelRequire.register("j8dDK", function(module, exports) {
"use strict";
Object.defineProperty(module.exports, "__esModule", {
    value: true
});
module.exports.WithClerk = module.exports.withClerk = void 0;

var $fOt1z = parcelRequire("fOt1z");

const $ded9584c0df8a127$var$react_1 = $fOt1z.__importDefault((parcelRequire("laauJ")));

var $1g6nu = parcelRequire("1g6nu");

var $1dBnc = parcelRequire("1dBnc");

var $rLPvf = parcelRequire("rLPvf");
const $ded9584c0df8a127$var$withClerk = (Component, displayName)=>{
    displayName = displayName || Component.displayName || Component.name || "Component";
    Component.displayName = displayName;
    const HOC = (props)=>{
        const clerk = (0, $1g6nu.useIsomorphicClerkContext)();
        if (!clerk.loaded) return null;
        return $ded9584c0df8a127$var$react_1.default.createElement($1dBnc.LoadedGuarantee, null, $ded9584c0df8a127$var$react_1.default.createElement(Component, Object.assign({}, props, {
            clerk: clerk
        })));
    };
    HOC.displayName = `withClerk(${displayName})`;
    return HOC;
};
module.exports.withClerk = $ded9584c0df8a127$var$withClerk;
const $ded9584c0df8a127$var$WithClerk = ({ children: children  })=>{
    const clerk = (0, $1g6nu.useIsomorphicClerkContext)();
    if (typeof children !== "function") throw new Error($rLPvf.hocChildrenNotAFunctionError);
    if (!clerk.loaded) return null;
    return $ded9584c0df8a127$var$react_1.default.createElement($1dBnc.LoadedGuarantee, null, children(clerk));
};
module.exports.WithClerk = $ded9584c0df8a127$var$WithClerk;

});


parcelRequire.register("ekggE", function(module, exports) {
"use strict";
Object.defineProperty(module.exports, "__esModule", {
    value: true
});
module.exports.MultisessionAppSupport = module.exports.AuthenticateWithRedirectCallback = module.exports.RedirectToCreateOrganization = module.exports.RedirectToOrganizationProfile = module.exports.RedirectToUserProfile = module.exports.RedirectToSignUp = module.exports.RedirectToSignIn = module.exports.ClerkLoading = module.exports.ClerkLoaded = module.exports.SignedOut = module.exports.SignedIn = void 0;

var $fOt1z = parcelRequire("fOt1z");

const $a6df8d59e377955f$var$react_1 = $fOt1z.__importDefault((parcelRequire("laauJ")));

var $3DzEQ = parcelRequire("3DzEQ");

var $1g6nu = parcelRequire("1g6nu");

var $4ajRi = parcelRequire("4ajRi");

var $1dBnc = parcelRequire("1dBnc");

var $j8dDK = parcelRequire("j8dDK");
const $a6df8d59e377955f$var$SignedIn = ({ children: children  })=>{
    const { userId: userId  } = (0, $3DzEQ.useAuthContext)();
    if (userId) return $a6df8d59e377955f$var$react_1.default.createElement($a6df8d59e377955f$var$react_1.default.Fragment, null, children);
    return null;
};
module.exports.SignedIn = $a6df8d59e377955f$var$SignedIn;
const $a6df8d59e377955f$var$SignedOut = ({ children: children  })=>{
    const { userId: userId  } = (0, $3DzEQ.useAuthContext)();
    if (userId === null) return $a6df8d59e377955f$var$react_1.default.createElement($a6df8d59e377955f$var$react_1.default.Fragment, null, children);
    return null;
};
module.exports.SignedOut = $a6df8d59e377955f$var$SignedOut;
const $a6df8d59e377955f$var$ClerkLoaded = ({ children: children  })=>{
    const isomorphicClerk = (0, $1g6nu.useIsomorphicClerkContext)();
    if (!isomorphicClerk.loaded) return null;
    return $a6df8d59e377955f$var$react_1.default.createElement($1dBnc.LoadedGuarantee, null, children);
};
module.exports.ClerkLoaded = $a6df8d59e377955f$var$ClerkLoaded;
const $a6df8d59e377955f$var$ClerkLoading = ({ children: children  })=>{
    const isomorphicClerk = (0, $1g6nu.useIsomorphicClerkContext)();
    if (isomorphicClerk.loaded) return null;
    return $a6df8d59e377955f$var$react_1.default.createElement($a6df8d59e377955f$var$react_1.default.Fragment, null, children);
};
module.exports.ClerkLoading = $a6df8d59e377955f$var$ClerkLoading;
module.exports.RedirectToSignIn = (0, $j8dDK.withClerk)((_a)=>{
    var { clerk: clerk  } = _a, props = $fOt1z.__rest(_a, [
        "clerk"
    ]);
    const { client: client , session: session  } = clerk;
    // TODO: Remove temp use of __unstable__environment
    const { __unstable__environment: __unstable__environment  } = clerk;
    const hasActiveSessions = client.activeSessions && client.activeSessions.length > 0;
    $a6df8d59e377955f$var$react_1.default.useEffect(()=>{
        if (session === null && hasActiveSessions && __unstable__environment) {
            const { afterSignOutOneUrl: afterSignOutOneUrl  } = __unstable__environment.displayConfig;
            clerk.navigate(afterSignOutOneUrl);
        } else clerk.redirectToSignIn(props);
    }, []);
    return null;
}, "RedirectToSignIn");
module.exports.RedirectToSignUp = (0, $j8dDK.withClerk)((_a)=>{
    var { clerk: clerk  } = _a, props = $fOt1z.__rest(_a, [
        "clerk"
    ]);
    $a6df8d59e377955f$var$react_1.default.useEffect(()=>{
        clerk.redirectToSignUp(props);
    }, []);
    return null;
}, "RedirectToSignUp");
module.exports.RedirectToUserProfile = (0, $j8dDK.withClerk)(({ clerk: clerk  })=>{
    $a6df8d59e377955f$var$react_1.default.useEffect(()=>{
        clerk.redirectToUserProfile();
    }, []);
    return null;
}, "RedirectToUserProfile");
module.exports.RedirectToOrganizationProfile = (0, $j8dDK.withClerk)(({ clerk: clerk  })=>{
    $a6df8d59e377955f$var$react_1.default.useEffect(()=>{
        clerk.redirectToOrganizationProfile();
    }, []);
    return null;
}, "RedirectToOrganizationProfile");
module.exports.RedirectToCreateOrganization = (0, $j8dDK.withClerk)(({ clerk: clerk  })=>{
    $a6df8d59e377955f$var$react_1.default.useEffect(()=>{
        clerk.redirectToCreateOrganization();
    }, []);
    return null;
}, "RedirectToCreateOrganization");
module.exports.AuthenticateWithRedirectCallback = (0, $j8dDK.withClerk)((_a)=>{
    var { clerk: clerk  } = _a, handleRedirectCallbackParams = $fOt1z.__rest(_a, [
        "clerk"
    ]);
    $a6df8d59e377955f$var$react_1.default.useEffect(()=>{
        clerk.handleRedirectCallback(handleRedirectCallbackParams);
    }, []);
    return null;
}, "AuthenticateWithRedirectCallback");
const $a6df8d59e377955f$var$MultisessionAppSupport = ({ children: children  })=>{
    const session = (0, $4ajRi.useSessionContext)();
    return $a6df8d59e377955f$var$react_1.default.createElement($a6df8d59e377955f$var$react_1.default.Fragment, {
        key: session ? session.id : "no-users"
    }, children);
};
module.exports.MultisessionAppSupport = $a6df8d59e377955f$var$MultisessionAppSupport;

});

parcelRequire.register("iRL1m", function(module, exports) {
"use strict";
Object.defineProperty(module.exports, "__esModule", {
    value: true
});
module.exports.WithUser = module.exports.withUser = void 0;

var $fOt1z = parcelRequire("fOt1z");

const $dbc1a6a322421b71$var$react_1 = $fOt1z.__importDefault((parcelRequire("laauJ")));

var $4uQd8 = parcelRequire("4uQd8");

var $rLPvf = parcelRequire("rLPvf");
const $dbc1a6a322421b71$var$withUser = (Component, displayName)=>{
    displayName = displayName || Component.displayName || Component.name || "Component";
    Component.displayName = displayName;
    const HOC = (props)=>{
        const user = (0, $4uQd8.useUserContext)();
        if (!user) return null;
        return $dbc1a6a322421b71$var$react_1.default.createElement(Component, Object.assign({}, props, {
            user: user
        }));
    };
    HOC.displayName = `withUser(${displayName})`;
    return HOC;
};
module.exports.withUser = $dbc1a6a322421b71$var$withUser;
const $dbc1a6a322421b71$var$WithUser = ({ children: children  })=>{
    const user = (0, $4uQd8.useUserContext)();
    if (typeof children !== "function") throw new Error($rLPvf.hocChildrenNotAFunctionError);
    if (!user) return null;
    return $dbc1a6a322421b71$var$react_1.default.createElement($dbc1a6a322421b71$var$react_1.default.Fragment, null, children(user));
};
module.exports.WithUser = $dbc1a6a322421b71$var$WithUser;

});

parcelRequire.register("3gu9c", function(module, exports) {
"use strict";
Object.defineProperty(module.exports, "__esModule", {
    value: true
});
module.exports.WithSession = module.exports.withSession = void 0;

var $fOt1z = parcelRequire("fOt1z");

const $260a40609186b321$var$react_1 = $fOt1z.__importDefault((parcelRequire("laauJ")));

var $4ajRi = parcelRequire("4ajRi");

var $rLPvf = parcelRequire("rLPvf");
const $260a40609186b321$var$withSession = (Component, displayName)=>{
    displayName = displayName || Component.displayName || Component.name || "Component";
    Component.displayName = displayName;
    const HOC = (props)=>{
        const session = (0, $4ajRi.useSessionContext)();
        if (!session) return null;
        return $260a40609186b321$var$react_1.default.createElement(Component, Object.assign({}, props, {
            session: session
        }));
    };
    HOC.displayName = `withSession(${displayName})`;
    return HOC;
};
module.exports.withSession = $260a40609186b321$var$withSession;
const $260a40609186b321$var$WithSession = ({ children: children  })=>{
    const session = (0, $4ajRi.useSessionContext)();
    if (typeof children !== "function") throw new Error($rLPvf.hocChildrenNotAFunctionError);
    if (!session) return null;
    return $260a40609186b321$var$react_1.default.createElement($260a40609186b321$var$react_1.default.Fragment, null, children(session));
};
module.exports.WithSession = $260a40609186b321$var$WithSession;

});

parcelRequire.register("k30tb", function(module, exports) {
"use strict";
Object.defineProperty(module.exports, "__esModule", {
    value: true
});
module.exports.SignInButton = void 0;

var $fOt1z = parcelRequire("fOt1z");

const $e98473be1216c2c5$var$react_1 = $fOt1z.__importDefault((parcelRequire("laauJ")));

var $9LdOB = parcelRequire("9LdOB");

var $j8dDK = parcelRequire("j8dDK");
module.exports.SignInButton = (0, $j8dDK.withClerk)((_a)=>{
    var { clerk: clerk , children: children  } = _a, props = $fOt1z.__rest(_a, [
        "clerk",
        "children"
    ]);
    const { afterSignInUrl: afterSignInUrl , afterSignUpUrl: afterSignUpUrl , redirectUrl: redirectUrl , mode: mode  } = props, rest = $fOt1z.__rest(props, [
        "afterSignInUrl",
        "afterSignUpUrl",
        "redirectUrl",
        "mode"
    ]);
    children = (0, $9LdOB.normalizeWithDefaultValue)(children, "Sign in");
    const child = (0, $9LdOB.assertSingleChild)(children)("SignInButton");
    const clickHandler = ()=>{
        const opts = {
            afterSignInUrl: afterSignInUrl,
            afterSignUpUrl: afterSignUpUrl,
            redirectUrl: redirectUrl
        };
        if (mode === "modal") return clerk.openSignIn(opts);
        return clerk.redirectToSignIn(opts);
    };
    const wrappedChildClickHandler = async (e)=>{
        await (0, $9LdOB.safeExecute)(child.props.onClick)(e);
        return clickHandler();
    };
    const childProps = Object.assign(Object.assign({}, rest), {
        onClick: wrappedChildClickHandler
    });
    return $e98473be1216c2c5$var$react_1.default.cloneElement(child, childProps);
}, "SignInButton");

});

parcelRequire.register("7DS5w", function(module, exports) {
"use strict";
Object.defineProperty(module.exports, "__esModule", {
    value: true
});
module.exports.SignUpButton = void 0;

var $fOt1z = parcelRequire("fOt1z");

const $590621ae366f4ddf$var$react_1 = $fOt1z.__importDefault((parcelRequire("laauJ")));

var $9LdOB = parcelRequire("9LdOB");

var $j8dDK = parcelRequire("j8dDK");
module.exports.SignUpButton = (0, $j8dDK.withClerk)((_a)=>{
    var { clerk: clerk , children: children  } = _a, props = $fOt1z.__rest(_a, [
        "clerk",
        "children"
    ]);
    const { afterSignInUrl: afterSignInUrl , afterSignUpUrl: afterSignUpUrl , redirectUrl: redirectUrl , mode: mode  } = props, rest = $fOt1z.__rest(props, [
        "afterSignInUrl",
        "afterSignUpUrl",
        "redirectUrl",
        "mode"
    ]);
    children = (0, $9LdOB.normalizeWithDefaultValue)(children, "Sign up");
    const child = (0, $9LdOB.assertSingleChild)(children)("SignUpButton");
    const clickHandler = ()=>{
        const opts = {
            afterSignInUrl: afterSignInUrl,
            afterSignUpUrl: afterSignUpUrl,
            redirectUrl: redirectUrl
        };
        if (mode === "modal") return clerk.openSignUp(opts);
        return clerk.redirectToSignUp(opts);
    };
    const wrappedChildClickHandler = async (e)=>{
        await (0, $9LdOB.safeExecute)(child.props.onClick)(e);
        return clickHandler();
    };
    const childProps = Object.assign(Object.assign({}, rest), {
        onClick: wrappedChildClickHandler
    });
    return $590621ae366f4ddf$var$react_1.default.cloneElement(child, childProps);
}, "SignUpButton");

});

parcelRequire.register("22KNZ", function(module, exports) {
"use strict";
Object.defineProperty(module.exports, "__esModule", {
    value: true
});
module.exports.SignOutButton = void 0;

var $fOt1z = parcelRequire("fOt1z");

const $17d01336e392ef12$var$react_1 = $fOt1z.__importDefault((parcelRequire("laauJ")));

var $9LdOB = parcelRequire("9LdOB");

var $j8dDK = parcelRequire("j8dDK");
module.exports.SignOutButton = (0, $j8dDK.withClerk)((_a)=>{
    var { clerk: clerk , children: children  } = _a, props = $fOt1z.__rest(_a, [
        "clerk",
        "children"
    ]);
    const { signOutCallback: signOutCallback , signOutOptions: signOutOptions  } = props, rest = $fOt1z.__rest(props, [
        "signOutCallback",
        "signOutOptions"
    ]);
    children = (0, $9LdOB.normalizeWithDefaultValue)(children, "Sign out");
    const child = (0, $9LdOB.assertSingleChild)(children)("SignOutButton");
    const clickHandler = ()=>{
        return clerk.signOut(signOutCallback, signOutOptions);
    };
    const wrappedChildClickHandler = async (e)=>{
        await (0, $9LdOB.safeExecute)(child.props.onClick)(e);
        return clickHandler();
    };
    const childProps = Object.assign(Object.assign({}, rest), {
        onClick: wrappedChildClickHandler
    });
    return $17d01336e392ef12$var$react_1.default.cloneElement(child, childProps);
}, "SignOutButton");

});

parcelRequire.register("1TdDM", function(module, exports) {
"use strict";
Object.defineProperty(module.exports, "__esModule", {
    value: true
});
module.exports.SignInWithMetamaskButton = void 0;

var $fOt1z = parcelRequire("fOt1z");

const $160582384fa6c22b$var$react_1 = $fOt1z.__importDefault((parcelRequire("laauJ")));

var $9LdOB = parcelRequire("9LdOB");

var $j8dDK = parcelRequire("j8dDK");
module.exports.SignInWithMetamaskButton = (0, $j8dDK.withClerk)((_a)=>{
    var { clerk: clerk , children: children  } = _a, props = $fOt1z.__rest(_a, [
        "clerk",
        "children"
    ]);
    const { redirectUrl: redirectUrl  } = props, rest = $fOt1z.__rest(props, [
        "redirectUrl"
    ]);
    children = (0, $9LdOB.normalizeWithDefaultValue)(children, "Sign in with Metamask");
    const child = (0, $9LdOB.assertSingleChild)(children)("SignInWithMetamaskButton");
    const clickHandler = async ()=>{
        async function authenticate() {
            await clerk.authenticateWithMetamask({
                redirectUrl: redirectUrl
            });
        }
        authenticate();
    };
    const wrappedChildClickHandler = async (e)=>{
        await (0, $9LdOB.safeExecute)(child.props.onClick)(e);
        return clickHandler();
    };
    const childProps = Object.assign(Object.assign({}, rest), {
        onClick: wrappedChildClickHandler
    });
    return $160582384fa6c22b$var$react_1.default.cloneElement(child, childProps);
}, "SignInWithMetamask");

});


parcelRequire.register("fBe5P", function(module, exports) {
"use strict";
Object.defineProperty(module.exports, "__esModule", {
    value: true
});

var $fOt1z = parcelRequire("fOt1z");

$fOt1z.__exportStar((parcelRequire("jfdYT")), module.exports);

$fOt1z.__exportStar((parcelRequire("8lji1")), module.exports);

$fOt1z.__exportStar((parcelRequire("bHHiQ")), module.exports);

$fOt1z.__exportStar((parcelRequire("6xzNK")), module.exports);

$fOt1z.__exportStar((parcelRequire("2NvNx")), module.exports);

$fOt1z.__exportStar((parcelRequire("87FLM")), module.exports);

$fOt1z.__exportStar((parcelRequire("aqCBE")), module.exports);

$fOt1z.__exportStar((parcelRequire("5sL9C")), module.exports);

$fOt1z.__exportStar((parcelRequire("5EfAd")), module.exports);

$fOt1z.__exportStar((parcelRequire("5eDqV")), module.exports);

$fOt1z.__exportStar((parcelRequire("bHx4m")), module.exports);

});
parcelRequire.register("jfdYT", function(module, exports) {
"use strict";
Object.defineProperty(module.exports, "__esModule", {
    value: true
});
module.exports.useUser = void 0;

var $4uQd8 = parcelRequire("4uQd8");
/**
 * Returns the current auth state and if a user is signed in, the user object.
 *
 * Until Clerk loads and initializes, `isLoaded` will be set to `false`.
 * Once Clerk loads, `isLoaded` will be set to `true`, and you can
 * safely access `isSignedIn` state and `user`.
 *
 * For projects using NextJs or Remix, you can make this state available during SSR
 * simply by using the `withServerSideAuth` helper and setting the `loadUser` flag to `true`.
 *
 *
 * @example
 * A simple example:
 *
 * import { useUser } from '@clerk/clerk-react'
 *
 * function Hello() {
 *   const { isSignedIn, user } = useUser();
 *   if(!isSignedIn) {
 *     return null;
 *   }
 *   return <div>Hello, {user.firstName}</div>
 * }
 *
 * @example
 * Basic example in a NextJs app. This page will be fully rendered during SSR:
 *
 * import { useUser } from '@clerk/nextjs'
 * import { withServerSideAuth } from '@clerk/nextjs/api'
 *
 * export getServerSideProps = withServerSideAuth({ loadUser: true});
 *
 * export HelloPage = () => {
 *   const { isSignedIn, user } = useUser();
 *   if(!isSignedIn) {
 *     return null;
 *   }
 *   return <div>Hello, {user.firstName}</div>
 * }
 *
 */ function $e02a43673131750c$var$useUser() {
    const user = (0, $4uQd8.useUserContext)();
    if (user === undefined) return {
        isLoaded: false,
        isSignedIn: undefined,
        user: undefined
    };
    if (user === null) return {
        isLoaded: true,
        isSignedIn: false,
        user: null
    };
    return {
        isLoaded: true,
        isSignedIn: true,
        user: user
    };
}
module.exports.useUser = $e02a43673131750c$var$useUser;

});

parcelRequire.register("8lji1", function(module, exports) {
"use strict";
Object.defineProperty(module.exports, "__esModule", {
    value: true
});
module.exports.useAuth = void 0;

var $laauJ = parcelRequire("laauJ");

var $3DzEQ = parcelRequire("3DzEQ");

var $1g6nu = parcelRequire("1g6nu");

var $rLPvf = parcelRequire("rLPvf");

var $a9PyK = parcelRequire("a9PyK");
/**
 * Returns the current auth state, the user and session ids and the `getToken`
 * that can be used to retrieve the given template or the default Clerk token.
 *
 * Until Clerk loads, `isLoaded` will be set to `false`.
 * Once Clerk loads, `isLoaded` will be set to `true`, and you can
 * safely access the `userId` and `sessionId` variables.
 *
 * For projects using NextJs or Remix, you can have immediate access to this data  during SSR
 * simply by using the `withServerSideAuth` helper.
 *
 * @example
 * A simple example:
 *
 * import { useAuth } from '@clerk/clerk-react'
 *
 * function Hello() {
 *   const { isSignedIn, sessionId, userId } = useAuth();
 *   if(isSignedIn) {
 *     return null;
 *   }
 *   console.log(sessionId, userId)
 *   return <div>...</div>
 * }
 *
 * @example
 * Basic example in a NextJs app. This page will be fully rendered during SSR:
 *
 * import { useAuth } from '@clerk/nextjs'
 * import { withServerSideAuth } from '@clerk/nextjs/api'
 *
 * export getServerSideProps = withServerSideAuth();
 *
 * export HelloPage = () => {
 *   const { isSignedIn, sessionId, userId } = useAuth();
 *   console.log(isSignedIn, sessionId, userId)
 *   return <div>...</div>
 * }
 */ const $612f3f7080a667e5$var$useAuth = ()=>{
    const { sessionId: sessionId , userId: userId , actor: actor , orgId: orgId , orgRole: orgRole , orgSlug: orgSlug  } = (0, $3DzEQ.useAuthContext)();
    const isomorphicClerk = (0, $1g6nu.useIsomorphicClerkContext)();
    const getToken = (0, $laauJ.useCallback)((0, $a9PyK.createGetToken)(isomorphicClerk), [
        isomorphicClerk
    ]);
    const signOut = (0, $laauJ.useCallback)((0, $a9PyK.createSignOut)(isomorphicClerk), [
        isomorphicClerk
    ]);
    if (sessionId === undefined && userId === undefined) return {
        isLoaded: false,
        isSignedIn: undefined,
        sessionId: sessionId,
        userId: userId,
        actor: undefined,
        orgId: undefined,
        orgRole: undefined,
        orgSlug: undefined,
        signOut: signOut,
        getToken: getToken
    };
    if (sessionId === null && userId === null) return {
        isLoaded: true,
        isSignedIn: false,
        sessionId: sessionId,
        userId: userId,
        actor: null,
        orgId: null,
        orgRole: null,
        orgSlug: null,
        signOut: signOut,
        getToken: getToken
    };
    if (!!sessionId && !!userId && !!orgId && !!orgRole) return {
        isLoaded: true,
        isSignedIn: true,
        sessionId: sessionId,
        userId: userId,
        actor: actor || null,
        orgId: orgId,
        orgRole: orgRole,
        orgSlug: orgSlug || null,
        signOut: signOut,
        getToken: getToken
    };
    if (!!sessionId && !!userId && !orgId) return {
        isLoaded: true,
        isSignedIn: true,
        sessionId: sessionId,
        userId: userId,
        actor: actor || null,
        orgId: null,
        orgRole: null,
        orgSlug: null,
        signOut: signOut,
        getToken: getToken
    };
    throw new Error($rLPvf.invalidStateError);
};
module.exports.useAuth = $612f3f7080a667e5$var$useAuth;

});
parcelRequire.register("a9PyK", function(module, exports) {
"use strict";
Object.defineProperty(module.exports, "__esModule", {
    value: true
});
module.exports.createSignOut = module.exports.createGetToken = void 0;
/**
 * @internal
 */ const $7652bd4a30df8f77$var$clerkLoaded = (isomorphicClerk)=>{
    return new Promise((resolve)=>{
        if (isomorphicClerk.loaded) resolve();
        isomorphicClerk.addOnLoaded(resolve);
    });
};
/**
 * @internal
 */ const $7652bd4a30df8f77$var$createGetToken = (isomorphicClerk)=>{
    return async (options)=>{
        await $7652bd4a30df8f77$var$clerkLoaded(isomorphicClerk);
        if (!isomorphicClerk.session) return null;
        return isomorphicClerk.session.getToken(options);
    };
};
module.exports.createGetToken = $7652bd4a30df8f77$var$createGetToken;
/**
 * @internal
 */ const $7652bd4a30df8f77$var$createSignOut = (isomorphicClerk)=>{
    return async (...args)=>{
        await $7652bd4a30df8f77$var$clerkLoaded(isomorphicClerk);
        return isomorphicClerk.signOut(...args);
    };
};
module.exports.createSignOut = $7652bd4a30df8f77$var$createSignOut;

});


parcelRequire.register("bHHiQ", function(module, exports) {
"use strict";
Object.defineProperty(module.exports, "__esModule", {
    value: true
});
module.exports.useSession = void 0;

var $4ajRi = parcelRequire("4ajRi");
/**
 * Returns the current auth state and if a session exists, the session object.
 *
 * Until Clerk loads and initializes, `isLoaded` will be set to `false`.
 * Once Clerk loads, `isLoaded` will be set to `true`, and you can
 * safely access `isSignedIn` state and `session`.
 *
 * For projects using NextJs or Remix, you can make this state available during SSR
 * simply by using the `withServerSideAuth` helper and setting the `loadSession` flag to `true`.
 *
 * @example
 * A simple example:
 *
 * import { useSession } from '@clerk/clerk-react'
 *
 * function Hello() {
 *   const { isSignedIn, session } = useSession();
 *   if(!isSignedIn) {
 *     return null;
 *   }
 *   return <div>{session.updatedAt}</div>
 * }
 *
 * @example
 * Basic example in a NextJs app. This page will be fully rendered during SSR:
 *
 * import { useSession } from '@clerk/nextjs'
 * import { withServerSideAuth } from '@clerk/nextjs/api'
 *
 * export getServerSideProps = withServerSideAuth({ loadSession: true});
 *
 * export HelloPage = () => {
 *   const { isSignedIn, session } = useSession();
 *   if(!isSignedIn) {
 *     return null;
 *   }
 *  return <div>{session.updatedAt}</div>
 * }
 */ const $88554cea000bece6$var$useSession = ()=>{
    const session = (0, $4ajRi.useSessionContext)();
    if (session === undefined) return {
        isLoaded: false,
        isSignedIn: undefined,
        session: undefined
    };
    if (session === null) return {
        isLoaded: true,
        isSignedIn: false,
        session: null
    };
    return {
        isLoaded: true,
        isSignedIn: true,
        session: session
    };
};
module.exports.useSession = $88554cea000bece6$var$useSession;

});

parcelRequire.register("6xzNK", function(module, exports) {
"use strict";
Object.defineProperty(module.exports, "__esModule", {
    value: true
});
module.exports.useClerk = void 0;

var $1g6nu = parcelRequire("1g6nu");
const $4c3198886612ff78$var$useClerk = ()=>{
    const isomorphicClerk = (0, $1g6nu.useIsomorphicClerkContext)();
    // The actual value is an instance of IsomorphicClerk, not Clerk
    // we expose is as a Clerk instance
    return isomorphicClerk;
};
module.exports.useClerk = $4c3198886612ff78$var$useClerk;

});

parcelRequire.register("2NvNx", function(module, exports) {
"use strict";
Object.defineProperty(module.exports, "__esModule", {
    value: true
});
module.exports.useSignIn = void 0;

var $2sApG = parcelRequire("2sApG");

var $1g6nu = parcelRequire("1g6nu");
const $2098d2c57d3b7521$var$useSignIn = ()=>{
    const isomorphicClerk = (0, $1g6nu.useIsomorphicClerkContext)();
    const client = (0, $2sApG.useClientContext)();
    if (!client) return {
        isLoaded: false,
        signIn: undefined,
        setSession: undefined,
        setActive: undefined
    };
    return {
        isLoaded: true,
        signIn: client.signIn,
        setSession: isomorphicClerk.setSession,
        setActive: isomorphicClerk.setActive
    };
};
module.exports.useSignIn = $2098d2c57d3b7521$var$useSignIn;

});

parcelRequire.register("87FLM", function(module, exports) {
"use strict";
Object.defineProperty(module.exports, "__esModule", {
    value: true
});
module.exports.useSignUp = void 0;

var $2sApG = parcelRequire("2sApG");

var $1g6nu = parcelRequire("1g6nu");
const $5e9f60bd8e5deac4$var$useSignUp = ()=>{
    const isomorphicClerk = (0, $1g6nu.useIsomorphicClerkContext)();
    const client = (0, $2sApG.useClientContext)();
    if (!client) return {
        isLoaded: false,
        signUp: undefined,
        setSession: undefined,
        setActive: undefined
    };
    return {
        isLoaded: true,
        signUp: client.signUp,
        setSession: isomorphicClerk.setSession,
        setActive: isomorphicClerk.setActive
    };
};
module.exports.useSignUp = $5e9f60bd8e5deac4$var$useSignUp;

});

parcelRequire.register("aqCBE", function(module, exports) {
"use strict";
Object.defineProperty(module.exports, "__esModule", {
    value: true
});
module.exports.useSessionList = void 0;

var $2sApG = parcelRequire("2sApG");

var $1g6nu = parcelRequire("1g6nu");
const $797a47829bd86138$var$useSessionList = ()=>{
    const isomorphicClerk = (0, $1g6nu.useIsomorphicClerkContext)();
    const client = (0, $2sApG.useClientContext)();
    if (!client) return {
        isLoaded: false,
        sessions: undefined,
        setSession: undefined,
        setActive: undefined
    };
    return {
        isLoaded: true,
        sessions: client.sessions,
        setSession: isomorphicClerk.setSession,
        setActive: isomorphicClerk.setActive
    };
};
module.exports.useSessionList = $797a47829bd86138$var$useSessionList;

});

parcelRequire.register("5sL9C", function(module, exports) {
"use strict";
Object.defineProperty(module.exports, "__esModule", {
    value: true
});
module.exports.useOrganization = void 0;

var $6aCOC = parcelRequire("6aCOC");
Object.defineProperty(module.exports, "useOrganization", {
    enumerable: true,
    get: function() {
        return $6aCOC.useOrganization;
    }
});

});

parcelRequire.register("5EfAd", function(module, exports) {
"use strict";
Object.defineProperty(module.exports, "__esModule", {
    value: true
});
module.exports.useOrganizationList = void 0;

var $6aCOC = parcelRequire("6aCOC");
Object.defineProperty(module.exports, "useOrganizationList", {
    enumerable: true,
    get: function() {
        return $6aCOC.useOrganizationList;
    }
});

});

parcelRequire.register("5eDqV", function(module, exports) {
"use strict";
Object.defineProperty(module.exports, "__esModule", {
    value: true
});
module.exports.useOrganizations = void 0;

var $6aCOC = parcelRequire("6aCOC");
Object.defineProperty(module.exports, "useOrganizations", {
    enumerable: true,
    get: function() {
        return $6aCOC.useOrganizations;
    }
});

});

parcelRequire.register("bHx4m", function(module, exports) {
"use strict";
Object.defineProperty(module.exports, "__esModule", {
    value: true
});
module.exports.useMagicLink = void 0;

var $fOt1z = parcelRequire("fOt1z");

const $884d5cc4460e4e95$var$react_1 = $fOt1z.__importDefault((parcelRequire("laauJ")));
function $884d5cc4460e4e95$var$useMagicLink(resource) {
    const { startMagicLinkFlow: startMagicLinkFlow , cancelMagicLinkFlow: cancelMagicLinkFlow  } = $884d5cc4460e4e95$var$react_1.default.useMemo(()=>resource.createMagicLinkFlow(), [
        resource
    ]);
    $884d5cc4460e4e95$var$react_1.default.useEffect(()=>{
        return cancelMagicLinkFlow;
    }, []);
    return {
        startMagicLinkFlow: startMagicLinkFlow,
        cancelMagicLinkFlow: cancelMagicLinkFlow
    };
}
module.exports.useMagicLink = $884d5cc4460e4e95$var$useMagicLink;

});


var $38d16396aea26977$exports = {};

(parcelRequire("cXafQ")).register(JSON.parse('{"5VYGf":"index.fbcba9eb.js","kIpIl":"web-vitals.15bf5e0f.js"}'));

/* eslint-disable @typescript-eslint/no-unused-vars */ var $b6a3286edf44722b$exports = {};
"use strict";

$b6a3286edf44722b$exports = (parcelRequire("cmWGu"));



var $laauJ = parcelRequire("laauJ");
var $4395a3bfab7cc8d5$exports = {};

$parcel$export($4395a3bfab7cc8d5$exports, "createRoot", function () { return $4395a3bfab7cc8d5$export$882461b6382ed46c; }, function (v) { return $4395a3bfab7cc8d5$export$882461b6382ed46c = v; });
$parcel$export($4395a3bfab7cc8d5$exports, "hydrateRoot", function () { return $4395a3bfab7cc8d5$export$757ceba2d55c277e; }, function (v) { return $4395a3bfab7cc8d5$export$757ceba2d55c277e = v; });
var $4395a3bfab7cc8d5$export$882461b6382ed46c;
var $4395a3bfab7cc8d5$export$757ceba2d55c277e;
"use strict";
var $20970503b880869d$exports = {};
"use strict";
function $20970503b880869d$var$checkDCE() {
    /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */ if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === "undefined" || typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE !== "function") return;
    try {
        // Verify that the code above has been dead code eliminated (DCE'd).
        __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE($20970503b880869d$var$checkDCE);
    } catch (err) {
        // DevTools shouldn't crash React, no matter what.
        // We should still report in case we break this code.
        console.error(err);
    }
}
// DCE check should happen before ReactDOM bundle executes so that
// DevTools can report bad minification during injection.
$20970503b880869d$var$checkDCE();

$20970503b880869d$exports = (parcelRequire("hNEfo"));


var $4395a3bfab7cc8d5$var$i;
$4395a3bfab7cc8d5$export$882461b6382ed46c = $20970503b880869d$exports.createRoot;
$4395a3bfab7cc8d5$export$757ceba2d55c277e = $20970503b880869d$exports.hydrateRoot;


// The primary entry point assumes we're working with standard ReactDOM/RN, but
// older versions that do not include `useSyncExternalStore` (React 16.9 - 17.x).
// Because of that, the useSyncExternalStore compat shim is needed.

var $aQq7o = parcelRequire("aQq7o");
var $45878adde5a50cb9$exports = {};
"use strict";

$45878adde5a50cb9$exports = (parcelRequire("kNLNp"));





// Default to a dummy "batch" implementation that just runs the callback
function $5c544df2e9ec4078$var$defaultNoopBatch(callback) {
    callback();
}
let $5c544df2e9ec4078$var$batch = $5c544df2e9ec4078$var$defaultNoopBatch; // Allow injecting another batching function later
const $5c544df2e9ec4078$export$4b9874722d0da7bc = (newBatch)=>$5c544df2e9ec4078$var$batch = newBatch; // Supply a getter just to skip dealing with ESM bindings
const $5c544df2e9ec4078$export$fc47d4c0ba3bd2c6 = ()=>$5c544df2e9ec4078$var$batch;



var $laauJ = parcelRequire("laauJ");

var $laauJ = parcelRequire("laauJ");

var $laauJ = parcelRequire("laauJ");
const $8e80bc78d43a7847$export$cc80c08dc91f1c00 = /*#__PURE__*/ (0, $laauJ.createContext)(null);
var $8e80bc78d43a7847$export$2e2bcd8739ae039 = $8e80bc78d43a7847$export$cc80c08dc91f1c00;


function $3019622ea9a537ca$export$c1275ca9a6fd3ec5() {
    const contextValue = (0, $laauJ.useContext)((0, $8e80bc78d43a7847$export$cc80c08dc91f1c00));
    return contextValue;
}



const $66f69f7f128927e1$export$20656a4825650bd0 = ()=>{
    throw new Error("uSES not initialized!");
};


let $c51dd77bf3664f0a$var$useSyncExternalStoreWithSelector = (0, $66f69f7f128927e1$export$20656a4825650bd0);
const $c51dd77bf3664f0a$export$e2e6e3f3f3b782e3 = (fn)=>{
    $c51dd77bf3664f0a$var$useSyncExternalStoreWithSelector = fn;
};
const $c51dd77bf3664f0a$var$refEquality = (a, b)=>a === b;
function $c51dd77bf3664f0a$export$2b53f90d2bd1cbfb(context = (0, $8e80bc78d43a7847$export$cc80c08dc91f1c00)) {
    const useReduxContext = context === (0, $8e80bc78d43a7847$export$cc80c08dc91f1c00) ? (0, $3019622ea9a537ca$export$c1275ca9a6fd3ec5) : ()=>(0, $laauJ.useContext)(context);
    return function useSelector(selector, equalityFn = $c51dd77bf3664f0a$var$refEquality) {
        const { store: store , subscription: subscription , getServerState: getServerState  } = useReduxContext();
        const selectedState = $c51dd77bf3664f0a$var$useSyncExternalStoreWithSelector(subscription.addNestedSub, store.getState, getServerState || store.getState, selector, equalityFn);
        (0, $laauJ.useDebugValue)(selectedState);
        return selectedState;
    };
}
const $c51dd77bf3664f0a$export$2105062e25df4afe = /*#__PURE__*/ $c51dd77bf3664f0a$export$2b53f90d2bd1cbfb();


function $4c2ebebf3589e6be$export$2e2bcd8739ae039() {
    $4c2ebebf3589e6be$export$2e2bcd8739ae039 = Object.assign ? Object.assign.bind() : function(target) {
        for(var i = 1; i < arguments.length; i++){
            var source = arguments[i];
            for(var key in source)if (Object.prototype.hasOwnProperty.call(source, key)) target[key] = source[key];
        }
        return target;
    };
    return $4c2ebebf3589e6be$export$2e2bcd8739ae039.apply(this, arguments);
}


function $1db5f1be633c2a69$export$2e2bcd8739ae039(source, excluded) {
    if (source == null) return {};
    var target = {};
    var sourceKeys = Object.keys(source);
    var key, i;
    for(i = 0; i < sourceKeys.length; i++){
        key = sourceKeys[i];
        if (excluded.indexOf(key) >= 0) continue;
        target[key] = source[key];
    }
    return target;
}


var $3f6017de755336f6$exports = {};
"use strict";
var $d094cc433a8fd1ec$exports = {};
"use strict";

$d094cc433a8fd1ec$exports = (parcelRequire("c6YG3"));


/**
 * Copyright 2015, Yahoo! Inc.
 * Copyrights licensed under the New BSD License. See the accompanying LICENSE file for terms.
 */ var $3f6017de755336f6$var$REACT_STATICS = {
    childContextTypes: true,
    contextType: true,
    contextTypes: true,
    defaultProps: true,
    displayName: true,
    getDefaultProps: true,
    getDerivedStateFromError: true,
    getDerivedStateFromProps: true,
    mixins: true,
    propTypes: true,
    type: true
};
var $3f6017de755336f6$var$KNOWN_STATICS = {
    name: true,
    length: true,
    prototype: true,
    caller: true,
    callee: true,
    arguments: true,
    arity: true
};
var $3f6017de755336f6$var$FORWARD_REF_STATICS = {
    "$$typeof": true,
    render: true,
    defaultProps: true,
    displayName: true,
    propTypes: true
};
var $3f6017de755336f6$var$MEMO_STATICS = {
    "$$typeof": true,
    compare: true,
    defaultProps: true,
    displayName: true,
    propTypes: true,
    type: true
};
var $3f6017de755336f6$var$TYPE_STATICS = {};
$3f6017de755336f6$var$TYPE_STATICS[$d094cc433a8fd1ec$exports.ForwardRef] = $3f6017de755336f6$var$FORWARD_REF_STATICS;
$3f6017de755336f6$var$TYPE_STATICS[$d094cc433a8fd1ec$exports.Memo] = $3f6017de755336f6$var$MEMO_STATICS;
function $3f6017de755336f6$var$getStatics(component) {
    // React v16.11 and below
    if ($d094cc433a8fd1ec$exports.isMemo(component)) return $3f6017de755336f6$var$MEMO_STATICS;
     // React v16.12 and above
    return $3f6017de755336f6$var$TYPE_STATICS[component["$$typeof"]] || $3f6017de755336f6$var$REACT_STATICS;
}
var $3f6017de755336f6$var$defineProperty = Object.defineProperty;
var $3f6017de755336f6$var$getOwnPropertyNames = Object.getOwnPropertyNames;
var $3f6017de755336f6$var$getOwnPropertySymbols = Object.getOwnPropertySymbols;
var $3f6017de755336f6$var$getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;
var $3f6017de755336f6$var$getPrototypeOf = Object.getPrototypeOf;
var $3f6017de755336f6$var$objectPrototype = Object.prototype;
function $3f6017de755336f6$var$hoistNonReactStatics(targetComponent, sourceComponent, blacklist) {
    if (typeof sourceComponent !== "string") {
        // don't hoist over string (html) components
        if ($3f6017de755336f6$var$objectPrototype) {
            var inheritedComponent = $3f6017de755336f6$var$getPrototypeOf(sourceComponent);
            if (inheritedComponent && inheritedComponent !== $3f6017de755336f6$var$objectPrototype) $3f6017de755336f6$var$hoistNonReactStatics(targetComponent, inheritedComponent, blacklist);
        }
        var keys = $3f6017de755336f6$var$getOwnPropertyNames(sourceComponent);
        if ($3f6017de755336f6$var$getOwnPropertySymbols) keys = keys.concat($3f6017de755336f6$var$getOwnPropertySymbols(sourceComponent));
        var targetStatics = $3f6017de755336f6$var$getStatics(targetComponent);
        var sourceStatics = $3f6017de755336f6$var$getStatics(sourceComponent);
        for(var i = 0; i < keys.length; ++i){
            var key = keys[i];
            if (!$3f6017de755336f6$var$KNOWN_STATICS[key] && !(blacklist && blacklist[key]) && !(sourceStatics && sourceStatics[key]) && !(targetStatics && targetStatics[key])) {
                var descriptor = $3f6017de755336f6$var$getOwnPropertyDescriptor(sourceComponent, key);
                try {
                    // Avoid failures from read-only properties
                    $3f6017de755336f6$var$defineProperty(targetComponent, key, descriptor);
                } catch (e) {}
            }
        }
    }
    return targetComponent;
}
$3f6017de755336f6$exports = $3f6017de755336f6$var$hoistNonReactStatics;



var $laauJ = parcelRequire("laauJ");
var $88341d189f5ec59a$exports = {};
"use strict";

$88341d189f5ec59a$exports = (parcelRequire("elmqr"));



/**
 * Prints a warning in the console if it exists.
 *
 * @param {String} message The warning message.
 * @returns {void}
 */ function $6619d8259be082a7$export$2e2bcd8739ae039(message) {
    /* eslint-disable no-console */ if (typeof console !== "undefined" && typeof console.error === "function") console.error(message);
    /* eslint-enable no-console */ try {
        // This error was thrown as a convenience so that if you enable
        // "break on all exceptions" in your console,
        // it would pause the execution at this line.
        throw new Error(message);
    /* eslint-disable no-empty */ } catch (e) {}
/* eslint-enable no-empty */ }


function $36d3846cb1b4c7f7$var$verify(selector, methodName) {
    if (!selector) throw new Error(`Unexpected value for ${methodName} in connect.`);
    else if (methodName === "mapStateToProps" || methodName === "mapDispatchToProps") {
        if (!Object.prototype.hasOwnProperty.call(selector, "dependsOnOwnProps")) (0, $6619d8259be082a7$export$2e2bcd8739ae039)(`The selector for ${methodName} of connect did not specify a value for dependsOnOwnProps.`);
    }
}
function $36d3846cb1b4c7f7$export$2e2bcd8739ae039(mapStateToProps, mapDispatchToProps, mergeProps) {
    $36d3846cb1b4c7f7$var$verify(mapStateToProps, "mapStateToProps");
    $36d3846cb1b4c7f7$var$verify(mapDispatchToProps, "mapDispatchToProps");
    $36d3846cb1b4c7f7$var$verify(mergeProps, "mergeProps");
}


const $17efe9ed37366784$var$_excluded = [
    "initMapStateToProps",
    "initMapDispatchToProps",
    "initMergeProps"
];
function $17efe9ed37366784$export$d20c0c2ca6eb2b6f(mapStateToProps, mapDispatchToProps, mergeProps, dispatch, { areStatesEqual: areStatesEqual , areOwnPropsEqual: areOwnPropsEqual , areStatePropsEqual: areStatePropsEqual  }) {
    let hasRunAtLeastOnce = false;
    let state;
    let ownProps;
    let stateProps;
    let dispatchProps;
    let mergedProps;
    function handleFirstCall(firstState, firstOwnProps) {
        state = firstState;
        ownProps = firstOwnProps;
        stateProps = mapStateToProps(state, ownProps);
        dispatchProps = mapDispatchToProps(dispatch, ownProps);
        mergedProps = mergeProps(stateProps, dispatchProps, ownProps);
        hasRunAtLeastOnce = true;
        return mergedProps;
    }
    function handleNewPropsAndNewState() {
        stateProps = mapStateToProps(state, ownProps);
        if (mapDispatchToProps.dependsOnOwnProps) dispatchProps = mapDispatchToProps(dispatch, ownProps);
        mergedProps = mergeProps(stateProps, dispatchProps, ownProps);
        return mergedProps;
    }
    function handleNewProps() {
        if (mapStateToProps.dependsOnOwnProps) stateProps = mapStateToProps(state, ownProps);
        if (mapDispatchToProps.dependsOnOwnProps) dispatchProps = mapDispatchToProps(dispatch, ownProps);
        mergedProps = mergeProps(stateProps, dispatchProps, ownProps);
        return mergedProps;
    }
    function handleNewState() {
        const nextStateProps = mapStateToProps(state, ownProps);
        const statePropsChanged = !areStatePropsEqual(nextStateProps, stateProps);
        stateProps = nextStateProps;
        if (statePropsChanged) mergedProps = mergeProps(stateProps, dispatchProps, ownProps);
        return mergedProps;
    }
    function handleSubsequentCalls(nextState, nextOwnProps) {
        const propsChanged = !areOwnPropsEqual(nextOwnProps, ownProps);
        const stateChanged = !areStatesEqual(nextState, state, nextOwnProps, ownProps);
        state = nextState;
        ownProps = nextOwnProps;
        if (propsChanged && stateChanged) return handleNewPropsAndNewState();
        if (propsChanged) return handleNewProps();
        if (stateChanged) return handleNewState();
        return mergedProps;
    }
    return function pureFinalPropsSelector(nextState, nextOwnProps) {
        return hasRunAtLeastOnce ? handleSubsequentCalls(nextState, nextOwnProps) : handleFirstCall(nextState, nextOwnProps);
    };
}
function $17efe9ed37366784$export$2e2bcd8739ae039(dispatch, _ref) {
    let { initMapStateToProps: initMapStateToProps , initMapDispatchToProps: initMapDispatchToProps , initMergeProps: initMergeProps  } = _ref, options = (0, $1db5f1be633c2a69$export$2e2bcd8739ae039)(_ref, $17efe9ed37366784$var$_excluded);
    const mapStateToProps = initMapStateToProps(dispatch, options);
    const mapDispatchToProps = initMapDispatchToProps(dispatch, options);
    const mergeProps = initMergeProps(dispatch, options);
    return $17efe9ed37366784$export$d20c0c2ca6eb2b6f(mapStateToProps, mapDispatchToProps, mergeProps, dispatch, options);
}


function $5b230cc47f9822be$export$2e2bcd8739ae039(actionCreators, dispatch) {
    const boundActionCreators = {};
    for(const key in actionCreators){
        const actionCreator = actionCreators[key];
        if (typeof actionCreator === "function") boundActionCreators[key] = (...args)=>dispatch(actionCreator(...args));
    }
    return boundActionCreators;
}


/**
 * @param {any} obj The object to inspect.
 * @returns {boolean} True if the argument appears to be a plain object.
 */ function $55d7c1b46e4bf674$export$2e2bcd8739ae039(obj) {
    if (typeof obj !== "object" || obj === null) return false;
    let proto = Object.getPrototypeOf(obj);
    if (proto === null) return true;
    let baseProto = proto;
    while(Object.getPrototypeOf(baseProto) !== null)baseProto = Object.getPrototypeOf(baseProto);
    return proto === baseProto;
}



function $6154d8906c5e2bb1$export$2e2bcd8739ae039(value, displayName, methodName) {
    if (!(0, $55d7c1b46e4bf674$export$2e2bcd8739ae039)(value)) (0, $6619d8259be082a7$export$2e2bcd8739ae039)(`${methodName}() in ${displayName} must return a plain object. Instead received ${value}.`);
}


function $702a21b47c68274c$export$710f7c60f68acd3e(//  It seems that the dispatch argument
//  could be a dispatch function in some cases (ex: whenMapDispatchToPropsIsMissing)
//  and a state object in some others (ex: whenMapStateToPropsIsMissing)
// eslint-disable-next-line no-unused-vars
getConstant) {
    return function initConstantSelector(dispatch) {
        const constant = getConstant(dispatch);
        function constantSelector() {
            return constant;
        }
        constantSelector.dependsOnOwnProps = false;
        return constantSelector;
    };
} // dependsOnOwnProps is used by createMapToPropsProxy to determine whether to pass props as args
function $702a21b47c68274c$export$e561b938df936d57(mapToProps) {
    return mapToProps.dependsOnOwnProps ? Boolean(mapToProps.dependsOnOwnProps) : mapToProps.length !== 1;
} // Used by whenMapStateToPropsIsFunction and whenMapDispatchToPropsIsFunction,
function $702a21b47c68274c$export$8d46c7f53c8c602f(mapToProps, methodName) {
    return function initProxySelector(dispatch, { displayName: displayName  }) {
        const proxy = function mapToPropsProxy(stateOrDispatch, ownProps) {
            return proxy.dependsOnOwnProps ? proxy.mapToProps(stateOrDispatch, ownProps) : proxy.mapToProps(stateOrDispatch, undefined);
        }; // allow detectFactoryAndVerify to get ownProps
        proxy.dependsOnOwnProps = true;
        proxy.mapToProps = function detectFactoryAndVerify(stateOrDispatch, ownProps) {
            proxy.mapToProps = mapToProps;
            proxy.dependsOnOwnProps = $702a21b47c68274c$export$e561b938df936d57(mapToProps);
            let props = proxy(stateOrDispatch, ownProps);
            if (typeof props === "function") {
                proxy.mapToProps = props;
                proxy.dependsOnOwnProps = $702a21b47c68274c$export$e561b938df936d57(props);
                props = proxy(stateOrDispatch, ownProps);
            }
            return props;
        };
        return proxy;
    };
}


function $2d3254faba7bbd2e$export$19ef7b929f7e2559(arg, name) {
    return (dispatch, options)=>{
        throw new Error(`Invalid value of type ${typeof arg} for ${name} argument when connecting component ${options.wrappedComponentName}.`);
    };
}


function $a3ccdb9d8894aeb5$export$b69a785ceac019a6(mapDispatchToProps) {
    return mapDispatchToProps && typeof mapDispatchToProps === "object" ? (0, $702a21b47c68274c$export$710f7c60f68acd3e)((dispatch)=>(0, $5b230cc47f9822be$export$2e2bcd8739ae039)(mapDispatchToProps, dispatch)) : !mapDispatchToProps ? (0, $702a21b47c68274c$export$710f7c60f68acd3e)((dispatch)=>({
            dispatch: dispatch
        })) : typeof mapDispatchToProps === "function" ? (0, $702a21b47c68274c$export$8d46c7f53c8c602f)(mapDispatchToProps, "mapDispatchToProps") : (0, $2d3254faba7bbd2e$export$19ef7b929f7e2559)(mapDispatchToProps, "mapDispatchToProps");
}




function $3a9d114678693a98$export$e00e93951827eda7(mapStateToProps) {
    return !mapStateToProps ? (0, $702a21b47c68274c$export$710f7c60f68acd3e)(()=>({})) : typeof mapStateToProps === "function" ? (0, $702a21b47c68274c$export$8d46c7f53c8c602f)(mapStateToProps, "mapStateToProps") : (0, $2d3254faba7bbd2e$export$19ef7b929f7e2559)(mapStateToProps, "mapStateToProps");
}





function $0c41f7d798d023df$export$691c327fc30bc857(stateProps, dispatchProps, ownProps) {
    // @ts-ignore
    return (0, $4c2ebebf3589e6be$export$2e2bcd8739ae039)({}, ownProps, stateProps, dispatchProps);
}
function $0c41f7d798d023df$export$5b105939c84b5234(mergeProps) {
    return function initMergePropsProxy(dispatch, { displayName: displayName , areMergedPropsEqual: areMergedPropsEqual  }) {
        let hasRunOnce = false;
        let mergedProps;
        return function mergePropsProxy(stateProps, dispatchProps, ownProps) {
            const nextMergedProps = mergeProps(stateProps, dispatchProps, ownProps);
            if (hasRunOnce) {
                if (!areMergedPropsEqual(nextMergedProps, mergedProps)) mergedProps = nextMergedProps;
            } else {
                hasRunOnce = true;
                mergedProps = nextMergedProps;
            }
            return mergedProps;
        };
    };
}
function $0c41f7d798d023df$export$17457cf6fa742f84(mergeProps) {
    return !mergeProps ? ()=>$0c41f7d798d023df$export$691c327fc30bc857 : typeof mergeProps === "function" ? $0c41f7d798d023df$export$5b105939c84b5234(mergeProps) : (0, $2d3254faba7bbd2e$export$19ef7b929f7e2559)(mergeProps, "mergeProps");
}



// well as nesting subscriptions of descendant components, so that we can ensure the
// ancestor components re-render before descendants
function $e6cfdb71ff2b7c15$var$createListenerCollection() {
    const batch = (0, $5c544df2e9ec4078$export$fc47d4c0ba3bd2c6)();
    let first = null;
    let last = null;
    return {
        clear () {
            first = null;
            last = null;
        },
        notify () {
            batch(()=>{
                let listener = first;
                while(listener){
                    listener.callback();
                    listener = listener.next;
                }
            });
        },
        get () {
            let listeners = [];
            let listener = first;
            while(listener){
                listeners.push(listener);
                listener = listener.next;
            }
            return listeners;
        },
        subscribe (callback) {
            let isSubscribed = true;
            let listener = last = {
                callback: callback,
                next: null,
                prev: last
            };
            if (listener.prev) listener.prev.next = listener;
            else first = listener;
            return function unsubscribe() {
                if (!isSubscribed || first === null) return;
                isSubscribed = false;
                if (listener.next) listener.next.prev = listener.prev;
                else last = listener.prev;
                if (listener.prev) listener.prev.next = listener.next;
                else first = listener.next;
            };
        }
    };
}
const $e6cfdb71ff2b7c15$var$nullListeners = {
    notify () {},
    get: ()=>[]
};
function $e6cfdb71ff2b7c15$export$d567d2b9af322f8f(store, parentSub) {
    let unsubscribe;
    let listeners = $e6cfdb71ff2b7c15$var$nullListeners;
    function addNestedSub(listener) {
        trySubscribe();
        return listeners.subscribe(listener);
    }
    function notifyNestedSubs() {
        listeners.notify();
    }
    function handleChangeWrapper() {
        if (subscription.onStateChange) subscription.onStateChange();
    }
    function isSubscribed() {
        return Boolean(unsubscribe);
    }
    function trySubscribe() {
        if (!unsubscribe) {
            unsubscribe = parentSub ? parentSub.addNestedSub(handleChangeWrapper) : store.subscribe(handleChangeWrapper);
            listeners = $e6cfdb71ff2b7c15$var$createListenerCollection();
        }
    }
    function tryUnsubscribe() {
        if (unsubscribe) {
            unsubscribe();
            unsubscribe = undefined;
            listeners.clear();
            listeners = $e6cfdb71ff2b7c15$var$nullListeners;
        }
    }
    const subscription = {
        addNestedSub: addNestedSub,
        notifyNestedSubs: notifyNestedSubs,
        handleChangeWrapper: handleChangeWrapper,
        isSubscribed: isSubscribed,
        trySubscribe: trySubscribe,
        tryUnsubscribe: tryUnsubscribe,
        getListeners: ()=>listeners
    };
    return subscription;
}



var $laauJ = parcelRequire("laauJ");
const $470e2820b83c5a78$export$71594e8a50f746f4 = !!(typeof window !== "undefined" && typeof window.document !== "undefined" && typeof window.document.createElement !== "undefined");
const $470e2820b83c5a78$export$700979bc83e7db82 = $470e2820b83c5a78$export$71594e8a50f746f4 ? (0, $laauJ.useLayoutEffect) : (0, $laauJ.useEffect);


function $7d6fb25b96327ecf$var$is(x, y) {
    if (x === y) return x !== 0 || y !== 0 || 1 / x === 1 / y;
    else return x !== x && y !== y;
}
function $7d6fb25b96327ecf$export$2e2bcd8739ae039(objA, objB) {
    if ($7d6fb25b96327ecf$var$is(objA, objB)) return true;
    if (typeof objA !== "object" || objA === null || typeof objB !== "object" || objB === null) return false;
    const keysA = Object.keys(objA);
    const keysB = Object.keys(objB);
    if (keysA.length !== keysB.length) return false;
    for(let i = 0; i < keysA.length; i++){
        if (!Object.prototype.hasOwnProperty.call(objB, keysA[i]) || !$7d6fb25b96327ecf$var$is(objA[keysA[i]], objB[keysA[i]])) return false;
    }
    return true;
}





const $e8a96aec4c084cb9$var$_excluded = [
    "reactReduxForwardedRef"
];
let $e8a96aec4c084cb9$var$useSyncExternalStore = (0, $66f69f7f128927e1$export$20656a4825650bd0);
const $e8a96aec4c084cb9$export$36d45daa6a4925b8 = (fn)=>{
    $e8a96aec4c084cb9$var$useSyncExternalStore = fn;
}; // Define some constant arrays just to avoid re-creating these
const $e8a96aec4c084cb9$var$EMPTY_ARRAY = [
    null,
    0
];
const $e8a96aec4c084cb9$var$NO_SUBSCRIPTION_ARRAY = [
    null,
    null
]; // Attempts to stringify whatever not-really-a-component value we were given
// for logging in an error message
const $e8a96aec4c084cb9$var$stringifyComponent = (Comp)=>{
    try {
        return JSON.stringify(Comp);
    } catch (err) {
        return String(Comp);
    }
};
// This is "just" a `useLayoutEffect`, but with two modifications:
// - we need to fall back to `useEffect` in SSR to avoid annoying warnings
// - we extract this to a separate function to avoid closing over values
//   and causing memory leaks
function $e8a96aec4c084cb9$var$useIsomorphicLayoutEffectWithArgs(effectFunc, effectArgs, dependencies) {
    (0, $470e2820b83c5a78$export$700979bc83e7db82)(()=>effectFunc(...effectArgs), dependencies);
} // Effect callback, extracted: assign the latest props values to refs for later usage
function $e8a96aec4c084cb9$var$captureWrapperProps(lastWrapperProps, lastChildProps, renderIsScheduled, wrapperProps, childPropsFromStoreUpdate, notifyNestedSubs) {
    // We want to capture the wrapper props and child props we used for later comparisons
    lastWrapperProps.current = wrapperProps;
    renderIsScheduled.current = false; // If the render was from a store update, clear out that reference and cascade the subscriber update
    if (childPropsFromStoreUpdate.current) {
        childPropsFromStoreUpdate.current = null;
        notifyNestedSubs();
    }
} // Effect callback, extracted: subscribe to the Redux store or nearest connected ancestor,
// check for updates after dispatched actions, and trigger re-renders.
function $e8a96aec4c084cb9$var$subscribeUpdates(shouldHandleStateChanges, store, subscription, childPropsSelector, lastWrapperProps, lastChildProps, renderIsScheduled, isMounted, childPropsFromStoreUpdate, notifyNestedSubs, additionalSubscribeListener) {
    // If we're not subscribed to the store, nothing to do here
    if (!shouldHandleStateChanges) return ()=>{}; // Capture values for checking if and when this component unmounts
    let didUnsubscribe = false;
    let lastThrownError = null; // We'll run this callback every time a store subscription update propagates to this component
    const checkForUpdates = ()=>{
        if (didUnsubscribe || !isMounted.current) // Don't run stale listeners.
        // Redux doesn't guarantee unsubscriptions happen until next dispatch.
        return;
         // TODO We're currently calling getState ourselves here, rather than letting `uSES` do it
        const latestStoreState = store.getState();
        let newChildProps, error;
        try {
            // Actually run the selector with the most recent store state and wrapper props
            // to determine what the child props should be
            newChildProps = childPropsSelector(latestStoreState, lastWrapperProps.current);
        } catch (e) {
            error = e;
            lastThrownError = e;
        }
        if (!error) lastThrownError = null;
         // If the child props haven't changed, nothing to do here - cascade the subscription update
        if (newChildProps === lastChildProps.current) {
            if (!renderIsScheduled.current) notifyNestedSubs();
        } else {
            // Save references to the new child props.  Note that we track the "child props from store update"
            // as a ref instead of a useState/useReducer because we need a way to determine if that value has
            // been processed.  If this went into useState/useReducer, we couldn't clear out the value without
            // forcing another re-render, which we don't want.
            lastChildProps.current = newChildProps;
            childPropsFromStoreUpdate.current = newChildProps;
            renderIsScheduled.current = true; // TODO This is hacky and not how `uSES` is meant to be used
            // Trigger the React `useSyncExternalStore` subscriber
            additionalSubscribeListener();
        }
    }; // Actually subscribe to the nearest connected ancestor (or store)
    subscription.onStateChange = checkForUpdates;
    subscription.trySubscribe(); // Pull data from the store after first render in case the store has
    // changed since we began.
    checkForUpdates();
    const unsubscribeWrapper = ()=>{
        didUnsubscribe = true;
        subscription.tryUnsubscribe();
        subscription.onStateChange = null;
        if (lastThrownError) // It's possible that we caught an error due to a bad mapState function, but the
        // parent re-rendered without this component and we're about to unmount.
        // This shouldn't happen as long as we do top-down subscriptions correctly, but
        // if we ever do those wrong, this throw will surface the error in our tests.
        // In that case, throw the error from here so it doesn't get lost.
        throw lastThrownError;
    };
    return unsubscribeWrapper;
} // Reducer initial state creation for our update reducer
const $e8a96aec4c084cb9$var$initStateUpdates = ()=>$e8a96aec4c084cb9$var$EMPTY_ARRAY;
function $e8a96aec4c084cb9$var$strictEqual(a, b) {
    return a === b;
}
/**
 * Infers the type of props that a connector will inject into a component.
 */ let $e8a96aec4c084cb9$var$hasWarnedAboutDeprecatedPureOption = false;
/**
 * Connects a React component to a Redux store.
 *
 * - Without arguments, just wraps the component, without changing the behavior / props
 *
 * - If 2 params are passed (3rd param, mergeProps, is skipped), default behavior
 * is to override ownProps (as stated in the docs), so what remains is everything that's
 * not a state or dispatch prop
 *
 * - When 3rd param is passed, we don't know if ownProps propagate and whether they
 * should be valid component props, because it depends on mergeProps implementation.
 * As such, it is the user's responsibility to extend ownProps interface from state or
 * dispatch props or both when applicable
 *
 * @param mapStateToProps A function that extracts values from state
 * @param mapDispatchToProps Setup for dispatching actions
 * @param mergeProps Optional callback to merge state and dispatch props together
 * @param options Options for configuring the connection
 *
 */ function $e8a96aec4c084cb9$var$connect(mapStateToProps, mapDispatchToProps, mergeProps, { pure: // The `pure` option has been removed, so TS doesn't like us destructuring this to check its existence.
// @ts-ignore
pure , areStatesEqual: areStatesEqual = $e8a96aec4c084cb9$var$strictEqual , areOwnPropsEqual: areOwnPropsEqual = (0, $7d6fb25b96327ecf$export$2e2bcd8739ae039) , areStatePropsEqual: areStatePropsEqual = (0, $7d6fb25b96327ecf$export$2e2bcd8739ae039) , areMergedPropsEqual: areMergedPropsEqual = (0, $7d6fb25b96327ecf$export$2e2bcd8739ae039) , forwardRef: // use React's forwardRef to expose a ref of the wrapped component
forwardRef = false , context: // the context consumer to use
context = (0, $8e80bc78d43a7847$export$cc80c08dc91f1c00)  } = {}) {
    const Context = context;
    const initMapStateToProps = (0, $3a9d114678693a98$export$e00e93951827eda7)(mapStateToProps);
    const initMapDispatchToProps = (0, $a3ccdb9d8894aeb5$export$b69a785ceac019a6)(mapDispatchToProps);
    const initMergeProps = (0, $0c41f7d798d023df$export$17457cf6fa742f84)(mergeProps);
    const shouldHandleStateChanges = Boolean(mapStateToProps);
    const wrapWithConnect = (WrappedComponent)=>{
        const wrappedComponentName = WrappedComponent.displayName || WrappedComponent.name || "Component";
        const displayName = `Connect(${wrappedComponentName})`;
        const selectorFactoryOptions = {
            shouldHandleStateChanges: shouldHandleStateChanges,
            displayName: displayName,
            wrappedComponentName: wrappedComponentName,
            WrappedComponent: WrappedComponent,
            initMapStateToProps: // @ts-ignore
            initMapStateToProps,
            initMapDispatchToProps: // @ts-ignore
            initMapDispatchToProps,
            initMergeProps: initMergeProps,
            areStatesEqual: areStatesEqual,
            areStatePropsEqual: areStatePropsEqual,
            areOwnPropsEqual: areOwnPropsEqual,
            areMergedPropsEqual: areMergedPropsEqual
        };
        function ConnectFunction(props) {
            const [propsContext, reactReduxForwardedRef, wrapperProps] = (0, $laauJ.useMemo)(()=>{
                // Distinguish between actual "data" props that were passed to the wrapper component,
                // and values needed to control behavior (forwarded refs, alternate context instances).
                // To maintain the wrapperProps object reference, memoize this destructuring.
                const { reactReduxForwardedRef: reactReduxForwardedRef  } = props, wrapperProps = (0, $1db5f1be633c2a69$export$2e2bcd8739ae039)(props, $e8a96aec4c084cb9$var$_excluded);
                return [
                    props.context,
                    reactReduxForwardedRef,
                    wrapperProps
                ];
            }, [
                props
            ]);
            const ContextToUse = (0, $laauJ.useMemo)(()=>{
                // Users may optionally pass in a custom context instance to use instead of our ReactReduxContext.
                // Memoize the check that determines which context instance we should use.
                return propsContext && propsContext.Consumer && // @ts-ignore
                (0, $88341d189f5ec59a$exports.isContextConsumer)(/*#__PURE__*/ (0, (/*@__PURE__*/$parcel$interopDefault($laauJ))).createElement(propsContext.Consumer, null)) ? propsContext : Context;
            }, [
                propsContext,
                Context
            ]); // Retrieve the store and ancestor subscription via context, if available
            const contextValue = (0, $laauJ.useContext)(ContextToUse); // The store _must_ exist as either a prop or in context.
            // We'll check to see if it _looks_ like a Redux store first.
            // This allows us to pass through a `store` prop that is just a plain value.
            const didStoreComeFromProps = Boolean(props.store) && Boolean(props.store.getState) && Boolean(props.store.dispatch);
            const didStoreComeFromContext = Boolean(contextValue) && Boolean(contextValue.store);
            const store = didStoreComeFromProps ? props.store : contextValue.store;
            const getServerState = didStoreComeFromContext ? contextValue.getServerState : store.getState;
            const childPropsSelector = (0, $laauJ.useMemo)(()=>{
                // The child props selector needs the store reference as an input.
                // Re-create this selector whenever the store changes.
                return (0, $17efe9ed37366784$export$2e2bcd8739ae039)(store.dispatch, selectorFactoryOptions);
            }, [
                store
            ]);
            const [subscription, notifyNestedSubs] = (0, $laauJ.useMemo)(()=>{
                if (!shouldHandleStateChanges) return $e8a96aec4c084cb9$var$NO_SUBSCRIPTION_ARRAY; // This Subscription's source should match where store came from: props vs. context. A component
                // connected to the store via props shouldn't use subscription from context, or vice versa.
                const subscription = (0, $e6cfdb71ff2b7c15$export$d567d2b9af322f8f)(store, didStoreComeFromProps ? undefined : contextValue.subscription); // `notifyNestedSubs` is duplicated to handle the case where the component is unmounted in
                // the middle of the notification loop, where `subscription` will then be null. This can
                // probably be avoided if Subscription's listeners logic is changed to not call listeners
                // that have been unsubscribed in the  middle of the notification loop.
                const notifyNestedSubs = subscription.notifyNestedSubs.bind(subscription);
                return [
                    subscription,
                    notifyNestedSubs
                ];
            }, [
                store,
                didStoreComeFromProps,
                contextValue
            ]); // Determine what {store, subscription} value should be put into nested context, if necessary,
            // and memoize that value to avoid unnecessary context updates.
            const overriddenContextValue = (0, $laauJ.useMemo)(()=>{
                if (didStoreComeFromProps) // This component is directly subscribed to a store from props.
                // We don't want descendants reading from this store - pass down whatever
                // the existing context value is from the nearest connected ancestor.
                return contextValue;
                 // Otherwise, put this component's subscription instance into context, so that
                // connected descendants won't update until after this component is done
                return (0, $4c2ebebf3589e6be$export$2e2bcd8739ae039)({}, contextValue, {
                    subscription: subscription
                });
            }, [
                didStoreComeFromProps,
                contextValue,
                subscription
            ]); // Set up refs to coordinate values between the subscription effect and the render logic
            const lastChildProps = (0, $laauJ.useRef)();
            const lastWrapperProps = (0, $laauJ.useRef)(wrapperProps);
            const childPropsFromStoreUpdate = (0, $laauJ.useRef)();
            const renderIsScheduled = (0, $laauJ.useRef)(false);
            const isProcessingDispatch = (0, $laauJ.useRef)(false);
            const isMounted = (0, $laauJ.useRef)(false);
            const latestSubscriptionCallbackError = (0, $laauJ.useRef)();
            (0, $470e2820b83c5a78$export$700979bc83e7db82)(()=>{
                isMounted.current = true;
                return ()=>{
                    isMounted.current = false;
                };
            }, []);
            const actualChildPropsSelector = (0, $laauJ.useMemo)(()=>{
                const selector = ()=>{
                    // Tricky logic here:
                    // - This render may have been triggered by a Redux store update that produced new child props
                    // - However, we may have gotten new wrapper props after that
                    // If we have new child props, and the same wrapper props, we know we should use the new child props as-is.
                    // But, if we have new wrapper props, those might change the child props, so we have to recalculate things.
                    // So, we'll use the child props from store update only if the wrapper props are the same as last time.
                    if (childPropsFromStoreUpdate.current && wrapperProps === lastWrapperProps.current) return childPropsFromStoreUpdate.current;
                     // TODO We're reading the store directly in render() here. Bad idea?
                    // This will likely cause Bad Things (TM) to happen in Concurrent Mode.
                    // Note that we do this because on renders _not_ caused by store updates, we need the latest store state
                    // to determine what the child props should be.
                    return childPropsSelector(store.getState(), wrapperProps);
                };
                return selector;
            }, [
                store,
                wrapperProps
            ]); // We need this to execute synchronously every time we re-render. However, React warns
            // about useLayoutEffect in SSR, so we try to detect environment and fall back to
            // just useEffect instead to avoid the warning, since neither will run anyway.
            const subscribeForReact = (0, $laauJ.useMemo)(()=>{
                const subscribe = (reactListener)=>{
                    if (!subscription) return ()=>{};
                    return $e8a96aec4c084cb9$var$subscribeUpdates(shouldHandleStateChanges, store, subscription, childPropsSelector, lastWrapperProps, lastChildProps, renderIsScheduled, isMounted, childPropsFromStoreUpdate, notifyNestedSubs, reactListener);
                };
                return subscribe;
            }, [
                subscription
            ]);
            $e8a96aec4c084cb9$var$useIsomorphicLayoutEffectWithArgs($e8a96aec4c084cb9$var$captureWrapperProps, [
                lastWrapperProps,
                lastChildProps,
                renderIsScheduled,
                wrapperProps,
                childPropsFromStoreUpdate,
                notifyNestedSubs
            ]);
            let actualChildProps;
            try {
                actualChildProps = $e8a96aec4c084cb9$var$useSyncExternalStore(subscribeForReact, // TODO and we're just passing that through so it triggers a re-render for us rather than relying on `uSES`.
                actualChildPropsSelector, getServerState ? ()=>childPropsSelector(getServerState(), wrapperProps) : actualChildPropsSelector);
            } catch (err) {
                if (latestSubscriptionCallbackError.current) err.message += `\nThe error may be correlated with this previous error:\n${latestSubscriptionCallbackError.current.stack}\n\n`;
                throw err;
            }
            (0, $470e2820b83c5a78$export$700979bc83e7db82)(()=>{
                latestSubscriptionCallbackError.current = undefined;
                childPropsFromStoreUpdate.current = undefined;
                lastChildProps.current = actualChildProps;
            }); // Now that all that's done, we can finally try to actually render the child component.
            // We memoize the elements for the rendered child component as an optimization.
            const renderedWrappedComponent = (0, $laauJ.useMemo)(()=>{
                return(/*#__PURE__*/ // @ts-ignore
                (0, (/*@__PURE__*/$parcel$interopDefault($laauJ))).createElement(WrappedComponent, (0, $4c2ebebf3589e6be$export$2e2bcd8739ae039)({}, actualChildProps, {
                    ref: reactReduxForwardedRef
                })));
            }, [
                reactReduxForwardedRef,
                WrappedComponent,
                actualChildProps
            ]); // If React sees the exact same element reference as last time, it bails out of re-rendering
            // that child, same as if it was wrapped in React.memo() or returned false from shouldComponentUpdate.
            const renderedChild = (0, $laauJ.useMemo)(()=>{
                if (shouldHandleStateChanges) // If this component is subscribed to store updates, we need to pass its own
                // subscription instance down to our descendants. That means rendering the same
                // Context instance, and putting a different value into the context.
                return /*#__PURE__*/ (0, (/*@__PURE__*/$parcel$interopDefault($laauJ))).createElement(ContextToUse.Provider, {
                    value: overriddenContextValue
                }, renderedWrappedComponent);
                return renderedWrappedComponent;
            }, [
                ContextToUse,
                renderedWrappedComponent,
                overriddenContextValue
            ]);
            return renderedChild;
        }
        const _Connect = (0, (/*@__PURE__*/$parcel$interopDefault($laauJ))).memo(ConnectFunction);
        // Add a hacky cast to get the right output type
        const Connect = _Connect;
        Connect.WrappedComponent = WrappedComponent;
        Connect.displayName = ConnectFunction.displayName = displayName;
        if (forwardRef) {
            const _forwarded = (0, (/*@__PURE__*/$parcel$interopDefault($laauJ))).forwardRef(function forwardConnectRef(props, ref) {
                // @ts-ignore
                return /*#__PURE__*/ (0, (/*@__PURE__*/$parcel$interopDefault($laauJ))).createElement(Connect, (0, $4c2ebebf3589e6be$export$2e2bcd8739ae039)({}, props, {
                    reactReduxForwardedRef: ref
                }));
            });
            const forwarded = _forwarded;
            forwarded.displayName = displayName;
            forwarded.WrappedComponent = WrappedComponent;
            return (0, (/*@__PURE__*/$parcel$interopDefault($3f6017de755336f6$exports)))(forwarded, WrappedComponent);
        }
        return (0, (/*@__PURE__*/$parcel$interopDefault($3f6017de755336f6$exports)))(Connect, WrappedComponent);
    };
    return wrapWithConnect;
}
var $e8a96aec4c084cb9$export$2e2bcd8739ae039 = $e8a96aec4c084cb9$var$connect;



var $laauJ = parcelRequire("laauJ");



function $84ac92c3b5686760$var$Provider({ store: store , context: context , children: children , serverState: serverState  }) {
    const contextValue = (0, $laauJ.useMemo)(()=>{
        const subscription = (0, $e6cfdb71ff2b7c15$export$d567d2b9af322f8f)(store);
        return {
            store: store,
            subscription: subscription,
            getServerState: serverState ? ()=>serverState : undefined
        };
    }, [
        store,
        serverState
    ]);
    const previousState = (0, $laauJ.useMemo)(()=>store.getState(), [
        store
    ]);
    (0, $470e2820b83c5a78$export$700979bc83e7db82)(()=>{
        const { subscription: subscription  } = contextValue;
        subscription.onStateChange = subscription.notifyNestedSubs;
        subscription.trySubscribe();
        if (previousState !== store.getState()) subscription.notifyNestedSubs();
        return ()=>{
            subscription.tryUnsubscribe();
            subscription.onStateChange = undefined;
        };
    }, [
        contextValue,
        previousState
    ]);
    const Context = context || (0, $8e80bc78d43a7847$export$cc80c08dc91f1c00); // @ts-ignore 'AnyAction' is assignable to the constraint of type 'A', but 'A' could be instantiated with a different subtype
    return /*#__PURE__*/ (0, (/*@__PURE__*/$parcel$interopDefault($laauJ))).createElement(Context.Provider, {
        value: contextValue
    }, children);
}
var $84ac92c3b5686760$export$2e2bcd8739ae039 = $84ac92c3b5686760$var$Provider;






var $laauJ = parcelRequire("laauJ");


function $4180f40b5e233e1f$export$671dba69185d0304(context = (0, $8e80bc78d43a7847$export$cc80c08dc91f1c00)) {
    const useReduxContext = context === (0, $8e80bc78d43a7847$export$cc80c08dc91f1c00) ? (0, $3019622ea9a537ca$export$c1275ca9a6fd3ec5) : ()=>(0, $laauJ.useContext)(context);
    return function useStore() {
        const { store: store  } = useReduxContext(); // @ts-ignore
        return store;
    };
}
const $4180f40b5e233e1f$export$6ccbb43953eebf8 = /*#__PURE__*/ $4180f40b5e233e1f$export$671dba69185d0304();


function $5263e4987254f157$export$bc9b55530897c558(context = (0, $8e80bc78d43a7847$export$cc80c08dc91f1c00)) {
    const useStore = context === (0, $8e80bc78d43a7847$export$cc80c08dc91f1c00) ? (0, $4180f40b5e233e1f$export$6ccbb43953eebf8) : (0, $4180f40b5e233e1f$export$671dba69185d0304)(context);
    return function useDispatch() {
        const store = useStore(); // @ts-ignore
        return store.dispatch;
    };
}
const $5263e4987254f157$export$8ad76b76a4c905f8 = /*#__PURE__*/ $5263e4987254f157$export$bc9b55530897c558();









(0, $c51dd77bf3664f0a$export$e2e6e3f3f3b782e3)((0, $45878adde5a50cb9$exports.useSyncExternalStoreWithSelector));
(0, $e8a96aec4c084cb9$export$36d45daa6a4925b8)((0, $aQq7o.useSyncExternalStore)); // Enable batched updates in our subscriptions for use
// with standard React renderers (ReactDOM, React Native)
(0, $5c544df2e9ec4078$export$4b9874722d0da7bc)((0, $20970503b880869d$exports.unstable_batchedUpdates));


/**
 * React Router DOM v6.11.1
 *
 * Copyright (c) Remix Software Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE.md file in the root directory of this source tree.
 *
 * @license MIT
 */ 
var $laauJ = parcelRequire("laauJ");
/**
 * @remix-run/router v1.6.1
 *
 * Copyright (c) Remix Software Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE.md file in the root directory of this source tree.
 *
 * @license MIT
 */ function $cbc79efe0a1f5829$var$_extends() {
    $cbc79efe0a1f5829$var$_extends = Object.assign ? Object.assign.bind() : function(target) {
        for(var i = 1; i < arguments.length; i++){
            var source = arguments[i];
            for(var key in source)if (Object.prototype.hasOwnProperty.call(source, key)) target[key] = source[key];
        }
        return target;
    };
    return $cbc79efe0a1f5829$var$_extends.apply(this, arguments);
}
////////////////////////////////////////////////////////////////////////////////
//#region Types and Constants
////////////////////////////////////////////////////////////////////////////////
/**
 * Actions represent the type of change to a location value.
 */ var $cbc79efe0a1f5829$export$e19cd5f9376f8cee;
(function(Action) {
    /**
   * A POP indicates a change to an arbitrary index in the history stack, such
   * as a back or forward navigation. It does not describe the direction of the
   * navigation, only that the current index changed.
   *
   * Note: This is the default action for newly created history objects.
   */ Action["Pop"] = "POP";
    /**
   * A PUSH indicates a new entry being added to the history stack, such as when
   * a link is clicked and a new page loads. When this happens, all subsequent
   * entries in the stack are lost.
   */ Action["Push"] = "PUSH";
    /**
   * A REPLACE indicates the entry at the current index in the history stack
   * being replaced by a new one.
   */ Action["Replace"] = "REPLACE";
})($cbc79efe0a1f5829$export$e19cd5f9376f8cee || ($cbc79efe0a1f5829$export$e19cd5f9376f8cee = {}));
const $cbc79efe0a1f5829$var$PopStateEventType = "popstate";
/**
 * Memory history stores the current location in memory. It is designed for use
 * in stateful non-browser environments like tests and React Native.
 */ function $cbc79efe0a1f5829$export$2b76ad033c6e6d08(options) {
    if (options === void 0) options = {};
    let { initialEntries: initialEntries = [
        "/"
    ] , initialIndex: initialIndex , v5Compat: v5Compat = false  } = options;
    let entries; // Declare so we can access from createMemoryLocation
    entries = initialEntries.map((entry, index)=>createMemoryLocation(entry, typeof entry === "string" ? null : entry.state, index === 0 ? "default" : undefined));
    let index = clampIndex(initialIndex == null ? entries.length - 1 : initialIndex);
    let action = $cbc79efe0a1f5829$export$e19cd5f9376f8cee.Pop;
    let listener = null;
    function clampIndex(n) {
        return Math.min(Math.max(n, 0), entries.length - 1);
    }
    function getCurrentLocation() {
        return entries[index];
    }
    function createMemoryLocation(to, state, key) {
        if (state === void 0) state = null;
        let location = $cbc79efe0a1f5829$var$createLocation(entries ? getCurrentLocation().pathname : "/", to, state, key);
        $cbc79efe0a1f5829$export$c0e02632e14916fd(location.pathname.charAt(0) === "/", "relative pathnames are not supported in memory history: " + JSON.stringify(to));
        return location;
    }
    function createHref(to) {
        return typeof to === "string" ? to : $cbc79efe0a1f5829$export$fe53371bee54353d(to);
    }
    let history = {
        get index () {
            return index;
        },
        get action () {
            return action;
        },
        get location () {
            return getCurrentLocation();
        },
        createHref: createHref,
        createURL (to) {
            return new URL(createHref(to), "http://localhost");
        },
        encodeLocation (to) {
            let path = typeof to === "string" ? $cbc79efe0a1f5829$export$8ccf933b0513f8d0(to) : to;
            return {
                pathname: path.pathname || "",
                search: path.search || "",
                hash: path.hash || ""
            };
        },
        push (to, state) {
            action = $cbc79efe0a1f5829$export$e19cd5f9376f8cee.Push;
            let nextLocation = createMemoryLocation(to, state);
            index += 1;
            entries.splice(index, entries.length, nextLocation);
            if (v5Compat && listener) listener({
                action: action,
                location: nextLocation,
                delta: 1
            });
        },
        replace (to, state) {
            action = $cbc79efe0a1f5829$export$e19cd5f9376f8cee.Replace;
            let nextLocation = createMemoryLocation(to, state);
            entries[index] = nextLocation;
            if (v5Compat && listener) listener({
                action: action,
                location: nextLocation,
                delta: 0
            });
        },
        go (delta) {
            action = $cbc79efe0a1f5829$export$e19cd5f9376f8cee.Pop;
            let nextIndex = clampIndex(index + delta);
            let nextLocation = entries[nextIndex];
            index = nextIndex;
            if (listener) listener({
                action: action,
                location: nextLocation,
                delta: delta
            });
        },
        listen (fn) {
            listener = fn;
            return ()=>{
                listener = null;
            };
        }
    };
    return history;
}
/**
 * Browser history stores the location in regular URLs. This is the standard for
 * most web apps, but it requires some configuration on the server to ensure you
 * serve the same app at multiple URLs.
 *
 * @see https://github.com/remix-run/history/tree/main/docs/api-reference.md#createbrowserhistory
 */ function $cbc79efe0a1f5829$export$719fc203c4e16dee(options) {
    if (options === void 0) options = {};
    function createBrowserLocation(window1, globalHistory) {
        let { pathname: pathname , search: search , hash: hash  } = window1.location;
        return $cbc79efe0a1f5829$var$createLocation("", {
            pathname: pathname,
            search: search,
            hash: hash
        }, globalHistory.state && globalHistory.state.usr || null, globalHistory.state && globalHistory.state.key || "default");
    }
    function createBrowserHref(window1, to) {
        return typeof to === "string" ? to : $cbc79efe0a1f5829$export$fe53371bee54353d(to);
    }
    return $cbc79efe0a1f5829$var$getUrlBasedHistory(createBrowserLocation, createBrowserHref, null, options);
}
/**
 * Hash history stores the location in window.location.hash. This makes it ideal
 * for situations where you don't want to send the location to the server for
 * some reason, either because you do cannot configure it or the URL space is
 * reserved for something else.
 *
 * @see https://github.com/remix-run/history/tree/main/docs/api-reference.md#createhashhistory
 */ function $cbc79efe0a1f5829$export$b71fdd3798280242(options) {
    if (options === void 0) options = {};
    function createHashLocation(window1, globalHistory) {
        let { pathname: pathname = "/" , search: search = "" , hash: hash = ""  } = $cbc79efe0a1f5829$export$8ccf933b0513f8d0(window1.location.hash.substr(1));
        return $cbc79efe0a1f5829$var$createLocation("", {
            pathname: pathname,
            search: search,
            hash: hash
        }, globalHistory.state && globalHistory.state.usr || null, globalHistory.state && globalHistory.state.key || "default");
    }
    function createHashHref(window1, to) {
        let base = window1.document.querySelector("base");
        let href = "";
        if (base && base.getAttribute("href")) {
            let url = window1.location.href;
            let hashIndex = url.indexOf("#");
            href = hashIndex === -1 ? url : url.slice(0, hashIndex);
        }
        return href + "#" + (typeof to === "string" ? to : $cbc79efe0a1f5829$export$fe53371bee54353d(to));
    }
    function validateHashLocation(location, to) {
        $cbc79efe0a1f5829$export$c0e02632e14916fd(location.pathname.charAt(0) === "/", "relative pathnames are not supported in hash history.push(" + JSON.stringify(to) + ")");
    }
    return $cbc79efe0a1f5829$var$getUrlBasedHistory(createHashLocation, createHashHref, validateHashLocation, options);
}
function $cbc79efe0a1f5829$export$3e9cee6b33872309(value, message) {
    if (value === false || value === null || typeof value === "undefined") throw new Error(message);
}
function $cbc79efe0a1f5829$export$c0e02632e14916fd(cond, message) {
    if (!cond) {
        // eslint-disable-next-line no-console
        if (typeof console !== "undefined") console.warn(message);
        try {
            // Welcome to debugging history!
            //
            // This error is thrown as a convenience so you can more easily
            // find the source for a warning that appears in the console by
            // enabling "pause on exceptions" in your JavaScript debugger.
            throw new Error(message); // eslint-disable-next-line no-empty
        } catch (e) {}
    }
}
function $cbc79efe0a1f5829$var$createKey() {
    return Math.random().toString(36).substr(2, 8);
}
/**
 * For browser-based histories, we combine the state and key into an object
 */ function $cbc79efe0a1f5829$var$getHistoryState(location, index) {
    return {
        usr: location.state,
        key: location.key,
        idx: index
    };
}
/**
 * Creates a Location object with a unique key from the given Path
 */ function $cbc79efe0a1f5829$var$createLocation(current, to, state, key) {
    if (state === void 0) state = null;
    let location = $cbc79efe0a1f5829$var$_extends({
        pathname: typeof current === "string" ? current : current.pathname,
        search: "",
        hash: ""
    }, typeof to === "string" ? $cbc79efe0a1f5829$export$8ccf933b0513f8d0(to) : to, {
        state: state,
        // TODO: This could be cleaned up.  push/replace should probably just take
        // full Locations now and avoid the need to run through this flow at all
        // But that's a pretty big refactor to the current test suite so going to
        // keep as is for the time being and just let any incoming keys take precedence
        key: to && to.key || key || $cbc79efe0a1f5829$var$createKey()
    });
    return location;
}
/**
 * Creates a string URL path from the given pathname, search, and hash components.
 */ function $cbc79efe0a1f5829$export$fe53371bee54353d(_ref) {
    let { pathname: pathname = "/" , search: search = "" , hash: hash = ""  } = _ref;
    if (search && search !== "?") pathname += search.charAt(0) === "?" ? search : "?" + search;
    if (hash && hash !== "#") pathname += hash.charAt(0) === "#" ? hash : "#" + hash;
    return pathname;
}
/**
 * Parses a string URL path into its separate pathname, search, and hash components.
 */ function $cbc79efe0a1f5829$export$8ccf933b0513f8d0(path) {
    let parsedPath = {};
    if (path) {
        let hashIndex = path.indexOf("#");
        if (hashIndex >= 0) {
            parsedPath.hash = path.substr(hashIndex);
            path = path.substr(0, hashIndex);
        }
        let searchIndex = path.indexOf("?");
        if (searchIndex >= 0) {
            parsedPath.search = path.substr(searchIndex);
            path = path.substr(0, searchIndex);
        }
        if (path) parsedPath.pathname = path;
    }
    return parsedPath;
}
function $cbc79efe0a1f5829$var$getUrlBasedHistory(getLocation, createHref, validateLocation, options) {
    if (options === void 0) options = {};
    let { window: window1 = document.defaultView , v5Compat: v5Compat = false  } = options;
    let globalHistory = window1.history;
    let action = $cbc79efe0a1f5829$export$e19cd5f9376f8cee.Pop;
    let listener = null;
    let index = getIndex(); // Index should only be null when we initialize. If not, it's because the
    // user called history.pushState or history.replaceState directly, in which
    // case we should log a warning as it will result in bugs.
    if (index == null) {
        index = 0;
        globalHistory.replaceState($cbc79efe0a1f5829$var$_extends({}, globalHistory.state, {
            idx: index
        }), "");
    }
    function getIndex() {
        let state = globalHistory.state || {
            idx: null
        };
        return state.idx;
    }
    function handlePop() {
        action = $cbc79efe0a1f5829$export$e19cd5f9376f8cee.Pop;
        let nextIndex = getIndex();
        let delta = nextIndex == null ? null : nextIndex - index;
        index = nextIndex;
        if (listener) listener({
            action: action,
            location: history.location,
            delta: delta
        });
    }
    function push(to, state) {
        action = $cbc79efe0a1f5829$export$e19cd5f9376f8cee.Push;
        let location = $cbc79efe0a1f5829$var$createLocation(history.location, to, state);
        if (validateLocation) validateLocation(location, to);
        index = getIndex() + 1;
        let historyState = $cbc79efe0a1f5829$var$getHistoryState(location, index);
        let url = history.createHref(location); // try...catch because iOS limits us to 100 pushState calls :/
        try {
            globalHistory.pushState(historyState, "", url);
        } catch (error) {
            // They are going to lose state here, but there is no real
            // way to warn them about it since the page will refresh...
            window1.location.assign(url);
        }
        if (v5Compat && listener) listener({
            action: action,
            location: history.location,
            delta: 1
        });
    }
    function replace(to, state) {
        action = $cbc79efe0a1f5829$export$e19cd5f9376f8cee.Replace;
        let location = $cbc79efe0a1f5829$var$createLocation(history.location, to, state);
        if (validateLocation) validateLocation(location, to);
        index = getIndex();
        let historyState = $cbc79efe0a1f5829$var$getHistoryState(location, index);
        let url = history.createHref(location);
        globalHistory.replaceState(historyState, "", url);
        if (v5Compat && listener) listener({
            action: action,
            location: history.location,
            delta: 0
        });
    }
    function createURL(to) {
        // window.location.origin is "null" (the literal string value) in Firefox
        // under certain conditions, notably when serving from a local HTML file
        // See https://bugzilla.mozilla.org/show_bug.cgi?id=878297
        let base = window1.location.origin !== "null" ? window1.location.origin : window1.location.href;
        let href = typeof to === "string" ? to : $cbc79efe0a1f5829$export$fe53371bee54353d(to);
        $cbc79efe0a1f5829$export$3e9cee6b33872309(base, "No window.location.(origin|href) available to create URL for href: " + href);
        return new URL(href, base);
    }
    let history = {
        get action () {
            return action;
        },
        get location () {
            return getLocation(window1, globalHistory);
        },
        listen (fn) {
            if (listener) throw new Error("A history only accepts one active listener");
            window1.addEventListener($cbc79efe0a1f5829$var$PopStateEventType, handlePop);
            listener = fn;
            return ()=>{
                window1.removeEventListener($cbc79efe0a1f5829$var$PopStateEventType, handlePop);
                listener = null;
            };
        },
        createHref (to) {
            return createHref(window1, to);
        },
        createURL: createURL,
        encodeLocation (to) {
            // Encode a Location the same way window.location would
            let url = createURL(to);
            return {
                pathname: url.pathname,
                search: url.search,
                hash: url.hash
            };
        },
        push: push,
        replace: replace,
        go (n) {
            return globalHistory.go(n);
        }
    };
    return history;
} //#endregion
var $cbc79efe0a1f5829$var$ResultType;
(function(ResultType) {
    ResultType["data"] = "data";
    ResultType["deferred"] = "deferred";
    ResultType["redirect"] = "redirect";
    ResultType["error"] = "error";
})($cbc79efe0a1f5829$var$ResultType || ($cbc79efe0a1f5829$var$ResultType = {}));
const $cbc79efe0a1f5829$var$immutableRouteKeys = new Set([
    "lazy",
    "caseSensitive",
    "path",
    "id",
    "index",
    "children"
]);
function $cbc79efe0a1f5829$var$isIndexRoute(route) {
    return route.index === true;
} // Walk the route tree generating unique IDs where necessary so we are working
// solely with AgnosticDataRouteObject's within the Router
function $cbc79efe0a1f5829$export$4a6d22b32134ea5d(routes, mapRouteProperties, parentPath, manifest) {
    if (parentPath === void 0) parentPath = [];
    if (manifest === void 0) manifest = {};
    return routes.map((route, index)=>{
        let treePath = [
            ...parentPath,
            index
        ];
        let id = typeof route.id === "string" ? route.id : treePath.join("-");
        $cbc79efe0a1f5829$export$3e9cee6b33872309(route.index !== true || !route.children, "Cannot specify children on an index route");
        $cbc79efe0a1f5829$export$3e9cee6b33872309(!manifest[id], 'Found a route id collision on id "' + id + '".  Route ' + "id's must be globally unique within Data Router usages");
        if ($cbc79efe0a1f5829$var$isIndexRoute(route)) {
            let indexRoute = $cbc79efe0a1f5829$var$_extends({}, route, mapRouteProperties(route), {
                id: id
            });
            manifest[id] = indexRoute;
            return indexRoute;
        } else {
            let pathOrLayoutRoute = $cbc79efe0a1f5829$var$_extends({}, route, mapRouteProperties(route), {
                id: id,
                children: undefined
            });
            manifest[id] = pathOrLayoutRoute;
            if (route.children) pathOrLayoutRoute.children = $cbc79efe0a1f5829$export$4a6d22b32134ea5d(route.children, mapRouteProperties, treePath, manifest);
            return pathOrLayoutRoute;
        }
    });
}
/**
 * Matches the given routes to a location and returns the match data.
 *
 * @see https://reactrouter.com/utils/match-routes
 */ function $cbc79efe0a1f5829$export$2708184779ceb39d(routes, locationArg, basename) {
    if (basename === void 0) basename = "/";
    let location = typeof locationArg === "string" ? $cbc79efe0a1f5829$export$8ccf933b0513f8d0(locationArg) : locationArg;
    let pathname = $cbc79efe0a1f5829$export$b69e3301ce081aa3(location.pathname || "/", basename);
    if (pathname == null) return null;
    let branches = $cbc79efe0a1f5829$var$flattenRoutes(routes);
    $cbc79efe0a1f5829$var$rankRouteBranches(branches);
    let matches = null;
    for(let i = 0; matches == null && i < branches.length; ++i)matches = $cbc79efe0a1f5829$var$matchRouteBranch(branches[i], // or from router.navigate, but we want to match against the unencoded
    // paths in the route definitions.  Memory router locations won't be
    // encoded here but there also shouldn't be anything to decode so this
    // should be a safe operation.  This avoids needing matchRoutes to be
    // history-aware.
    $cbc79efe0a1f5829$var$safelyDecodeURI(pathname));
    return matches;
}
function $cbc79efe0a1f5829$var$flattenRoutes(routes, branches, parentsMeta, parentPath) {
    if (branches === void 0) branches = [];
    if (parentsMeta === void 0) parentsMeta = [];
    if (parentPath === void 0) parentPath = "";
    let flattenRoute = (route, index, relativePath)=>{
        let meta = {
            relativePath: relativePath === undefined ? route.path || "" : relativePath,
            caseSensitive: route.caseSensitive === true,
            childrenIndex: index,
            route: route
        };
        if (meta.relativePath.startsWith("/")) {
            $cbc79efe0a1f5829$export$3e9cee6b33872309(meta.relativePath.startsWith(parentPath), 'Absolute route path "' + meta.relativePath + '" nested under path ' + ('"' + parentPath + '" is not valid. An absolute child route path ') + "must start with the combined path of all its parent routes.");
            meta.relativePath = meta.relativePath.slice(parentPath.length);
        }
        let path = $cbc79efe0a1f5829$export$86d9a7913e44197e([
            parentPath,
            meta.relativePath
        ]);
        let routesMeta = parentsMeta.concat(meta); // Add the children before adding this route to the array so we traverse the
        // route tree depth-first and child routes appear before their parents in
        // the "flattened" version.
        if (route.children && route.children.length > 0) {
            $cbc79efe0a1f5829$export$3e9cee6b33872309(// @ts-expect-error
            route.index !== true, "Index routes must not have child routes. Please remove " + ('all child routes from route path "' + path + '".'));
            $cbc79efe0a1f5829$var$flattenRoutes(route.children, branches, routesMeta, path);
        } // Routes without a path shouldn't ever match by themselves unless they are
        // index routes, so don't add them to the list of possible branches.
        if (route.path == null && !route.index) return;
        branches.push({
            path: path,
            score: $cbc79efe0a1f5829$var$computeScore(path, route.index),
            routesMeta: routesMeta
        });
    };
    routes.forEach((route, index)=>{
        var _route$path;
        // coarse-grain check for optional params
        if (route.path === "" || !((_route$path = route.path) != null && _route$path.includes("?"))) flattenRoute(route, index);
        else for (let exploded of $cbc79efe0a1f5829$var$explodeOptionalSegments(route.path))flattenRoute(route, index, exploded);
    });
    return branches;
}
/**
 * Computes all combinations of optional path segments for a given path,
 * excluding combinations that are ambiguous and of lower priority.
 *
 * For example, `/one/:two?/three/:four?/:five?` explodes to:
 * - `/one/three`
 * - `/one/:two/three`
 * - `/one/three/:four`
 * - `/one/three/:five`
 * - `/one/:two/three/:four`
 * - `/one/:two/three/:five`
 * - `/one/three/:four/:five`
 * - `/one/:two/three/:four/:five`
 */ function $cbc79efe0a1f5829$var$explodeOptionalSegments(path) {
    let segments = path.split("/");
    if (segments.length === 0) return [];
    let [first, ...rest] = segments; // Optional path segments are denoted by a trailing `?`
    let isOptional = first.endsWith("?"); // Compute the corresponding required segment: `foo?` -> `foo`
    let required = first.replace(/\?$/, "");
    if (rest.length === 0) // Intepret empty string as omitting an optional segment
    // `["one", "", "three"]` corresponds to omitting `:two` from `/one/:two?/three` -> `/one/three`
    return isOptional ? [
        required,
        ""
    ] : [
        required
    ];
    let restExploded = $cbc79efe0a1f5829$var$explodeOptionalSegments(rest.join("/"));
    let result = []; // All child paths with the prefix.  Do this for all children before the
    // optional version for all children so we get consistent ordering where the
    // parent optional aspect is preferred as required.  Otherwise, we can get
    // child sections interspersed where deeper optional segments are higher than
    // parent optional segments, where for example, /:two would explodes _earlier_
    // then /:one.  By always including the parent as required _for all children_
    // first, we avoid this issue
    result.push(...restExploded.map((subpath)=>subpath === "" ? required : [
            required,
            subpath
        ].join("/"))); // Then if this is an optional value, add all child versions without
    if (isOptional) result.push(...restExploded);
     // for absolute paths, ensure `/` instead of empty segment
    return result.map((exploded)=>path.startsWith("/") && exploded === "" ? "/" : exploded);
}
function $cbc79efe0a1f5829$var$rankRouteBranches(branches) {
    branches.sort((a, b)=>a.score !== b.score ? b.score - a.score // Higher score first
         : $cbc79efe0a1f5829$var$compareIndexes(a.routesMeta.map((meta)=>meta.childrenIndex), b.routesMeta.map((meta)=>meta.childrenIndex)));
}
const $cbc79efe0a1f5829$var$paramRe = /^:\w+$/;
const $cbc79efe0a1f5829$var$dynamicSegmentValue = 3;
const $cbc79efe0a1f5829$var$indexRouteValue = 2;
const $cbc79efe0a1f5829$var$emptySegmentValue = 1;
const $cbc79efe0a1f5829$var$staticSegmentValue = 10;
const $cbc79efe0a1f5829$var$splatPenalty = -2;
const $cbc79efe0a1f5829$var$isSplat = (s)=>s === "*";
function $cbc79efe0a1f5829$var$computeScore(path, index) {
    let segments = path.split("/");
    let initialScore = segments.length;
    if (segments.some($cbc79efe0a1f5829$var$isSplat)) initialScore += $cbc79efe0a1f5829$var$splatPenalty;
    if (index) initialScore += $cbc79efe0a1f5829$var$indexRouteValue;
    return segments.filter((s)=>!$cbc79efe0a1f5829$var$isSplat(s)).reduce((score, segment)=>score + ($cbc79efe0a1f5829$var$paramRe.test(segment) ? $cbc79efe0a1f5829$var$dynamicSegmentValue : segment === "" ? $cbc79efe0a1f5829$var$emptySegmentValue : $cbc79efe0a1f5829$var$staticSegmentValue), initialScore);
}
function $cbc79efe0a1f5829$var$compareIndexes(a, b) {
    let siblings = a.length === b.length && a.slice(0, -1).every((n, i)=>n === b[i]);
    return siblings ? // first. This allows people to have fine-grained control over the matching
    // behavior by simply putting routes with identical paths in the order they
    // want them tried.
    a[a.length - 1] - b[b.length - 1] : // so they sort equally.
    0;
}
function $cbc79efe0a1f5829$var$matchRouteBranch(branch, pathname) {
    let { routesMeta: routesMeta  } = branch;
    let matchedParams = {};
    let matchedPathname = "/";
    let matches = [];
    for(let i = 0; i < routesMeta.length; ++i){
        let meta = routesMeta[i];
        let end = i === routesMeta.length - 1;
        let remainingPathname = matchedPathname === "/" ? pathname : pathname.slice(matchedPathname.length) || "/";
        let match = $cbc79efe0a1f5829$export$81336c211d5ff295({
            path: meta.relativePath,
            caseSensitive: meta.caseSensitive,
            end: end
        }, remainingPathname);
        if (!match) return null;
        Object.assign(matchedParams, match.params);
        let route = meta.route;
        matches.push({
            // TODO: Can this as be avoided?
            params: matchedParams,
            pathname: $cbc79efe0a1f5829$export$86d9a7913e44197e([
                matchedPathname,
                match.pathname
            ]),
            pathnameBase: $cbc79efe0a1f5829$export$a5c6d149b50c1d86($cbc79efe0a1f5829$export$86d9a7913e44197e([
                matchedPathname,
                match.pathnameBase
            ])),
            route: route
        });
        if (match.pathnameBase !== "/") matchedPathname = $cbc79efe0a1f5829$export$86d9a7913e44197e([
            matchedPathname,
            match.pathnameBase
        ]);
    }
    return matches;
}
/**
 * Returns a path with params interpolated.
 *
 * @see https://reactrouter.com/utils/generate-path
 */ function $cbc79efe0a1f5829$export$82476f982757e71e(originalPath, params) {
    if (params === void 0) params = {};
    let path = originalPath;
    if (path.endsWith("*") && path !== "*" && !path.endsWith("/*")) {
        $cbc79efe0a1f5829$export$c0e02632e14916fd(false, 'Route path "' + path + '" will be treated as if it were ' + ('"' + path.replace(/\*$/, "/*") + '" because the `*` character must ') + "always follow a `/` in the pattern. To get rid of this warning, " + ('please change the route path to "' + path.replace(/\*$/, "/*") + '".'));
        path = path.replace(/\*$/, "/*");
    } // ensure `/` is added at the beginning if the path is absolute
    const prefix = path.startsWith("/") ? "/" : "";
    const segments = path.split(/\/+/).map((segment, index, array)=>{
        const isLastSegment = index === array.length - 1; // only apply the splat if it's the last segment
        if (isLastSegment && segment === "*") {
            const star = "*";
            const starParam = params[star]; // Apply the splat
            return starParam;
        }
        const keyMatch = segment.match(/^:(\w+)(\??)$/);
        if (keyMatch) {
            const [, key, optional] = keyMatch;
            let param = params[key];
            if (optional === "?") return param == null ? "" : param;
            if (param == null) $cbc79efe0a1f5829$export$3e9cee6b33872309(false, 'Missing ":' + key + '" param');
            return param;
        } // Remove any optional markers from optional static segments
        return segment.replace(/\?$/g, "");
    }) // Remove empty segments
    .filter((segment)=>!!segment);
    return prefix + segments.join("/");
}
/**
 * Performs pattern matching on a URL pathname and returns information about
 * the match.
 *
 * @see https://reactrouter.com/utils/match-path
 */ function $cbc79efe0a1f5829$export$81336c211d5ff295(pattern, pathname) {
    if (typeof pattern === "string") pattern = {
        path: pattern,
        caseSensitive: false,
        end: true
    };
    let [matcher, paramNames] = $cbc79efe0a1f5829$var$compilePath(pattern.path, pattern.caseSensitive, pattern.end);
    let match = pathname.match(matcher);
    if (!match) return null;
    let matchedPathname = match[0];
    let pathnameBase = matchedPathname.replace(/(.)\/+$/, "$1");
    let captureGroups = match.slice(1);
    let params = paramNames.reduce((memo, paramName, index)=>{
        // We need to compute the pathnameBase here using the raw splat value
        // instead of using params["*"] later because it will be decoded then
        if (paramName === "*") {
            let splatValue = captureGroups[index] || "";
            pathnameBase = matchedPathname.slice(0, matchedPathname.length - splatValue.length).replace(/(.)\/+$/, "$1");
        }
        memo[paramName] = $cbc79efe0a1f5829$var$safelyDecodeURIComponent(captureGroups[index] || "", paramName);
        return memo;
    }, {});
    return {
        params: params,
        pathname: matchedPathname,
        pathnameBase: pathnameBase,
        pattern: pattern
    };
}
function $cbc79efe0a1f5829$var$compilePath(path, caseSensitive, end) {
    if (caseSensitive === void 0) caseSensitive = false;
    if (end === void 0) end = true;
    $cbc79efe0a1f5829$export$c0e02632e14916fd(path === "*" || !path.endsWith("*") || path.endsWith("/*"), 'Route path "' + path + '" will be treated as if it were ' + ('"' + path.replace(/\*$/, "/*") + '" because the `*` character must ') + "always follow a `/` in the pattern. To get rid of this warning, " + ('please change the route path to "' + path.replace(/\*$/, "/*") + '".'));
    let paramNames = [];
    let regexpSource = "^" + path.replace(/\/*\*?$/, "") // Ignore trailing / and /*, we'll handle it below
    .replace(/^\/*/, "/") // Make sure it has a leading /
    .replace(/[\\.*+^$?{}|()[\]]/g, "\\$&") // Escape special regex chars
    .replace(/\/:(\w+)/g, (_, paramName)=>{
        paramNames.push(paramName);
        return "/([^\\/]+)";
    });
    if (path.endsWith("*")) {
        paramNames.push("*");
        regexpSource += path === "*" || path === "/*" ? "(.*)$" // Already matched the initial /, just match the rest
         : "(?:\\/(.+)|\\/*)$"; // Don't include the / in params["*"]
    } else if (end) // When matching to the end, ignore trailing slashes
    regexpSource += "\\/*$";
    else if (path !== "" && path !== "/") // If our path is non-empty and contains anything beyond an initial slash,
    // then we have _some_ form of path in our regex so we should expect to
    // match only if we find the end of this path segment.  Look for an optional
    // non-captured trailing slash (to match a portion of the URL) or the end
    // of the path (if we've matched to the end).  We used to do this with a
    // word boundary but that gives false positives on routes like
    // /user-preferences since `-` counts as a word boundary.
    regexpSource += "(?:(?=\\/|$))";
    let matcher = new RegExp(regexpSource, caseSensitive ? undefined : "i");
    return [
        matcher,
        paramNames
    ];
}
function $cbc79efe0a1f5829$var$safelyDecodeURI(value) {
    try {
        return decodeURI(value);
    } catch (error) {
        $cbc79efe0a1f5829$export$c0e02632e14916fd(false, 'The URL path "' + value + '" could not be decoded because it is is a ' + "malformed URL segment. This is probably due to a bad percent " + ("encoding (" + error + ")."));
        return value;
    }
}
function $cbc79efe0a1f5829$var$safelyDecodeURIComponent(value, paramName) {
    try {
        return decodeURIComponent(value);
    } catch (error) {
        $cbc79efe0a1f5829$export$c0e02632e14916fd(false, 'The value for the URL param "' + paramName + '" will not be decoded because' + (' the string "' + value + '" is a malformed URL segment. This is probably') + (" due to a bad percent encoding (" + error + ")."));
        return value;
    }
}
/**
 * @private
 */ function $cbc79efe0a1f5829$export$b69e3301ce081aa3(pathname, basename) {
    if (basename === "/") return pathname;
    if (!pathname.toLowerCase().startsWith(basename.toLowerCase())) return null;
     // We want to leave trailing slash behavior in the user's control, so if they
    // specify a basename with a trailing slash, we should support it
    let startIndex = basename.endsWith("/") ? basename.length - 1 : basename.length;
    let nextChar = pathname.charAt(startIndex);
    if (nextChar && nextChar !== "/") // pathname does not start with basename/
    return null;
    return pathname.slice(startIndex) || "/";
}
/**
 * Returns a resolved path object relative to the given pathname.
 *
 * @see https://reactrouter.com/utils/resolve-path
 */ function $cbc79efe0a1f5829$export$b09f2ff0bbcb43c7(to, fromPathname) {
    if (fromPathname === void 0) fromPathname = "/";
    let { pathname: toPathname , search: search = "" , hash: hash = ""  } = typeof to === "string" ? $cbc79efe0a1f5829$export$8ccf933b0513f8d0(to) : to;
    let pathname = toPathname ? toPathname.startsWith("/") ? toPathname : $cbc79efe0a1f5829$var$resolvePathname(toPathname, fromPathname) : fromPathname;
    return {
        pathname: pathname,
        search: $cbc79efe0a1f5829$var$normalizeSearch(search),
        hash: $cbc79efe0a1f5829$var$normalizeHash(hash)
    };
}
function $cbc79efe0a1f5829$var$resolvePathname(relativePath, fromPathname) {
    let segments = fromPathname.replace(/\/+$/, "").split("/");
    let relativeSegments = relativePath.split("/");
    relativeSegments.forEach((segment)=>{
        if (segment === "..") // Keep the root "" segment so the pathname starts at /
        {
            if (segments.length > 1) segments.pop();
        } else if (segment !== ".") segments.push(segment);
    });
    return segments.length > 1 ? segments.join("/") : "/";
}
function $cbc79efe0a1f5829$var$getInvalidPathError(char, field, dest, path) {
    return "Cannot include a '" + char + "' character in a manually specified " + ("`to." + field + "` field [" + JSON.stringify(path) + "].  Please separate it out to the ") + ("`to." + dest + "` field. Alternatively you may provide the full path as ") + 'a string in <Link to="..."> and the router will parse it for you.';
}
/**
 * @private
 *
 * When processing relative navigation we want to ignore ancestor routes that
 * do not contribute to the path, such that index/pathless layout routes don't
 * interfere.
 *
 * For example, when moving a route element into an index route and/or a
 * pathless layout route, relative link behavior contained within should stay
 * the same.  Both of the following examples should link back to the root:
 *
 *   <Route path="/">
 *     <Route path="accounts" element={<Link to=".."}>
 *   </Route>
 *
 *   <Route path="/">
 *     <Route path="accounts">
 *       <Route element={<AccountsLayout />}>       // <-- Does not contribute
 *         <Route index element={<Link to=".."} />  // <-- Does not contribute
 *       </Route
 *     </Route>
 *   </Route>
 */ function $cbc79efe0a1f5829$export$90ba53ce1c7fdff2(matches) {
    return matches.filter((match, index)=>index === 0 || match.route.path && match.route.path.length > 0);
}
/**
 * @private
 */ function $cbc79efe0a1f5829$export$cae722b0cc860f13(toArg, routePathnames, locationPathname, isPathRelative) {
    if (isPathRelative === void 0) isPathRelative = false;
    let to;
    if (typeof toArg === "string") to = $cbc79efe0a1f5829$export$8ccf933b0513f8d0(toArg);
    else {
        to = $cbc79efe0a1f5829$var$_extends({}, toArg);
        $cbc79efe0a1f5829$export$3e9cee6b33872309(!to.pathname || !to.pathname.includes("?"), $cbc79efe0a1f5829$var$getInvalidPathError("?", "pathname", "search", to));
        $cbc79efe0a1f5829$export$3e9cee6b33872309(!to.pathname || !to.pathname.includes("#"), $cbc79efe0a1f5829$var$getInvalidPathError("#", "pathname", "hash", to));
        $cbc79efe0a1f5829$export$3e9cee6b33872309(!to.search || !to.search.includes("#"), $cbc79efe0a1f5829$var$getInvalidPathError("#", "search", "hash", to));
    }
    let isEmptyPath = toArg === "" || to.pathname === "";
    let toPathname = isEmptyPath ? "/" : to.pathname;
    let from; // Routing is relative to the current pathname if explicitly requested.
    //
    // If a pathname is explicitly provided in `to`, it should be relative to the
    // route context. This is explained in `Note on `<Link to>` values` in our
    // migration guide from v5 as a means of disambiguation between `to` values
    // that begin with `/` and those that do not. However, this is problematic for
    // `to` values that do not provide a pathname. `to` can simply be a search or
    // hash string, in which case we should assume that the navigation is relative
    // to the current location's pathname and *not* the route pathname.
    if (isPathRelative || toPathname == null) from = locationPathname;
    else {
        let routePathnameIndex = routePathnames.length - 1;
        if (toPathname.startsWith("..")) {
            let toSegments = toPathname.split("/"); // Each leading .. segment means "go up one route" instead of "go up one
            // URL segment".  This is a key difference from how <a href> works and a
            // major reason we call this a "to" value instead of a "href".
            while(toSegments[0] === ".."){
                toSegments.shift();
                routePathnameIndex -= 1;
            }
            to.pathname = toSegments.join("/");
        } // If there are more ".." segments than parent routes, resolve relative to
        // the root / URL.
        from = routePathnameIndex >= 0 ? routePathnames[routePathnameIndex] : "/";
    }
    let path = $cbc79efe0a1f5829$export$b09f2ff0bbcb43c7(to, from); // Ensure the pathname has a trailing slash if the original "to" had one
    let hasExplicitTrailingSlash = toPathname && toPathname !== "/" && toPathname.endsWith("/"); // Or if this was a link to the current path which has a trailing slash
    let hasCurrentTrailingSlash = (isEmptyPath || toPathname === ".") && locationPathname.endsWith("/");
    if (!path.pathname.endsWith("/") && (hasExplicitTrailingSlash || hasCurrentTrailingSlash)) path.pathname += "/";
    return path;
}
/**
 * @private
 */ function $cbc79efe0a1f5829$export$f5655dfea9d981c7(to) {
    // Empty strings should be treated the same as / paths
    return to === "" || to.pathname === "" ? "/" : typeof to === "string" ? $cbc79efe0a1f5829$export$8ccf933b0513f8d0(to).pathname : to.pathname;
}
/**
 * @private
 */ const $cbc79efe0a1f5829$export$86d9a7913e44197e = (paths)=>paths.join("/").replace(/\/\/+/g, "/");
/**
 * @private
 */ const $cbc79efe0a1f5829$export$a5c6d149b50c1d86 = (pathname)=>pathname.replace(/\/+$/, "").replace(/^\/*/, "/");
/**
 * @private
 */ const $cbc79efe0a1f5829$var$normalizeSearch = (search)=>!search || search === "?" ? "" : search.startsWith("?") ? search : "?" + search;
/**
 * @private
 */ const $cbc79efe0a1f5829$var$normalizeHash = (hash)=>!hash || hash === "#" ? "" : hash.startsWith("#") ? hash : "#" + hash;
/**
 * This is a shortcut for creating `application/json` responses. Converts `data`
 * to JSON and sets the `Content-Type` header.
 */ const $cbc79efe0a1f5829$export$7b419323e6ed4f31 = function json(data, init) {
    if (init === void 0) init = {};
    let responseInit = typeof init === "number" ? {
        status: init
    } : init;
    let headers = new Headers(responseInit.headers);
    if (!headers.has("Content-Type")) headers.set("Content-Type", "application/json; charset=utf-8");
    return new Response(JSON.stringify(data), $cbc79efe0a1f5829$var$_extends({}, responseInit, {
        headers: headers
    }));
};
class $cbc79efe0a1f5829$export$42a99a7a4bc0e76a extends Error {
}
class $cbc79efe0a1f5829$export$61d759255b4eec65 {
    constructor(data, responseInit){
        this.pendingKeysSet = new Set();
        this.subscribers = new Set();
        this.deferredKeys = [];
        $cbc79efe0a1f5829$export$3e9cee6b33872309(data && typeof data === "object" && !Array.isArray(data), "defer() only accepts plain objects"); // Set up an AbortController + Promise we can race against to exit early
        // cancellation
        let reject;
        this.abortPromise = new Promise((_, r)=>reject = r);
        this.controller = new AbortController();
        let onAbort = ()=>reject(new $cbc79efe0a1f5829$export$42a99a7a4bc0e76a("Deferred data aborted"));
        this.unlistenAbortSignal = ()=>this.controller.signal.removeEventListener("abort", onAbort);
        this.controller.signal.addEventListener("abort", onAbort);
        this.data = Object.entries(data).reduce((acc, _ref)=>{
            let [key, value] = _ref;
            return Object.assign(acc, {
                [key]: this.trackPromise(key, value)
            });
        }, {});
        if (this.done) // All incoming values were resolved
        this.unlistenAbortSignal();
        this.init = responseInit;
    }
    trackPromise(key, value) {
        if (!(value instanceof Promise)) return value;
        this.deferredKeys.push(key);
        this.pendingKeysSet.add(key); // We store a little wrapper promise that will be extended with
        // _data/_error props upon resolve/reject
        let promise = Promise.race([
            value,
            this.abortPromise
        ]).then((data)=>this.onSettle(promise, key, null, data), (error)=>this.onSettle(promise, key, error)); // Register rejection listeners to avoid uncaught promise rejections on
        // errors or aborted deferred values
        promise.catch(()=>{});
        Object.defineProperty(promise, "_tracked", {
            get: ()=>true
        });
        return promise;
    }
    onSettle(promise, key, error, data) {
        if (this.controller.signal.aborted && error instanceof $cbc79efe0a1f5829$export$42a99a7a4bc0e76a) {
            this.unlistenAbortSignal();
            Object.defineProperty(promise, "_error", {
                get: ()=>error
            });
            return Promise.reject(error);
        }
        this.pendingKeysSet.delete(key);
        if (this.done) // Nothing left to abort!
        this.unlistenAbortSignal();
        if (error) {
            Object.defineProperty(promise, "_error", {
                get: ()=>error
            });
            this.emit(false, key);
            return Promise.reject(error);
        }
        Object.defineProperty(promise, "_data", {
            get: ()=>data
        });
        this.emit(false, key);
        return data;
    }
    emit(aborted, settledKey) {
        this.subscribers.forEach((subscriber)=>subscriber(aborted, settledKey));
    }
    subscribe(fn) {
        this.subscribers.add(fn);
        return ()=>this.subscribers.delete(fn);
    }
    cancel() {
        this.controller.abort();
        this.pendingKeysSet.forEach((v, k)=>this.pendingKeysSet.delete(k));
        this.emit(true);
    }
    async resolveData(signal) {
        let aborted = false;
        if (!this.done) {
            let onAbort = ()=>this.cancel();
            signal.addEventListener("abort", onAbort);
            aborted = await new Promise((resolve)=>{
                this.subscribe((aborted)=>{
                    signal.removeEventListener("abort", onAbort);
                    if (aborted || this.done) resolve(aborted);
                });
            });
        }
        return aborted;
    }
    get done() {
        return this.pendingKeysSet.size === 0;
    }
    get unwrappedData() {
        $cbc79efe0a1f5829$export$3e9cee6b33872309(this.data !== null && this.done, "Can only unwrap data on initialized and settled deferreds");
        return Object.entries(this.data).reduce((acc, _ref2)=>{
            let [key, value] = _ref2;
            return Object.assign(acc, {
                [key]: $cbc79efe0a1f5829$var$unwrapTrackedPromise(value)
            });
        }, {});
    }
    get pendingKeys() {
        return Array.from(this.pendingKeysSet);
    }
}
function $cbc79efe0a1f5829$var$isTrackedPromise(value) {
    return value instanceof Promise && value._tracked === true;
}
function $cbc79efe0a1f5829$var$unwrapTrackedPromise(value) {
    if (!$cbc79efe0a1f5829$var$isTrackedPromise(value)) return value;
    if (value._error) throw value._error;
    return value._data;
}
const $cbc79efe0a1f5829$export$260e5c0943f31606 = function defer(data, init) {
    if (init === void 0) init = {};
    let responseInit = typeof init === "number" ? {
        status: init
    } : init;
    return new $cbc79efe0a1f5829$export$61d759255b4eec65(data, responseInit);
};
/**
 * A redirect response. Sets the status code and the `Location` header.
 * Defaults to "302 Found".
 */ const $cbc79efe0a1f5829$export$89e12c5b50f7529d = function redirect(url, init) {
    if (init === void 0) init = 302;
    let responseInit = init;
    if (typeof responseInit === "number") responseInit = {
        status: responseInit
    };
    else if (typeof responseInit.status === "undefined") responseInit.status = 302;
    let headers = new Headers(responseInit.headers);
    headers.set("Location", url);
    return new Response(null, $cbc79efe0a1f5829$var$_extends({}, responseInit, {
        headers: headers
    }));
};
/**
 * @private
 * Utility class we use to hold auto-unwrapped 4xx/5xx Response bodies
 */ class $cbc79efe0a1f5829$export$acf1a680051f5031 {
    constructor(status, statusText, data, internal){
        if (internal === void 0) internal = false;
        this.status = status;
        this.statusText = statusText || "";
        this.internal = internal;
        if (data instanceof Error) {
            this.data = data.toString();
            this.error = data;
        } else this.data = data;
    }
}
/**
 * Check if the given error is an ErrorResponse generated from a 4xx/5xx
 * Response thrown from an action/loader
 */ function $cbc79efe0a1f5829$export$972111febbeef05b(error) {
    return error != null && typeof error.status === "number" && typeof error.statusText === "string" && typeof error.internal === "boolean" && "data" in error;
}
const $cbc79efe0a1f5829$var$validMutationMethodsArr = [
    "post",
    "put",
    "patch",
    "delete"
];
const $cbc79efe0a1f5829$var$validMutationMethods = new Set($cbc79efe0a1f5829$var$validMutationMethodsArr);
const $cbc79efe0a1f5829$var$validRequestMethodsArr = [
    "get",
    ...$cbc79efe0a1f5829$var$validMutationMethodsArr
];
const $cbc79efe0a1f5829$var$validRequestMethods = new Set($cbc79efe0a1f5829$var$validRequestMethodsArr);
const $cbc79efe0a1f5829$var$redirectStatusCodes = new Set([
    301,
    302,
    303,
    307,
    308
]);
const $cbc79efe0a1f5829$var$redirectPreserveMethodStatusCodes = new Set([
    307,
    308
]);
const $cbc79efe0a1f5829$export$ed3e14b2f9e105d0 = {
    state: "idle",
    location: undefined,
    formMethod: undefined,
    formAction: undefined,
    formEncType: undefined,
    formData: undefined
};
const $cbc79efe0a1f5829$export$52eace9c284d3585 = {
    state: "idle",
    data: undefined,
    formMethod: undefined,
    formAction: undefined,
    formEncType: undefined,
    formData: undefined
};
const $cbc79efe0a1f5829$export$386d57f03f0b2883 = {
    state: "unblocked",
    proceed: undefined,
    reset: undefined,
    location: undefined
};
const $cbc79efe0a1f5829$var$ABSOLUTE_URL_REGEX = /^(?:[a-z][a-z0-9+.-]*:|\/\/)/i;
const $cbc79efe0a1f5829$var$isBrowser = typeof window !== "undefined" && typeof window.document !== "undefined" && typeof window.document.createElement !== "undefined";
const $cbc79efe0a1f5829$var$isServer = !$cbc79efe0a1f5829$var$isBrowser;
const $cbc79efe0a1f5829$var$defaultMapRouteProperties = (route)=>({
        hasErrorBoundary: Boolean(route.hasErrorBoundary)
    }); //#endregion
////////////////////////////////////////////////////////////////////////////////
//#region createRouter
////////////////////////////////////////////////////////////////////////////////
/**
 * Create a router and listen to history POP navigations
 */ function $cbc79efe0a1f5829$export$baddd0131ee8c05b(init) {
    $cbc79efe0a1f5829$export$3e9cee6b33872309(init.routes.length > 0, "You must provide a non-empty routes array to createRouter");
    let mapRouteProperties;
    if (init.mapRouteProperties) mapRouteProperties = init.mapRouteProperties;
    else if (init.detectErrorBoundary) {
        // If they are still using the deprecated version, wrap it with the new API
        let detectErrorBoundary = init.detectErrorBoundary;
        mapRouteProperties = (route)=>({
                hasErrorBoundary: detectErrorBoundary(route)
            });
    } else mapRouteProperties = $cbc79efe0a1f5829$var$defaultMapRouteProperties;
     // Routes keyed by ID
    let manifest = {}; // Routes in tree format for matching
    let dataRoutes = $cbc79efe0a1f5829$export$4a6d22b32134ea5d(init.routes, mapRouteProperties, undefined, manifest);
    let inFlightDataRoutes;
    let basename = init.basename || "/"; // Config driven behavior flags
    let future = $cbc79efe0a1f5829$var$_extends({
        v7_normalizeFormMethod: false,
        v7_prependBasename: false
    }, init.future); // Cleanup function for history
    let unlistenHistory = null; // Externally-provided functions to call on all state changes
    let subscribers = new Set(); // Externally-provided object to hold scroll restoration locations during routing
    let savedScrollPositions = null; // Externally-provided function to get scroll restoration keys
    let getScrollRestorationKey = null; // Externally-provided function to get current scroll position
    let getScrollPosition = null; // One-time flag to control the initial hydration scroll restoration.  Because
    // we don't get the saved positions from <ScrollRestoration /> until _after_
    // the initial render, we need to manually trigger a separate updateState to
    // send along the restoreScrollPosition
    // Set to true if we have `hydrationData` since we assume we were SSR'd and that
    // SSR did the initial scroll restoration.
    let initialScrollRestored = init.hydrationData != null;
    let initialMatches = $cbc79efe0a1f5829$export$2708184779ceb39d(dataRoutes, init.history.location, basename);
    let initialErrors = null;
    if (initialMatches == null) {
        // If we do not match a user-provided-route, fall back to the root
        // to allow the error boundary to take over
        let error = $cbc79efe0a1f5829$var$getInternalRouterError(404, {
            pathname: init.history.location.pathname
        });
        let { matches: matches , route: route  } = $cbc79efe0a1f5829$var$getShortCircuitMatches(dataRoutes);
        initialMatches = matches;
        initialErrors = {
            [route.id]: error
        };
    }
    let initialized = // functions around still then we'll need to run them in initialize()
    !initialMatches.some((m)=>m.route.lazy) && (!initialMatches.some((m)=>m.route.loader) || init.hydrationData != null);
    let router;
    let state = {
        historyAction: init.history.action,
        location: init.history.location,
        matches: initialMatches,
        initialized: initialized,
        navigation: $cbc79efe0a1f5829$export$ed3e14b2f9e105d0,
        // Don't restore on initial updateState() if we were SSR'd
        restoreScrollPosition: init.hydrationData != null ? false : null,
        preventScrollReset: false,
        revalidation: "idle",
        loaderData: init.hydrationData && init.hydrationData.loaderData || {},
        actionData: init.hydrationData && init.hydrationData.actionData || null,
        errors: init.hydrationData && init.hydrationData.errors || initialErrors,
        fetchers: new Map(),
        blockers: new Map()
    }; // -- Stateful internal variables to manage navigations --
    // Current navigation in progress (to be committed in completeNavigation)
    let pendingAction = $cbc79efe0a1f5829$export$e19cd5f9376f8cee.Pop; // Should the current navigation prevent the scroll reset if scroll cannot
    // be restored?
    let pendingPreventScrollReset = false; // AbortController for the active navigation
    let pendingNavigationController; // We use this to avoid touching history in completeNavigation if a
    // revalidation is entirely uninterrupted
    let isUninterruptedRevalidation = false; // Use this internal flag to force revalidation of all loaders:
    //  - submissions (completed or interrupted)
    //  - useRevalidator()
    //  - X-Remix-Revalidate (from redirect)
    let isRevalidationRequired = false; // Use this internal array to capture routes that require revalidation due
    // to a cancelled deferred on action submission
    let cancelledDeferredRoutes = []; // Use this internal array to capture fetcher loads that were cancelled by an
    // action navigation and require revalidation
    let cancelledFetcherLoads = []; // AbortControllers for any in-flight fetchers
    let fetchControllers = new Map(); // Track loads based on the order in which they started
    let incrementingLoadId = 0; // Track the outstanding pending navigation data load to be compared against
    // the globally incrementing load when a fetcher load lands after a completed
    // navigation
    let pendingNavigationLoadId = -1; // Fetchers that triggered data reloads as a result of their actions
    let fetchReloadIds = new Map(); // Fetchers that triggered redirect navigations
    let fetchRedirectIds = new Set(); // Most recent href/match for fetcher.load calls for fetchers
    let fetchLoadMatches = new Map(); // Store DeferredData instances for active route matches.  When a
    // route loader returns defer() we stick one in here.  Then, when a nested
    // promise resolves we update loaderData.  If a new navigation starts we
    // cancel active deferreds for eliminated routes.
    let activeDeferreds = new Map(); // Store blocker functions in a separate Map outside of router state since
    // we don't need to update UI state if they change
    let blockerFunctions = new Map(); // Flag to ignore the next history update, so we can revert the URL change on
    // a POP navigation that was blocked by the user without touching router state
    let ignoreNextHistoryUpdate = false; // Initialize the router, all side effects should be kicked off from here.
    // Implemented as a Fluent API for ease of:
    //   let router = createRouter(init).initialize();
    function initialize() {
        // If history informs us of a POP navigation, start the navigation but do not update
        // state.  We'll update our own state once the navigation completes
        unlistenHistory = init.history.listen((_ref)=>{
            let { action: historyAction , location: location , delta: delta  } = _ref;
            // Ignore this event if it was just us resetting the URL from a
            // blocked POP navigation
            if (ignoreNextHistoryUpdate) {
                ignoreNextHistoryUpdate = false;
                return;
            }
            $cbc79efe0a1f5829$export$c0e02632e14916fd(blockerFunctions.size === 0 || delta != null, "You are trying to use a blocker on a POP navigation to a location that was not created by @remix-run/router. This will fail silently in production. This can happen if you are navigating outside the router via `window.history.pushState`/`window.location.hash` instead of using router navigation APIs.  This can also happen if you are using createHashRouter and the user manually changes the URL.");
            let blockerKey = shouldBlockNavigation({
                currentLocation: state.location,
                nextLocation: location,
                historyAction: historyAction
            });
            if (blockerKey && delta != null) {
                // Restore the URL to match the current UI, but don't update router state
                ignoreNextHistoryUpdate = true;
                init.history.go(delta * -1); // Put the blocker into a blocked state
                updateBlocker(blockerKey, {
                    state: "blocked",
                    location: location,
                    proceed () {
                        updateBlocker(blockerKey, {
                            state: "proceeding",
                            proceed: undefined,
                            reset: undefined,
                            location: location
                        }); // Re-do the same POP navigation we just blocked
                        init.history.go(delta);
                    },
                    reset () {
                        deleteBlocker(blockerKey);
                        updateState({
                            blockers: new Map(router.state.blockers)
                        });
                    }
                });
                return;
            }
            return startNavigation(historyAction, location);
        }); // Kick off initial data load if needed.  Use Pop to avoid modifying history
        // Note we don't do any handling of lazy here.  For SPA's it'll get handled
        // in the normal navigation flow.  For SSR it's expected that lazy modules are
        // resolved prior to router creation since we can't go into a fallbackElement
        // UI for SSR'd apps
        if (!state.initialized) startNavigation($cbc79efe0a1f5829$export$e19cd5f9376f8cee.Pop, state.location);
        return router;
    } // Clean up a router and it's side effects
    function dispose() {
        if (unlistenHistory) unlistenHistory();
        subscribers.clear();
        pendingNavigationController && pendingNavigationController.abort();
        state.fetchers.forEach((_, key)=>deleteFetcher(key));
        state.blockers.forEach((_, key)=>deleteBlocker(key));
    } // Subscribe to state updates for the router
    function subscribe(fn) {
        subscribers.add(fn);
        return ()=>subscribers.delete(fn);
    } // Update our state and notify the calling context of the change
    function updateState(newState) {
        state = $cbc79efe0a1f5829$var$_extends({}, state, newState);
        subscribers.forEach((subscriber)=>subscriber(state));
    } // Complete a navigation returning the state.navigation back to the IDLE_NAVIGATION
    // and setting state.[historyAction/location/matches] to the new route.
    // - Location is a required param
    // - Navigation will always be set to IDLE_NAVIGATION
    // - Can pass any other state in newState
    function completeNavigation(location, newState) {
        var _location$state, _location$state2;
        // Deduce if we're in a loading/actionReload state:
        // - We have committed actionData in the store
        // - The current navigation was a mutation submission
        // - We're past the submitting state and into the loading state
        // - The location being loaded is not the result of a redirect
        let isActionReload = state.actionData != null && state.navigation.formMethod != null && $cbc79efe0a1f5829$var$isMutationMethod(state.navigation.formMethod) && state.navigation.state === "loading" && ((_location$state = location.state) == null ? void 0 : _location$state._isRedirect) !== true;
        let actionData;
        if (newState.actionData) {
            if (Object.keys(newState.actionData).length > 0) actionData = newState.actionData;
            else // Empty actionData -> clear prior actionData due to an action error
            actionData = null;
        } else if (isActionReload) // Keep the current data if we're wrapping up the action reload
        actionData = state.actionData;
        else // Clear actionData on any other completed navigations
        actionData = null;
         // Always preserve any existing loaderData from re-used routes
        let loaderData = newState.loaderData ? $cbc79efe0a1f5829$var$mergeLoaderData(state.loaderData, newState.loaderData, newState.matches || [], newState.errors) : state.loaderData; // On a successful navigation we can assume we got through all blockers
        // so we can start fresh
        for (let [key] of blockerFunctions)deleteBlocker(key);
         // Always respect the user flag.  Otherwise don't reset on mutation
        // submission navigations unless they redirect
        let preventScrollReset = pendingPreventScrollReset === true || state.navigation.formMethod != null && $cbc79efe0a1f5829$var$isMutationMethod(state.navigation.formMethod) && ((_location$state2 = location.state) == null ? void 0 : _location$state2._isRedirect) !== true;
        if (inFlightDataRoutes) {
            dataRoutes = inFlightDataRoutes;
            inFlightDataRoutes = undefined;
        }
        updateState($cbc79efe0a1f5829$var$_extends({}, newState, {
            actionData: actionData,
            loaderData: loaderData,
            historyAction: pendingAction,
            location: location,
            initialized: true,
            navigation: $cbc79efe0a1f5829$export$ed3e14b2f9e105d0,
            revalidation: "idle",
            restoreScrollPosition: getSavedScrollPosition(location, newState.matches || state.matches),
            preventScrollReset: preventScrollReset,
            blockers: new Map(state.blockers)
        }));
        if (isUninterruptedRevalidation) ;
        else if (pendingAction === $cbc79efe0a1f5829$export$e19cd5f9376f8cee.Pop) ;
        else if (pendingAction === $cbc79efe0a1f5829$export$e19cd5f9376f8cee.Push) init.history.push(location, location.state);
        else if (pendingAction === $cbc79efe0a1f5829$export$e19cd5f9376f8cee.Replace) init.history.replace(location, location.state);
         // Reset stateful navigation vars
        pendingAction = $cbc79efe0a1f5829$export$e19cd5f9376f8cee.Pop;
        pendingPreventScrollReset = false;
        isUninterruptedRevalidation = false;
        isRevalidationRequired = false;
        cancelledDeferredRoutes = [];
        cancelledFetcherLoads = [];
    } // Trigger a navigation event, which can either be a numerical POP or a PUSH
    // replace with an optional submission
    async function navigate(to, opts) {
        if (typeof to === "number") {
            init.history.go(to);
            return;
        }
        let normalizedPath = $cbc79efe0a1f5829$var$normalizeTo(state.location, state.matches, basename, future.v7_prependBasename, to, opts == null ? void 0 : opts.fromRouteId, opts == null ? void 0 : opts.relative);
        let { path: path , submission: submission , error: error  } = $cbc79efe0a1f5829$var$normalizeNavigateOptions(future.v7_normalizeFormMethod, false, normalizedPath, opts);
        let currentLocation = state.location;
        let nextLocation = $cbc79efe0a1f5829$var$createLocation(state.location, path, opts && opts.state); // When using navigate as a PUSH/REPLACE we aren't reading an already-encoded
        // URL from window.location, so we need to encode it here so the behavior
        // remains the same as POP and non-data-router usages.  new URL() does all
        // the same encoding we'd get from a history.pushState/window.location read
        // without having to touch history
        nextLocation = $cbc79efe0a1f5829$var$_extends({}, nextLocation, init.history.encodeLocation(nextLocation));
        let userReplace = opts && opts.replace != null ? opts.replace : undefined;
        let historyAction = $cbc79efe0a1f5829$export$e19cd5f9376f8cee.Push;
        if (userReplace === true) historyAction = $cbc79efe0a1f5829$export$e19cd5f9376f8cee.Replace;
        else if (userReplace === false) ;
        else if (submission != null && $cbc79efe0a1f5829$var$isMutationMethod(submission.formMethod) && submission.formAction === state.location.pathname + state.location.search) // By default on submissions to the current location we REPLACE so that
        // users don't have to double-click the back button to get to the prior
        // location.  If the user redirects to a different location from the
        // action/loader this will be ignored and the redirect will be a PUSH
        historyAction = $cbc79efe0a1f5829$export$e19cd5f9376f8cee.Replace;
        let preventScrollReset = opts && "preventScrollReset" in opts ? opts.preventScrollReset === true : undefined;
        let blockerKey = shouldBlockNavigation({
            currentLocation: currentLocation,
            nextLocation: nextLocation,
            historyAction: historyAction
        });
        if (blockerKey) {
            // Put the blocker into a blocked state
            updateBlocker(blockerKey, {
                state: "blocked",
                location: nextLocation,
                proceed () {
                    updateBlocker(blockerKey, {
                        state: "proceeding",
                        proceed: undefined,
                        reset: undefined,
                        location: nextLocation
                    }); // Send the same navigation through
                    navigate(to, opts);
                },
                reset () {
                    deleteBlocker(blockerKey);
                    updateState({
                        blockers: new Map(state.blockers)
                    });
                }
            });
            return;
        }
        return await startNavigation(historyAction, nextLocation, {
            submission: submission,
            // Send through the formData serialization error if we have one so we can
            // render at the right error boundary after we match routes
            pendingError: error,
            preventScrollReset: preventScrollReset,
            replace: opts && opts.replace
        });
    } // Revalidate all current loaders.  If a navigation is in progress or if this
    // is interrupted by a navigation, allow this to "succeed" by calling all
    // loaders during the next loader round
    function revalidate() {
        interruptActiveLoads();
        updateState({
            revalidation: "loading"
        }); // If we're currently submitting an action, we don't need to start a new
        // navigation, we'll just let the follow up loader execution call all loaders
        if (state.navigation.state === "submitting") return;
         // If we're currently in an idle state, start a new navigation for the current
        // action/location and mark it as uninterrupted, which will skip the history
        // update in completeNavigation
        if (state.navigation.state === "idle") {
            startNavigation(state.historyAction, state.location, {
                startUninterruptedRevalidation: true
            });
            return;
        } // Otherwise, if we're currently in a loading state, just start a new
        // navigation to the navigation.location but do not trigger an uninterrupted
        // revalidation so that history correctly updates once the navigation completes
        startNavigation(pendingAction || state.historyAction, state.navigation.location, {
            overrideNavigation: state.navigation
        });
    } // Start a navigation to the given action/location.  Can optionally provide a
    // overrideNavigation which will override the normalLoad in the case of a redirect
    // navigation
    async function startNavigation(historyAction, location, opts) {
        // Abort any in-progress navigations and start a new one. Unset any ongoing
        // uninterrupted revalidations unless told otherwise, since we want this
        // new navigation to update history normally
        pendingNavigationController && pendingNavigationController.abort();
        pendingNavigationController = null;
        pendingAction = historyAction;
        isUninterruptedRevalidation = (opts && opts.startUninterruptedRevalidation) === true; // Save the current scroll position every time we start a new navigation,
        // and track whether we should reset scroll on completion
        saveScrollPosition(state.location, state.matches);
        pendingPreventScrollReset = (opts && opts.preventScrollReset) === true;
        let routesToUse = inFlightDataRoutes || dataRoutes;
        let loadingNavigation = opts && opts.overrideNavigation;
        let matches = $cbc79efe0a1f5829$export$2708184779ceb39d(routesToUse, location, basename); // Short circuit with a 404 on the root error boundary if we match nothing
        if (!matches) {
            let error = $cbc79efe0a1f5829$var$getInternalRouterError(404, {
                pathname: location.pathname
            });
            let { matches: notFoundMatches , route: route  } = $cbc79efe0a1f5829$var$getShortCircuitMatches(routesToUse); // Cancel all pending deferred on 404s since we don't keep any routes
            cancelActiveDeferreds();
            completeNavigation(location, {
                matches: notFoundMatches,
                loaderData: {},
                errors: {
                    [route.id]: error
                }
            });
            return;
        } // Short circuit if it's only a hash change and not a mutation submission
        // For example, on /page#hash and submit a <Form method="post"> which will
        // default to a navigation to /page
        if ($cbc79efe0a1f5829$var$isHashChangeOnly(state.location, location) && !(opts && opts.submission && $cbc79efe0a1f5829$var$isMutationMethod(opts.submission.formMethod))) {
            completeNavigation(location, {
                matches: matches
            });
            return;
        } // Create a controller/Request for this navigation
        pendingNavigationController = new AbortController();
        let request = $cbc79efe0a1f5829$var$createClientSideRequest(init.history, location, pendingNavigationController.signal, opts && opts.submission);
        let pendingActionData;
        let pendingError;
        if (opts && opts.pendingError) // If we have a pendingError, it means the user attempted a GET submission
        // with binary FormData so assign here and skip to handleLoaders.  That
        // way we handle calling loaders above the boundary etc.  It's not really
        // different from an actionError in that sense.
        pendingError = {
            [$cbc79efe0a1f5829$var$findNearestBoundary(matches).route.id]: opts.pendingError
        };
        else if (opts && opts.submission && $cbc79efe0a1f5829$var$isMutationMethod(opts.submission.formMethod)) {
            // Call action if we received an action submission
            let actionOutput = await handleAction(request, location, opts.submission, matches, {
                replace: opts.replace
            });
            if (actionOutput.shortCircuited) return;
            pendingActionData = actionOutput.pendingActionData;
            pendingError = actionOutput.pendingActionError;
            let navigation = $cbc79efe0a1f5829$var$_extends({
                state: "loading",
                location: location
            }, opts.submission);
            loadingNavigation = navigation; // Create a GET request for the loaders
            request = new Request(request.url, {
                signal: request.signal
            });
        } // Call loaders
        let { shortCircuited: shortCircuited , loaderData: loaderData , errors: errors  } = await handleLoaders(request, location, matches, loadingNavigation, opts && opts.submission, opts && opts.fetcherSubmission, opts && opts.replace, pendingActionData, pendingError);
        if (shortCircuited) return;
         // Clean up now that the action/loaders have completed.  Don't clean up if
        // we short circuited because pendingNavigationController will have already
        // been assigned to a new controller for the next navigation
        pendingNavigationController = null;
        completeNavigation(location, $cbc79efe0a1f5829$var$_extends({
            matches: matches
        }, pendingActionData ? {
            actionData: pendingActionData
        } : {}, {
            loaderData: loaderData,
            errors: errors
        }));
    } // Call the action matched by the leaf route for this navigation and handle
    // redirects/errors
    async function handleAction(request, location, submission, matches, opts) {
        interruptActiveLoads(); // Put us in a submitting state
        let navigation = $cbc79efe0a1f5829$var$_extends({
            state: "submitting",
            location: location
        }, submission);
        updateState({
            navigation: navigation
        }); // Call our action and get the result
        let result;
        let actionMatch = $cbc79efe0a1f5829$var$getTargetMatch(matches, location);
        if (!actionMatch.route.action && !actionMatch.route.lazy) result = {
            type: $cbc79efe0a1f5829$var$ResultType.error,
            error: $cbc79efe0a1f5829$var$getInternalRouterError(405, {
                method: request.method,
                pathname: location.pathname,
                routeId: actionMatch.route.id
            })
        };
        else {
            result = await $cbc79efe0a1f5829$var$callLoaderOrAction("action", request, actionMatch, matches, manifest, mapRouteProperties, basename);
            if (request.signal.aborted) return {
                shortCircuited: true
            };
        }
        if ($cbc79efe0a1f5829$var$isRedirectResult(result)) {
            let replace;
            if (opts && opts.replace != null) replace = opts.replace;
            else // If the user didn't explicity indicate replace behavior, replace if
            // we redirected to the exact same location we're currently at to avoid
            // double back-buttons
            replace = result.location === state.location.pathname + state.location.search;
            await startRedirectNavigation(state, result, {
                submission: submission,
                replace: replace
            });
            return {
                shortCircuited: true
            };
        }
        if ($cbc79efe0a1f5829$var$isErrorResult(result)) {
            // Store off the pending error - we use it to determine which loaders
            // to call and will commit it when we complete the navigation
            let boundaryMatch = $cbc79efe0a1f5829$var$findNearestBoundary(matches, actionMatch.route.id); // By default, all submissions are REPLACE navigations, but if the
            // action threw an error that'll be rendered in an errorElement, we fall
            // back to PUSH so that the user can use the back button to get back to
            // the pre-submission form location to try again
            if ((opts && opts.replace) !== true) pendingAction = $cbc79efe0a1f5829$export$e19cd5f9376f8cee.Push;
            return {
                // Send back an empty object we can use to clear out any prior actionData
                pendingActionData: {},
                pendingActionError: {
                    [boundaryMatch.route.id]: result.error
                }
            };
        }
        if ($cbc79efe0a1f5829$var$isDeferredResult(result)) throw $cbc79efe0a1f5829$var$getInternalRouterError(400, {
            type: "defer-action"
        });
        return {
            pendingActionData: {
                [actionMatch.route.id]: result.data
            }
        };
    } // Call all applicable loaders for the given matches, handling redirects,
    // errors, etc.
    async function handleLoaders(request, location, matches, overrideNavigation, submission, fetcherSubmission, replace, pendingActionData, pendingError) {
        // Figure out the right navigation we want to use for data loading
        let loadingNavigation = overrideNavigation;
        if (!loadingNavigation) {
            let navigation = $cbc79efe0a1f5829$var$_extends({
                state: "loading",
                location: location,
                formMethod: undefined,
                formAction: undefined,
                formEncType: undefined,
                formData: undefined
            }, submission);
            loadingNavigation = navigation;
        } // If this was a redirect from an action we don't have a "submission" but
        // we have it on the loading navigation so use that if available
        let activeSubmission = submission || fetcherSubmission ? submission || fetcherSubmission : loadingNavigation.formMethod && loadingNavigation.formAction && loadingNavigation.formData && loadingNavigation.formEncType ? {
            formMethod: loadingNavigation.formMethod,
            formAction: loadingNavigation.formAction,
            formData: loadingNavigation.formData,
            formEncType: loadingNavigation.formEncType
        } : undefined;
        let routesToUse = inFlightDataRoutes || dataRoutes;
        let [matchesToLoad, revalidatingFetchers] = $cbc79efe0a1f5829$var$getMatchesToLoad(init.history, state, matches, activeSubmission, location, isRevalidationRequired, cancelledDeferredRoutes, cancelledFetcherLoads, fetchLoadMatches, routesToUse, basename, pendingActionData, pendingError); // Cancel pending deferreds for no-longer-matched routes or routes we're
        // about to reload.  Note that if this is an action reload we would have
        // already cancelled all pending deferreds so this would be a no-op
        cancelActiveDeferreds((routeId)=>!(matches && matches.some((m)=>m.route.id === routeId)) || matchesToLoad && matchesToLoad.some((m)=>m.route.id === routeId)); // Short circuit if we have no loaders to run
        if (matchesToLoad.length === 0 && revalidatingFetchers.length === 0) {
            let updatedFetchers = markFetchRedirectsDone();
            completeNavigation(location, $cbc79efe0a1f5829$var$_extends({
                matches: matches,
                loaderData: {},
                // Commit pending error if we're short circuiting
                errors: pendingError || null
            }, pendingActionData ? {
                actionData: pendingActionData
            } : {}, updatedFetchers ? {
                fetchers: new Map(state.fetchers)
            } : {}));
            return {
                shortCircuited: true
            };
        } // If this is an uninterrupted revalidation, we remain in our current idle
        // state.  If not, we need to switch to our loading state and load data,
        // preserving any new action data or existing action data (in the case of
        // a revalidation interrupting an actionReload)
        if (!isUninterruptedRevalidation) {
            revalidatingFetchers.forEach((rf)=>{
                let fetcher = state.fetchers.get(rf.key);
                let revalidatingFetcher = {
                    state: "loading",
                    data: fetcher && fetcher.data,
                    formMethod: undefined,
                    formAction: undefined,
                    formEncType: undefined,
                    formData: undefined,
                    " _hasFetcherDoneAnything ": true
                };
                state.fetchers.set(rf.key, revalidatingFetcher);
            });
            let actionData = pendingActionData || state.actionData;
            updateState($cbc79efe0a1f5829$var$_extends({
                navigation: loadingNavigation
            }, actionData ? Object.keys(actionData).length === 0 ? {
                actionData: null
            } : {
                actionData: actionData
            } : {}, revalidatingFetchers.length > 0 ? {
                fetchers: new Map(state.fetchers)
            } : {}));
        }
        pendingNavigationLoadId = ++incrementingLoadId;
        revalidatingFetchers.forEach((rf)=>{
            if (rf.controller) // Fetchers use an independent AbortController so that aborting a fetcher
            // (via deleteFetcher) does not abort the triggering navigation that
            // triggered the revalidation
            fetchControllers.set(rf.key, rf.controller);
        }); // Proxy navigation abort through to revalidation fetchers
        let abortPendingFetchRevalidations = ()=>revalidatingFetchers.forEach((f)=>abortFetcher(f.key));
        if (pendingNavigationController) pendingNavigationController.signal.addEventListener("abort", abortPendingFetchRevalidations);
        let { results: results , loaderResults: loaderResults , fetcherResults: fetcherResults  } = await callLoadersAndMaybeResolveData(state.matches, matches, matchesToLoad, revalidatingFetchers, request);
        if (request.signal.aborted) return {
            shortCircuited: true
        };
         // Clean up _after_ loaders have completed.  Don't clean up if we short
        // circuited because fetchControllers would have been aborted and
        // reassigned to new controllers for the next navigation
        if (pendingNavigationController) pendingNavigationController.signal.removeEventListener("abort", abortPendingFetchRevalidations);
        revalidatingFetchers.forEach((rf)=>fetchControllers.delete(rf.key)); // If any loaders returned a redirect Response, start a new REPLACE navigation
        let redirect = $cbc79efe0a1f5829$var$findRedirect(results);
        if (redirect) {
            await startRedirectNavigation(state, redirect, {
                replace: replace
            });
            return {
                shortCircuited: true
            };
        } // Process and commit output from loaders
        let { loaderData: loaderData , errors: errors  } = $cbc79efe0a1f5829$var$processLoaderData(state, matches, matchesToLoad, loaderResults, pendingError, revalidatingFetchers, fetcherResults, activeDeferreds); // Wire up subscribers to update loaderData as promises settle
        activeDeferreds.forEach((deferredData, routeId)=>{
            deferredData.subscribe((aborted)=>{
                // Note: No need to updateState here since the TrackedPromise on
                // loaderData is stable across resolve/reject
                // Remove this instance if we were aborted or if promises have settled
                if (aborted || deferredData.done) activeDeferreds.delete(routeId);
            });
        });
        let updatedFetchers = markFetchRedirectsDone();
        let didAbortFetchLoads = abortStaleFetchLoads(pendingNavigationLoadId);
        let shouldUpdateFetchers = updatedFetchers || didAbortFetchLoads || revalidatingFetchers.length > 0;
        return $cbc79efe0a1f5829$var$_extends({
            loaderData: loaderData,
            errors: errors
        }, shouldUpdateFetchers ? {
            fetchers: new Map(state.fetchers)
        } : {});
    }
    function getFetcher(key) {
        return state.fetchers.get(key) || $cbc79efe0a1f5829$export$52eace9c284d3585;
    } // Trigger a fetcher load/submit for the given fetcher key
    function fetch(key, routeId, href, opts) {
        if ($cbc79efe0a1f5829$var$isServer) throw new Error("router.fetch() was called during the server render, but it shouldn't be. You are likely calling a useFetcher() method in the body of your component. Try moving it to a useEffect or a callback.");
        if (fetchControllers.has(key)) abortFetcher(key);
        let routesToUse = inFlightDataRoutes || dataRoutes;
        let normalizedPath = $cbc79efe0a1f5829$var$normalizeTo(state.location, state.matches, basename, future.v7_prependBasename, href, routeId, opts == null ? void 0 : opts.relative);
        let matches = $cbc79efe0a1f5829$export$2708184779ceb39d(routesToUse, normalizedPath, basename);
        if (!matches) {
            setFetcherError(key, routeId, $cbc79efe0a1f5829$var$getInternalRouterError(404, {
                pathname: normalizedPath
            }));
            return;
        }
        let { path: path , submission: submission  } = $cbc79efe0a1f5829$var$normalizeNavigateOptions(future.v7_normalizeFormMethod, true, normalizedPath, opts);
        let match = $cbc79efe0a1f5829$var$getTargetMatch(matches, path);
        pendingPreventScrollReset = (opts && opts.preventScrollReset) === true;
        if (submission && $cbc79efe0a1f5829$var$isMutationMethod(submission.formMethod)) {
            handleFetcherAction(key, routeId, path, match, matches, submission);
            return;
        } // Store off the match so we can call it's shouldRevalidate on subsequent
        // revalidations
        fetchLoadMatches.set(key, {
            routeId: routeId,
            path: path
        });
        handleFetcherLoader(key, routeId, path, match, matches, submission);
    } // Call the action for the matched fetcher.submit(), and then handle redirects,
    // errors, and revalidation
    async function handleFetcherAction(key, routeId, path, match, requestMatches, submission) {
        interruptActiveLoads();
        fetchLoadMatches.delete(key);
        if (!match.route.action && !match.route.lazy) {
            let error = $cbc79efe0a1f5829$var$getInternalRouterError(405, {
                method: submission.formMethod,
                pathname: path,
                routeId: routeId
            });
            setFetcherError(key, routeId, error);
            return;
        } // Put this fetcher into it's submitting state
        let existingFetcher = state.fetchers.get(key);
        let fetcher = $cbc79efe0a1f5829$var$_extends({
            state: "submitting"
        }, submission, {
            data: existingFetcher && existingFetcher.data,
            " _hasFetcherDoneAnything ": true
        });
        state.fetchers.set(key, fetcher);
        updateState({
            fetchers: new Map(state.fetchers)
        }); // Call the action for the fetcher
        let abortController = new AbortController();
        let fetchRequest = $cbc79efe0a1f5829$var$createClientSideRequest(init.history, path, abortController.signal, submission);
        fetchControllers.set(key, abortController);
        let actionResult = await $cbc79efe0a1f5829$var$callLoaderOrAction("action", fetchRequest, match, requestMatches, manifest, mapRouteProperties, basename);
        if (fetchRequest.signal.aborted) {
            // We can delete this so long as we weren't aborted by ou our own fetcher
            // re-submit which would have put _new_ controller is in fetchControllers
            if (fetchControllers.get(key) === abortController) fetchControllers.delete(key);
            return;
        }
        if ($cbc79efe0a1f5829$var$isRedirectResult(actionResult)) {
            fetchControllers.delete(key);
            fetchRedirectIds.add(key);
            let loadingFetcher = $cbc79efe0a1f5829$var$_extends({
                state: "loading"
            }, submission, {
                data: undefined,
                " _hasFetcherDoneAnything ": true
            });
            state.fetchers.set(key, loadingFetcher);
            updateState({
                fetchers: new Map(state.fetchers)
            });
            return startRedirectNavigation(state, actionResult, {
                submission: submission,
                isFetchActionRedirect: true
            });
        } // Process any non-redirect errors thrown
        if ($cbc79efe0a1f5829$var$isErrorResult(actionResult)) {
            setFetcherError(key, routeId, actionResult.error);
            return;
        }
        if ($cbc79efe0a1f5829$var$isDeferredResult(actionResult)) throw $cbc79efe0a1f5829$var$getInternalRouterError(400, {
            type: "defer-action"
        });
         // Start the data load for current matches, or the next location if we're
        // in the middle of a navigation
        let nextLocation = state.navigation.location || state.location;
        let revalidationRequest = $cbc79efe0a1f5829$var$createClientSideRequest(init.history, nextLocation, abortController.signal);
        let routesToUse = inFlightDataRoutes || dataRoutes;
        let matches = state.navigation.state !== "idle" ? $cbc79efe0a1f5829$export$2708184779ceb39d(routesToUse, state.navigation.location, basename) : state.matches;
        $cbc79efe0a1f5829$export$3e9cee6b33872309(matches, "Didn't find any matches after fetcher action");
        let loadId = ++incrementingLoadId;
        fetchReloadIds.set(key, loadId);
        let loadFetcher = $cbc79efe0a1f5829$var$_extends({
            state: "loading",
            data: actionResult.data
        }, submission, {
            " _hasFetcherDoneAnything ": true
        });
        state.fetchers.set(key, loadFetcher);
        let [matchesToLoad, revalidatingFetchers] = $cbc79efe0a1f5829$var$getMatchesToLoad(init.history, state, matches, submission, nextLocation, isRevalidationRequired, cancelledDeferredRoutes, cancelledFetcherLoads, fetchLoadMatches, routesToUse, basename, {
            [match.route.id]: actionResult.data
        }, undefined // No need to send through errors since we short circuit above
        ); // Put all revalidating fetchers into the loading state, except for the
        // current fetcher which we want to keep in it's current loading state which
        // contains it's action submission info + action data
        revalidatingFetchers.filter((rf)=>rf.key !== key).forEach((rf)=>{
            let staleKey = rf.key;
            let existingFetcher = state.fetchers.get(staleKey);
            let revalidatingFetcher = {
                state: "loading",
                data: existingFetcher && existingFetcher.data,
                formMethod: undefined,
                formAction: undefined,
                formEncType: undefined,
                formData: undefined,
                " _hasFetcherDoneAnything ": true
            };
            state.fetchers.set(staleKey, revalidatingFetcher);
            if (rf.controller) fetchControllers.set(staleKey, rf.controller);
        });
        updateState({
            fetchers: new Map(state.fetchers)
        });
        let abortPendingFetchRevalidations = ()=>revalidatingFetchers.forEach((rf)=>abortFetcher(rf.key));
        abortController.signal.addEventListener("abort", abortPendingFetchRevalidations);
        let { results: results , loaderResults: loaderResults , fetcherResults: fetcherResults  } = await callLoadersAndMaybeResolveData(state.matches, matches, matchesToLoad, revalidatingFetchers, revalidationRequest);
        if (abortController.signal.aborted) return;
        abortController.signal.removeEventListener("abort", abortPendingFetchRevalidations);
        fetchReloadIds.delete(key);
        fetchControllers.delete(key);
        revalidatingFetchers.forEach((r)=>fetchControllers.delete(r.key));
        let redirect = $cbc79efe0a1f5829$var$findRedirect(results);
        if (redirect) return startRedirectNavigation(state, redirect);
         // Process and commit output from loaders
        let { loaderData: loaderData , errors: errors  } = $cbc79efe0a1f5829$var$processLoaderData(state, state.matches, matchesToLoad, loaderResults, undefined, revalidatingFetchers, fetcherResults, activeDeferreds);
        let doneFetcher = {
            state: "idle",
            data: actionResult.data,
            formMethod: undefined,
            formAction: undefined,
            formEncType: undefined,
            formData: undefined,
            " _hasFetcherDoneAnything ": true
        };
        state.fetchers.set(key, doneFetcher);
        let didAbortFetchLoads = abortStaleFetchLoads(loadId); // If we are currently in a navigation loading state and this fetcher is
        // more recent than the navigation, we want the newer data so abort the
        // navigation and complete it with the fetcher data
        if (state.navigation.state === "loading" && loadId > pendingNavigationLoadId) {
            $cbc79efe0a1f5829$export$3e9cee6b33872309(pendingAction, "Expected pending action");
            pendingNavigationController && pendingNavigationController.abort();
            completeNavigation(state.navigation.location, {
                matches: matches,
                loaderData: loaderData,
                errors: errors,
                fetchers: new Map(state.fetchers)
            });
        } else {
            // otherwise just update with the fetcher data, preserving any existing
            // loaderData for loaders that did not need to reload.  We have to
            // manually merge here since we aren't going through completeNavigation
            updateState($cbc79efe0a1f5829$var$_extends({
                errors: errors,
                loaderData: $cbc79efe0a1f5829$var$mergeLoaderData(state.loaderData, loaderData, matches, errors)
            }, didAbortFetchLoads ? {
                fetchers: new Map(state.fetchers)
            } : {}));
            isRevalidationRequired = false;
        }
    } // Call the matched loader for fetcher.load(), handling redirects, errors, etc.
    async function handleFetcherLoader(key, routeId, path, match, matches, submission) {
        let existingFetcher = state.fetchers.get(key); // Put this fetcher into it's loading state
        let loadingFetcher = $cbc79efe0a1f5829$var$_extends({
            state: "loading",
            formMethod: undefined,
            formAction: undefined,
            formEncType: undefined,
            formData: undefined
        }, submission, {
            data: existingFetcher && existingFetcher.data,
            " _hasFetcherDoneAnything ": true
        });
        state.fetchers.set(key, loadingFetcher);
        updateState({
            fetchers: new Map(state.fetchers)
        }); // Call the loader for this fetcher route match
        let abortController = new AbortController();
        let fetchRequest = $cbc79efe0a1f5829$var$createClientSideRequest(init.history, path, abortController.signal);
        fetchControllers.set(key, abortController);
        let result = await $cbc79efe0a1f5829$var$callLoaderOrAction("loader", fetchRequest, match, matches, manifest, mapRouteProperties, basename); // Deferred isn't supported for fetcher loads, await everything and treat it
        // as a normal load.  resolveDeferredData will return undefined if this
        // fetcher gets aborted, so we just leave result untouched and short circuit
        // below if that happens
        if ($cbc79efe0a1f5829$var$isDeferredResult(result)) result = await $cbc79efe0a1f5829$var$resolveDeferredData(result, fetchRequest.signal, true) || result;
         // We can delete this so long as we weren't aborted by our our own fetcher
        // re-load which would have put _new_ controller is in fetchControllers
        if (fetchControllers.get(key) === abortController) fetchControllers.delete(key);
        if (fetchRequest.signal.aborted) return;
         // If the loader threw a redirect Response, start a new REPLACE navigation
        if ($cbc79efe0a1f5829$var$isRedirectResult(result)) {
            fetchRedirectIds.add(key);
            await startRedirectNavigation(state, result);
            return;
        } // Process any non-redirect errors thrown
        if ($cbc79efe0a1f5829$var$isErrorResult(result)) {
            let boundaryMatch = $cbc79efe0a1f5829$var$findNearestBoundary(state.matches, routeId);
            state.fetchers.delete(key); // TODO: In remix, this would reset to IDLE_NAVIGATION if it was a catch -
            // do we need to behave any differently with our non-redirect errors?
            // What if it was a non-redirect Response?
            updateState({
                fetchers: new Map(state.fetchers),
                errors: {
                    [boundaryMatch.route.id]: result.error
                }
            });
            return;
        }
        $cbc79efe0a1f5829$export$3e9cee6b33872309(!$cbc79efe0a1f5829$var$isDeferredResult(result), "Unhandled fetcher deferred data"); // Put the fetcher back into an idle state
        let doneFetcher = {
            state: "idle",
            data: result.data,
            formMethod: undefined,
            formAction: undefined,
            formEncType: undefined,
            formData: undefined,
            " _hasFetcherDoneAnything ": true
        };
        state.fetchers.set(key, doneFetcher);
        updateState({
            fetchers: new Map(state.fetchers)
        });
    }
    /**
   * Utility function to handle redirects returned from an action or loader.
   * Normally, a redirect "replaces" the navigation that triggered it.  So, for
   * example:
   *
   *  - user is on /a
   *  - user clicks a link to /b
   *  - loader for /b redirects to /c
   *
   * In a non-JS app the browser would track the in-flight navigation to /b and
   * then replace it with /c when it encountered the redirect response.  In
   * the end it would only ever update the URL bar with /c.
   *
   * In client-side routing using pushState/replaceState, we aim to emulate
   * this behavior and we also do not update history until the end of the
   * navigation (including processed redirects).  This means that we never
   * actually touch history until we've processed redirects, so we just use
   * the history action from the original navigation (PUSH or REPLACE).
   */ async function startRedirectNavigation(state, redirect, _temp) {
        var _window;
        let { submission: submission , replace: replace , isFetchActionRedirect: isFetchActionRedirect  } = _temp === void 0 ? {} : _temp;
        if (redirect.revalidate) isRevalidationRequired = true;
        let redirectLocation = $cbc79efe0a1f5829$var$createLocation(state.location, redirect.location, $cbc79efe0a1f5829$var$_extends({
            _isRedirect: true
        }, isFetchActionRedirect ? {
            _isFetchActionRedirect: true
        } : {}));
        $cbc79efe0a1f5829$export$3e9cee6b33872309(redirectLocation, "Expected a location on the redirect navigation"); // Check if this an absolute external redirect that goes to a new origin
        if ($cbc79efe0a1f5829$var$ABSOLUTE_URL_REGEX.test(redirect.location) && $cbc79efe0a1f5829$var$isBrowser && typeof ((_window = window) == null ? void 0 : _window.location) !== "undefined") {
            let url = init.history.createURL(redirect.location);
            let isDifferentBasename = $cbc79efe0a1f5829$export$b69e3301ce081aa3(url.pathname, basename) == null;
            if (window.location.origin !== url.origin || isDifferentBasename) {
                if (replace) window.location.replace(redirect.location);
                else window.location.assign(redirect.location);
                return;
            }
        } // There's no need to abort on redirects, since we don't detect the
        // redirect until the action/loaders have settled
        pendingNavigationController = null;
        let redirectHistoryAction = replace === true ? $cbc79efe0a1f5829$export$e19cd5f9376f8cee.Replace : $cbc79efe0a1f5829$export$e19cd5f9376f8cee.Push; // Use the incoming submission if provided, fallback on the active one in
        // state.navigation
        let { formMethod: formMethod , formAction: formAction , formEncType: formEncType , formData: formData  } = state.navigation;
        if (!submission && formMethod && formAction && formData && formEncType) submission = {
            formMethod: formMethod,
            formAction: formAction,
            formEncType: formEncType,
            formData: formData
        };
         // If this was a 307/308 submission we want to preserve the HTTP method and
        // re-submit the GET/POST/PUT/PATCH/DELETE as a submission navigation to the
        // redirected location
        if ($cbc79efe0a1f5829$var$redirectPreserveMethodStatusCodes.has(redirect.status) && submission && $cbc79efe0a1f5829$var$isMutationMethod(submission.formMethod)) await startNavigation(redirectHistoryAction, redirectLocation, {
            submission: $cbc79efe0a1f5829$var$_extends({}, submission, {
                formAction: redirect.location
            }),
            // Preserve this flag across redirects
            preventScrollReset: pendingPreventScrollReset
        });
        else if (isFetchActionRedirect) // For a fetch action redirect, we kick off a new loading navigation
        // without the fetcher submission, but we send it along for shouldRevalidate
        await startNavigation(redirectHistoryAction, redirectLocation, {
            overrideNavigation: {
                state: "loading",
                location: redirectLocation,
                formMethod: undefined,
                formAction: undefined,
                formEncType: undefined,
                formData: undefined
            },
            fetcherSubmission: submission,
            // Preserve this flag across redirects
            preventScrollReset: pendingPreventScrollReset
        });
        else // Otherwise, we kick off a new loading navigation, preserving the
        // submission info for the duration of this navigation
        await startNavigation(redirectHistoryAction, redirectLocation, {
            overrideNavigation: {
                state: "loading",
                location: redirectLocation,
                formMethod: submission ? submission.formMethod : undefined,
                formAction: submission ? submission.formAction : undefined,
                formEncType: submission ? submission.formEncType : undefined,
                formData: submission ? submission.formData : undefined
            },
            // Preserve this flag across redirects
            preventScrollReset: pendingPreventScrollReset
        });
    }
    async function callLoadersAndMaybeResolveData(currentMatches, matches, matchesToLoad, fetchersToLoad, request) {
        // Call all navigation loaders and revalidating fetcher loaders in parallel,
        // then slice off the results into separate arrays so we can handle them
        // accordingly
        let results = await Promise.all([
            ...matchesToLoad.map((match)=>$cbc79efe0a1f5829$var$callLoaderOrAction("loader", request, match, matches, manifest, mapRouteProperties, basename)),
            ...fetchersToLoad.map((f)=>{
                if (f.matches && f.match && f.controller) return $cbc79efe0a1f5829$var$callLoaderOrAction("loader", $cbc79efe0a1f5829$var$createClientSideRequest(init.history, f.path, f.controller.signal), f.match, f.matches, manifest, mapRouteProperties, basename);
                else {
                    let error = {
                        type: $cbc79efe0a1f5829$var$ResultType.error,
                        error: $cbc79efe0a1f5829$var$getInternalRouterError(404, {
                            pathname: f.path
                        })
                    };
                    return error;
                }
            })
        ]);
        let loaderResults = results.slice(0, matchesToLoad.length);
        let fetcherResults = results.slice(matchesToLoad.length);
        await Promise.all([
            $cbc79efe0a1f5829$var$resolveDeferredResults(currentMatches, matchesToLoad, loaderResults, loaderResults.map(()=>request.signal), false, state.loaderData),
            $cbc79efe0a1f5829$var$resolveDeferredResults(currentMatches, fetchersToLoad.map((f)=>f.match), fetcherResults, fetchersToLoad.map((f)=>f.controller ? f.controller.signal : null), true)
        ]);
        return {
            results: results,
            loaderResults: loaderResults,
            fetcherResults: fetcherResults
        };
    }
    function interruptActiveLoads() {
        // Every interruption triggers a revalidation
        isRevalidationRequired = true; // Cancel pending route-level deferreds and mark cancelled routes for
        // revalidation
        cancelledDeferredRoutes.push(...cancelActiveDeferreds()); // Abort in-flight fetcher loads
        fetchLoadMatches.forEach((_, key)=>{
            if (fetchControllers.has(key)) {
                cancelledFetcherLoads.push(key);
                abortFetcher(key);
            }
        });
    }
    function setFetcherError(key, routeId, error) {
        let boundaryMatch = $cbc79efe0a1f5829$var$findNearestBoundary(state.matches, routeId);
        deleteFetcher(key);
        updateState({
            errors: {
                [boundaryMatch.route.id]: error
            },
            fetchers: new Map(state.fetchers)
        });
    }
    function deleteFetcher(key) {
        if (fetchControllers.has(key)) abortFetcher(key);
        fetchLoadMatches.delete(key);
        fetchReloadIds.delete(key);
        fetchRedirectIds.delete(key);
        state.fetchers.delete(key);
    }
    function abortFetcher(key) {
        let controller = fetchControllers.get(key);
        $cbc79efe0a1f5829$export$3e9cee6b33872309(controller, "Expected fetch controller: " + key);
        controller.abort();
        fetchControllers.delete(key);
    }
    function markFetchersDone(keys) {
        for (let key of keys){
            let fetcher = getFetcher(key);
            let doneFetcher = {
                state: "idle",
                data: fetcher.data,
                formMethod: undefined,
                formAction: undefined,
                formEncType: undefined,
                formData: undefined,
                " _hasFetcherDoneAnything ": true
            };
            state.fetchers.set(key, doneFetcher);
        }
    }
    function markFetchRedirectsDone() {
        let doneKeys = [];
        let updatedFetchers = false;
        for (let key of fetchRedirectIds){
            let fetcher = state.fetchers.get(key);
            $cbc79efe0a1f5829$export$3e9cee6b33872309(fetcher, "Expected fetcher: " + key);
            if (fetcher.state === "loading") {
                fetchRedirectIds.delete(key);
                doneKeys.push(key);
                updatedFetchers = true;
            }
        }
        markFetchersDone(doneKeys);
        return updatedFetchers;
    }
    function abortStaleFetchLoads(landedId) {
        let yeetedKeys = [];
        for (let [key, id] of fetchReloadIds)if (id < landedId) {
            let fetcher = state.fetchers.get(key);
            $cbc79efe0a1f5829$export$3e9cee6b33872309(fetcher, "Expected fetcher: " + key);
            if (fetcher.state === "loading") {
                abortFetcher(key);
                fetchReloadIds.delete(key);
                yeetedKeys.push(key);
            }
        }
        markFetchersDone(yeetedKeys);
        return yeetedKeys.length > 0;
    }
    function getBlocker(key, fn) {
        let blocker = state.blockers.get(key) || $cbc79efe0a1f5829$export$386d57f03f0b2883;
        if (blockerFunctions.get(key) !== fn) blockerFunctions.set(key, fn);
        return blocker;
    }
    function deleteBlocker(key) {
        state.blockers.delete(key);
        blockerFunctions.delete(key);
    } // Utility function to update blockers, ensuring valid state transitions
    function updateBlocker(key, newBlocker) {
        let blocker = state.blockers.get(key) || $cbc79efe0a1f5829$export$386d57f03f0b2883; // Poor mans state machine :)
        // https://mermaid.live/edit#pako:eNqVkc9OwzAMxl8l8nnjAYrEtDIOHEBIgwvKJTReGy3_lDpIqO27k6awMG0XcrLlnz87nwdonESogKXXBuE79rq75XZO3-yHds0RJVuv70YrPlUrCEe2HfrORS3rubqZfuhtpg5C9wk5tZ4VKcRUq88q9Z8RS0-48cE1iHJkL0ugbHuFLus9L6spZy8nX9MP2CNdomVaposqu3fGayT8T8-jJQwhepo_UtpgBQaDEUom04dZhAN1aJBDlUKJBxE1ceB2Smj0Mln-IBW5AFU2dwUiktt_2Qaq2dBfaKdEup85UV7Yd-dKjlnkabl2Pvr0DTkTreM
        $cbc79efe0a1f5829$export$3e9cee6b33872309(blocker.state === "unblocked" && newBlocker.state === "blocked" || blocker.state === "blocked" && newBlocker.state === "blocked" || blocker.state === "blocked" && newBlocker.state === "proceeding" || blocker.state === "blocked" && newBlocker.state === "unblocked" || blocker.state === "proceeding" && newBlocker.state === "unblocked", "Invalid blocker state transition: " + blocker.state + " -> " + newBlocker.state);
        state.blockers.set(key, newBlocker);
        updateState({
            blockers: new Map(state.blockers)
        });
    }
    function shouldBlockNavigation(_ref2) {
        let { currentLocation: currentLocation , nextLocation: nextLocation , historyAction: historyAction  } = _ref2;
        if (blockerFunctions.size === 0) return;
         // We ony support a single active blocker at the moment since we don't have
        // any compelling use cases for multi-blocker yet
        if (blockerFunctions.size > 1) $cbc79efe0a1f5829$export$c0e02632e14916fd(false, "A router only supports one blocker at a time");
        let entries = Array.from(blockerFunctions.entries());
        let [blockerKey, blockerFunction] = entries[entries.length - 1];
        let blocker = state.blockers.get(blockerKey);
        if (blocker && blocker.state === "proceeding") // If the blocker is currently proceeding, we don't need to re-check
        // it and can let this navigation continue
        return;
         // At this point, we know we're unblocked/blocked so we need to check the
        // user-provided blocker function
        if (blockerFunction({
            currentLocation: currentLocation,
            nextLocation: nextLocation,
            historyAction: historyAction
        })) return blockerKey;
    }
    function cancelActiveDeferreds(predicate) {
        let cancelledRouteIds = [];
        activeDeferreds.forEach((dfd, routeId)=>{
            if (!predicate || predicate(routeId)) {
                // Cancel the deferred - but do not remove from activeDeferreds here -
                // we rely on the subscribers to do that so our tests can assert proper
                // cleanup via _internalActiveDeferreds
                dfd.cancel();
                cancelledRouteIds.push(routeId);
                activeDeferreds.delete(routeId);
            }
        });
        return cancelledRouteIds;
    } // Opt in to capturing and reporting scroll positions during navigations,
    // used by the <ScrollRestoration> component
    function enableScrollRestoration(positions, getPosition, getKey) {
        savedScrollPositions = positions;
        getScrollPosition = getPosition;
        getScrollRestorationKey = getKey || ((location)=>location.key); // Perform initial hydration scroll restoration, since we miss the boat on
        // the initial updateState() because we've not yet rendered <ScrollRestoration/>
        // and therefore have no savedScrollPositions available
        if (!initialScrollRestored && state.navigation === $cbc79efe0a1f5829$export$ed3e14b2f9e105d0) {
            initialScrollRestored = true;
            let y = getSavedScrollPosition(state.location, state.matches);
            if (y != null) updateState({
                restoreScrollPosition: y
            });
        }
        return ()=>{
            savedScrollPositions = null;
            getScrollPosition = null;
            getScrollRestorationKey = null;
        };
    }
    function saveScrollPosition(location, matches) {
        if (savedScrollPositions && getScrollRestorationKey && getScrollPosition) {
            let userMatches = matches.map((m)=>$cbc79efe0a1f5829$var$createUseMatchesMatch(m, state.loaderData));
            let key = getScrollRestorationKey(location, userMatches) || location.key;
            savedScrollPositions[key] = getScrollPosition();
        }
    }
    function getSavedScrollPosition(location, matches) {
        if (savedScrollPositions && getScrollRestorationKey && getScrollPosition) {
            let userMatches = matches.map((m)=>$cbc79efe0a1f5829$var$createUseMatchesMatch(m, state.loaderData));
            let key = getScrollRestorationKey(location, userMatches) || location.key;
            let y = savedScrollPositions[key];
            if (typeof y === "number") return y;
        }
        return null;
    }
    function _internalSetRoutes(newRoutes) {
        inFlightDataRoutes = newRoutes;
    }
    router = {
        get basename () {
            return basename;
        },
        get state () {
            return state;
        },
        get routes () {
            return dataRoutes;
        },
        initialize: initialize,
        subscribe: subscribe,
        enableScrollRestoration: enableScrollRestoration,
        navigate: navigate,
        fetch: fetch,
        revalidate: revalidate,
        // Passthrough to history-aware createHref used by useHref so we get proper
        // hash-aware URLs in DOM paths
        createHref: (to)=>init.history.createHref(to),
        encodeLocation: (to)=>init.history.encodeLocation(to),
        getFetcher: getFetcher,
        deleteFetcher: deleteFetcher,
        dispose: dispose,
        getBlocker: getBlocker,
        deleteBlocker: deleteBlocker,
        _internalFetchControllers: fetchControllers,
        _internalActiveDeferreds: activeDeferreds,
        _internalSetRoutes: // TODO: Remove setRoutes, it's temporary to avoid dealing with
        // updating the tree while validating the update algorithm.
        _internalSetRoutes
    };
    return router;
} //#endregion
////////////////////////////////////////////////////////////////////////////////
//#region createStaticHandler
////////////////////////////////////////////////////////////////////////////////
const $cbc79efe0a1f5829$export$4d0306f8f6a4585b = Symbol("deferred");
function $cbc79efe0a1f5829$export$3336b097a6fbc59a(routes, opts) {
    $cbc79efe0a1f5829$export$3e9cee6b33872309(routes.length > 0, "You must provide a non-empty routes array to createStaticHandler");
    let manifest = {};
    let basename = (opts ? opts.basename : null) || "/";
    let mapRouteProperties;
    if (opts != null && opts.mapRouteProperties) mapRouteProperties = opts.mapRouteProperties;
    else if (opts != null && opts.detectErrorBoundary) {
        // If they are still using the deprecated version, wrap it with the new API
        let detectErrorBoundary = opts.detectErrorBoundary;
        mapRouteProperties = (route)=>({
                hasErrorBoundary: detectErrorBoundary(route)
            });
    } else mapRouteProperties = $cbc79efe0a1f5829$var$defaultMapRouteProperties;
    let dataRoutes = $cbc79efe0a1f5829$export$4a6d22b32134ea5d(routes, mapRouteProperties, undefined, manifest);
    /**
   * The query() method is intended for document requests, in which we want to
   * call an optional action and potentially multiple loaders for all nested
   * routes.  It returns a StaticHandlerContext object, which is very similar
   * to the router state (location, loaderData, actionData, errors, etc.) and
   * also adds SSR-specific information such as the statusCode and headers
   * from action/loaders Responses.
   *
   * It _should_ never throw and should report all errors through the
   * returned context.errors object, properly associating errors to their error
   * boundary.  Additionally, it tracks _deepestRenderedBoundaryId which can be
   * used to emulate React error boundaries during SSr by performing a second
   * pass only down to the boundaryId.
   *
   * The one exception where we do not return a StaticHandlerContext is when a
   * redirect response is returned or thrown from any action/loader.  We
   * propagate that out and return the raw Response so the HTTP server can
   * return it directly.
   */ async function query(request, _temp2) {
        let { requestContext: requestContext  } = _temp2 === void 0 ? {} : _temp2;
        let url = new URL(request.url);
        let method = request.method;
        let location = $cbc79efe0a1f5829$var$createLocation("", $cbc79efe0a1f5829$export$fe53371bee54353d(url), null, "default");
        let matches = $cbc79efe0a1f5829$export$2708184779ceb39d(dataRoutes, location, basename); // SSR supports HEAD requests while SPA doesn't
        if (!$cbc79efe0a1f5829$var$isValidMethod(method) && method !== "HEAD") {
            let error = $cbc79efe0a1f5829$var$getInternalRouterError(405, {
                method: method
            });
            let { matches: methodNotAllowedMatches , route: route  } = $cbc79efe0a1f5829$var$getShortCircuitMatches(dataRoutes);
            return {
                basename: basename,
                location: location,
                matches: methodNotAllowedMatches,
                loaderData: {},
                actionData: null,
                errors: {
                    [route.id]: error
                },
                statusCode: error.status,
                loaderHeaders: {},
                actionHeaders: {},
                activeDeferreds: null
            };
        } else if (!matches) {
            let error = $cbc79efe0a1f5829$var$getInternalRouterError(404, {
                pathname: location.pathname
            });
            let { matches: notFoundMatches , route: route  } = $cbc79efe0a1f5829$var$getShortCircuitMatches(dataRoutes);
            return {
                basename: basename,
                location: location,
                matches: notFoundMatches,
                loaderData: {},
                actionData: null,
                errors: {
                    [route.id]: error
                },
                statusCode: error.status,
                loaderHeaders: {},
                actionHeaders: {},
                activeDeferreds: null
            };
        }
        let result = await queryImpl(request, location, matches, requestContext);
        if ($cbc79efe0a1f5829$var$isResponse(result)) return result;
         // When returning StaticHandlerContext, we patch back in the location here
        // since we need it for React Context.  But this helps keep our submit and
        // loadRouteData operating on a Request instead of a Location
        return $cbc79efe0a1f5829$var$_extends({
            location: location,
            basename: basename
        }, result);
    }
    /**
   * The queryRoute() method is intended for targeted route requests, either
   * for fetch ?_data requests or resource route requests.  In this case, we
   * are only ever calling a single action or loader, and we are returning the
   * returned value directly.  In most cases, this will be a Response returned
   * from the action/loader, but it may be a primitive or other value as well -
   * and in such cases the calling context should handle that accordingly.
   *
   * We do respect the throw/return differentiation, so if an action/loader
   * throws, then this method will throw the value.  This is important so we
   * can do proper boundary identification in Remix where a thrown Response
   * must go to the Catch Boundary but a returned Response is happy-path.
   *
   * One thing to note is that any Router-initiated Errors that make sense
   * to associate with a status code will be thrown as an ErrorResponse
   * instance which include the raw Error, such that the calling context can
   * serialize the error as they see fit while including the proper response
   * code.  Examples here are 404 and 405 errors that occur prior to reaching
   * any user-defined loaders.
   */ async function queryRoute(request, _temp3) {
        let { routeId: routeId , requestContext: requestContext  } = _temp3 === void 0 ? {} : _temp3;
        let url = new URL(request.url);
        let method = request.method;
        let location = $cbc79efe0a1f5829$var$createLocation("", $cbc79efe0a1f5829$export$fe53371bee54353d(url), null, "default");
        let matches = $cbc79efe0a1f5829$export$2708184779ceb39d(dataRoutes, location, basename); // SSR supports HEAD requests while SPA doesn't
        if (!$cbc79efe0a1f5829$var$isValidMethod(method) && method !== "HEAD" && method !== "OPTIONS") throw $cbc79efe0a1f5829$var$getInternalRouterError(405, {
            method: method
        });
        else if (!matches) throw $cbc79efe0a1f5829$var$getInternalRouterError(404, {
            pathname: location.pathname
        });
        let match = routeId ? matches.find((m)=>m.route.id === routeId) : $cbc79efe0a1f5829$var$getTargetMatch(matches, location);
        if (routeId && !match) throw $cbc79efe0a1f5829$var$getInternalRouterError(403, {
            pathname: location.pathname,
            routeId: routeId
        });
        else if (!match) // This should never hit I don't think?
        throw $cbc79efe0a1f5829$var$getInternalRouterError(404, {
            pathname: location.pathname
        });
        let result = await queryImpl(request, location, matches, requestContext, match);
        if ($cbc79efe0a1f5829$var$isResponse(result)) return result;
        let error = result.errors ? Object.values(result.errors)[0] : undefined;
        if (error !== undefined) // If we got back result.errors, that means the loader/action threw
        // _something_ that wasn't a Response, but it's not guaranteed/required
        // to be an `instanceof Error` either, so we have to use throw here to
        // preserve the "error" state outside of queryImpl.
        throw error;
         // Pick off the right state value to return
        if (result.actionData) return Object.values(result.actionData)[0];
        if (result.loaderData) {
            var _result$activeDeferre;
            let data = Object.values(result.loaderData)[0];
            if ((_result$activeDeferre = result.activeDeferreds) != null && _result$activeDeferre[match.route.id]) data[$cbc79efe0a1f5829$export$4d0306f8f6a4585b] = result.activeDeferreds[match.route.id];
            return data;
        }
        return undefined;
    }
    async function queryImpl(request, location, matches, requestContext, routeMatch) {
        $cbc79efe0a1f5829$export$3e9cee6b33872309(request.signal, "query()/queryRoute() requests must contain an AbortController signal");
        try {
            if ($cbc79efe0a1f5829$var$isMutationMethod(request.method.toLowerCase())) {
                let result = await submit(request, matches, routeMatch || $cbc79efe0a1f5829$var$getTargetMatch(matches, location), requestContext, routeMatch != null);
                return result;
            }
            let result = await loadRouteData(request, matches, requestContext, routeMatch);
            return $cbc79efe0a1f5829$var$isResponse(result) ? result : $cbc79efe0a1f5829$var$_extends({}, result, {
                actionData: null,
                actionHeaders: {}
            });
        } catch (e) {
            // If the user threw/returned a Response in callLoaderOrAction, we throw
            // it to bail out and then return or throw here based on whether the user
            // returned or threw
            if ($cbc79efe0a1f5829$var$isQueryRouteResponse(e)) {
                if (e.type === $cbc79efe0a1f5829$var$ResultType.error && !$cbc79efe0a1f5829$var$isRedirectResponse(e.response)) throw e.response;
                return e.response;
            } // Redirects are always returned since they don't propagate to catch
            // boundaries
            if ($cbc79efe0a1f5829$var$isRedirectResponse(e)) return e;
            throw e;
        }
    }
    async function submit(request, matches, actionMatch, requestContext, isRouteRequest) {
        let result;
        if (!actionMatch.route.action && !actionMatch.route.lazy) {
            let error = $cbc79efe0a1f5829$var$getInternalRouterError(405, {
                method: request.method,
                pathname: new URL(request.url).pathname,
                routeId: actionMatch.route.id
            });
            if (isRouteRequest) throw error;
            result = {
                type: $cbc79efe0a1f5829$var$ResultType.error,
                error: error
            };
        } else {
            result = await $cbc79efe0a1f5829$var$callLoaderOrAction("action", request, actionMatch, matches, manifest, mapRouteProperties, basename, true, isRouteRequest, requestContext);
            if (request.signal.aborted) {
                let method = isRouteRequest ? "queryRoute" : "query";
                throw new Error(method + "() call aborted");
            }
        }
        if ($cbc79efe0a1f5829$var$isRedirectResult(result)) // Uhhhh - this should never happen, we should always throw these from
        // callLoaderOrAction, but the type narrowing here keeps TS happy and we
        // can get back on the "throw all redirect responses" train here should
        // this ever happen :/
        throw new Response(null, {
            status: result.status,
            headers: {
                Location: result.location
            }
        });
        if ($cbc79efe0a1f5829$var$isDeferredResult(result)) {
            let error = $cbc79efe0a1f5829$var$getInternalRouterError(400, {
                type: "defer-action"
            });
            if (isRouteRequest) throw error;
            result = {
                type: $cbc79efe0a1f5829$var$ResultType.error,
                error: error
            };
        }
        if (isRouteRequest) {
            // Note: This should only be non-Response values if we get here, since
            // isRouteRequest should throw any Response received in callLoaderOrAction
            if ($cbc79efe0a1f5829$var$isErrorResult(result)) throw result.error;
            return {
                matches: [
                    actionMatch
                ],
                loaderData: {},
                actionData: {
                    [actionMatch.route.id]: result.data
                },
                errors: null,
                // Note: statusCode + headers are unused here since queryRoute will
                // return the raw Response or value
                statusCode: 200,
                loaderHeaders: {},
                actionHeaders: {},
                activeDeferreds: null
            };
        }
        if ($cbc79efe0a1f5829$var$isErrorResult(result)) {
            // Store off the pending error - we use it to determine which loaders
            // to call and will commit it when we complete the navigation
            let boundaryMatch = $cbc79efe0a1f5829$var$findNearestBoundary(matches, actionMatch.route.id);
            let context = await loadRouteData(request, matches, requestContext, undefined, {
                [boundaryMatch.route.id]: result.error
            }); // action status codes take precedence over loader status codes
            return $cbc79efe0a1f5829$var$_extends({}, context, {
                statusCode: $cbc79efe0a1f5829$export$972111febbeef05b(result.error) ? result.error.status : 500,
                actionData: null,
                actionHeaders: $cbc79efe0a1f5829$var$_extends({}, result.headers ? {
                    [actionMatch.route.id]: result.headers
                } : {})
            });
        } // Create a GET request for the loaders
        let loaderRequest = new Request(request.url, {
            headers: request.headers,
            redirect: request.redirect,
            signal: request.signal
        });
        let context = await loadRouteData(loaderRequest, matches, requestContext);
        return $cbc79efe0a1f5829$var$_extends({}, context, result.statusCode ? {
            statusCode: result.statusCode
        } : {}, {
            actionData: {
                [actionMatch.route.id]: result.data
            },
            actionHeaders: $cbc79efe0a1f5829$var$_extends({}, result.headers ? {
                [actionMatch.route.id]: result.headers
            } : {})
        });
    }
    async function loadRouteData(request, matches, requestContext, routeMatch, pendingActionError) {
        let isRouteRequest = routeMatch != null; // Short circuit if we have no loaders to run (queryRoute())
        if (isRouteRequest && !(routeMatch != null && routeMatch.route.loader) && !(routeMatch != null && routeMatch.route.lazy)) throw $cbc79efe0a1f5829$var$getInternalRouterError(400, {
            method: request.method,
            pathname: new URL(request.url).pathname,
            routeId: routeMatch == null ? void 0 : routeMatch.route.id
        });
        let requestMatches = routeMatch ? [
            routeMatch
        ] : $cbc79efe0a1f5829$var$getLoaderMatchesUntilBoundary(matches, Object.keys(pendingActionError || {})[0]);
        let matchesToLoad = requestMatches.filter((m)=>m.route.loader || m.route.lazy); // Short circuit if we have no loaders to run (query())
        if (matchesToLoad.length === 0) return {
            matches: matches,
            // Add a null for all matched routes for proper revalidation on the client
            loaderData: matches.reduce((acc, m)=>Object.assign(acc, {
                    [m.route.id]: null
                }), {}),
            errors: pendingActionError || null,
            statusCode: 200,
            loaderHeaders: {},
            activeDeferreds: null
        };
        let results = await Promise.all([
            ...matchesToLoad.map((match)=>$cbc79efe0a1f5829$var$callLoaderOrAction("loader", request, match, matches, manifest, mapRouteProperties, basename, true, isRouteRequest, requestContext))
        ]);
        if (request.signal.aborted) {
            let method = isRouteRequest ? "queryRoute" : "query";
            throw new Error(method + "() call aborted");
        } // Process and commit output from loaders
        let activeDeferreds = new Map();
        let context = $cbc79efe0a1f5829$var$processRouteLoaderData(matches, matchesToLoad, results, pendingActionError, activeDeferreds); // Add a null for any non-loader matches for proper revalidation on the client
        let executedLoaders = new Set(matchesToLoad.map((match)=>match.route.id));
        matches.forEach((match)=>{
            if (!executedLoaders.has(match.route.id)) context.loaderData[match.route.id] = null;
        });
        return $cbc79efe0a1f5829$var$_extends({}, context, {
            matches: matches,
            activeDeferreds: activeDeferreds.size > 0 ? Object.fromEntries(activeDeferreds.entries()) : null
        });
    }
    return {
        dataRoutes: dataRoutes,
        query: query,
        queryRoute: queryRoute
    };
} //#endregion
////////////////////////////////////////////////////////////////////////////////
//#region Helpers
////////////////////////////////////////////////////////////////////////////////
/**
 * Given an existing StaticHandlerContext and an error thrown at render time,
 * provide an updated StaticHandlerContext suitable for a second SSR render
 */ function $cbc79efe0a1f5829$export$fec11da027c70692(routes, context, error) {
    let newContext = $cbc79efe0a1f5829$var$_extends({}, context, {
        statusCode: 500,
        errors: {
            [context._deepestRenderedBoundaryId || routes[0].id]: error
        }
    });
    return newContext;
}
function $cbc79efe0a1f5829$var$isSubmissionNavigation(opts) {
    return opts != null && "formData" in opts;
}
function $cbc79efe0a1f5829$var$normalizeTo(location, matches, basename, prependBasename, to, fromRouteId, relative) {
    let contextualMatches;
    let activeRouteMatch;
    if (fromRouteId != null && relative !== "path") {
        // Grab matches up to the calling route so our route-relative logic is
        // relative to the correct source route.  When using relative:path,
        // fromRouteId is ignored since that is always relative to the current
        // location path
        contextualMatches = [];
        for (let match of matches){
            contextualMatches.push(match);
            if (match.route.id === fromRouteId) {
                activeRouteMatch = match;
                break;
            }
        }
    } else {
        contextualMatches = matches;
        activeRouteMatch = matches[matches.length - 1];
    } // Resolve the relative path
    let path = $cbc79efe0a1f5829$export$cae722b0cc860f13(to ? to : ".", $cbc79efe0a1f5829$export$90ba53ce1c7fdff2(contextualMatches).map((m)=>m.pathnameBase), $cbc79efe0a1f5829$export$b69e3301ce081aa3(location.pathname, basename) || location.pathname, relative === "path"); // When `to` is not specified we inherit search/hash from the current
    // location, unlike when to="." and we just inherit the path.
    // See https://github.com/remix-run/remix/issues/927
    if (to == null) {
        path.search = location.search;
        path.hash = location.hash;
    } // Add an ?index param for matched index routes if we don't already have one
    if ((to == null || to === "" || to === ".") && activeRouteMatch && activeRouteMatch.route.index && !$cbc79efe0a1f5829$var$hasNakedIndexQuery(path.search)) path.search = path.search ? path.search.replace(/^\?/, "?index&") : "?index";
     // If we're operating within a basename, prepend it to the pathname.  If
    // this is a root navigation, then just use the raw basename which allows
    // the basename to have full control over the presence of a trailing slash
    // on root actions
    if (prependBasename && basename !== "/") path.pathname = path.pathname === "/" ? basename : $cbc79efe0a1f5829$export$86d9a7913e44197e([
        basename,
        path.pathname
    ]);
    return $cbc79efe0a1f5829$export$fe53371bee54353d(path);
} // Normalize navigation options by converting formMethod=GET formData objects to
// URLSearchParams so they behave identically to links with query params
function $cbc79efe0a1f5829$var$normalizeNavigateOptions(normalizeFormMethod, isFetcher, path, opts) {
    // Return location verbatim on non-submission navigations
    if (!opts || !$cbc79efe0a1f5829$var$isSubmissionNavigation(opts)) return {
        path: path
    };
    if (opts.formMethod && !$cbc79efe0a1f5829$var$isValidMethod(opts.formMethod)) return {
        path: path,
        error: $cbc79efe0a1f5829$var$getInternalRouterError(405, {
            method: opts.formMethod
        })
    };
     // Create a Submission on non-GET navigations
    let submission;
    if (opts.formData) {
        let formMethod = opts.formMethod || "get";
        submission = {
            formMethod: normalizeFormMethod ? formMethod.toUpperCase() : formMethod.toLowerCase(),
            formAction: $cbc79efe0a1f5829$var$stripHashFromPath(path),
            formEncType: opts && opts.formEncType || "application/x-www-form-urlencoded",
            formData: opts.formData
        };
        if ($cbc79efe0a1f5829$var$isMutationMethod(submission.formMethod)) return {
            path: path,
            submission: submission
        };
    } // Flatten submission onto URLSearchParams for GET submissions
    let parsedPath = $cbc79efe0a1f5829$export$8ccf933b0513f8d0(path);
    let searchParams = $cbc79efe0a1f5829$var$convertFormDataToSearchParams(opts.formData); // On GET navigation submissions we can drop the ?index param from the
    // resulting location since all loaders will run.  But fetcher GET submissions
    // only run a single loader so we need to preserve any incoming ?index params
    if (isFetcher && parsedPath.search && $cbc79efe0a1f5829$var$hasNakedIndexQuery(parsedPath.search)) searchParams.append("index", "");
    parsedPath.search = "?" + searchParams;
    return {
        path: $cbc79efe0a1f5829$export$fe53371bee54353d(parsedPath),
        submission: submission
    };
} // Filter out all routes below any caught error as they aren't going to
// render so we don't need to load them
function $cbc79efe0a1f5829$var$getLoaderMatchesUntilBoundary(matches, boundaryId) {
    let boundaryMatches = matches;
    if (boundaryId) {
        let index = matches.findIndex((m)=>m.route.id === boundaryId);
        if (index >= 0) boundaryMatches = matches.slice(0, index);
    }
    return boundaryMatches;
}
function $cbc79efe0a1f5829$var$getMatchesToLoad(history, state, matches, submission, location, isRevalidationRequired, cancelledDeferredRoutes, cancelledFetcherLoads, fetchLoadMatches, routesToUse, basename, pendingActionData, pendingError) {
    let actionResult = pendingError ? Object.values(pendingError)[0] : pendingActionData ? Object.values(pendingActionData)[0] : undefined;
    let currentUrl = history.createURL(state.location);
    let nextUrl = history.createURL(location); // Pick navigation matches that are net-new or qualify for revalidation
    let boundaryId = pendingError ? Object.keys(pendingError)[0] : undefined;
    let boundaryMatches = $cbc79efe0a1f5829$var$getLoaderMatchesUntilBoundary(matches, boundaryId);
    let navigationMatches = boundaryMatches.filter((match, index)=>{
        if (match.route.lazy) // We haven't loaded this route yet so we don't know if it's got a loader!
        return true;
        if (match.route.loader == null) return false;
         // Always call the loader on new route instances and pending defer cancellations
        if ($cbc79efe0a1f5829$var$isNewLoader(state.loaderData, state.matches[index], match) || cancelledDeferredRoutes.some((id)=>id === match.route.id)) return true;
         // This is the default implementation for when we revalidate.  If the route
        // provides it's own implementation, then we give them full control but
        // provide this value so they can leverage it if needed after they check
        // their own specific use cases
        let currentRouteMatch = state.matches[index];
        let nextRouteMatch = match;
        return $cbc79efe0a1f5829$var$shouldRevalidateLoader(match, $cbc79efe0a1f5829$var$_extends({
            currentUrl: currentUrl,
            currentParams: currentRouteMatch.params,
            nextUrl: nextUrl,
            nextParams: nextRouteMatch.params
        }, submission, {
            actionResult: actionResult,
            defaultShouldRevalidate: isRevalidationRequired || // Clicked the same link, resubmitted a GET form
            currentUrl.pathname + currentUrl.search === nextUrl.pathname + nextUrl.search || // Search params affect all loaders
            currentUrl.search !== nextUrl.search || $cbc79efe0a1f5829$var$isNewRouteInstance(currentRouteMatch, nextRouteMatch)
        }));
    }); // Pick fetcher.loads that need to be revalidated
    let revalidatingFetchers = [];
    fetchLoadMatches.forEach((f, key)=>{
        // Don't revalidate if fetcher won't be present in the subsequent render
        if (!matches.some((m)=>m.route.id === f.routeId)) return;
        let fetcherMatches = $cbc79efe0a1f5829$export$2708184779ceb39d(routesToUse, f.path, basename); // If the fetcher path no longer matches, push it in with null matches so
        // we can trigger a 404 in callLoadersAndMaybeResolveData
        if (!fetcherMatches) {
            revalidatingFetchers.push({
                key: key,
                routeId: f.routeId,
                path: f.path,
                matches: null,
                match: null,
                controller: null
            });
            return;
        }
        let fetcherMatch = $cbc79efe0a1f5829$var$getTargetMatch(fetcherMatches, f.path);
        if (cancelledFetcherLoads.includes(key)) {
            revalidatingFetchers.push({
                key: key,
                routeId: f.routeId,
                path: f.path,
                matches: fetcherMatches,
                match: fetcherMatch,
                controller: new AbortController()
            });
            return;
        } // Revalidating fetchers are decoupled from the route matches since they
        // hit a static href, so they _always_ check shouldRevalidate and the
        // default is strictly if a revalidation is explicitly required (action
        // submissions, useRevalidator, X-Remix-Revalidate).
        let shouldRevalidate = $cbc79efe0a1f5829$var$shouldRevalidateLoader(fetcherMatch, $cbc79efe0a1f5829$var$_extends({
            currentUrl: currentUrl,
            currentParams: state.matches[state.matches.length - 1].params,
            nextUrl: nextUrl,
            nextParams: matches[matches.length - 1].params
        }, submission, {
            actionResult: actionResult,
            // Forced revalidation due to submission, useRevalidator, or X-Remix-Revalidate
            defaultShouldRevalidate: isRevalidationRequired
        }));
        if (shouldRevalidate) revalidatingFetchers.push({
            key: key,
            routeId: f.routeId,
            path: f.path,
            matches: fetcherMatches,
            match: fetcherMatch,
            controller: new AbortController()
        });
    });
    return [
        navigationMatches,
        revalidatingFetchers
    ];
}
function $cbc79efe0a1f5829$var$isNewLoader(currentLoaderData, currentMatch, match) {
    let isNew = !currentMatch || // [a, b] -> [a, c]
    match.route.id !== currentMatch.route.id; // Handle the case that we don't have data for a re-used route, potentially
    // from a prior error or from a cancelled pending deferred
    let isMissingData = currentLoaderData[match.route.id] === undefined; // Always load if this is a net-new route or we don't yet have data
    return isNew || isMissingData;
}
function $cbc79efe0a1f5829$var$isNewRouteInstance(currentMatch, match) {
    let currentPath = currentMatch.route.path;
    return currentMatch.pathname !== match.pathname || // splat param changed, which is not present in match.path
    // e.g. /files/images/avatar.jpg -> files/finances.xls
    currentPath != null && currentPath.endsWith("*") && currentMatch.params["*"] !== match.params["*"];
}
function $cbc79efe0a1f5829$var$shouldRevalidateLoader(loaderMatch, arg) {
    if (loaderMatch.route.shouldRevalidate) {
        let routeChoice = loaderMatch.route.shouldRevalidate(arg);
        if (typeof routeChoice === "boolean") return routeChoice;
    }
    return arg.defaultShouldRevalidate;
}
/**
 * Execute route.lazy() methods to lazily load route modules (loader, action,
 * shouldRevalidate) and update the routeManifest in place which shares objects
 * with dataRoutes so those get updated as well.
 */ async function $cbc79efe0a1f5829$var$loadLazyRouteModule(route, mapRouteProperties, manifest) {
    if (!route.lazy) return;
    let lazyRoute = await route.lazy(); // If the lazy route function was executed and removed by another parallel
    // call then we can return - first lazy() to finish wins because the return
    // value of lazy is expected to be static
    if (!route.lazy) return;
    let routeToUpdate = manifest[route.id];
    $cbc79efe0a1f5829$export$3e9cee6b33872309(routeToUpdate, "No route found in manifest"); // Update the route in place.  This should be safe because there's no way
    // we could yet be sitting on this route as we can't get there without
    // resolving lazy() first.
    //
    // This is different than the HMR "update" use-case where we may actively be
    // on the route being updated.  The main concern boils down to "does this
    // mutation affect any ongoing navigations or any current state.matches
    // values?".  If not, it should be safe to update in place.
    let routeUpdates = {};
    for(let lazyRouteProperty in lazyRoute){
        let staticRouteValue = routeToUpdate[lazyRouteProperty];
        let isPropertyStaticallyDefined = staticRouteValue !== undefined && // This property isn't static since it should always be updated based
        // on the route updates
        lazyRouteProperty !== "hasErrorBoundary";
        $cbc79efe0a1f5829$export$c0e02632e14916fd(!isPropertyStaticallyDefined, 'Route "' + routeToUpdate.id + '" has a static property "' + lazyRouteProperty + '" ' + "defined but its lazy function is also returning a value for this property. " + ('The lazy route property "' + lazyRouteProperty + '" will be ignored.'));
        if (!isPropertyStaticallyDefined && !$cbc79efe0a1f5829$var$immutableRouteKeys.has(lazyRouteProperty)) routeUpdates[lazyRouteProperty] = lazyRoute[lazyRouteProperty];
    } // Mutate the route with the provided updates.  Do this first so we pass
    // the updated version to mapRouteProperties
    Object.assign(routeToUpdate, routeUpdates); // Mutate the `hasErrorBoundary` property on the route based on the route
    // updates and remove the `lazy` function so we don't resolve the lazy
    // route again.
    Object.assign(routeToUpdate, $cbc79efe0a1f5829$var$_extends({}, mapRouteProperties(routeToUpdate), {
        lazy: undefined
    }));
}
async function $cbc79efe0a1f5829$var$callLoaderOrAction(type, request, match, matches, manifest, mapRouteProperties, basename, isStaticRequest, isRouteRequest, requestContext) {
    if (isStaticRequest === void 0) isStaticRequest = false;
    if (isRouteRequest === void 0) isRouteRequest = false;
    let resultType;
    let result;
    let onReject;
    let runHandler = (handler)=>{
        // Setup a promise we can race against so that abort signals short circuit
        let reject;
        let abortPromise = new Promise((_, r)=>reject = r);
        onReject = ()=>reject();
        request.signal.addEventListener("abort", onReject);
        return Promise.race([
            handler({
                request: request,
                params: match.params,
                context: requestContext
            }),
            abortPromise
        ]);
    };
    try {
        let handler = match.route[type];
        if (match.route.lazy) {
            if (handler) {
                // Run statically defined handler in parallel with lazy()
                let values = await Promise.all([
                    runHandler(handler),
                    $cbc79efe0a1f5829$var$loadLazyRouteModule(match.route, mapRouteProperties, manifest)
                ]);
                result = values[0];
            } else {
                // Load lazy route module, then run any returned handler
                await $cbc79efe0a1f5829$var$loadLazyRouteModule(match.route, mapRouteProperties, manifest);
                handler = match.route[type];
                if (handler) // Handler still run even if we got interrupted to maintain consistency
                // with un-abortable behavior of handler execution on non-lazy or
                // previously-lazy-loaded routes
                result = await runHandler(handler);
                else if (type === "action") {
                    let url = new URL(request.url);
                    let pathname = url.pathname + url.search;
                    throw $cbc79efe0a1f5829$var$getInternalRouterError(405, {
                        method: request.method,
                        pathname: pathname,
                        routeId: match.route.id
                    });
                } else // lazy() route has no loader to run.  Short circuit here so we don't
                // hit the invariant below that errors on returning undefined.
                return {
                    type: $cbc79efe0a1f5829$var$ResultType.data,
                    data: undefined
                };
            }
        } else if (!handler) {
            let url = new URL(request.url);
            let pathname = url.pathname + url.search;
            throw $cbc79efe0a1f5829$var$getInternalRouterError(404, {
                pathname: pathname
            });
        } else result = await runHandler(handler);
        $cbc79efe0a1f5829$export$3e9cee6b33872309(result !== undefined, "You defined " + (type === "action" ? "an action" : "a loader") + " for route " + ('"' + match.route.id + "\" but didn't return anything from your `" + type + "` ") + "function. Please return a value or `null`.");
    } catch (e) {
        resultType = $cbc79efe0a1f5829$var$ResultType.error;
        result = e;
    } finally{
        if (onReject) request.signal.removeEventListener("abort", onReject);
    }
    if ($cbc79efe0a1f5829$var$isResponse(result)) {
        let status = result.status; // Process redirects
        if ($cbc79efe0a1f5829$var$redirectStatusCodes.has(status)) {
            let location = result.headers.get("Location");
            $cbc79efe0a1f5829$export$3e9cee6b33872309(location, "Redirects returned/thrown from loaders/actions must have a Location header"); // Support relative routing in internal redirects
            if (!$cbc79efe0a1f5829$var$ABSOLUTE_URL_REGEX.test(location)) location = $cbc79efe0a1f5829$var$normalizeTo(new URL(request.url), matches.slice(0, matches.indexOf(match) + 1), basename, true, location);
            else if (!isStaticRequest) {
                // Strip off the protocol+origin for same-origin + same-basename absolute
                // redirects. If this is a static request, we can let it go back to the
                // browser as-is
                let currentUrl = new URL(request.url);
                let url = location.startsWith("//") ? new URL(currentUrl.protocol + location) : new URL(location);
                let isSameBasename = $cbc79efe0a1f5829$export$b69e3301ce081aa3(url.pathname, basename) != null;
                if (url.origin === currentUrl.origin && isSameBasename) location = url.pathname + url.search + url.hash;
            } // Don't process redirects in the router during static requests requests.
            // Instead, throw the Response and let the server handle it with an HTTP
            // redirect.  We also update the Location header in place in this flow so
            // basename and relative routing is taken into account
            if (isStaticRequest) {
                result.headers.set("Location", location);
                throw result;
            }
            return {
                type: $cbc79efe0a1f5829$var$ResultType.redirect,
                status: status,
                location: location,
                revalidate: result.headers.get("X-Remix-Revalidate") !== null
            };
        } // For SSR single-route requests, we want to hand Responses back directly
        // without unwrapping.  We do this with the QueryRouteResponse wrapper
        // interface so we can know whether it was returned or thrown
        if (isRouteRequest) // eslint-disable-next-line no-throw-literal
        throw {
            type: resultType || $cbc79efe0a1f5829$var$ResultType.data,
            response: result
        };
        let data;
        let contentType = result.headers.get("Content-Type"); // Check between word boundaries instead of startsWith() due to the last
        // paragraph of https://httpwg.org/specs/rfc9110.html#field.content-type
        if (contentType && /\bapplication\/json\b/.test(contentType)) data = await result.json();
        else data = await result.text();
        if (resultType === $cbc79efe0a1f5829$var$ResultType.error) return {
            type: resultType,
            error: new $cbc79efe0a1f5829$export$acf1a680051f5031(status, result.statusText, data),
            headers: result.headers
        };
        return {
            type: $cbc79efe0a1f5829$var$ResultType.data,
            data: data,
            statusCode: result.status,
            headers: result.headers
        };
    }
    if (resultType === $cbc79efe0a1f5829$var$ResultType.error) return {
        type: resultType,
        error: result
    };
    if ($cbc79efe0a1f5829$export$fbcedacb60443473(result)) {
        var _result$init, _result$init2;
        return {
            type: $cbc79efe0a1f5829$var$ResultType.deferred,
            deferredData: result,
            statusCode: (_result$init = result.init) == null ? void 0 : _result$init.status,
            headers: ((_result$init2 = result.init) == null ? void 0 : _result$init2.headers) && new Headers(result.init.headers)
        };
    }
    return {
        type: $cbc79efe0a1f5829$var$ResultType.data,
        data: result
    };
} // Utility method for creating the Request instances for loaders/actions during
// client-side navigations and fetches.  During SSR we will always have a
// Request instance from the static handler (query/queryRoute)
function $cbc79efe0a1f5829$var$createClientSideRequest(history, location, signal, submission) {
    let url = history.createURL($cbc79efe0a1f5829$var$stripHashFromPath(location)).toString();
    let init = {
        signal: signal
    };
    if (submission && $cbc79efe0a1f5829$var$isMutationMethod(submission.formMethod)) {
        let { formMethod: formMethod , formEncType: formEncType , formData: formData  } = submission; // Didn't think we needed this but it turns out unlike other methods, patch
        // won't be properly normalized to uppercase and results in a 405 error.
        // See: https://fetch.spec.whatwg.org/#concept-method
        init.method = formMethod.toUpperCase();
        init.body = formEncType === "application/x-www-form-urlencoded" ? $cbc79efe0a1f5829$var$convertFormDataToSearchParams(formData) : formData;
    } // Content-Type is inferred (https://fetch.spec.whatwg.org/#dom-request)
    return new Request(url, init);
}
function $cbc79efe0a1f5829$var$convertFormDataToSearchParams(formData) {
    let searchParams = new URLSearchParams();
    for (let [key, value] of formData.entries())// https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#converting-an-entry-list-to-a-list-of-name-value-pairs
    searchParams.append(key, value instanceof File ? value.name : value);
    return searchParams;
}
function $cbc79efe0a1f5829$var$processRouteLoaderData(matches, matchesToLoad, results, pendingError, activeDeferreds) {
    // Fill in loaderData/errors from our loaders
    let loaderData = {};
    let errors = null;
    let statusCode;
    let foundError = false;
    let loaderHeaders = {}; // Process loader results into state.loaderData/state.errors
    results.forEach((result, index)=>{
        let id = matchesToLoad[index].route.id;
        $cbc79efe0a1f5829$export$3e9cee6b33872309(!$cbc79efe0a1f5829$var$isRedirectResult(result), "Cannot handle redirect results in processLoaderData");
        if ($cbc79efe0a1f5829$var$isErrorResult(result)) {
            // Look upwards from the matched route for the closest ancestor
            // error boundary, defaulting to the root match
            let boundaryMatch = $cbc79efe0a1f5829$var$findNearestBoundary(matches, id);
            let error = result.error; // If we have a pending action error, we report it at the highest-route
            // that throws a loader error, and then clear it out to indicate that
            // it was consumed
            if (pendingError) {
                error = Object.values(pendingError)[0];
                pendingError = undefined;
            }
            errors = errors || {}; // Prefer higher error values if lower errors bubble to the same boundary
            if (errors[boundaryMatch.route.id] == null) errors[boundaryMatch.route.id] = error;
             // Clear our any prior loaderData for the throwing route
            loaderData[id] = undefined; // Once we find our first (highest) error, we set the status code and
            // prevent deeper status codes from overriding
            if (!foundError) {
                foundError = true;
                statusCode = $cbc79efe0a1f5829$export$972111febbeef05b(result.error) ? result.error.status : 500;
            }
            if (result.headers) loaderHeaders[id] = result.headers;
        } else {
            if ($cbc79efe0a1f5829$var$isDeferredResult(result)) {
                activeDeferreds.set(id, result.deferredData);
                loaderData[id] = result.deferredData.data;
            } else loaderData[id] = result.data;
             // Error status codes always override success status codes, but if all
            // loaders are successful we take the deepest status code.
            if (result.statusCode != null && result.statusCode !== 200 && !foundError) statusCode = result.statusCode;
            if (result.headers) loaderHeaders[id] = result.headers;
        }
    }); // If we didn't consume the pending action error (i.e., all loaders
    // resolved), then consume it here.  Also clear out any loaderData for the
    // throwing route
    if (pendingError) {
        errors = pendingError;
        loaderData[Object.keys(pendingError)[0]] = undefined;
    }
    return {
        loaderData: loaderData,
        errors: errors,
        statusCode: statusCode || 200,
        loaderHeaders: loaderHeaders
    };
}
function $cbc79efe0a1f5829$var$processLoaderData(state, matches, matchesToLoad, results, pendingError, revalidatingFetchers, fetcherResults, activeDeferreds) {
    let { loaderData: loaderData , errors: errors  } = $cbc79efe0a1f5829$var$processRouteLoaderData(matches, matchesToLoad, results, pendingError, activeDeferreds); // Process results from our revalidating fetchers
    for(let index = 0; index < revalidatingFetchers.length; index++){
        let { key: key , match: match , controller: controller  } = revalidatingFetchers[index];
        $cbc79efe0a1f5829$export$3e9cee6b33872309(fetcherResults !== undefined && fetcherResults[index] !== undefined, "Did not find corresponding fetcher result");
        let result = fetcherResults[index]; // Process fetcher non-redirect errors
        if (controller && controller.signal.aborted) continue;
        else if ($cbc79efe0a1f5829$var$isErrorResult(result)) {
            let boundaryMatch = $cbc79efe0a1f5829$var$findNearestBoundary(state.matches, match == null ? void 0 : match.route.id);
            if (!(errors && errors[boundaryMatch.route.id])) errors = $cbc79efe0a1f5829$var$_extends({}, errors, {
                [boundaryMatch.route.id]: result.error
            });
            state.fetchers.delete(key);
        } else if ($cbc79efe0a1f5829$var$isRedirectResult(result)) // Should never get here, redirects should get processed above, but we
        // keep this to type narrow to a success result in the else
        $cbc79efe0a1f5829$export$3e9cee6b33872309(false, "Unhandled fetcher revalidation redirect");
        else if ($cbc79efe0a1f5829$var$isDeferredResult(result)) // Should never get here, deferred data should be awaited for fetchers
        // in resolveDeferredResults
        $cbc79efe0a1f5829$export$3e9cee6b33872309(false, "Unhandled fetcher deferred data");
        else {
            let doneFetcher = {
                state: "idle",
                data: result.data,
                formMethod: undefined,
                formAction: undefined,
                formEncType: undefined,
                formData: undefined,
                " _hasFetcherDoneAnything ": true
            };
            state.fetchers.set(key, doneFetcher);
        }
    }
    return {
        loaderData: loaderData,
        errors: errors
    };
}
function $cbc79efe0a1f5829$var$mergeLoaderData(loaderData, newLoaderData, matches, errors) {
    let mergedLoaderData = $cbc79efe0a1f5829$var$_extends({}, newLoaderData);
    for (let match of matches){
        let id = match.route.id;
        if (newLoaderData.hasOwnProperty(id)) {
            if (newLoaderData[id] !== undefined) mergedLoaderData[id] = newLoaderData[id];
        } else if (loaderData[id] !== undefined && match.route.loader) // Preserve existing keys not included in newLoaderData and where a loader
        // wasn't removed by HMR
        mergedLoaderData[id] = loaderData[id];
        if (errors && errors.hasOwnProperty(id)) break;
    }
    return mergedLoaderData;
} // Find the nearest error boundary, looking upwards from the leaf route (or the
// route specified by routeId) for the closest ancestor error boundary,
// defaulting to the root match
function $cbc79efe0a1f5829$var$findNearestBoundary(matches, routeId) {
    let eligibleMatches = routeId ? matches.slice(0, matches.findIndex((m)=>m.route.id === routeId) + 1) : [
        ...matches
    ];
    return eligibleMatches.reverse().find((m)=>m.route.hasErrorBoundary === true) || matches[0];
}
function $cbc79efe0a1f5829$var$getShortCircuitMatches(routes) {
    // Prefer a root layout route if present, otherwise shim in a route object
    let route = routes.find((r)=>r.index || !r.path || r.path === "/") || {
        id: "__shim-error-route__"
    };
    return {
        matches: [
            {
                params: {},
                pathname: "",
                pathnameBase: "",
                route: route
            }
        ],
        route: route
    };
}
function $cbc79efe0a1f5829$var$getInternalRouterError(status, _temp4) {
    let { pathname: pathname , routeId: routeId , method: method , type: type  } = _temp4 === void 0 ? {} : _temp4;
    let statusText = "Unknown Server Error";
    let errorMessage = "Unknown @remix-run/router error";
    if (status === 400) {
        statusText = "Bad Request";
        if (method && pathname && routeId) errorMessage = "You made a " + method + ' request to "' + pathname + '" but ' + ('did not provide a `loader` for route "' + routeId + '", ') + "so there is no way to handle the request.";
        else if (type === "defer-action") errorMessage = "defer() is not supported in actions";
    } else if (status === 403) {
        statusText = "Forbidden";
        errorMessage = 'Route "' + routeId + '" does not match URL "' + pathname + '"';
    } else if (status === 404) {
        statusText = "Not Found";
        errorMessage = 'No route matches URL "' + pathname + '"';
    } else if (status === 405) {
        statusText = "Method Not Allowed";
        if (method && pathname && routeId) errorMessage = "You made a " + method.toUpperCase() + ' request to "' + pathname + '" but ' + ('did not provide an `action` for route "' + routeId + '", ') + "so there is no way to handle the request.";
        else if (method) errorMessage = 'Invalid request method "' + method.toUpperCase() + '"';
    }
    return new $cbc79efe0a1f5829$export$acf1a680051f5031(status || 500, statusText, new Error(errorMessage), true);
} // Find any returned redirect errors, starting from the lowest match
function $cbc79efe0a1f5829$var$findRedirect(results) {
    for(let i = results.length - 1; i >= 0; i--){
        let result = results[i];
        if ($cbc79efe0a1f5829$var$isRedirectResult(result)) return result;
    }
}
function $cbc79efe0a1f5829$var$stripHashFromPath(path) {
    let parsedPath = typeof path === "string" ? $cbc79efe0a1f5829$export$8ccf933b0513f8d0(path) : path;
    return $cbc79efe0a1f5829$export$fe53371bee54353d($cbc79efe0a1f5829$var$_extends({}, parsedPath, {
        hash: ""
    }));
}
function $cbc79efe0a1f5829$var$isHashChangeOnly(a, b) {
    if (a.pathname !== b.pathname || a.search !== b.search) return false;
    if (a.hash === "") // No hash -> hash
    return b.hash !== "";
    else if (a.hash === b.hash) // current hash -> same hash
    return true;
    else if (b.hash !== "") // current hash -> new hash
    return true;
    return false;
}
function $cbc79efe0a1f5829$var$isDeferredResult(result) {
    return result.type === $cbc79efe0a1f5829$var$ResultType.deferred;
}
function $cbc79efe0a1f5829$var$isErrorResult(result) {
    return result.type === $cbc79efe0a1f5829$var$ResultType.error;
}
function $cbc79efe0a1f5829$var$isRedirectResult(result) {
    return (result && result.type) === $cbc79efe0a1f5829$var$ResultType.redirect;
}
function $cbc79efe0a1f5829$export$fbcedacb60443473(value) {
    let deferred = value;
    return deferred && typeof deferred === "object" && typeof deferred.data === "object" && typeof deferred.subscribe === "function" && typeof deferred.cancel === "function" && typeof deferred.resolveData === "function";
}
function $cbc79efe0a1f5829$var$isResponse(value) {
    return value != null && typeof value.status === "number" && typeof value.statusText === "string" && typeof value.headers === "object" && typeof value.body !== "undefined";
}
function $cbc79efe0a1f5829$var$isRedirectResponse(result) {
    if (!$cbc79efe0a1f5829$var$isResponse(result)) return false;
    let status = result.status;
    let location = result.headers.get("Location");
    return status >= 300 && status <= 399 && location != null;
}
function $cbc79efe0a1f5829$var$isQueryRouteResponse(obj) {
    return obj && $cbc79efe0a1f5829$var$isResponse(obj.response) && (obj.type === $cbc79efe0a1f5829$var$ResultType.data || $cbc79efe0a1f5829$var$ResultType.error);
}
function $cbc79efe0a1f5829$var$isValidMethod(method) {
    return $cbc79efe0a1f5829$var$validRequestMethods.has(method.toLowerCase());
}
function $cbc79efe0a1f5829$var$isMutationMethod(method) {
    return $cbc79efe0a1f5829$var$validMutationMethods.has(method.toLowerCase());
}
async function $cbc79efe0a1f5829$var$resolveDeferredResults(currentMatches, matchesToLoad, results, signals, isFetcher, currentLoaderData) {
    for(let index = 0; index < results.length; index++){
        let result = results[index];
        let match = matchesToLoad[index]; // If we don't have a match, then we can have a deferred result to do
        // anything with.  This is for revalidating fetchers where the route was
        // removed during HMR
        if (!match) continue;
        let currentMatch = currentMatches.find((m)=>m.route.id === match.route.id);
        let isRevalidatingLoader = currentMatch != null && !$cbc79efe0a1f5829$var$isNewRouteInstance(currentMatch, match) && (currentLoaderData && currentLoaderData[match.route.id]) !== undefined;
        if ($cbc79efe0a1f5829$var$isDeferredResult(result) && (isFetcher || isRevalidatingLoader)) {
            // Note: we do not have to touch activeDeferreds here since we race them
            // against the signal in resolveDeferredData and they'll get aborted
            // there if needed
            let signal = signals[index];
            $cbc79efe0a1f5829$export$3e9cee6b33872309(signal, "Expected an AbortSignal for revalidating fetcher deferred result");
            await $cbc79efe0a1f5829$var$resolveDeferredData(result, signal, isFetcher).then((result)=>{
                if (result) results[index] = result || results[index];
            });
        }
    }
}
async function $cbc79efe0a1f5829$var$resolveDeferredData(result, signal, unwrap) {
    if (unwrap === void 0) unwrap = false;
    let aborted = await result.deferredData.resolveData(signal);
    if (aborted) return;
    if (unwrap) try {
        return {
            type: $cbc79efe0a1f5829$var$ResultType.data,
            data: result.deferredData.unwrappedData
        };
    } catch (e) {
        // Handle any TrackedPromise._error values encountered while unwrapping
        return {
            type: $cbc79efe0a1f5829$var$ResultType.error,
            error: e
        };
    }
    return {
        type: $cbc79efe0a1f5829$var$ResultType.data,
        data: result.deferredData.data
    };
}
function $cbc79efe0a1f5829$var$hasNakedIndexQuery(search) {
    return new URLSearchParams(search).getAll("index").some((v)=>v === "");
} // Note: This should match the format exported by useMatches, so if you change
// this please also change that :)  Eventually we'll DRY this up
function $cbc79efe0a1f5829$var$createUseMatchesMatch(match, loaderData) {
    let { route: route , pathname: pathname , params: params  } = match;
    return {
        id: route.id,
        pathname: pathname,
        params: params,
        data: loaderData[route.id],
        handle: route.handle
    };
}
function $cbc79efe0a1f5829$var$getTargetMatch(matches, location) {
    let search = typeof location === "string" ? $cbc79efe0a1f5829$export$8ccf933b0513f8d0(location).search : location.search;
    if (matches[matches.length - 1].route.index && $cbc79efe0a1f5829$var$hasNakedIndexQuery(search || "")) // Return the leaf index route when index is present
    return matches[matches.length - 1];
     // Otherwise grab the deepest "path contributing" match (ignoring index and
    // pathless layout routes)
    let pathMatches = $cbc79efe0a1f5829$export$90ba53ce1c7fdff2(matches);
    return pathMatches[pathMatches.length - 1];
} //#endregion

/**
 * React Router v6.11.1
 *
 * Copyright (c) Remix Software Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE.md file in the root directory of this source tree.
 *
 * @license MIT
 */ 
var $laauJ = parcelRequire("laauJ");


function $48ba1f31742d01ea$var$_extends() {
    $48ba1f31742d01ea$var$_extends = Object.assign ? Object.assign.bind() : function(target) {
        for(var i = 1; i < arguments.length; i++){
            var source = arguments[i];
            for(var key in source)if (Object.prototype.hasOwnProperty.call(source, key)) target[key] = source[key];
        }
        return target;
    };
    return $48ba1f31742d01ea$var$_extends.apply(this, arguments);
}
const $48ba1f31742d01ea$export$3add0d5dce533e2e = /*#__PURE__*/ $laauJ.createContext(null);
const $48ba1f31742d01ea$export$145dfa71566a64dc = /*#__PURE__*/ $laauJ.createContext(null);
const $48ba1f31742d01ea$var$AwaitContext = /*#__PURE__*/ $laauJ.createContext(null);
const $48ba1f31742d01ea$export$26749e8557646306 = /*#__PURE__*/ $laauJ.createContext(null);
const $48ba1f31742d01ea$export$c7914228fb69b0f5 = /*#__PURE__*/ $laauJ.createContext(null);
const $48ba1f31742d01ea$export$9072aa6dd1f93057 = /*#__PURE__*/ $laauJ.createContext({
    outlet: null,
    matches: [],
    isDataRoute: false
});
const $48ba1f31742d01ea$var$RouteErrorContext = /*#__PURE__*/ $laauJ.createContext(null);
/**
 * Returns the full href for the given "to" value. This is useful for building
 * custom links that are also accessible and preserve right-click behavior.
 *
 * @see https://reactrouter.com/hooks/use-href
 */ function $48ba1f31742d01ea$export$b66bb29c5006f12f(to, _temp) {
    let { relative: relative  } = _temp === void 0 ? {} : _temp;
    !$48ba1f31742d01ea$export$9c954a9d03d32f4a() && (0, $cbc79efe0a1f5829$export$3e9cee6b33872309)(false);
    let { basename: basename , navigator: navigator  } = $laauJ.useContext($48ba1f31742d01ea$export$26749e8557646306);
    let { hash: hash , pathname: pathname , search: search  } = $48ba1f31742d01ea$export$e75d2a2d1b3c245b(to, {
        relative: relative
    });
    let joinedPathname = pathname; // If we're operating within a basename, prepend it to the pathname prior
    // to creating the href.  If this is a root navigation, then just use the raw
    // basename which allows the basename to have full control over the presence
    // of a trailing slash on root links
    if (basename !== "/") joinedPathname = pathname === "/" ? basename : (0, $cbc79efe0a1f5829$export$86d9a7913e44197e)([
        basename,
        pathname
    ]);
    return navigator.createHref({
        pathname: joinedPathname,
        search: search,
        hash: hash
    });
}
/**
 * Returns true if this component is a descendant of a <Router>.
 *
 * @see https://reactrouter.com/hooks/use-in-router-context
 */ function $48ba1f31742d01ea$export$9c954a9d03d32f4a() {
    return $laauJ.useContext($48ba1f31742d01ea$export$c7914228fb69b0f5) != null;
}
/**
 * Returns the current location object, which represents the current URL in web
 * browsers.
 *
 * Note: If you're using this it may mean you're doing some of your own
 * "routing" in your app, and we'd like to know what your use case is. We may
 * be able to provide something higher-level to better suit your needs.
 *
 * @see https://reactrouter.com/hooks/use-location
 */ function $48ba1f31742d01ea$export$45d76561a5302f2b() {
    !$48ba1f31742d01ea$export$9c954a9d03d32f4a() && (0, $cbc79efe0a1f5829$export$3e9cee6b33872309)(false);
    return $laauJ.useContext($48ba1f31742d01ea$export$c7914228fb69b0f5).location;
}
/**
 * Returns the current navigation action which describes how the router came to
 * the current location, either by a pop, push, or replace on the history stack.
 *
 * @see https://reactrouter.com/hooks/use-navigation-type
 */ function $48ba1f31742d01ea$export$1b3f31771c5d07c() {
    return $laauJ.useContext($48ba1f31742d01ea$export$c7914228fb69b0f5).navigationType;
}
/**
 * Returns a PathMatch object if the given pattern matches the current URL.
 * This is useful for components that need to know "active" state, e.g.
 * <NavLink>.
 *
 * @see https://reactrouter.com/hooks/use-match
 */ function $48ba1f31742d01ea$export$6c330e8992e8a295(pattern) {
    !$48ba1f31742d01ea$export$9c954a9d03d32f4a() && (0, $cbc79efe0a1f5829$export$3e9cee6b33872309)(false);
    let { pathname: pathname  } = $48ba1f31742d01ea$export$45d76561a5302f2b();
    return $laauJ.useMemo(()=>(0, $cbc79efe0a1f5829$export$81336c211d5ff295)(pattern, pathname), [
        pathname,
        pattern
    ]);
}
/**
 * The interface for the navigate() function returned from useNavigate().
 */ const $48ba1f31742d01ea$var$navigateEffectWarning = "You should call navigate() in a React.useEffect(), not when your component is first rendered."; // Mute warnings for calls to useNavigate in SSR environments
function $48ba1f31742d01ea$var$useIsomorphicLayoutEffect(cb) {
    let isStatic = $laauJ.useContext($48ba1f31742d01ea$export$26749e8557646306).static;
    if (!isStatic) // We should be able to get rid of this once react 18.3 is released
    // See: https://github.com/facebook/react/pull/26395
    // eslint-disable-next-line react-hooks/rules-of-hooks
    $laauJ.useLayoutEffect(cb);
}
/**
 * Returns an imperative method for changing the location. Used by <Link>s, but
 * may also be used by other elements to change the location.
 *
 * @see https://reactrouter.com/hooks/use-navigate
 */ function $48ba1f31742d01ea$export$9770f232ac06a008() {
    let { isDataRoute: isDataRoute  } = $laauJ.useContext($48ba1f31742d01ea$export$9072aa6dd1f93057); // Conditional usage is OK here because the usage of a data router is static
    // eslint-disable-next-line react-hooks/rules-of-hooks
    return isDataRoute ? $48ba1f31742d01ea$var$useNavigateStable() : $48ba1f31742d01ea$var$useNavigateUnstable();
}
function $48ba1f31742d01ea$var$useNavigateUnstable() {
    !$48ba1f31742d01ea$export$9c954a9d03d32f4a() && (0, $cbc79efe0a1f5829$export$3e9cee6b33872309)(false);
    let { basename: basename , navigator: navigator  } = $laauJ.useContext($48ba1f31742d01ea$export$26749e8557646306);
    let { matches: matches  } = $laauJ.useContext($48ba1f31742d01ea$export$9072aa6dd1f93057);
    let { pathname: locationPathname  } = $48ba1f31742d01ea$export$45d76561a5302f2b();
    let routePathnamesJson = JSON.stringify((0, $cbc79efe0a1f5829$export$90ba53ce1c7fdff2)(matches).map((match)=>match.pathnameBase));
    let activeRef = $laauJ.useRef(false);
    $48ba1f31742d01ea$var$useIsomorphicLayoutEffect(()=>{
        activeRef.current = true;
    });
    let navigate = $laauJ.useCallback(function(to, options) {
        if (options === void 0) options = {};
        // is useless because we haven't wired up our history listener yet
        if (!activeRef.current) return;
        if (typeof to === "number") {
            navigator.go(to);
            return;
        }
        let path = (0, $cbc79efe0a1f5829$export$cae722b0cc860f13)(to, JSON.parse(routePathnamesJson), locationPathname, options.relative === "path"); // If we're operating within a basename, prepend it to the pathname prior
        // to handing off to history.  If this is a root navigation, then we
        // navigate to the raw basename which allows the basename to have full
        // control over the presence of a trailing slash on root links
        if (basename !== "/") path.pathname = path.pathname === "/" ? basename : (0, $cbc79efe0a1f5829$export$86d9a7913e44197e)([
            basename,
            path.pathname
        ]);
        (!!options.replace ? navigator.replace : navigator.push)(path, options.state, options);
    }, [
        basename,
        navigator,
        routePathnamesJson,
        locationPathname
    ]);
    return navigate;
}
const $48ba1f31742d01ea$var$OutletContext = /*#__PURE__*/ $laauJ.createContext(null);
/**
 * Returns the context (if provided) for the child route at this level of the route
 * hierarchy.
 * @see https://reactrouter.com/hooks/use-outlet-context
 */ function $48ba1f31742d01ea$export$4138103a3ae699cc() {
    return $laauJ.useContext($48ba1f31742d01ea$var$OutletContext);
}
/**
 * Returns the element for the child route at this level of the route
 * hierarchy. Used internally by <Outlet> to render child routes.
 *
 * @see https://reactrouter.com/hooks/use-outlet
 */ function $48ba1f31742d01ea$export$a3be3530d8e40d0b(context) {
    let outlet = $laauJ.useContext($48ba1f31742d01ea$export$9072aa6dd1f93057).outlet;
    if (outlet) return /*#__PURE__*/ $laauJ.createElement($48ba1f31742d01ea$var$OutletContext.Provider, {
        value: context
    }, outlet);
    return outlet;
}
/**
 * Returns an object of key/value pairs of the dynamic params from the current
 * URL that were matched by the route path.
 *
 * @see https://reactrouter.com/hooks/use-params
 */ function $48ba1f31742d01ea$export$99eaa27ddbbb95ef() {
    let { matches: matches  } = $laauJ.useContext($48ba1f31742d01ea$export$9072aa6dd1f93057);
    let routeMatch = matches[matches.length - 1];
    return routeMatch ? routeMatch.params : {};
}
/**
 * Resolves the pathname of the given `to` value against the current location.
 *
 * @see https://reactrouter.com/hooks/use-resolved-path
 */ function $48ba1f31742d01ea$export$e75d2a2d1b3c245b(to, _temp2) {
    let { relative: relative  } = _temp2 === void 0 ? {} : _temp2;
    let { matches: matches  } = $laauJ.useContext($48ba1f31742d01ea$export$9072aa6dd1f93057);
    let { pathname: locationPathname  } = $48ba1f31742d01ea$export$45d76561a5302f2b();
    let routePathnamesJson = JSON.stringify((0, $cbc79efe0a1f5829$export$90ba53ce1c7fdff2)(matches).map((match)=>match.pathnameBase));
    return $laauJ.useMemo(()=>(0, $cbc79efe0a1f5829$export$cae722b0cc860f13)(to, JSON.parse(routePathnamesJson), locationPathname, relative === "path"), [
        to,
        routePathnamesJson,
        locationPathname,
        relative
    ]);
}
/**
 * Returns the element of the route that matched the current location, prepared
 * with the correct context to render the remainder of the route tree. Route
 * elements in the tree must render an <Outlet> to render their child route's
 * element.
 *
 * @see https://reactrouter.com/hooks/use-routes
 */ function $48ba1f31742d01ea$export$5d3fca4a98652595(routes, locationArg) {
    return $48ba1f31742d01ea$export$5fcee62552a12fbf(routes, locationArg);
} // Internal implementation with accept optional param for RouterProvider usage
function $48ba1f31742d01ea$export$5fcee62552a12fbf(routes, locationArg, dataRouterState) {
    !$48ba1f31742d01ea$export$9c954a9d03d32f4a() && (0, $cbc79efe0a1f5829$export$3e9cee6b33872309)(false);
    let { navigator: navigator  } = $laauJ.useContext($48ba1f31742d01ea$export$26749e8557646306);
    let { matches: parentMatches  } = $laauJ.useContext($48ba1f31742d01ea$export$9072aa6dd1f93057);
    let routeMatch = parentMatches[parentMatches.length - 1];
    let parentParams = routeMatch ? routeMatch.params : {};
    let parentPathname = routeMatch ? routeMatch.pathname : "/";
    let parentPathnameBase = routeMatch ? routeMatch.pathnameBase : "/";
    let parentRoute = routeMatch && routeMatch.route;
    let locationFromContext = $48ba1f31742d01ea$export$45d76561a5302f2b();
    let location;
    if (locationArg) {
        var _parsedLocationArg$pa;
        let parsedLocationArg = typeof locationArg === "string" ? (0, $cbc79efe0a1f5829$export$8ccf933b0513f8d0)(locationArg) : locationArg;
        !(parentPathnameBase === "/" || ((_parsedLocationArg$pa = parsedLocationArg.pathname) == null ? void 0 : _parsedLocationArg$pa.startsWith(parentPathnameBase))) && (0, $cbc79efe0a1f5829$export$3e9cee6b33872309)(false);
        location = parsedLocationArg;
    } else location = locationFromContext;
    let pathname = location.pathname || "/";
    let remainingPathname = parentPathnameBase === "/" ? pathname : pathname.slice(parentPathnameBase.length) || "/";
    let matches = (0, $cbc79efe0a1f5829$export$2708184779ceb39d)(routes, {
        pathname: remainingPathname
    });
    let renderedMatches = $48ba1f31742d01ea$var$_renderMatches(matches && matches.map((match)=>Object.assign({}, match, {
            params: Object.assign({}, parentParams, match.params),
            pathname: (0, $cbc79efe0a1f5829$export$86d9a7913e44197e)([
                parentPathnameBase,
                navigator.encodeLocation ? navigator.encodeLocation(match.pathname).pathname : match.pathname
            ]),
            pathnameBase: match.pathnameBase === "/" ? parentPathnameBase : (0, $cbc79efe0a1f5829$export$86d9a7913e44197e)([
                parentPathnameBase,
                navigator.encodeLocation ? navigator.encodeLocation(match.pathnameBase).pathname : match.pathnameBase
            ])
        })), parentMatches, dataRouterState); // When a user passes in a `locationArg`, the associated routes need to
    // be wrapped in a new `LocationContext.Provider` in order for `useLocation`
    // to use the scoped location instead of the global location.
    if (locationArg && renderedMatches) return /*#__PURE__*/ $laauJ.createElement($48ba1f31742d01ea$export$c7914228fb69b0f5.Provider, {
        value: {
            location: $48ba1f31742d01ea$var$_extends({
                pathname: "/",
                search: "",
                hash: "",
                state: null,
                key: "default"
            }, location),
            navigationType: (0, $cbc79efe0a1f5829$export$e19cd5f9376f8cee).Pop
        }
    }, renderedMatches);
    return renderedMatches;
}
function $48ba1f31742d01ea$var$DefaultErrorComponent() {
    let error = $48ba1f31742d01ea$export$ed527bf60f6e05f2();
    let message = (0, $cbc79efe0a1f5829$export$972111febbeef05b)(error) ? error.status + " " + error.statusText : error instanceof Error ? error.message : JSON.stringify(error);
    let stack = error instanceof Error ? error.stack : null;
    let lightgrey = "rgba(200,200,200, 0.5)";
    let preStyles = {
        padding: "0.5rem",
        backgroundColor: lightgrey
    };
    let codeStyles = {
        padding: "2px 4px",
        backgroundColor: lightgrey
    };
    let devInfo = null;
    return /*#__PURE__*/ $laauJ.createElement($laauJ.Fragment, null, /*#__PURE__*/ $laauJ.createElement("h2", null, "Unexpected Application Error!"), /*#__PURE__*/ $laauJ.createElement("h3", {
        style: {
            fontStyle: "italic"
        }
    }, message), stack ? /*#__PURE__*/ $laauJ.createElement("pre", {
        style: preStyles
    }, stack) : null, devInfo);
}
const $48ba1f31742d01ea$var$defaultErrorElement = /*#__PURE__*/ $laauJ.createElement($48ba1f31742d01ea$var$DefaultErrorComponent, null);
class $48ba1f31742d01ea$var$RenderErrorBoundary extends $laauJ.Component {
    constructor(props){
        super(props);
        this.state = {
            location: props.location,
            revalidation: props.revalidation,
            error: props.error
        };
    }
    static getDerivedStateFromError(error) {
        return {
            error: error
        };
    }
    static getDerivedStateFromProps(props, state) {
        // When we get into an error state, the user will likely click "back" to the
        // previous page that didn't have an error. Because this wraps the entire
        // application, that will have no effect--the error page continues to display.
        // This gives us a mechanism to recover from the error when the location changes.
        //
        // Whether we're in an error state or not, we update the location in state
        // so that when we are in an error state, it gets reset when a new location
        // comes in and the user recovers from the error.
        if (state.location !== props.location || state.revalidation !== "idle" && props.revalidation === "idle") return {
            error: props.error,
            location: props.location,
            revalidation: props.revalidation
        };
         // If we're not changing locations, preserve the location but still surface
        // any new errors that may come through. We retain the existing error, we do
        // this because the error provided from the app state may be cleared without
        // the location changing.
        return {
            error: props.error || state.error,
            location: state.location,
            revalidation: props.revalidation || state.revalidation
        };
    }
    componentDidCatch(error, errorInfo) {
        console.error("React Router caught the following error during render", error, errorInfo);
    }
    render() {
        return this.state.error ? /*#__PURE__*/ $laauJ.createElement($48ba1f31742d01ea$export$9072aa6dd1f93057.Provider, {
            value: this.props.routeContext
        }, /*#__PURE__*/ $laauJ.createElement($48ba1f31742d01ea$var$RouteErrorContext.Provider, {
            value: this.state.error,
            children: this.props.component
        })) : this.props.children;
    }
}
function $48ba1f31742d01ea$var$RenderedRoute(_ref) {
    let { routeContext: routeContext , match: match , children: children  } = _ref;
    let dataRouterContext = $laauJ.useContext($48ba1f31742d01ea$export$3add0d5dce533e2e); // Track how deep we got in our render pass to emulate SSR componentDidCatch
    // in a DataStaticRouter
    if (dataRouterContext && dataRouterContext.static && dataRouterContext.staticContext && (match.route.errorElement || match.route.ErrorBoundary)) dataRouterContext.staticContext._deepestRenderedBoundaryId = match.route.id;
    return /*#__PURE__*/ $laauJ.createElement($48ba1f31742d01ea$export$9072aa6dd1f93057.Provider, {
        value: routeContext
    }, children);
}
function $48ba1f31742d01ea$var$_renderMatches(matches, parentMatches, dataRouterState) {
    var _dataRouterState2;
    if (parentMatches === void 0) parentMatches = [];
    if (dataRouterState === void 0) dataRouterState = null;
    if (matches == null) {
        var _dataRouterState;
        if ((_dataRouterState = dataRouterState) != null && _dataRouterState.errors) // Don't bail if we have data router errors so we can render them in the
        // boundary.  Use the pre-matched (or shimmed) matches
        matches = dataRouterState.matches;
        else return null;
    }
    let renderedMatches = matches; // If we have data errors, trim matches to the highest error boundary
    let errors = (_dataRouterState2 = dataRouterState) == null ? void 0 : _dataRouterState2.errors;
    if (errors != null) {
        let errorIndex = renderedMatches.findIndex((m)=>m.route.id && (errors == null ? void 0 : errors[m.route.id]));
        !(errorIndex >= 0) && (0, $cbc79efe0a1f5829$export$3e9cee6b33872309)(false);
        renderedMatches = renderedMatches.slice(0, Math.min(renderedMatches.length, errorIndex + 1));
    }
    return renderedMatches.reduceRight((outlet, match, index)=>{
        let error = match.route.id ? errors == null ? void 0 : errors[match.route.id] : null; // Only data routers handle errors
        let errorElement = null;
        if (dataRouterState) errorElement = match.route.errorElement || $48ba1f31742d01ea$var$defaultErrorElement;
        let matches = parentMatches.concat(renderedMatches.slice(0, index + 1));
        let getChildren = ()=>{
            let children;
            if (error) children = errorElement;
            else if (match.route.Component) // Note: This is a de-optimized path since React won't re-use the
            // ReactElement since it's identity changes with each new
            // React.createElement call.  We keep this so folks can use
            // `<Route Component={...}>` in `<Routes>` but generally `Component`
            // usage is only advised in `RouterProvider` when we can convert it to
            // `element` ahead of time.
            children = /*#__PURE__*/ $laauJ.createElement(match.route.Component, null);
            else if (match.route.element) children = match.route.element;
            else children = outlet;
            return /*#__PURE__*/ $laauJ.createElement($48ba1f31742d01ea$var$RenderedRoute, {
                match: match,
                routeContext: {
                    outlet: outlet,
                    matches: matches,
                    isDataRoute: dataRouterState != null
                },
                children: children
            });
        }; // Only wrap in an error boundary within data router usages when we have an
        // ErrorBoundary/errorElement on this route.  Otherwise let it bubble up to
        // an ancestor ErrorBoundary/errorElement
        return dataRouterState && (match.route.ErrorBoundary || match.route.errorElement || index === 0) ? /*#__PURE__*/ $laauJ.createElement($48ba1f31742d01ea$var$RenderErrorBoundary, {
            location: dataRouterState.location,
            revalidation: dataRouterState.revalidation,
            component: errorElement,
            error: error,
            children: getChildren(),
            routeContext: {
                outlet: null,
                matches: matches,
                isDataRoute: true
            }
        }) : getChildren();
    }, null);
}
var $48ba1f31742d01ea$var$DataRouterHook;
(function(DataRouterHook) {
    DataRouterHook["UseBlocker"] = "useBlocker";
    DataRouterHook["UseRevalidator"] = "useRevalidator";
    DataRouterHook["UseNavigateStable"] = "useNavigate";
})($48ba1f31742d01ea$var$DataRouterHook || ($48ba1f31742d01ea$var$DataRouterHook = {}));
var $48ba1f31742d01ea$var$DataRouterStateHook;
(function(DataRouterStateHook) {
    DataRouterStateHook["UseBlocker"] = "useBlocker";
    DataRouterStateHook["UseLoaderData"] = "useLoaderData";
    DataRouterStateHook["UseActionData"] = "useActionData";
    DataRouterStateHook["UseRouteError"] = "useRouteError";
    DataRouterStateHook["UseNavigation"] = "useNavigation";
    DataRouterStateHook["UseRouteLoaderData"] = "useRouteLoaderData";
    DataRouterStateHook["UseMatches"] = "useMatches";
    DataRouterStateHook["UseRevalidator"] = "useRevalidator";
    DataRouterStateHook["UseNavigateStable"] = "useNavigate";
    DataRouterStateHook["UseRouteId"] = "useRouteId";
})($48ba1f31742d01ea$var$DataRouterStateHook || ($48ba1f31742d01ea$var$DataRouterStateHook = {}));
function $48ba1f31742d01ea$var$getDataRouterConsoleError(hookName) {
    return hookName + " must be used within a data router.  See https://reactrouter.com/routers/picking-a-router.";
}
function $48ba1f31742d01ea$var$useDataRouterContext(hookName) {
    let ctx = $laauJ.useContext($48ba1f31742d01ea$export$3add0d5dce533e2e);
    !ctx && (0, $cbc79efe0a1f5829$export$3e9cee6b33872309)(false);
    return ctx;
}
function $48ba1f31742d01ea$var$useDataRouterState(hookName) {
    let state = $laauJ.useContext($48ba1f31742d01ea$export$145dfa71566a64dc);
    !state && (0, $cbc79efe0a1f5829$export$3e9cee6b33872309)(false);
    return state;
}
function $48ba1f31742d01ea$var$useRouteContext(hookName) {
    let route = $laauJ.useContext($48ba1f31742d01ea$export$9072aa6dd1f93057);
    !route && (0, $cbc79efe0a1f5829$export$3e9cee6b33872309)(false);
    return route;
} // Internal version with hookName-aware debugging
function $48ba1f31742d01ea$var$useCurrentRouteId(hookName) {
    let route = $48ba1f31742d01ea$var$useRouteContext(hookName);
    let thisRoute = route.matches[route.matches.length - 1];
    !thisRoute.route.id && (0, $cbc79efe0a1f5829$export$3e9cee6b33872309)(false);
    return thisRoute.route.id;
}
/**
 * Returns the ID for the nearest contextual route
 */ function $48ba1f31742d01ea$export$5fc8298006ad9e58() {
    return $48ba1f31742d01ea$var$useCurrentRouteId($48ba1f31742d01ea$var$DataRouterStateHook.UseRouteId);
}
/**
 * Returns the current navigation, defaulting to an "idle" navigation when
 * no navigation is in progress
 */ function $48ba1f31742d01ea$export$d0fd4b7106de2769() {
    let state = $48ba1f31742d01ea$var$useDataRouterState($48ba1f31742d01ea$var$DataRouterStateHook.UseNavigation);
    return state.navigation;
}
/**
 * Returns a revalidate function for manually triggering revalidation, as well
 * as the current state of any manual revalidations
 */ function $48ba1f31742d01ea$export$600dc272ed516c15() {
    let dataRouterContext = $48ba1f31742d01ea$var$useDataRouterContext($48ba1f31742d01ea$var$DataRouterHook.UseRevalidator);
    let state = $48ba1f31742d01ea$var$useDataRouterState($48ba1f31742d01ea$var$DataRouterStateHook.UseRevalidator);
    return {
        revalidate: dataRouterContext.router.revalidate,
        state: state.revalidation
    };
}
/**
 * Returns the active route matches, useful for accessing loaderData for
 * parent/child routes or the route "handle" property
 */ function $48ba1f31742d01ea$export$2378eb7f5ff86053() {
    let { matches: matches , loaderData: loaderData  } = $48ba1f31742d01ea$var$useDataRouterState($48ba1f31742d01ea$var$DataRouterStateHook.UseMatches);
    return $laauJ.useMemo(()=>matches.map((match)=>{
            let { pathname: pathname , params: params  } = match; // Note: This structure matches that created by createUseMatchesMatch
            // in the @remix-run/router , so if you change this please also change
            // that :)  Eventually we'll DRY this up
            return {
                id: match.route.id,
                pathname: pathname,
                params: params,
                data: loaderData[match.route.id],
                handle: match.route.handle
            };
        }), [
        matches,
        loaderData
    ]);
}
/**
 * Returns the loader data for the nearest ancestor Route loader
 */ function $48ba1f31742d01ea$export$1448a5050d252c4d() {
    let state = $48ba1f31742d01ea$var$useDataRouterState($48ba1f31742d01ea$var$DataRouterStateHook.UseLoaderData);
    let routeId = $48ba1f31742d01ea$var$useCurrentRouteId($48ba1f31742d01ea$var$DataRouterStateHook.UseLoaderData);
    if (state.errors && state.errors[routeId] != null) {
        console.error("You cannot `useLoaderData` in an errorElement (routeId: " + routeId + ")");
        return undefined;
    }
    return state.loaderData[routeId];
}
/**
 * Returns the loaderData for the given routeId
 */ function $48ba1f31742d01ea$export$fd5d37484eab868d(routeId) {
    let state = $48ba1f31742d01ea$var$useDataRouterState($48ba1f31742d01ea$var$DataRouterStateHook.UseRouteLoaderData);
    return state.loaderData[routeId];
}
/**
 * Returns the action data for the nearest ancestor Route action
 */ function $48ba1f31742d01ea$export$fdc00f3f26066d5e() {
    let state = $48ba1f31742d01ea$var$useDataRouterState($48ba1f31742d01ea$var$DataRouterStateHook.UseActionData);
    let route = $laauJ.useContext($48ba1f31742d01ea$export$9072aa6dd1f93057);
    !route && (0, $cbc79efe0a1f5829$export$3e9cee6b33872309)(false);
    return Object.values((state == null ? void 0 : state.actionData) || {})[0];
}
/**
 * Returns the nearest ancestor Route error, which could be a loader/action
 * error or a render error.  This is intended to be called from your
 * ErrorBoundary/errorElement to display a proper error message.
 */ function $48ba1f31742d01ea$export$ed527bf60f6e05f2() {
    var _state$errors;
    let error = $laauJ.useContext($48ba1f31742d01ea$var$RouteErrorContext);
    let state = $48ba1f31742d01ea$var$useDataRouterState($48ba1f31742d01ea$var$DataRouterStateHook.UseRouteError);
    let routeId = $48ba1f31742d01ea$var$useCurrentRouteId($48ba1f31742d01ea$var$DataRouterStateHook.UseRouteError); // If this was a render error, we put it in a RouteError context inside
    // of RenderErrorBoundary
    if (error) return error;
     // Otherwise look for errors from our data router state
    return (_state$errors = state.errors) == null ? void 0 : _state$errors[routeId];
}
/**
 * Returns the happy-path data from the nearest ancestor <Await /> value
 */ function $48ba1f31742d01ea$export$78a72ddb39bdd145() {
    let value = $laauJ.useContext($48ba1f31742d01ea$var$AwaitContext);
    return value == null ? void 0 : value._data;
}
/**
 * Returns the error from the nearest ancestor <Await /> value
 */ function $48ba1f31742d01ea$export$17f53340677d5831() {
    let value = $laauJ.useContext($48ba1f31742d01ea$var$AwaitContext);
    return value == null ? void 0 : value._error;
}
let $48ba1f31742d01ea$var$blockerId = 0;
/**
 * Allow the application to block navigations within the SPA and present the
 * user a confirmation dialog to confirm the navigation.  Mostly used to avoid
 * using half-filled form data.  This does not handle hard-reloads or
 * cross-origin navigations.
 */ function $48ba1f31742d01ea$export$2af03a1de5c0910(shouldBlock) {
    let { router: router  } = $48ba1f31742d01ea$var$useDataRouterContext($48ba1f31742d01ea$var$DataRouterHook.UseBlocker);
    let state = $48ba1f31742d01ea$var$useDataRouterState($48ba1f31742d01ea$var$DataRouterStateHook.UseBlocker);
    let [blockerKey] = $laauJ.useState(()=>String(++$48ba1f31742d01ea$var$blockerId));
    let blockerFunction = $laauJ.useCallback((args)=>{
        return typeof shouldBlock === "function" ? !!shouldBlock(args) : !!shouldBlock;
    }, [
        shouldBlock
    ]);
    let blocker = router.getBlocker(blockerKey, blockerFunction); // Cleanup on unmount
    $laauJ.useEffect(()=>()=>router.deleteBlocker(blockerKey), [
        router,
        blockerKey
    ]); // Prefer the blocker from state since DataRouterContext is memoized so this
    // ensures we update on blocker state updates
    return state.blockers.get(blockerKey) || blocker;
}
/**
 * Stable version of useNavigate that is used when we are in the context of
 * a RouterProvider.
 */ function $48ba1f31742d01ea$var$useNavigateStable() {
    let { router: router  } = $48ba1f31742d01ea$var$useDataRouterContext($48ba1f31742d01ea$var$DataRouterHook.UseNavigateStable);
    let id = $48ba1f31742d01ea$var$useCurrentRouteId($48ba1f31742d01ea$var$DataRouterStateHook.UseNavigateStable);
    let activeRef = $laauJ.useRef(false);
    $48ba1f31742d01ea$var$useIsomorphicLayoutEffect(()=>{
        activeRef.current = true;
    });
    let navigate = $laauJ.useCallback(function(to, options) {
        if (options === void 0) options = {};
        // is useless because we haven't wired up our router subscriber yet
        if (!activeRef.current) return;
        if (typeof to === "number") router.navigate(to);
        else router.navigate(to, $48ba1f31742d01ea$var$_extends({
            fromRouteId: id
        }, options));
    }, [
        router,
        id
    ]);
    return navigate;
}
const $48ba1f31742d01ea$var$alreadyWarned = {};
function $48ba1f31742d01ea$var$warningOnce(key, cond, message) {
    if (!cond && !$48ba1f31742d01ea$var$alreadyWarned[key]) $48ba1f31742d01ea$var$alreadyWarned[key] = true;
}
/**
 * Given a Remix Router instance, render the appropriate UI
 */ function $48ba1f31742d01ea$export$323e4fc2fa4753fb(_ref) {
    let { fallbackElement: fallbackElement , router: router  } = _ref;
    // Need to use a layout effect here so we are subscribed early enough to
    // pick up on any render-driven redirects/navigations (useEffect/<Navigate>)
    let [state, setState] = $laauJ.useState(router.state);
    $laauJ.useLayoutEffect(()=>router.subscribe(setState), [
        router,
        setState
    ]);
    let navigator = $laauJ.useMemo(()=>{
        return {
            createHref: router.createHref,
            encodeLocation: router.encodeLocation,
            go: (n)=>router.navigate(n),
            push: (to, state, opts)=>router.navigate(to, {
                    state: state,
                    preventScrollReset: opts == null ? void 0 : opts.preventScrollReset
                }),
            replace: (to, state, opts)=>router.navigate(to, {
                    replace: true,
                    state: state,
                    preventScrollReset: opts == null ? void 0 : opts.preventScrollReset
                })
        };
    }, [
        router
    ]);
    let basename = router.basename || "/";
    let dataRouterContext = $laauJ.useMemo(()=>({
            router: router,
            navigator: navigator,
            static: false,
            basename: basename
        }), [
        router,
        navigator,
        basename
    ]); // The fragment and {null} here are important!  We need them to keep React 18's
    // useId happy when we are server-rendering since we may have a <script> here
    // containing the hydrated server-side staticContext (from StaticRouterProvider).
    // useId relies on the component tree structure to generate deterministic id's
    // so we need to ensure it remains the same on the client even though
    // we don't need the <script> tag
    return /*#__PURE__*/ $laauJ.createElement($laauJ.Fragment, null, /*#__PURE__*/ $laauJ.createElement($48ba1f31742d01ea$export$3add0d5dce533e2e.Provider, {
        value: dataRouterContext
    }, /*#__PURE__*/ $laauJ.createElement($48ba1f31742d01ea$export$145dfa71566a64dc.Provider, {
        value: state
    }, /*#__PURE__*/ $laauJ.createElement($48ba1f31742d01ea$export$55185c17a0fcbe46, {
        basename: router.basename,
        location: router.state.location,
        navigationType: router.state.historyAction,
        navigator: navigator
    }, router.state.initialized ? /*#__PURE__*/ $laauJ.createElement($48ba1f31742d01ea$var$DataRoutes, {
        routes: router.routes,
        state: state
    }) : fallbackElement))), null);
}
function $48ba1f31742d01ea$var$DataRoutes(_ref2) {
    let { routes: routes , state: state  } = _ref2;
    return $48ba1f31742d01ea$export$5fcee62552a12fbf(routes, undefined, state);
}
/**
 * A <Router> that stores all entries in memory.
 *
 * @see https://reactrouter.com/router-components/memory-router
 */ function $48ba1f31742d01ea$export$ae46f04cfaffe093(_ref3) {
    let { basename: basename , children: children , initialEntries: initialEntries , initialIndex: initialIndex  } = _ref3;
    let historyRef = $laauJ.useRef();
    if (historyRef.current == null) historyRef.current = (0, $cbc79efe0a1f5829$export$2b76ad033c6e6d08)({
        initialEntries: initialEntries,
        initialIndex: initialIndex,
        v5Compat: true
    });
    let history = historyRef.current;
    let [state, setState] = $laauJ.useState({
        action: history.action,
        location: history.location
    });
    $laauJ.useLayoutEffect(()=>history.listen(setState), [
        history
    ]);
    return /*#__PURE__*/ $laauJ.createElement($48ba1f31742d01ea$export$55185c17a0fcbe46, {
        basename: basename,
        children: children,
        location: state.location,
        navigationType: state.action,
        navigator: history
    });
}
/**
 * Changes the current location.
 *
 * Note: This API is mostly useful in React.Component subclasses that are not
 * able to use hooks. In functional components, we recommend you use the
 * `useNavigate` hook instead.
 *
 * @see https://reactrouter.com/components/navigate
 */ function $48ba1f31742d01ea$export$444b3ab0cb9aec40(_ref4) {
    let { to: to , replace: replace , state: state , relative: relative  } = _ref4;
    !$48ba1f31742d01ea$export$9c954a9d03d32f4a() && (0, $cbc79efe0a1f5829$export$3e9cee6b33872309)(false);
    let { matches: matches  } = $laauJ.useContext($48ba1f31742d01ea$export$9072aa6dd1f93057);
    let { pathname: locationPathname  } = $48ba1f31742d01ea$export$45d76561a5302f2b();
    let navigate = $48ba1f31742d01ea$export$9770f232ac06a008(); // Resolve the path outside of the effect so that when effects run twice in
    // StrictMode they navigate to the same place
    let path = (0, $cbc79efe0a1f5829$export$cae722b0cc860f13)(to, (0, $cbc79efe0a1f5829$export$90ba53ce1c7fdff2)(matches).map((match)=>match.pathnameBase), locationPathname, relative === "path");
    let jsonPath = JSON.stringify(path);
    $laauJ.useEffect(()=>navigate(JSON.parse(jsonPath), {
            replace: replace,
            state: state,
            relative: relative
        }), [
        navigate,
        jsonPath,
        relative,
        replace,
        state
    ]);
    return null;
}
/**
 * Renders the child route's element, if there is one.
 *
 * @see https://reactrouter.com/components/outlet
 */ function $48ba1f31742d01ea$export$910ae8079b2c2852(props) {
    return $48ba1f31742d01ea$export$a3be3530d8e40d0b(props.context);
}
/**
 * Declares an element that should be rendered at a certain URL path.
 *
 * @see https://reactrouter.com/components/route
 */ function $48ba1f31742d01ea$export$e7b0ac011bb776c6(_props) {
    (0, $cbc79efe0a1f5829$export$3e9cee6b33872309)(false);
}
/**
 * Provides location context for the rest of the app.
 *
 * Note: You usually won't render a <Router> directly. Instead, you'll render a
 * router that is more specific to your environment such as a <BrowserRouter>
 * in web browsers or a <StaticRouter> for server rendering.
 *
 * @see https://reactrouter.com/router-components/router
 */ function $48ba1f31742d01ea$export$55185c17a0fcbe46(_ref5) {
    let { basename: basenameProp = "/" , children: children = null , location: locationProp , navigationType: navigationType = (0, $cbc79efe0a1f5829$export$e19cd5f9376f8cee).Pop , navigator: navigator , static: staticProp = false  } = _ref5;
    !!$48ba1f31742d01ea$export$9c954a9d03d32f4a() && (0, $cbc79efe0a1f5829$export$3e9cee6b33872309)(false); // Preserve trailing slashes on basename, so we can let the user control
    // the enforcement of trailing slashes throughout the app
    let basename = basenameProp.replace(/^\/*/, "/");
    let navigationContext = $laauJ.useMemo(()=>({
            basename: basename,
            navigator: navigator,
            static: staticProp
        }), [
        basename,
        navigator,
        staticProp
    ]);
    if (typeof locationProp === "string") locationProp = (0, $cbc79efe0a1f5829$export$8ccf933b0513f8d0)(locationProp);
    let { pathname: pathname = "/" , search: search = "" , hash: hash = "" , state: state = null , key: key = "default"  } = locationProp;
    let locationContext = $laauJ.useMemo(()=>{
        let trailingPathname = (0, $cbc79efe0a1f5829$export$b69e3301ce081aa3)(pathname, basename);
        if (trailingPathname == null) return null;
        return {
            location: {
                pathname: trailingPathname,
                search: search,
                hash: hash,
                state: state,
                key: key
            },
            navigationType: navigationType
        };
    }, [
        basename,
        pathname,
        search,
        hash,
        state,
        key,
        navigationType
    ]);
    if (locationContext == null) return null;
    return /*#__PURE__*/ $laauJ.createElement($48ba1f31742d01ea$export$26749e8557646306.Provider, {
        value: navigationContext
    }, /*#__PURE__*/ $laauJ.createElement($48ba1f31742d01ea$export$c7914228fb69b0f5.Provider, {
        children: children,
        value: locationContext
    }));
}
/**
 * A container for a nested tree of <Route> elements that renders the branch
 * that best matches the current location.
 *
 * @see https://reactrouter.com/components/routes
 */ function $48ba1f31742d01ea$export$3565eb3d00ca5a74(_ref6) {
    let { children: children , location: location  } = _ref6;
    return $48ba1f31742d01ea$export$5d3fca4a98652595($48ba1f31742d01ea$export$16da398f5434bdec(children), location);
}
/**
 * Component to use for rendering lazily loaded data from returning defer()
 * in a loader function
 */ function $48ba1f31742d01ea$export$6ddabde395c8c576(_ref7) {
    let { children: children , errorElement: errorElement , resolve: resolve  } = _ref7;
    return /*#__PURE__*/ $laauJ.createElement($48ba1f31742d01ea$var$AwaitErrorBoundary, {
        resolve: resolve,
        errorElement: errorElement
    }, /*#__PURE__*/ $laauJ.createElement($48ba1f31742d01ea$var$ResolveAwait, null, children));
}
var $48ba1f31742d01ea$var$AwaitRenderStatus;
(function(AwaitRenderStatus) {
    AwaitRenderStatus[AwaitRenderStatus["pending"] = 0] = "pending";
    AwaitRenderStatus[AwaitRenderStatus["success"] = 1] = "success";
    AwaitRenderStatus[AwaitRenderStatus["error"] = 2] = "error";
})($48ba1f31742d01ea$var$AwaitRenderStatus || ($48ba1f31742d01ea$var$AwaitRenderStatus = {}));
const $48ba1f31742d01ea$var$neverSettledPromise = new Promise(()=>{});
class $48ba1f31742d01ea$var$AwaitErrorBoundary extends $laauJ.Component {
    constructor(props){
        super(props);
        this.state = {
            error: null
        };
    }
    static getDerivedStateFromError(error) {
        return {
            error: error
        };
    }
    componentDidCatch(error, errorInfo) {
        console.error("<Await> caught the following error during render", error, errorInfo);
    }
    render() {
        let { children: children , errorElement: errorElement , resolve: resolve  } = this.props;
        let promise = null;
        let status = $48ba1f31742d01ea$var$AwaitRenderStatus.pending;
        if (!(resolve instanceof Promise)) {
            // Didn't get a promise - provide as a resolved promise
            status = $48ba1f31742d01ea$var$AwaitRenderStatus.success;
            promise = Promise.resolve();
            Object.defineProperty(promise, "_tracked", {
                get: ()=>true
            });
            Object.defineProperty(promise, "_data", {
                get: ()=>resolve
            });
        } else if (this.state.error) {
            // Caught a render error, provide it as a rejected promise
            status = $48ba1f31742d01ea$var$AwaitRenderStatus.error;
            let renderError = this.state.error;
            promise = Promise.reject().catch(()=>{}); // Avoid unhandled rejection warnings
            Object.defineProperty(promise, "_tracked", {
                get: ()=>true
            });
            Object.defineProperty(promise, "_error", {
                get: ()=>renderError
            });
        } else if (resolve._tracked) {
            // Already tracked promise - check contents
            promise = resolve;
            status = promise._error !== undefined ? $48ba1f31742d01ea$var$AwaitRenderStatus.error : promise._data !== undefined ? $48ba1f31742d01ea$var$AwaitRenderStatus.success : $48ba1f31742d01ea$var$AwaitRenderStatus.pending;
        } else {
            // Raw (untracked) promise - track it
            status = $48ba1f31742d01ea$var$AwaitRenderStatus.pending;
            Object.defineProperty(resolve, "_tracked", {
                get: ()=>true
            });
            promise = resolve.then((data)=>Object.defineProperty(resolve, "_data", {
                    get: ()=>data
                }), (error)=>Object.defineProperty(resolve, "_error", {
                    get: ()=>error
                }));
        }
        if (status === $48ba1f31742d01ea$var$AwaitRenderStatus.error && promise._error instanceof (0, $cbc79efe0a1f5829$export$42a99a7a4bc0e76a)) // Freeze the UI by throwing a never resolved promise
        throw $48ba1f31742d01ea$var$neverSettledPromise;
        if (status === $48ba1f31742d01ea$var$AwaitRenderStatus.error && !errorElement) // No errorElement, throw to the nearest route-level error boundary
        throw promise._error;
        if (status === $48ba1f31742d01ea$var$AwaitRenderStatus.error) // Render via our errorElement
        return /*#__PURE__*/ $laauJ.createElement($48ba1f31742d01ea$var$AwaitContext.Provider, {
            value: promise,
            children: errorElement
        });
        if (status === $48ba1f31742d01ea$var$AwaitRenderStatus.success) // Render children with resolved value
        return /*#__PURE__*/ $laauJ.createElement($48ba1f31742d01ea$var$AwaitContext.Provider, {
            value: promise,
            children: children
        });
         // Throw to the suspense boundary
        throw promise;
    }
}
/**
 * @private
 * Indirection to leverage useAsyncValue for a render-prop API on <Await>
 */ function $48ba1f31742d01ea$var$ResolveAwait(_ref8) {
    let { children: children  } = _ref8;
    let data = $48ba1f31742d01ea$export$78a72ddb39bdd145();
    let toRender = typeof children === "function" ? children(data) : children;
    return /*#__PURE__*/ $laauJ.createElement($laauJ.Fragment, null, toRender);
} ///////////////////////////////////////////////////////////////////////////////
// UTILS
///////////////////////////////////////////////////////////////////////////////
/**
 * Creates a route config from a React "children" object, which is usually
 * either a `<Route>` element or an array of them. Used internally by
 * `<Routes>` to create a route config from its children.
 *
 * @see https://reactrouter.com/utils/create-routes-from-children
 */ function $48ba1f31742d01ea$export$16da398f5434bdec(children, parentPath) {
    if (parentPath === void 0) parentPath = [];
    let routes = [];
    $laauJ.Children.forEach(children, (element, index)=>{
        if (!/*#__PURE__*/ $laauJ.isValidElement(element)) // Ignore non-elements. This allows people to more easily inline
        // conditionals in their route config.
        return;
        let treePath = [
            ...parentPath,
            index
        ];
        if (element.type === $laauJ.Fragment) {
            // Transparently support React.Fragment and its children.
            routes.push.apply(routes, $48ba1f31742d01ea$export$16da398f5434bdec(element.props.children, treePath));
            return;
        }
        !(element.type === $48ba1f31742d01ea$export$e7b0ac011bb776c6) && (0, $cbc79efe0a1f5829$export$3e9cee6b33872309)(false);
        !(!element.props.index || !element.props.children) && (0, $cbc79efe0a1f5829$export$3e9cee6b33872309)(false);
        let route = {
            id: element.props.id || treePath.join("-"),
            caseSensitive: element.props.caseSensitive,
            element: element.props.element,
            Component: element.props.Component,
            index: element.props.index,
            path: element.props.path,
            loader: element.props.loader,
            action: element.props.action,
            errorElement: element.props.errorElement,
            ErrorBoundary: element.props.ErrorBoundary,
            hasErrorBoundary: element.props.ErrorBoundary != null || element.props.errorElement != null,
            shouldRevalidate: element.props.shouldRevalidate,
            handle: element.props.handle,
            lazy: element.props.lazy
        };
        if (element.props.children) route.children = $48ba1f31742d01ea$export$16da398f5434bdec(element.props.children, treePath);
        routes.push(route);
    });
    return routes;
}
/**
 * Renders the result of `matchRoutes()` into a React element.
 */ function $48ba1f31742d01ea$export$daf73786167a7f72(matches) {
    return $48ba1f31742d01ea$var$_renderMatches(matches);
}
function $48ba1f31742d01ea$export$52b333d321859367(route) {
    let updates = {
        // Note: this check also occurs in createRoutesFromChildren so update
        // there if you change this -- please and thank you!
        hasErrorBoundary: route.ErrorBoundary != null || route.errorElement != null
    };
    if (route.Component) Object.assign(updates, {
        element: /*#__PURE__*/ $laauJ.createElement(route.Component),
        Component: undefined
    });
    if (route.ErrorBoundary) Object.assign(updates, {
        errorElement: /*#__PURE__*/ $laauJ.createElement(route.ErrorBoundary),
        ErrorBoundary: undefined
    });
    return updates;
}
function $48ba1f31742d01ea$export$f30f7e456d254e83(routes, opts) {
    return (0, $cbc79efe0a1f5829$export$baddd0131ee8c05b)({
        basename: opts == null ? void 0 : opts.basename,
        future: $48ba1f31742d01ea$var$_extends({}, opts == null ? void 0 : opts.future, {
            v7_prependBasename: true
        }),
        history: (0, $cbc79efe0a1f5829$export$2b76ad033c6e6d08)({
            initialEntries: opts == null ? void 0 : opts.initialEntries,
            initialIndex: opts == null ? void 0 : opts.initialIndex
        }),
        hydrationData: opts == null ? void 0 : opts.hydrationData,
        routes: routes,
        mapRouteProperties: $48ba1f31742d01ea$export$52b333d321859367
    }).initialize();
} ///////////////////////////////////////////////////////////////////////////////




function $646c75eca4d3ce21$var$_extends() {
    $646c75eca4d3ce21$var$_extends = Object.assign ? Object.assign.bind() : function(target) {
        for(var i = 1; i < arguments.length; i++){
            var source = arguments[i];
            for(var key in source)if (Object.prototype.hasOwnProperty.call(source, key)) target[key] = source[key];
        }
        return target;
    };
    return $646c75eca4d3ce21$var$_extends.apply(this, arguments);
}
function $646c75eca4d3ce21$var$_objectWithoutPropertiesLoose(source, excluded) {
    if (source == null) return {};
    var target = {};
    var sourceKeys = Object.keys(source);
    var key, i;
    for(i = 0; i < sourceKeys.length; i++){
        key = sourceKeys[i];
        if (excluded.indexOf(key) >= 0) continue;
        target[key] = source[key];
    }
    return target;
}
const $646c75eca4d3ce21$var$defaultMethod = "get";
const $646c75eca4d3ce21$var$defaultEncType = "application/x-www-form-urlencoded";
function $646c75eca4d3ce21$var$isHtmlElement(object) {
    return object != null && typeof object.tagName === "string";
}
function $646c75eca4d3ce21$var$isButtonElement(object) {
    return $646c75eca4d3ce21$var$isHtmlElement(object) && object.tagName.toLowerCase() === "button";
}
function $646c75eca4d3ce21$var$isFormElement(object) {
    return $646c75eca4d3ce21$var$isHtmlElement(object) && object.tagName.toLowerCase() === "form";
}
function $646c75eca4d3ce21$var$isInputElement(object) {
    return $646c75eca4d3ce21$var$isHtmlElement(object) && object.tagName.toLowerCase() === "input";
}
function $646c75eca4d3ce21$var$isModifiedEvent(event) {
    return !!(event.metaKey || event.altKey || event.ctrlKey || event.shiftKey);
}
function $646c75eca4d3ce21$var$shouldProcessLinkClick(event, target) {
    return event.button === 0 && (!target || target === "_self") && // Let browser handle "target=_blank" etc.
    !$646c75eca4d3ce21$var$isModifiedEvent(event) // Ignore clicks with modifier keys
    ;
}
/**
 * Creates a URLSearchParams object using the given initializer.
 *
 * This is identical to `new URLSearchParams(init)` except it also
 * supports arrays as values in the object form of the initializer
 * instead of just strings. This is convenient when you need multiple
 * values for a given key, but don't want to use an array initializer.
 *
 * For example, instead of:
 *
 *   let searchParams = new URLSearchParams([
 *     ['sort', 'name'],
 *     ['sort', 'price']
 *   ]);
 *
 * you can do:
 *
 *   let searchParams = createSearchParams({
 *     sort: ['name', 'price']
 *   });
 */ function $646c75eca4d3ce21$export$a2e4e2dcc7b1f22f(init) {
    if (init === void 0) init = "";
    return new URLSearchParams(typeof init === "string" || Array.isArray(init) || init instanceof URLSearchParams ? init : Object.keys(init).reduce((memo, key)=>{
        let value = init[key];
        return memo.concat(Array.isArray(value) ? value.map((v)=>[
                key,
                v
            ]) : [
            [
                key,
                value
            ]
        ]);
    }, []));
}
function $646c75eca4d3ce21$var$getSearchParamsForLocation(locationSearch, defaultSearchParams) {
    let searchParams = $646c75eca4d3ce21$export$a2e4e2dcc7b1f22f(locationSearch);
    if (defaultSearchParams) {
        for (let key of defaultSearchParams.keys())if (!searchParams.has(key)) defaultSearchParams.getAll(key).forEach((value)=>{
            searchParams.append(key, value);
        });
    }
    return searchParams;
}
function $646c75eca4d3ce21$var$getFormSubmissionInfo(target, options, basename) {
    let method;
    let action = null;
    let encType;
    let formData;
    if ($646c75eca4d3ce21$var$isFormElement(target)) {
        let submissionTrigger = options.submissionTrigger;
        if (options.action) action = options.action;
        else {
            // When grabbing the action from the element, it will have had the basename
            // prefixed to ensure non-JS scenarios work, so strip it since we'll
            // re-prefix in the router
            let attr = target.getAttribute("action");
            action = attr ? (0, $cbc79efe0a1f5829$export$b69e3301ce081aa3)(attr, basename) : null;
        }
        method = options.method || target.getAttribute("method") || $646c75eca4d3ce21$var$defaultMethod;
        encType = options.encType || target.getAttribute("enctype") || $646c75eca4d3ce21$var$defaultEncType;
        formData = new FormData(target);
        if (submissionTrigger && submissionTrigger.name) formData.append(submissionTrigger.name, submissionTrigger.value);
    } else if ($646c75eca4d3ce21$var$isButtonElement(target) || $646c75eca4d3ce21$var$isInputElement(target) && (target.type === "submit" || target.type === "image")) {
        let form = target.form;
        if (form == null) throw new Error('Cannot submit a <button> or <input type="submit"> without a <form>');
         // <button>/<input type="submit"> may override attributes of <form>
        if (options.action) action = options.action;
        else {
            // When grabbing the action from the element, it will have had the basename
            // prefixed to ensure non-JS scenarios work, so strip it since we'll
            // re-prefix in the router
            let attr = target.getAttribute("formaction") || form.getAttribute("action");
            action = attr ? (0, $cbc79efe0a1f5829$export$b69e3301ce081aa3)(attr, basename) : null;
        }
        method = options.method || target.getAttribute("formmethod") || form.getAttribute("method") || $646c75eca4d3ce21$var$defaultMethod;
        encType = options.encType || target.getAttribute("formenctype") || form.getAttribute("enctype") || $646c75eca4d3ce21$var$defaultEncType;
        formData = new FormData(form); // Include name + value from a <button>, appending in case the button name
        // matches an existing input name
        if (target.name) formData.append(target.name, target.value);
    } else if ($646c75eca4d3ce21$var$isHtmlElement(target)) throw new Error('Cannot submit element that is not <form>, <button>, or <input type="submit|image">');
    else {
        method = options.method || $646c75eca4d3ce21$var$defaultMethod;
        action = options.action || null;
        encType = options.encType || $646c75eca4d3ce21$var$defaultEncType;
        if (target instanceof FormData) formData = target;
        else {
            formData = new FormData();
            if (target instanceof URLSearchParams) for (let [name, value] of target)formData.append(name, value);
            else if (target != null) for (let name of Object.keys(target))formData.append(name, target[name]);
        }
    }
    return {
        action: action,
        method: method.toLowerCase(),
        encType: encType,
        formData: formData
    };
}
const $646c75eca4d3ce21$var$_excluded = [
    "onClick",
    "relative",
    "reloadDocument",
    "replace",
    "state",
    "target",
    "to",
    "preventScrollReset"
], $646c75eca4d3ce21$var$_excluded2 = [
    "aria-current",
    "caseSensitive",
    "className",
    "end",
    "style",
    "to",
    "children"
], $646c75eca4d3ce21$var$_excluded3 = [
    "reloadDocument",
    "replace",
    "method",
    "action",
    "onSubmit",
    "fetcherKey",
    "routeId",
    "relative",
    "preventScrollReset"
];
function $646c75eca4d3ce21$export$1f3f55432a00e06d(routes, opts) {
    return (0, $cbc79efe0a1f5829$export$baddd0131ee8c05b)({
        basename: opts == null ? void 0 : opts.basename,
        future: $646c75eca4d3ce21$var$_extends({}, opts == null ? void 0 : opts.future, {
            v7_prependBasename: true
        }),
        history: (0, $cbc79efe0a1f5829$export$719fc203c4e16dee)({
            window: opts == null ? void 0 : opts.window
        }),
        hydrationData: (opts == null ? void 0 : opts.hydrationData) || $646c75eca4d3ce21$var$parseHydrationData(),
        routes: routes,
        mapRouteProperties: (0, $48ba1f31742d01ea$export$52b333d321859367)
    }).initialize();
}
function $646c75eca4d3ce21$export$1ba7ed8a3a7b3765(routes, opts) {
    return (0, $cbc79efe0a1f5829$export$baddd0131ee8c05b)({
        basename: opts == null ? void 0 : opts.basename,
        future: $646c75eca4d3ce21$var$_extends({}, opts == null ? void 0 : opts.future, {
            v7_prependBasename: true
        }),
        history: (0, $cbc79efe0a1f5829$export$b71fdd3798280242)({
            window: opts == null ? void 0 : opts.window
        }),
        hydrationData: (opts == null ? void 0 : opts.hydrationData) || $646c75eca4d3ce21$var$parseHydrationData(),
        routes: routes,
        mapRouteProperties: (0, $48ba1f31742d01ea$export$52b333d321859367)
    }).initialize();
}
function $646c75eca4d3ce21$var$parseHydrationData() {
    var _window;
    let state = (_window = window) == null ? void 0 : _window.__staticRouterHydrationData;
    if (state && state.errors) state = $646c75eca4d3ce21$var$_extends({}, state, {
        errors: $646c75eca4d3ce21$var$deserializeErrors(state.errors)
    });
    return state;
}
function $646c75eca4d3ce21$var$deserializeErrors(errors) {
    if (!errors) return null;
    let entries = Object.entries(errors);
    let serialized = {};
    for (let [key, val] of entries){
        // Hey you!  If you change this, please change the corresponding logic in
        // serializeErrors in react-router-dom/server.tsx :)
        if (val && val.__type === "RouteErrorResponse") serialized[key] = new (0, $cbc79efe0a1f5829$export$acf1a680051f5031)(val.status, val.statusText, val.data, val.internal === true);
        else if (val && val.__type === "Error") {
            let error = new Error(val.message); // Wipe away the client-side stack trace.  Nothing to fill it in with
            // because we don't serialize SSR stack traces for security reasons
            error.stack = "";
            serialized[key] = error;
        } else serialized[key] = val;
    }
    return serialized;
}
/**
 * A `<Router>` for use in web browsers. Provides the cleanest URLs.
 */ function $646c75eca4d3ce21$export$9ba4e89fdfa1fc54(_ref) {
    let { basename: basename , children: children , window: window1  } = _ref;
    let historyRef = $laauJ.useRef();
    if (historyRef.current == null) historyRef.current = (0, $cbc79efe0a1f5829$export$719fc203c4e16dee)({
        window: window1,
        v5Compat: true
    });
    let history = historyRef.current;
    let [state, setState] = $laauJ.useState({
        action: history.action,
        location: history.location
    });
    $laauJ.useLayoutEffect(()=>history.listen(setState), [
        history
    ]);
    return /*#__PURE__*/ $laauJ.createElement((0, $48ba1f31742d01ea$export$55185c17a0fcbe46), {
        basename: basename,
        children: children,
        location: state.location,
        navigationType: state.action,
        navigator: history
    });
}
/**
 * A `<Router>` for use in web browsers. Stores the location in the hash
 * portion of the URL so it is not sent to the server.
 */ function $646c75eca4d3ce21$export$7221d69dcfc8e36b(_ref2) {
    let { basename: basename , children: children , window: window1  } = _ref2;
    let historyRef = $laauJ.useRef();
    if (historyRef.current == null) historyRef.current = (0, $cbc79efe0a1f5829$export$b71fdd3798280242)({
        window: window1,
        v5Compat: true
    });
    let history = historyRef.current;
    let [state, setState] = $laauJ.useState({
        action: history.action,
        location: history.location
    });
    $laauJ.useLayoutEffect(()=>history.listen(setState), [
        history
    ]);
    return /*#__PURE__*/ $laauJ.createElement((0, $48ba1f31742d01ea$export$55185c17a0fcbe46), {
        basename: basename,
        children: children,
        location: state.location,
        navigationType: state.action,
        navigator: history
    });
}
/**
 * A `<Router>` that accepts a pre-instantiated history object. It's important
 * to note that using your own history object is highly discouraged and may add
 * two versions of the history library to your bundles unless you use the same
 * version of the history library that React Router uses internally.
 */ function $646c75eca4d3ce21$export$eefb0c834599897e(_ref3) {
    let { basename: basename , children: children , history: history  } = _ref3;
    const [state, setState] = $laauJ.useState({
        action: history.action,
        location: history.location
    });
    $laauJ.useLayoutEffect(()=>history.listen(setState), [
        history
    ]);
    return /*#__PURE__*/ $laauJ.createElement((0, $48ba1f31742d01ea$export$55185c17a0fcbe46), {
        basename: basename,
        children: children,
        location: state.location,
        navigationType: state.action,
        navigator: history
    });
}
const $646c75eca4d3ce21$var$isBrowser = typeof window !== "undefined" && typeof window.document !== "undefined" && typeof window.document.createElement !== "undefined";
const $646c75eca4d3ce21$var$ABSOLUTE_URL_REGEX = /^(?:[a-z][a-z0-9+.-]*:|\/\/)/i;
/**
 * The public API for rendering a history-aware <a>.
 */ const $646c75eca4d3ce21$export$a6c7ac8248d6e38a = /*#__PURE__*/ $laauJ.forwardRef(function LinkWithRef(_ref4, ref) {
    let { onClick: onClick , relative: relative , reloadDocument: reloadDocument , replace: replace , state: state , target: target , to: to , preventScrollReset: preventScrollReset  } = _ref4, rest = $646c75eca4d3ce21$var$_objectWithoutPropertiesLoose(_ref4, $646c75eca4d3ce21$var$_excluded);
    let { basename: basename  } = $laauJ.useContext((0, $48ba1f31742d01ea$export$26749e8557646306)); // Rendered into <a href> for absolute URLs
    let absoluteHref;
    let isExternal = false;
    if (typeof to === "string" && $646c75eca4d3ce21$var$ABSOLUTE_URL_REGEX.test(to)) {
        // Render the absolute href server- and client-side
        absoluteHref = to; // Only check for external origins client-side
        if ($646c75eca4d3ce21$var$isBrowser) try {
            let currentUrl = new URL(window.location.href);
            let targetUrl = to.startsWith("//") ? new URL(currentUrl.protocol + to) : new URL(to);
            let path = (0, $cbc79efe0a1f5829$export$b69e3301ce081aa3)(targetUrl.pathname, basename);
            if (targetUrl.origin === currentUrl.origin && path != null) // Strip the protocol/origin/basename for same-origin absolute URLs
            to = path + targetUrl.search + targetUrl.hash;
            else isExternal = true;
        } catch (e) {}
    } // Rendered into <a href> for relative URLs
    let href = (0, $48ba1f31742d01ea$export$b66bb29c5006f12f)(to, {
        relative: relative
    });
    let internalOnClick = $646c75eca4d3ce21$export$67621102c14d847(to, {
        replace: replace,
        state: state,
        target: target,
        preventScrollReset: preventScrollReset,
        relative: relative
    });
    function handleClick(event) {
        if (onClick) onClick(event);
        if (!event.defaultPrevented) internalOnClick(event);
    }
    return(/*#__PURE__*/ // eslint-disable-next-line jsx-a11y/anchor-has-content
    $laauJ.createElement("a", $646c75eca4d3ce21$var$_extends({}, rest, {
        href: absoluteHref || href,
        onClick: isExternal || reloadDocument ? onClick : handleClick,
        ref: ref,
        target: target
    })));
});
/**
 * A <Link> wrapper that knows if it's "active" or not.
 */ const $646c75eca4d3ce21$export$b0d92dbee9b5b60d = /*#__PURE__*/ $laauJ.forwardRef(function NavLinkWithRef(_ref5, ref) {
    let { "aria-current": ariaCurrentProp = "page" , caseSensitive: caseSensitive = false , className: classNameProp = "" , end: end = false , style: styleProp , to: to , children: children  } = _ref5, rest = $646c75eca4d3ce21$var$_objectWithoutPropertiesLoose(_ref5, $646c75eca4d3ce21$var$_excluded2);
    let path = (0, $48ba1f31742d01ea$export$e75d2a2d1b3c245b)(to, {
        relative: rest.relative
    });
    let location = (0, $48ba1f31742d01ea$export$45d76561a5302f2b)();
    let routerState = $laauJ.useContext((0, $48ba1f31742d01ea$export$145dfa71566a64dc));
    let { navigator: navigator  } = $laauJ.useContext((0, $48ba1f31742d01ea$export$26749e8557646306));
    let toPathname = navigator.encodeLocation ? navigator.encodeLocation(path).pathname : path.pathname;
    let locationPathname = location.pathname;
    let nextLocationPathname = routerState && routerState.navigation && routerState.navigation.location ? routerState.navigation.location.pathname : null;
    if (!caseSensitive) {
        locationPathname = locationPathname.toLowerCase();
        nextLocationPathname = nextLocationPathname ? nextLocationPathname.toLowerCase() : null;
        toPathname = toPathname.toLowerCase();
    }
    let isActive = locationPathname === toPathname || !end && locationPathname.startsWith(toPathname) && locationPathname.charAt(toPathname.length) === "/";
    let isPending = nextLocationPathname != null && (nextLocationPathname === toPathname || !end && nextLocationPathname.startsWith(toPathname) && nextLocationPathname.charAt(toPathname.length) === "/");
    let ariaCurrent = isActive ? ariaCurrentProp : undefined;
    let className;
    if (typeof classNameProp === "function") className = classNameProp({
        isActive: isActive,
        isPending: isPending
    });
    else // If the className prop is not a function, we use a default `active`
    // class for <NavLink />s that are active. In v5 `active` was the default
    // value for `activeClassName`, but we are removing that API and can still
    // use the old default behavior for a cleaner upgrade path and keep the
    // simple styling rules working as they currently do.
    className = [
        classNameProp,
        isActive ? "active" : null,
        isPending ? "pending" : null
    ].filter(Boolean).join(" ");
    let style = typeof styleProp === "function" ? styleProp({
        isActive: isActive,
        isPending: isPending
    }) : styleProp;
    return /*#__PURE__*/ $laauJ.createElement($646c75eca4d3ce21$export$a6c7ac8248d6e38a, $646c75eca4d3ce21$var$_extends({}, rest, {
        "aria-current": ariaCurrent,
        className: className,
        ref: ref,
        style: style,
        to: to
    }), typeof children === "function" ? children({
        isActive: isActive,
        isPending: isPending
    }) : children);
});
/**
 * A `@remix-run/router`-aware `<form>`. It behaves like a normal form except
 * that the interaction with the server is with `fetch` instead of new document
 * requests, allowing components to add nicer UX to the page as the form is
 * submitted and returns with data.
 */ const $646c75eca4d3ce21$export$a7fed597f4b8afd8 = /*#__PURE__*/ $laauJ.forwardRef((props, ref)=>{
    return /*#__PURE__*/ $laauJ.createElement($646c75eca4d3ce21$var$FormImpl, $646c75eca4d3ce21$var$_extends({}, props, {
        ref: ref
    }));
});
const $646c75eca4d3ce21$var$FormImpl = /*#__PURE__*/ $laauJ.forwardRef((_ref6, forwardedRef)=>{
    let { reloadDocument: reloadDocument , replace: replace , method: method = $646c75eca4d3ce21$var$defaultMethod , action: action , onSubmit: onSubmit , fetcherKey: fetcherKey , routeId: routeId , relative: relative , preventScrollReset: preventScrollReset  } = _ref6, props = $646c75eca4d3ce21$var$_objectWithoutPropertiesLoose(_ref6, $646c75eca4d3ce21$var$_excluded3);
    let submit = $646c75eca4d3ce21$var$useSubmitImpl(fetcherKey, routeId);
    let formMethod = method.toLowerCase() === "get" ? "get" : "post";
    let formAction = $646c75eca4d3ce21$export$89a6bd6db0d97c56(action, {
        relative: relative
    });
    let submitHandler = (event)=>{
        onSubmit && onSubmit(event);
        if (event.defaultPrevented) return;
        event.preventDefault();
        let submitter = event.nativeEvent.submitter;
        let submitMethod = (submitter == null ? void 0 : submitter.getAttribute("formmethod")) || method;
        submit(submitter || event.currentTarget, {
            method: submitMethod,
            replace: replace,
            relative: relative,
            preventScrollReset: preventScrollReset
        });
    };
    return /*#__PURE__*/ $laauJ.createElement("form", $646c75eca4d3ce21$var$_extends({
        ref: forwardedRef,
        method: formMethod,
        action: formAction,
        onSubmit: reloadDocument ? onSubmit : submitHandler
    }, props));
});
/**
 * This component will emulate the browser's scroll restoration on location
 * changes.
 */ function $646c75eca4d3ce21$export$11aac1aab828f1fa(_ref7) {
    let { getKey: getKey , storageKey: storageKey  } = _ref7;
    $646c75eca4d3ce21$export$25057cfe5591e3e9({
        getKey: getKey,
        storageKey: storageKey
    });
    return null;
}
////////////////////////////////////////////////////////////////////////////////
//#region Hooks
////////////////////////////////////////////////////////////////////////////////
var $646c75eca4d3ce21$var$DataRouterHook;
(function(DataRouterHook) {
    DataRouterHook["UseScrollRestoration"] = "useScrollRestoration";
    DataRouterHook["UseSubmitImpl"] = "useSubmitImpl";
    DataRouterHook["UseFetcher"] = "useFetcher";
})($646c75eca4d3ce21$var$DataRouterHook || ($646c75eca4d3ce21$var$DataRouterHook = {}));
var $646c75eca4d3ce21$var$DataRouterStateHook;
(function(DataRouterStateHook) {
    DataRouterStateHook["UseFetchers"] = "useFetchers";
    DataRouterStateHook["UseScrollRestoration"] = "useScrollRestoration";
})($646c75eca4d3ce21$var$DataRouterStateHook || ($646c75eca4d3ce21$var$DataRouterStateHook = {}));
function $646c75eca4d3ce21$var$getDataRouterConsoleError(hookName) {
    return hookName + " must be used within a data router.  See https://reactrouter.com/routers/picking-a-router.";
}
function $646c75eca4d3ce21$var$useDataRouterContext(hookName) {
    let ctx = $laauJ.useContext((0, $48ba1f31742d01ea$export$3add0d5dce533e2e));
    !ctx && (0, $cbc79efe0a1f5829$export$3e9cee6b33872309)(false);
    return ctx;
}
function $646c75eca4d3ce21$var$useDataRouterState(hookName) {
    let state = $laauJ.useContext((0, $48ba1f31742d01ea$export$145dfa71566a64dc));
    !state && (0, $cbc79efe0a1f5829$export$3e9cee6b33872309)(false);
    return state;
}
/**
 * Handles the click behavior for router `<Link>` components. This is useful if
 * you need to create custom `<Link>` components with the same click behavior we
 * use in our exported `<Link>`.
 */ function $646c75eca4d3ce21$export$67621102c14d847(to, _temp) {
    let { target: target , replace: replaceProp , state: state , preventScrollReset: preventScrollReset , relative: relative  } = _temp === void 0 ? {} : _temp;
    let navigate = (0, $48ba1f31742d01ea$export$9770f232ac06a008)();
    let location = (0, $48ba1f31742d01ea$export$45d76561a5302f2b)();
    let path = (0, $48ba1f31742d01ea$export$e75d2a2d1b3c245b)(to, {
        relative: relative
    });
    return $laauJ.useCallback((event)=>{
        if ($646c75eca4d3ce21$var$shouldProcessLinkClick(event, target)) {
            event.preventDefault(); // If the URL hasn't changed, a regular <a> will do a replace instead of
            // a push, so do the same here unless the replace prop is explicitly set
            let replace = replaceProp !== undefined ? replaceProp : (0, $cbc79efe0a1f5829$export$fe53371bee54353d)(location) === (0, $cbc79efe0a1f5829$export$fe53371bee54353d)(path);
            navigate(to, {
                replace: replace,
                state: state,
                preventScrollReset: preventScrollReset,
                relative: relative
            });
        }
    }, [
        location,
        navigate,
        path,
        replaceProp,
        state,
        target,
        to,
        preventScrollReset,
        relative
    ]);
}
/**
 * A convenient wrapper for reading and writing search parameters via the
 * URLSearchParams interface.
 */ function $646c75eca4d3ce21$export$f1a78c17382fe22a(defaultInit) {
    let defaultSearchParamsRef = $laauJ.useRef($646c75eca4d3ce21$export$a2e4e2dcc7b1f22f(defaultInit));
    let hasSetSearchParamsRef = $laauJ.useRef(false);
    let location = (0, $48ba1f31742d01ea$export$45d76561a5302f2b)();
    let searchParams = $laauJ.useMemo(()=>// Once we call that we want those to take precedence, otherwise you can't
        // remove a param with setSearchParams({}) if it has an initial value
        $646c75eca4d3ce21$var$getSearchParamsForLocation(location.search, hasSetSearchParamsRef.current ? null : defaultSearchParamsRef.current), [
        location.search
    ]);
    let navigate = (0, $48ba1f31742d01ea$export$9770f232ac06a008)();
    let setSearchParams = $laauJ.useCallback((nextInit, navigateOptions)=>{
        const newSearchParams = $646c75eca4d3ce21$export$a2e4e2dcc7b1f22f(typeof nextInit === "function" ? nextInit(searchParams) : nextInit);
        hasSetSearchParamsRef.current = true;
        navigate("?" + newSearchParams, navigateOptions);
    }, [
        navigate,
        searchParams
    ]);
    return [
        searchParams,
        setSearchParams
    ];
}
/**
 * Returns a function that may be used to programmatically submit a form (or
 * some arbitrary data) to the server.
 */ function $646c75eca4d3ce21$export$47c85c6e3a081d3() {
    return $646c75eca4d3ce21$var$useSubmitImpl();
}
function $646c75eca4d3ce21$var$useSubmitImpl(fetcherKey, fetcherRouteId) {
    let { router: router  } = $646c75eca4d3ce21$var$useDataRouterContext($646c75eca4d3ce21$var$DataRouterHook.UseSubmitImpl);
    let { basename: basename  } = $laauJ.useContext((0, $48ba1f31742d01ea$export$26749e8557646306));
    let currentRouteId = (0, $48ba1f31742d01ea$export$5fc8298006ad9e58)();
    return $laauJ.useCallback(function(target, options) {
        if (options === void 0) options = {};
        if (typeof document === "undefined") throw new Error("You are calling submit during the server render. Try calling submit within a `useEffect` or callback instead.");
        let { action: action , method: method , encType: encType , formData: formData  } = $646c75eca4d3ce21$var$getFormSubmissionInfo(target, options, basename); // Base options shared between fetch() and navigate()
        let opts = {
            preventScrollReset: options.preventScrollReset,
            formData: formData,
            formMethod: method,
            formEncType: encType
        };
        if (fetcherKey) {
            !(fetcherRouteId != null) && (0, $cbc79efe0a1f5829$export$3e9cee6b33872309)(false);
            router.fetch(fetcherKey, fetcherRouteId, action, opts);
        } else router.navigate(action, $646c75eca4d3ce21$var$_extends({}, opts, {
            replace: options.replace,
            fromRouteId: currentRouteId
        }));
    }, [
        router,
        basename,
        fetcherKey,
        fetcherRouteId,
        currentRouteId
    ]);
} // v7: Eventually we should deprecate this entirely in favor of using the
// router method directly?
function $646c75eca4d3ce21$export$89a6bd6db0d97c56(action, _temp2) {
    let { relative: relative  } = _temp2 === void 0 ? {} : _temp2;
    let { basename: basename  } = $laauJ.useContext((0, $48ba1f31742d01ea$export$26749e8557646306));
    let routeContext = $laauJ.useContext((0, $48ba1f31742d01ea$export$9072aa6dd1f93057));
    !routeContext && (0, $cbc79efe0a1f5829$export$3e9cee6b33872309)(false);
    let [match] = routeContext.matches.slice(-1); // Shallow clone path so we can modify it below, otherwise we modify the
    // object referenced by useMemo inside useResolvedPath
    let path = $646c75eca4d3ce21$var$_extends({}, (0, $48ba1f31742d01ea$export$e75d2a2d1b3c245b)(action ? action : ".", {
        relative: relative
    })); // Previously we set the default action to ".". The problem with this is that
    // `useResolvedPath(".")` excludes search params and the hash of the resolved
    // URL. This is the intended behavior of when "." is specifically provided as
    // the form action, but inconsistent w/ browsers when the action is omitted.
    // https://github.com/remix-run/remix/issues/927
    let location = (0, $48ba1f31742d01ea$export$45d76561a5302f2b)();
    if (action == null) {
        // Safe to write to these directly here since if action was undefined, we
        // would have called useResolvedPath(".") which will never include a search
        // or hash
        path.search = location.search;
        path.hash = location.hash; // When grabbing search params from the URL, remove the automatically
        // inserted ?index param so we match the useResolvedPath search behavior
        // which would not include ?index
        if (match.route.index) {
            let params = new URLSearchParams(path.search);
            params.delete("index");
            path.search = params.toString() ? "?" + params.toString() : "";
        }
    }
    if ((!action || action === ".") && match.route.index) path.search = path.search ? path.search.replace(/^\?/, "?index&") : "?index";
     // If we're operating within a basename, prepend it to the pathname prior
    // to creating the form action.  If this is a root navigation, then just use
    // the raw basename which allows the basename to have full control over the
    // presence of a trailing slash on root actions
    if (basename !== "/") path.pathname = path.pathname === "/" ? basename : (0, $cbc79efe0a1f5829$export$86d9a7913e44197e)([
        basename,
        path.pathname
    ]);
    return (0, $cbc79efe0a1f5829$export$fe53371bee54353d)(path);
}
function $646c75eca4d3ce21$var$createFetcherForm(fetcherKey, routeId) {
    let FetcherForm = /*#__PURE__*/ $laauJ.forwardRef((props, ref)=>{
        return /*#__PURE__*/ $laauJ.createElement($646c75eca4d3ce21$var$FormImpl, $646c75eca4d3ce21$var$_extends({}, props, {
            ref: ref,
            fetcherKey: fetcherKey,
            routeId: routeId
        }));
    });
    return FetcherForm;
}
let $646c75eca4d3ce21$var$fetcherId = 0;
/**
 * Interacts with route loaders and actions without causing a navigation. Great
 * for any interaction that stays on the same page.
 */ function $646c75eca4d3ce21$export$5b0d2d9a9921565a() {
    var _route$matches;
    let { router: router  } = $646c75eca4d3ce21$var$useDataRouterContext($646c75eca4d3ce21$var$DataRouterHook.UseFetcher);
    let route = $laauJ.useContext((0, $48ba1f31742d01ea$export$9072aa6dd1f93057));
    !route && (0, $cbc79efe0a1f5829$export$3e9cee6b33872309)(false);
    let routeId = (_route$matches = route.matches[route.matches.length - 1]) == null ? void 0 : _route$matches.route.id;
    !(routeId != null) && (0, $cbc79efe0a1f5829$export$3e9cee6b33872309)(false);
    let [fetcherKey] = $laauJ.useState(()=>String(++$646c75eca4d3ce21$var$fetcherId));
    let [Form] = $laauJ.useState(()=>{
        !routeId && (0, $cbc79efe0a1f5829$export$3e9cee6b33872309)(false);
        return $646c75eca4d3ce21$var$createFetcherForm(fetcherKey, routeId);
    });
    let [load] = $laauJ.useState(()=>(href)=>{
            !router && (0, $cbc79efe0a1f5829$export$3e9cee6b33872309)(false);
            !routeId && (0, $cbc79efe0a1f5829$export$3e9cee6b33872309)(false);
            router.fetch(fetcherKey, routeId, href);
        });
    let submit = $646c75eca4d3ce21$var$useSubmitImpl(fetcherKey, routeId);
    let fetcher = router.getFetcher(fetcherKey);
    let fetcherWithComponents = $laauJ.useMemo(()=>$646c75eca4d3ce21$var$_extends({
            Form: Form,
            submit: submit,
            load: load
        }, fetcher), [
        fetcher,
        Form,
        submit,
        load
    ]);
    $laauJ.useEffect(()=>{
        // Is this busted when the React team gets real weird and calls effects
        // twice on mount?  We really just need to garbage collect here when this
        // fetcher is no longer around.
        return ()=>{
            if (!router) {
                console.warn("No router available to clean up from useFetcher()");
                return;
            }
            router.deleteFetcher(fetcherKey);
        };
    }, [
        router,
        fetcherKey
    ]);
    return fetcherWithComponents;
}
/**
 * Provides all fetchers currently on the page. Useful for layouts and parent
 * routes that need to provide pending/optimistic UI regarding the fetch.
 */ function $646c75eca4d3ce21$export$fa996778a3a31087() {
    let state = $646c75eca4d3ce21$var$useDataRouterState($646c75eca4d3ce21$var$DataRouterStateHook.UseFetchers);
    return [
        ...state.fetchers.values()
    ];
}
const $646c75eca4d3ce21$var$SCROLL_RESTORATION_STORAGE_KEY = "react-router-scroll-positions";
let $646c75eca4d3ce21$var$savedScrollPositions = {};
/**
 * When rendered inside a RouterProvider, will restore scroll positions on navigations
 */ function $646c75eca4d3ce21$export$25057cfe5591e3e9(_temp3) {
    let { getKey: getKey , storageKey: storageKey  } = _temp3 === void 0 ? {} : _temp3;
    let { router: router  } = $646c75eca4d3ce21$var$useDataRouterContext($646c75eca4d3ce21$var$DataRouterHook.UseScrollRestoration);
    let { restoreScrollPosition: restoreScrollPosition , preventScrollReset: preventScrollReset  } = $646c75eca4d3ce21$var$useDataRouterState($646c75eca4d3ce21$var$DataRouterStateHook.UseScrollRestoration);
    let location = (0, $48ba1f31742d01ea$export$45d76561a5302f2b)();
    let matches = (0, $48ba1f31742d01ea$export$2378eb7f5ff86053)();
    let navigation = (0, $48ba1f31742d01ea$export$d0fd4b7106de2769)(); // Trigger manual scroll restoration while we're active
    $laauJ.useEffect(()=>{
        window.history.scrollRestoration = "manual";
        return ()=>{
            window.history.scrollRestoration = "auto";
        };
    }, []); // Save positions on pagehide
    $646c75eca4d3ce21$var$usePageHide($laauJ.useCallback(()=>{
        if (navigation.state === "idle") {
            let key = (getKey ? getKey(location, matches) : null) || location.key;
            $646c75eca4d3ce21$var$savedScrollPositions[key] = window.scrollY;
        }
        sessionStorage.setItem(storageKey || $646c75eca4d3ce21$var$SCROLL_RESTORATION_STORAGE_KEY, JSON.stringify($646c75eca4d3ce21$var$savedScrollPositions));
        window.history.scrollRestoration = "auto";
    }, [
        storageKey,
        getKey,
        navigation.state,
        location,
        matches
    ])); // Read in any saved scroll locations
    if (typeof document !== "undefined") {
        // eslint-disable-next-line react-hooks/rules-of-hooks
        $laauJ.useLayoutEffect(()=>{
            try {
                let sessionPositions = sessionStorage.getItem(storageKey || $646c75eca4d3ce21$var$SCROLL_RESTORATION_STORAGE_KEY);
                if (sessionPositions) $646c75eca4d3ce21$var$savedScrollPositions = JSON.parse(sessionPositions);
            } catch (e) {}
        }, [
            storageKey
        ]); // Enable scroll restoration in the router
        // eslint-disable-next-line react-hooks/rules-of-hooks
        $laauJ.useLayoutEffect(()=>{
            let disableScrollRestoration = router == null ? void 0 : router.enableScrollRestoration($646c75eca4d3ce21$var$savedScrollPositions, ()=>window.scrollY, getKey);
            return ()=>disableScrollRestoration && disableScrollRestoration();
        }, [
            router,
            getKey
        ]); // Restore scrolling when state.restoreScrollPosition changes
        // eslint-disable-next-line react-hooks/rules-of-hooks
        $laauJ.useLayoutEffect(()=>{
            // Explicit false means don't do anything (used for submissions)
            if (restoreScrollPosition === false) return;
             // been here before, scroll to it
            if (typeof restoreScrollPosition === "number") {
                window.scrollTo(0, restoreScrollPosition);
                return;
            } // try to scroll to the hash
            if (location.hash) {
                let el = document.getElementById(location.hash.slice(1));
                if (el) {
                    el.scrollIntoView();
                    return;
                }
            } // Don't reset if this navigation opted out
            if (preventScrollReset === true) return;
             // otherwise go to the top on new locations
            window.scrollTo(0, 0);
        }, [
            location,
            restoreScrollPosition,
            preventScrollReset
        ]);
    }
}
/**
 * Setup a callback to be fired on the window's `beforeunload` event. This is
 * useful for saving some data to `window.localStorage` just before the page
 * refreshes.
 *
 * Note: The `callback` argument should be a function created with
 * `React.useCallback()`.
 */ function $646c75eca4d3ce21$export$c0a586b329cae57d(callback, options) {
    let { capture: capture  } = options || {};
    $laauJ.useEffect(()=>{
        let opts = capture != null ? {
            capture: capture
        } : undefined;
        window.addEventListener("beforeunload", callback, opts);
        return ()=>{
            window.removeEventListener("beforeunload", callback, opts);
        };
    }, [
        callback,
        capture
    ]);
}
/**
 * Setup a callback to be fired on the window's `pagehide` event. This is
 * useful for saving some data to `window.localStorage` just before the page
 * refreshes.  This event is better supported than beforeunload across browsers.
 *
 * Note: The `callback` argument should be a function created with
 * `React.useCallback()`.
 */ function $646c75eca4d3ce21$var$usePageHide(callback, options) {
    let { capture: capture  } = options || {};
    $laauJ.useEffect(()=>{
        let opts = capture != null ? {
            capture: capture
        } : undefined;
        window.addEventListener("pagehide", callback, opts);
        return ()=>{
            window.removeEventListener("pagehide", callback, opts);
        };
    }, [
        callback,
        capture
    ]);
}
/**
 * Wrapper around useBlocker to show a window.confirm prompt to users instead
 * of building a custom UI with useBlocker.
 *
 * Warning: This has *a lot of rough edges* and behaves very differently (and
 * very incorrectly in some cases) across browsers if user click addition
 * back/forward navigations while the confirm is open.  Use at your own risk.
 */ function $646c75eca4d3ce21$export$39f4eb3dbd812741(_ref8) {
    let { when: when , message: message  } = _ref8;
    let blocker = (0, $48ba1f31742d01ea$export$2af03a1de5c0910)(when);
    $laauJ.useEffect(()=>{
        if (blocker.state === "blocked" && !when) blocker.reset();
    }, [
        blocker,
        when
    ]);
    $laauJ.useEffect(()=>{
        if (blocker.state === "blocked") {
            let proceed = window.confirm(message);
            if (proceed) setTimeout(blocker.proceed, 0);
            else blocker.reset();
        }
    }, [
        blocker,
        message
    ]);
}



var $laauJ = parcelRequire("laauJ");
var $e837463d45d8b747$exports = {};
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ var $e837463d45d8b747$var$ReactIs, $e837463d45d8b747$var$throwOnDirectAccess;

// By explicitly using `prop-types` you are opting into new production behavior.
// http://fb.me/prop-types-in-prod
$e837463d45d8b747$exports = (parcelRequire("dM1oJ"))();


var $0c07a6d6678e0a64$exports = {};
/* global Map:readonly, Set:readonly, ArrayBuffer:readonly */ var $0c07a6d6678e0a64$var$hasElementType = typeof Element !== "undefined";
var $0c07a6d6678e0a64$var$hasMap = typeof Map === "function";
var $0c07a6d6678e0a64$var$hasSet = typeof Set === "function";
var $0c07a6d6678e0a64$var$hasArrayBuffer = typeof ArrayBuffer === "function" && !!ArrayBuffer.isView;
// Note: We **don't** need `envHasBigInt64Array` in fde es6/index.js
function $0c07a6d6678e0a64$var$equal(a, b) {
    // START: fast-deep-equal es6/index.js 3.1.3
    if (a === b) return true;
    if (a && b && typeof a == "object" && typeof b == "object") {
        if (a.constructor !== b.constructor) return false;
        var length, i, keys;
        if (Array.isArray(a)) {
            length = a.length;
            if (length != b.length) return false;
            for(i = length; i-- !== 0;)if (!$0c07a6d6678e0a64$var$equal(a[i], b[i])) return false;
            return true;
        }
        // START: Modifications:
        // 1. Extra `has<Type> &&` helpers in initial condition allow es6 code
        //    to co-exist with es5.
        // 2. Replace `for of` with es5 compliant iteration using `for`.
        //    Basically, take:
        //
        //    ```js
        //    for (i of a.entries())
        //      if (!b.has(i[0])) return false;
        //    ```
        //
        //    ... and convert to:
        //
        //    ```js
        //    it = a.entries();
        //    while (!(i = it.next()).done)
        //      if (!b.has(i.value[0])) return false;
        //    ```
        //
        //    **Note**: `i` access switches to `i.value`.
        var it;
        if ($0c07a6d6678e0a64$var$hasMap && a instanceof Map && b instanceof Map) {
            if (a.size !== b.size) return false;
            it = a.entries();
            while(!(i = it.next()).done)if (!b.has(i.value[0])) return false;
            it = a.entries();
            while(!(i = it.next()).done)if (!$0c07a6d6678e0a64$var$equal(i.value[1], b.get(i.value[0]))) return false;
            return true;
        }
        if ($0c07a6d6678e0a64$var$hasSet && a instanceof Set && b instanceof Set) {
            if (a.size !== b.size) return false;
            it = a.entries();
            while(!(i = it.next()).done)if (!b.has(i.value[0])) return false;
            return true;
        }
        // END: Modifications
        if ($0c07a6d6678e0a64$var$hasArrayBuffer && ArrayBuffer.isView(a) && ArrayBuffer.isView(b)) {
            length = a.length;
            if (length != b.length) return false;
            for(i = length; i-- !== 0;)if (a[i] !== b[i]) return false;
            return true;
        }
        if (a.constructor === RegExp) return a.source === b.source && a.flags === b.flags;
        // START: Modifications:
        // Apply guards for `Object.create(null)` handling. See:
        // - https://github.com/FormidableLabs/react-fast-compare/issues/64
        // - https://github.com/epoberezkin/fast-deep-equal/issues/49
        if (a.valueOf !== Object.prototype.valueOf && typeof a.valueOf === "function" && typeof b.valueOf === "function") return a.valueOf() === b.valueOf();
        if (a.toString !== Object.prototype.toString && typeof a.toString === "function" && typeof b.toString === "function") return a.toString() === b.toString();
        // END: Modifications
        keys = Object.keys(a);
        length = keys.length;
        if (length !== Object.keys(b).length) return false;
        for(i = length; i-- !== 0;)if (!Object.prototype.hasOwnProperty.call(b, keys[i])) return false;
        // END: fast-deep-equal
        // START: react-fast-compare
        // custom handling for DOM elements
        if ($0c07a6d6678e0a64$var$hasElementType && a instanceof Element) return false;
        // custom handling for React/Preact
        for(i = length; i-- !== 0;){
            if ((keys[i] === "_owner" || keys[i] === "__v" || keys[i] === "__o") && a.$$typeof) continue;
            // all other properties should be traversed as usual
            if (!$0c07a6d6678e0a64$var$equal(a[keys[i]], b[keys[i]])) return false;
        }
        // END: react-fast-compare
        // START: fast-deep-equal
        return true;
    }
    return a !== a && b !== b;
}
// end fast-deep-equal
$0c07a6d6678e0a64$exports = function isEqual(a, b) {
    try {
        return $0c07a6d6678e0a64$var$equal(a, b);
    } catch (error) {
        if ((error.message || "").match(/stack|recursion/i)) {
            // warn on circular references, don't crash
            // browsers give this different errors name and messages:
            // chrome/safari: "RangeError", "Maximum call stack size exceeded"
            // firefox: "InternalError", too much recursion"
            // edge: "Error", "Out of stack space"
            console.warn("react-fast-compare cannot handle circular refs");
            return false;
        }
        // some other error. we should definitely know about these
        throw error;
    }
};


var $cd3b709fee4a2994$exports = {};
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ "use strict";
/**
 * Use invariant() to assert state which your program assumes to be true.
 *
 * Provide sprintf-style format (only %s is supported) and arguments
 * to provide information about what broke and what you were
 * expecting.
 *
 * The invariant message will be stripped in production, but the invariant
 * will remain to ensure logic does not differ in production.
 */ var $cd3b709fee4a2994$var$invariant = function(condition, format, a, b, c, d, e, f) {
    if (!condition) {
        var error;
        if (format === undefined) error = new Error("Minified exception occurred; use the non-minified dev environment for the full error message and additional helpful warnings.");
        else {
            var args = [
                a,
                b,
                c,
                d,
                e,
                f
            ];
            var argIndex = 0;
            error = new Error(format.replace(/%s/g, function() {
                return args[argIndex++];
            }));
            error.name = "Invariant Violation";
        }
        error.framesToPop = 1; // we don't care about invariant's own frame
        throw error;
    }
};
$cd3b709fee4a2994$exports = $cd3b709fee4a2994$var$invariant;


var $45b8d8fb1bba6ce0$exports = {};
//
$45b8d8fb1bba6ce0$exports = function shallowEqual(objA, objB, compare, compareContext) {
    var ret = compare ? compare.call(compareContext, objA, objB) : void 0;
    if (ret !== void 0) return !!ret;
    if (objA === objB) return true;
    if (typeof objA !== "object" || !objA || typeof objB !== "object" || !objB) return false;
    var keysA = Object.keys(objA);
    var keysB = Object.keys(objB);
    if (keysA.length !== keysB.length) return false;
    var bHasOwnProperty = Object.prototype.hasOwnProperty.bind(objB);
    // Test for A's keys different from B.
    for(var idx = 0; idx < keysA.length; idx++){
        var key = keysA[idx];
        if (!bHasOwnProperty(key)) return false;
        var valueA = objA[key];
        var valueB = objB[key];
        ret = compare ? compare.call(compareContext, valueA, valueB, key) : void 0;
        if (ret === false || ret === void 0 && valueA !== valueB) return false;
    }
    return true;
};


function $de8f4a6bfd6923d4$var$a() {
    return $de8f4a6bfd6923d4$var$a = Object.assign || function(t) {
        for(var e = 1; e < arguments.length; e++){
            var r = arguments[e];
            for(var n in r)Object.prototype.hasOwnProperty.call(r, n) && (t[n] = r[n]);
        }
        return t;
    }, $de8f4a6bfd6923d4$var$a.apply(this, arguments);
}
function $de8f4a6bfd6923d4$var$s(t, e) {
    t.prototype = Object.create(e.prototype), t.prototype.constructor = t, $de8f4a6bfd6923d4$var$c(t, e);
}
function $de8f4a6bfd6923d4$var$c(t, e) {
    return $de8f4a6bfd6923d4$var$c = Object.setPrototypeOf || function(t, e) {
        return t.__proto__ = e, t;
    }, $de8f4a6bfd6923d4$var$c(t, e);
}
function $de8f4a6bfd6923d4$var$u(t, e) {
    if (null == t) return {};
    var r, n, i = {}, o = Object.keys(t);
    for(n = 0; n < o.length; n++)e.indexOf(r = o[n]) >= 0 || (i[r] = t[r]);
    return i;
}
var $de8f4a6bfd6923d4$var$l = {
    BASE: "base",
    BODY: "body",
    HEAD: "head",
    HTML: "html",
    LINK: "link",
    META: "meta",
    NOSCRIPT: "noscript",
    SCRIPT: "script",
    STYLE: "style",
    TITLE: "title",
    FRAGMENT: "Symbol(react.fragment)"
}, $de8f4a6bfd6923d4$var$p = {
    rel: [
        "amphtml",
        "canonical",
        "alternate"
    ]
}, $de8f4a6bfd6923d4$var$f = {
    type: [
        "application/ld+json"
    ]
}, $de8f4a6bfd6923d4$var$d = {
    charset: "",
    name: [
        "robots",
        "description"
    ],
    property: [
        "og:type",
        "og:title",
        "og:url",
        "og:image",
        "og:image:alt",
        "og:description",
        "twitter:url",
        "twitter:title",
        "twitter:description",
        "twitter:image",
        "twitter:image:alt",
        "twitter:card",
        "twitter:site"
    ]
}, $de8f4a6bfd6923d4$var$h = Object.keys($de8f4a6bfd6923d4$var$l).map(function(t) {
    return $de8f4a6bfd6923d4$var$l[t];
}), $de8f4a6bfd6923d4$var$m = {
    accesskey: "accessKey",
    charset: "charSet",
    class: "className",
    contenteditable: "contentEditable",
    contextmenu: "contextMenu",
    "http-equiv": "httpEquiv",
    itemprop: "itemProp",
    tabindex: "tabIndex"
}, $de8f4a6bfd6923d4$var$y = Object.keys($de8f4a6bfd6923d4$var$m).reduce(function(t, e) {
    return t[$de8f4a6bfd6923d4$var$m[e]] = e, t;
}, {}), $de8f4a6bfd6923d4$var$T = function(t, e) {
    for(var r = t.length - 1; r >= 0; r -= 1){
        var n = t[r];
        if (Object.prototype.hasOwnProperty.call(n, e)) return n[e];
    }
    return null;
}, $de8f4a6bfd6923d4$var$g = function(t) {
    var e = $de8f4a6bfd6923d4$var$T(t, $de8f4a6bfd6923d4$var$l.TITLE), r = $de8f4a6bfd6923d4$var$T(t, "titleTemplate");
    if (Array.isArray(e) && (e = e.join("")), r && e) return r.replace(/%s/g, function() {
        return e;
    });
    var n = $de8f4a6bfd6923d4$var$T(t, "defaultTitle");
    return e || n || void 0;
}, $de8f4a6bfd6923d4$var$b = function(t) {
    return $de8f4a6bfd6923d4$var$T(t, "onChangeClientState") || function() {};
}, $de8f4a6bfd6923d4$var$v = function(t, e) {
    return e.filter(function(e) {
        return void 0 !== e[t];
    }).map(function(e) {
        return e[t];
    }).reduce(function(t, e) {
        return $de8f4a6bfd6923d4$var$a({}, t, e);
    }, {});
}, $de8f4a6bfd6923d4$var$A = function(t, e) {
    return e.filter(function(t) {
        return void 0 !== t[$de8f4a6bfd6923d4$var$l.BASE];
    }).map(function(t) {
        return t[$de8f4a6bfd6923d4$var$l.BASE];
    }).reverse().reduce(function(e, r) {
        if (!e.length) for(var n = Object.keys(r), i = 0; i < n.length; i += 1){
            var o = n[i].toLowerCase();
            if (-1 !== t.indexOf(o) && r[o]) return e.concat(r);
        }
        return e;
    }, []);
}, $de8f4a6bfd6923d4$var$C = function(t, e, r) {
    var n = {};
    return r.filter(function(e) {
        return !!Array.isArray(e[t]) || (void 0 !== e[t] && console && "function" == typeof console.warn && console.warn("Helmet: " + t + ' should be of type "Array". Instead found type "' + typeof e[t] + '"'), !1);
    }).map(function(e) {
        return e[t];
    }).reverse().reduce(function(t, r) {
        var i = {};
        r.filter(function(t) {
            for(var r, o = Object.keys(t), a = 0; a < o.length; a += 1){
                var s = o[a], c = s.toLowerCase();
                -1 === e.indexOf(c) || "rel" === r && "canonical" === t[r].toLowerCase() || "rel" === c && "stylesheet" === t[c].toLowerCase() || (r = c), -1 === e.indexOf(s) || "innerHTML" !== s && "cssText" !== s && "itemprop" !== s || (r = s);
            }
            if (!r || !t[r]) return !1;
            var u = t[r].toLowerCase();
            return n[r] || (n[r] = {}), i[r] || (i[r] = {}), !n[r][u] && (i[r][u] = !0, !0);
        }).reverse().forEach(function(e) {
            return t.push(e);
        });
        for(var o = Object.keys(i), s = 0; s < o.length; s += 1){
            var c = o[s], u = $de8f4a6bfd6923d4$var$a({}, n[c], i[c]);
            n[c] = u;
        }
        return t;
    }, []).reverse();
}, $de8f4a6bfd6923d4$var$O = function(t, e) {
    if (Array.isArray(t) && t.length) {
        for(var r = 0; r < t.length; r += 1)if (t[r][e]) return !0;
    }
    return !1;
}, $de8f4a6bfd6923d4$var$S = function(t) {
    return Array.isArray(t) ? t.join("") : t;
}, $de8f4a6bfd6923d4$var$E = function(t, e) {
    return Array.isArray(t) ? t.reduce(function(t, r) {
        return function(t, e) {
            for(var r = Object.keys(t), n = 0; n < r.length; n += 1)if (e[r[n]] && e[r[n]].includes(t[r[n]])) return !0;
            return !1;
        }(r, e) ? t.priority.push(r) : t.default.push(r), t;
    }, {
        priority: [],
        default: []
    }) : {
        default: t
    };
}, $de8f4a6bfd6923d4$var$I = function(t, e) {
    var r;
    return $de8f4a6bfd6923d4$var$a({}, t, ((r = {})[e] = void 0, r));
}, $de8f4a6bfd6923d4$var$P = [
    $de8f4a6bfd6923d4$var$l.NOSCRIPT,
    $de8f4a6bfd6923d4$var$l.SCRIPT,
    $de8f4a6bfd6923d4$var$l.STYLE
], $de8f4a6bfd6923d4$var$w = function(t, e) {
    return void 0 === e && (e = !0), !1 === e ? String(t) : String(t).replace(/&/g, "&amp;").replace(/</g, "&lt;").replace(/>/g, "&gt;").replace(/"/g, "&quot;").replace(/'/g, "&#x27;");
}, $de8f4a6bfd6923d4$var$x = function(t) {
    return Object.keys(t).reduce(function(e, r) {
        var n = void 0 !== t[r] ? r + '="' + t[r] + '"' : "" + r;
        return e ? e + " " + n : n;
    }, "");
}, $de8f4a6bfd6923d4$var$L = function(t, e) {
    return void 0 === e && (e = {}), Object.keys(t).reduce(function(e, r) {
        return e[$de8f4a6bfd6923d4$var$m[r] || r] = t[r], e;
    }, e);
}, $de8f4a6bfd6923d4$var$j = function(e, r) {
    return r.map(function(r, n) {
        var i, o = ((i = {
            key: n
        })["data-rh"] = !0, i);
        return Object.keys(r).forEach(function(t) {
            var e = $de8f4a6bfd6923d4$var$m[t] || t;
            "innerHTML" === e || "cssText" === e ? o.dangerouslySetInnerHTML = {
                __html: r.innerHTML || r.cssText
            } : o[e] = r[t];
        }), (0, (/*@__PURE__*/$parcel$interopDefault($laauJ))).createElement(e, o);
    });
}, $de8f4a6bfd6923d4$var$M = function(e, r, n) {
    switch(e){
        case $de8f4a6bfd6923d4$var$l.TITLE:
            return {
                toComponent: function() {
                    var e, n, i, o;
                    return n = r.titleAttributes, (i = {
                        key: e = r.title
                    })["data-rh"] = !0, o = $de8f4a6bfd6923d4$var$L(n, i), [
                        (0, (/*@__PURE__*/$parcel$interopDefault($laauJ))).createElement($de8f4a6bfd6923d4$var$l.TITLE, o, e)
                    ];
                },
                toString: function() {
                    return function(t, e, r, n) {
                        var i = $de8f4a6bfd6923d4$var$x(r), o = $de8f4a6bfd6923d4$var$S(e);
                        return i ? "<" + t + ' data-rh="true" ' + i + ">" + $de8f4a6bfd6923d4$var$w(o, n) + "</" + t + ">" : "<" + t + ' data-rh="true">' + $de8f4a6bfd6923d4$var$w(o, n) + "</" + t + ">";
                    }(e, r.title, r.titleAttributes, n);
                }
            };
        case "bodyAttributes":
        case "htmlAttributes":
            return {
                toComponent: function() {
                    return $de8f4a6bfd6923d4$var$L(r);
                },
                toString: function() {
                    return $de8f4a6bfd6923d4$var$x(r);
                }
            };
        default:
            return {
                toComponent: function() {
                    return $de8f4a6bfd6923d4$var$j(e, r);
                },
                toString: function() {
                    return function(t, e, r) {
                        return e.reduce(function(e, n) {
                            var i = Object.keys(n).filter(function(t) {
                                return !("innerHTML" === t || "cssText" === t);
                            }).reduce(function(t, e) {
                                var i = void 0 === n[e] ? e : e + '="' + $de8f4a6bfd6923d4$var$w(n[e], r) + '"';
                                return t ? t + " " + i : i;
                            }, ""), o = n.innerHTML || n.cssText || "", a = -1 === $de8f4a6bfd6923d4$var$P.indexOf(t);
                            return e + "<" + t + ' data-rh="true" ' + i + (a ? "/>" : ">" + o + "</" + t + ">");
                        }, "");
                    }(e, r, n);
                }
            };
    }
}, $de8f4a6bfd6923d4$var$k = function(t) {
    var e = t.baseTag, r = t.bodyAttributes, n = t.encode, i = t.htmlAttributes, o = t.noscriptTags, a = t.styleTags, s = t.title, c = void 0 === s ? "" : s, u = t.titleAttributes, h = t.linkTags, m = t.metaTags, y = t.scriptTags, T = {
        toComponent: function() {},
        toString: function() {
            return "";
        }
    };
    if (t.prioritizeSeoTags) {
        var g = function(t) {
            var e = t.linkTags, r = t.scriptTags, n = t.encode, i = $de8f4a6bfd6923d4$var$E(t.metaTags, $de8f4a6bfd6923d4$var$d), o = $de8f4a6bfd6923d4$var$E(e, $de8f4a6bfd6923d4$var$p), a = $de8f4a6bfd6923d4$var$E(r, $de8f4a6bfd6923d4$var$f);
            return {
                priorityMethods: {
                    toComponent: function() {
                        return [].concat($de8f4a6bfd6923d4$var$j($de8f4a6bfd6923d4$var$l.META, i.priority), $de8f4a6bfd6923d4$var$j($de8f4a6bfd6923d4$var$l.LINK, o.priority), $de8f4a6bfd6923d4$var$j($de8f4a6bfd6923d4$var$l.SCRIPT, a.priority));
                    },
                    toString: function() {
                        return $de8f4a6bfd6923d4$var$M($de8f4a6bfd6923d4$var$l.META, i.priority, n) + " " + $de8f4a6bfd6923d4$var$M($de8f4a6bfd6923d4$var$l.LINK, o.priority, n) + " " + $de8f4a6bfd6923d4$var$M($de8f4a6bfd6923d4$var$l.SCRIPT, a.priority, n);
                    }
                },
                metaTags: i.default,
                linkTags: o.default,
                scriptTags: a.default
            };
        }(t);
        T = g.priorityMethods, h = g.linkTags, m = g.metaTags, y = g.scriptTags;
    }
    return {
        priority: T,
        base: $de8f4a6bfd6923d4$var$M($de8f4a6bfd6923d4$var$l.BASE, e, n),
        bodyAttributes: $de8f4a6bfd6923d4$var$M("bodyAttributes", r, n),
        htmlAttributes: $de8f4a6bfd6923d4$var$M("htmlAttributes", i, n),
        link: $de8f4a6bfd6923d4$var$M($de8f4a6bfd6923d4$var$l.LINK, h, n),
        meta: $de8f4a6bfd6923d4$var$M($de8f4a6bfd6923d4$var$l.META, m, n),
        noscript: $de8f4a6bfd6923d4$var$M($de8f4a6bfd6923d4$var$l.NOSCRIPT, o, n),
        script: $de8f4a6bfd6923d4$var$M($de8f4a6bfd6923d4$var$l.SCRIPT, y, n),
        style: $de8f4a6bfd6923d4$var$M($de8f4a6bfd6923d4$var$l.STYLE, a, n),
        title: $de8f4a6bfd6923d4$var$M($de8f4a6bfd6923d4$var$l.TITLE, {
            title: c,
            titleAttributes: u
        }, n)
    };
}, $de8f4a6bfd6923d4$var$H = [], $de8f4a6bfd6923d4$export$a9cf6990c9c7feb9 = function(t, e) {
    var r = this;
    void 0 === e && (e = "undefined" != typeof document), this.instances = [], this.value = {
        setHelmet: function(t) {
            r.context.helmet = t;
        },
        helmetInstances: {
            get: function() {
                return r.canUseDOM ? $de8f4a6bfd6923d4$var$H : r.instances;
            },
            add: function(t) {
                (r.canUseDOM ? $de8f4a6bfd6923d4$var$H : r.instances).push(t);
            },
            remove: function(t) {
                var e = (r.canUseDOM ? $de8f4a6bfd6923d4$var$H : r.instances).indexOf(t);
                (r.canUseDOM ? $de8f4a6bfd6923d4$var$H : r.instances).splice(e, 1);
            }
        }
    }, this.context = t, this.canUseDOM = e, e || (t.helmet = $de8f4a6bfd6923d4$var$k({
        baseTag: [],
        bodyAttributes: {},
        encodeSpecialCharacters: !0,
        htmlAttributes: {},
        linkTags: [],
        metaTags: [],
        noscriptTags: [],
        scriptTags: [],
        styleTags: [],
        title: "",
        titleAttributes: {}
    }));
}, $de8f4a6bfd6923d4$var$R = (0, (/*@__PURE__*/$parcel$interopDefault($laauJ))).createContext({}), $de8f4a6bfd6923d4$var$D = (0, (/*@__PURE__*/$parcel$interopDefault($e837463d45d8b747$exports))).shape({
    setHelmet: (0, (/*@__PURE__*/$parcel$interopDefault($e837463d45d8b747$exports))).func,
    helmetInstances: (0, (/*@__PURE__*/$parcel$interopDefault($e837463d45d8b747$exports))).shape({
        get: (0, (/*@__PURE__*/$parcel$interopDefault($e837463d45d8b747$exports))).func,
        add: (0, (/*@__PURE__*/$parcel$interopDefault($e837463d45d8b747$exports))).func,
        remove: (0, (/*@__PURE__*/$parcel$interopDefault($e837463d45d8b747$exports))).func
    })
}), $de8f4a6bfd6923d4$var$U = "undefined" != typeof document, $de8f4a6bfd6923d4$export$4719288a8f5f7e71 = /*#__PURE__*/ function(e) {
    function r(t) {
        var n;
        return (n = e.call(this, t) || this).helmetData = new $de8f4a6bfd6923d4$export$a9cf6990c9c7feb9(n.props.context, r.canUseDOM), n;
    }
    return $de8f4a6bfd6923d4$var$s(r, e), r.prototype.render = function() {
        return (0, (/*@__PURE__*/$parcel$interopDefault($laauJ))).createElement($de8f4a6bfd6923d4$var$R.Provider, {
            value: this.helmetData.value
        }, this.props.children);
    }, r;
}((0, $laauJ.Component));
$de8f4a6bfd6923d4$export$4719288a8f5f7e71.canUseDOM = $de8f4a6bfd6923d4$var$U, $de8f4a6bfd6923d4$export$4719288a8f5f7e71.propTypes = {
    context: (0, (/*@__PURE__*/$parcel$interopDefault($e837463d45d8b747$exports))).shape({
        helmet: (0, (/*@__PURE__*/$parcel$interopDefault($e837463d45d8b747$exports))).shape()
    }),
    children: (0, (/*@__PURE__*/$parcel$interopDefault($e837463d45d8b747$exports))).node.isRequired
}, $de8f4a6bfd6923d4$export$4719288a8f5f7e71.defaultProps = {
    context: {}
}, $de8f4a6bfd6923d4$export$4719288a8f5f7e71.displayName = "HelmetProvider";
var $de8f4a6bfd6923d4$var$Y = function(t, e) {
    var r, n = document.head || document.querySelector($de8f4a6bfd6923d4$var$l.HEAD), i = n.querySelectorAll(t + "[data-rh]"), o = [].slice.call(i), a = [];
    return e && e.length && e.forEach(function(e) {
        var n = document.createElement(t);
        for(var i in e)Object.prototype.hasOwnProperty.call(e, i) && ("innerHTML" === i ? n.innerHTML = e.innerHTML : "cssText" === i ? n.styleSheet ? n.styleSheet.cssText = e.cssText : n.appendChild(document.createTextNode(e.cssText)) : n.setAttribute(i, void 0 === e[i] ? "" : e[i]));
        n.setAttribute("data-rh", "true"), o.some(function(t, e) {
            return r = e, n.isEqualNode(t);
        }) ? o.splice(r, 1) : a.push(n);
    }), o.forEach(function(t) {
        return t.parentNode.removeChild(t);
    }), a.forEach(function(t) {
        return n.appendChild(t);
    }), {
        oldTags: o,
        newTags: a
    };
}, $de8f4a6bfd6923d4$var$B = function(t, e) {
    var r = document.getElementsByTagName(t)[0];
    if (r) {
        for(var n = r.getAttribute("data-rh"), i = n ? n.split(",") : [], o = [].concat(i), a = Object.keys(e), s = 0; s < a.length; s += 1){
            var c = a[s], u = e[c] || "";
            r.getAttribute(c) !== u && r.setAttribute(c, u), -1 === i.indexOf(c) && i.push(c);
            var l = o.indexOf(c);
            -1 !== l && o.splice(l, 1);
        }
        for(var p = o.length - 1; p >= 0; p -= 1)r.removeAttribute(o[p]);
        i.length === o.length ? r.removeAttribute("data-rh") : r.getAttribute("data-rh") !== a.join(",") && r.setAttribute("data-rh", a.join(","));
    }
}, $de8f4a6bfd6923d4$var$K = function(t, e) {
    var r = t.baseTag, n = t.htmlAttributes, i = t.linkTags, o = t.metaTags, a = t.noscriptTags, s = t.onChangeClientState, c = t.scriptTags, u = t.styleTags, p = t.title, f = t.titleAttributes;
    $de8f4a6bfd6923d4$var$B($de8f4a6bfd6923d4$var$l.BODY, t.bodyAttributes), $de8f4a6bfd6923d4$var$B($de8f4a6bfd6923d4$var$l.HTML, n), function(t, e) {
        void 0 !== t && document.title !== t && (document.title = $de8f4a6bfd6923d4$var$S(t)), $de8f4a6bfd6923d4$var$B($de8f4a6bfd6923d4$var$l.TITLE, e);
    }(p, f);
    var d = {
        baseTag: $de8f4a6bfd6923d4$var$Y($de8f4a6bfd6923d4$var$l.BASE, r),
        linkTags: $de8f4a6bfd6923d4$var$Y($de8f4a6bfd6923d4$var$l.LINK, i),
        metaTags: $de8f4a6bfd6923d4$var$Y($de8f4a6bfd6923d4$var$l.META, o),
        noscriptTags: $de8f4a6bfd6923d4$var$Y($de8f4a6bfd6923d4$var$l.NOSCRIPT, a),
        scriptTags: $de8f4a6bfd6923d4$var$Y($de8f4a6bfd6923d4$var$l.SCRIPT, c),
        styleTags: $de8f4a6bfd6923d4$var$Y($de8f4a6bfd6923d4$var$l.STYLE, u)
    }, h = {}, m = {};
    Object.keys(d).forEach(function(t) {
        var e = d[t], r = e.newTags, n = e.oldTags;
        r.length && (h[t] = r), n.length && (m[t] = d[t].oldTags);
    }), e && e(), s(t, h, m);
}, $de8f4a6bfd6923d4$var$_ = null, $de8f4a6bfd6923d4$var$z = /*#__PURE__*/ function(t) {
    function e() {
        for(var e, r = arguments.length, n = new Array(r), i = 0; i < r; i++)n[i] = arguments[i];
        return (e = t.call.apply(t, [
            this
        ].concat(n)) || this).rendered = !1, e;
    }
    $de8f4a6bfd6923d4$var$s(e, t);
    var r = e.prototype;
    return r.shouldComponentUpdate = function(t) {
        return !(0, (/*@__PURE__*/$parcel$interopDefault($45b8d8fb1bba6ce0$exports)))(t, this.props);
    }, r.componentDidUpdate = function() {
        this.emitChange();
    }, r.componentWillUnmount = function() {
        this.props.context.helmetInstances.remove(this), this.emitChange();
    }, r.emitChange = function() {
        var t, e, r = this.props.context, n = r.setHelmet, i = null, o = (t = r.helmetInstances.get().map(function(t) {
            var e = $de8f4a6bfd6923d4$var$a({}, t.props);
            return delete e.context, e;
        }), {
            baseTag: $de8f4a6bfd6923d4$var$A([
                "href"
            ], t),
            bodyAttributes: $de8f4a6bfd6923d4$var$v("bodyAttributes", t),
            defer: $de8f4a6bfd6923d4$var$T(t, "defer"),
            encode: $de8f4a6bfd6923d4$var$T(t, "encodeSpecialCharacters"),
            htmlAttributes: $de8f4a6bfd6923d4$var$v("htmlAttributes", t),
            linkTags: $de8f4a6bfd6923d4$var$C($de8f4a6bfd6923d4$var$l.LINK, [
                "rel",
                "href"
            ], t),
            metaTags: $de8f4a6bfd6923d4$var$C($de8f4a6bfd6923d4$var$l.META, [
                "name",
                "charset",
                "http-equiv",
                "property",
                "itemprop"
            ], t),
            noscriptTags: $de8f4a6bfd6923d4$var$C($de8f4a6bfd6923d4$var$l.NOSCRIPT, [
                "innerHTML"
            ], t),
            onChangeClientState: $de8f4a6bfd6923d4$var$b(t),
            scriptTags: $de8f4a6bfd6923d4$var$C($de8f4a6bfd6923d4$var$l.SCRIPT, [
                "src",
                "innerHTML"
            ], t),
            styleTags: $de8f4a6bfd6923d4$var$C($de8f4a6bfd6923d4$var$l.STYLE, [
                "cssText"
            ], t),
            title: $de8f4a6bfd6923d4$var$g(t),
            titleAttributes: $de8f4a6bfd6923d4$var$v("titleAttributes", t),
            prioritizeSeoTags: $de8f4a6bfd6923d4$var$O(t, "prioritizeSeoTags")
        });
        $de8f4a6bfd6923d4$export$4719288a8f5f7e71.canUseDOM ? (e = o, $de8f4a6bfd6923d4$var$_ && cancelAnimationFrame($de8f4a6bfd6923d4$var$_), e.defer ? $de8f4a6bfd6923d4$var$_ = requestAnimationFrame(function() {
            $de8f4a6bfd6923d4$var$K(e, function() {
                $de8f4a6bfd6923d4$var$_ = null;
            });
        }) : ($de8f4a6bfd6923d4$var$K(e), $de8f4a6bfd6923d4$var$_ = null)) : $de8f4a6bfd6923d4$var$k && (i = $de8f4a6bfd6923d4$var$k(o)), n(i);
    }, r.init = function() {
        this.rendered || (this.rendered = !0, this.props.context.helmetInstances.add(this), this.emitChange());
    }, r.render = function() {
        return this.init(), null;
    }, e;
}((0, $laauJ.Component));
$de8f4a6bfd6923d4$var$z.propTypes = {
    context: $de8f4a6bfd6923d4$var$D.isRequired
}, $de8f4a6bfd6923d4$var$z.displayName = "HelmetDispatcher";
var $de8f4a6bfd6923d4$var$F = [
    "children"
], $de8f4a6bfd6923d4$var$G = [
    "children"
], $de8f4a6bfd6923d4$export$dcef8f9bb9a41431 = /*#__PURE__*/ function(e) {
    function r() {
        return e.apply(this, arguments) || this;
    }
    $de8f4a6bfd6923d4$var$s(r, e);
    var o = r.prototype;
    return o.shouldComponentUpdate = function(t) {
        return !(0, (/*@__PURE__*/$parcel$interopDefault($0c07a6d6678e0a64$exports)))($de8f4a6bfd6923d4$var$I(this.props, "helmetData"), $de8f4a6bfd6923d4$var$I(t, "helmetData"));
    }, o.mapNestedChildrenToProps = function(t, e) {
        if (!e) return null;
        switch(t.type){
            case $de8f4a6bfd6923d4$var$l.SCRIPT:
            case $de8f4a6bfd6923d4$var$l.NOSCRIPT:
                return {
                    innerHTML: e
                };
            case $de8f4a6bfd6923d4$var$l.STYLE:
                return {
                    cssText: e
                };
            default:
                throw new Error("<" + t.type + " /> elements are self-closing and can not contain children. Refer to our API for more information.");
        }
    }, o.flattenArrayTypeChildren = function(t) {
        var e, r = t.child, n = t.arrayTypeChildren;
        return $de8f4a6bfd6923d4$var$a({}, n, ((e = {})[r.type] = [].concat(n[r.type] || [], [
            $de8f4a6bfd6923d4$var$a({}, t.newChildProps, this.mapNestedChildrenToProps(r, t.nestedChildren))
        ]), e));
    }, o.mapObjectTypeChildren = function(t) {
        var e, r, n = t.child, i = t.newProps, o = t.newChildProps, s = t.nestedChildren;
        switch(n.type){
            case $de8f4a6bfd6923d4$var$l.TITLE:
                return $de8f4a6bfd6923d4$var$a({}, i, ((e = {})[n.type] = s, e.titleAttributes = $de8f4a6bfd6923d4$var$a({}, o), e));
            case $de8f4a6bfd6923d4$var$l.BODY:
                return $de8f4a6bfd6923d4$var$a({}, i, {
                    bodyAttributes: $de8f4a6bfd6923d4$var$a({}, o)
                });
            case $de8f4a6bfd6923d4$var$l.HTML:
                return $de8f4a6bfd6923d4$var$a({}, i, {
                    htmlAttributes: $de8f4a6bfd6923d4$var$a({}, o)
                });
            default:
                return $de8f4a6bfd6923d4$var$a({}, i, ((r = {})[n.type] = $de8f4a6bfd6923d4$var$a({}, o), r));
        }
    }, o.mapArrayTypeChildrenToProps = function(t, e) {
        var r = $de8f4a6bfd6923d4$var$a({}, e);
        return Object.keys(t).forEach(function(e) {
            var n;
            r = $de8f4a6bfd6923d4$var$a({}, r, ((n = {})[e] = t[e], n));
        }), r;
    }, o.warnOnInvalidChildren = function(t, e) {
        return (0, (/*@__PURE__*/$parcel$interopDefault($cd3b709fee4a2994$exports)))($de8f4a6bfd6923d4$var$h.some(function(e) {
            return t.type === e;
        }), "function" == typeof t.type ? "You may be attempting to nest <Helmet> components within each other, which is not allowed. Refer to our API for more information." : "Only elements types " + $de8f4a6bfd6923d4$var$h.join(", ") + " are allowed. Helmet does not support rendering <" + t.type + "> elements. Refer to our API for more information."), (0, (/*@__PURE__*/$parcel$interopDefault($cd3b709fee4a2994$exports)))(!e || "string" == typeof e || Array.isArray(e) && !e.some(function(t) {
            return "string" != typeof t;
        }), "Helmet expects a string as a child of <" + t.type + ">. Did you forget to wrap your children in braces? ( <" + t.type + ">{``}</" + t.type + "> ) Refer to our API for more information."), !0;
    }, o.mapChildrenToProps = function(e, r) {
        var n = this, i = {};
        return (0, (/*@__PURE__*/$parcel$interopDefault($laauJ))).Children.forEach(e, function(t) {
            if (t && t.props) {
                var e = t.props, o = e.children, a = $de8f4a6bfd6923d4$var$u(e, $de8f4a6bfd6923d4$var$F), s = Object.keys(a).reduce(function(t, e) {
                    return t[$de8f4a6bfd6923d4$var$y[e] || e] = a[e], t;
                }, {}), c = t.type;
                switch("symbol" == typeof c ? c = c.toString() : n.warnOnInvalidChildren(t, o), c){
                    case $de8f4a6bfd6923d4$var$l.FRAGMENT:
                        r = n.mapChildrenToProps(o, r);
                        break;
                    case $de8f4a6bfd6923d4$var$l.LINK:
                    case $de8f4a6bfd6923d4$var$l.META:
                    case $de8f4a6bfd6923d4$var$l.NOSCRIPT:
                    case $de8f4a6bfd6923d4$var$l.SCRIPT:
                    case $de8f4a6bfd6923d4$var$l.STYLE:
                        i = n.flattenArrayTypeChildren({
                            child: t,
                            arrayTypeChildren: i,
                            newChildProps: s,
                            nestedChildren: o
                        });
                        break;
                    default:
                        r = n.mapObjectTypeChildren({
                            child: t,
                            newProps: r,
                            newChildProps: s,
                            nestedChildren: o
                        });
                }
            }
        }), this.mapArrayTypeChildrenToProps(i, r);
    }, o.render = function() {
        var e = this.props, r = e.children, n = $de8f4a6bfd6923d4$var$u(e, $de8f4a6bfd6923d4$var$G), i = $de8f4a6bfd6923d4$var$a({}, n), o = n.helmetData;
        return r && (i = this.mapChildrenToProps(r, i)), !o || o instanceof $de8f4a6bfd6923d4$export$a9cf6990c9c7feb9 || (o = new $de8f4a6bfd6923d4$export$a9cf6990c9c7feb9(o.context, o.instances)), o ? /*#__PURE__*/ (0, (/*@__PURE__*/$parcel$interopDefault($laauJ))).createElement($de8f4a6bfd6923d4$var$z, $de8f4a6bfd6923d4$var$a({}, i, {
            context: o.value,
            helmetData: void 0
        })) : /*#__PURE__*/ (0, (/*@__PURE__*/$parcel$interopDefault($laauJ))).createElement($de8f4a6bfd6923d4$var$R.Consumer, null, function(e) {
            return (0, (/*@__PURE__*/$parcel$interopDefault($laauJ))).createElement($de8f4a6bfd6923d4$var$z, $de8f4a6bfd6923d4$var$a({}, i, {
                context: e
            }));
        });
    }, r;
}((0, $laauJ.Component));
$de8f4a6bfd6923d4$export$dcef8f9bb9a41431.propTypes = {
    base: (0, (/*@__PURE__*/$parcel$interopDefault($e837463d45d8b747$exports))).object,
    bodyAttributes: (0, (/*@__PURE__*/$parcel$interopDefault($e837463d45d8b747$exports))).object,
    children: (0, (/*@__PURE__*/$parcel$interopDefault($e837463d45d8b747$exports))).oneOfType([
        (0, (/*@__PURE__*/$parcel$interopDefault($e837463d45d8b747$exports))).arrayOf((0, (/*@__PURE__*/$parcel$interopDefault($e837463d45d8b747$exports))).node),
        (0, (/*@__PURE__*/$parcel$interopDefault($e837463d45d8b747$exports))).node
    ]),
    defaultTitle: (0, (/*@__PURE__*/$parcel$interopDefault($e837463d45d8b747$exports))).string,
    defer: (0, (/*@__PURE__*/$parcel$interopDefault($e837463d45d8b747$exports))).bool,
    encodeSpecialCharacters: (0, (/*@__PURE__*/$parcel$interopDefault($e837463d45d8b747$exports))).bool,
    htmlAttributes: (0, (/*@__PURE__*/$parcel$interopDefault($e837463d45d8b747$exports))).object,
    link: (0, (/*@__PURE__*/$parcel$interopDefault($e837463d45d8b747$exports))).arrayOf((0, (/*@__PURE__*/$parcel$interopDefault($e837463d45d8b747$exports))).object),
    meta: (0, (/*@__PURE__*/$parcel$interopDefault($e837463d45d8b747$exports))).arrayOf((0, (/*@__PURE__*/$parcel$interopDefault($e837463d45d8b747$exports))).object),
    noscript: (0, (/*@__PURE__*/$parcel$interopDefault($e837463d45d8b747$exports))).arrayOf((0, (/*@__PURE__*/$parcel$interopDefault($e837463d45d8b747$exports))).object),
    onChangeClientState: (0, (/*@__PURE__*/$parcel$interopDefault($e837463d45d8b747$exports))).func,
    script: (0, (/*@__PURE__*/$parcel$interopDefault($e837463d45d8b747$exports))).arrayOf((0, (/*@__PURE__*/$parcel$interopDefault($e837463d45d8b747$exports))).object),
    style: (0, (/*@__PURE__*/$parcel$interopDefault($e837463d45d8b747$exports))).arrayOf((0, (/*@__PURE__*/$parcel$interopDefault($e837463d45d8b747$exports))).object),
    title: (0, (/*@__PURE__*/$parcel$interopDefault($e837463d45d8b747$exports))).string,
    titleAttributes: (0, (/*@__PURE__*/$parcel$interopDefault($e837463d45d8b747$exports))).object,
    titleTemplate: (0, (/*@__PURE__*/$parcel$interopDefault($e837463d45d8b747$exports))).string,
    prioritizeSeoTags: (0, (/*@__PURE__*/$parcel$interopDefault($e837463d45d8b747$exports))).bool,
    helmetData: (0, (/*@__PURE__*/$parcel$interopDefault($e837463d45d8b747$exports))).object
}, $de8f4a6bfd6923d4$export$dcef8f9bb9a41431.defaultProps = {
    defer: !0,
    encodeSpecialCharacters: !0,
    prioritizeSeoTags: !1
}, $de8f4a6bfd6923d4$export$dcef8f9bb9a41431.displayName = "Helmet";


var $60a9721a91be6fe0$exports = {};
/**
 * Copyright (c) 2014-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ var $60a9721a91be6fe0$var$runtime = function(exports) {
    "use strict";
    var Op = Object.prototype;
    var hasOwn = Op.hasOwnProperty;
    var defineProperty = Object.defineProperty || function(obj, key, desc) {
        obj[key] = desc.value;
    };
    var undefined; // More compressible than void 0.
    var $Symbol = typeof Symbol === "function" ? Symbol : {};
    var iteratorSymbol = $Symbol.iterator || "@@iterator";
    var asyncIteratorSymbol = $Symbol.asyncIterator || "@@asyncIterator";
    var toStringTagSymbol = $Symbol.toStringTag || "@@toStringTag";
    function define(obj, key, value) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
        return obj[key];
    }
    try {
        // IE 8 has a broken Object.defineProperty that only works on DOM objects.
        define({}, "");
    } catch (err) {
        define = function(obj, key, value) {
            return obj[key] = value;
        };
    }
    function wrap(innerFn, outerFn, self, tryLocsList) {
        // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.
        var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;
        var generator = Object.create(protoGenerator.prototype);
        var context = new Context(tryLocsList || []);
        // The ._invoke method unifies the implementations of the .next,
        // .throw, and .return methods.
        defineProperty(generator, "_invoke", {
            value: makeInvokeMethod(innerFn, self, context)
        });
        return generator;
    }
    exports.wrap = wrap;
    // Try/catch helper to minimize deoptimizations. Returns a completion
    // record like context.tryEntries[i].completion. This interface could
    // have been (and was previously) designed to take a closure to be
    // invoked without arguments, but in all the cases we care about we
    // already have an existing method we want to call, so there's no need
    // to create a new function object. We can even get away with assuming
    // the method takes exactly one argument, since that happens to be true
    // in every case, so we don't have to touch the arguments object. The
    // only additional allocation required is the completion record, which
    // has a stable shape and so hopefully should be cheap to allocate.
    function tryCatch(fn, obj, arg) {
        try {
            return {
                type: "normal",
                arg: fn.call(obj, arg)
            };
        } catch (err) {
            return {
                type: "throw",
                arg: err
            };
        }
    }
    var GenStateSuspendedStart = "suspendedStart";
    var GenStateSuspendedYield = "suspendedYield";
    var GenStateExecuting = "executing";
    var GenStateCompleted = "completed";
    // Returning this object from the innerFn has the same effect as
    // breaking out of the dispatch switch statement.
    var ContinueSentinel = {};
    // Dummy constructor functions that we use as the .constructor and
    // .constructor.prototype properties for functions that return Generator
    // objects. For full spec compliance, you may wish to configure your
    // minifier not to mangle the names of these two functions.
    function Generator() {}
    function GeneratorFunction() {}
    function GeneratorFunctionPrototype() {}
    // This is a polyfill for %IteratorPrototype% for environments that
    // don't natively support it.
    var IteratorPrototype = {};
    define(IteratorPrototype, iteratorSymbol, function() {
        return this;
    });
    var getProto = Object.getPrototypeOf;
    var NativeIteratorPrototype = getProto && getProto(getProto(values([])));
    if (NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) // This environment has a native %IteratorPrototype%; use it instead
    // of the polyfill.
    IteratorPrototype = NativeIteratorPrototype;
    var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype);
    GeneratorFunction.prototype = GeneratorFunctionPrototype;
    defineProperty(Gp, "constructor", {
        value: GeneratorFunctionPrototype,
        configurable: true
    });
    defineProperty(GeneratorFunctionPrototype, "constructor", {
        value: GeneratorFunction,
        configurable: true
    });
    GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, "GeneratorFunction");
    // Helper for defining the .next, .throw, and .return methods of the
    // Iterator interface in terms of a single ._invoke method.
    function defineIteratorMethods(prototype) {
        [
            "next",
            "throw",
            "return"
        ].forEach(function(method) {
            define(prototype, method, function(arg) {
                return this._invoke(method, arg);
            });
        });
    }
    exports.isGeneratorFunction = function(genFun) {
        var ctor = typeof genFun === "function" && genFun.constructor;
        return ctor ? ctor === GeneratorFunction || // For the native GeneratorFunction constructor, the best we can
        // do is to check its .name property.
        (ctor.displayName || ctor.name) === "GeneratorFunction" : false;
    };
    exports.mark = function(genFun) {
        if (Object.setPrototypeOf) Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);
        else {
            genFun.__proto__ = GeneratorFunctionPrototype;
            define(genFun, toStringTagSymbol, "GeneratorFunction");
        }
        genFun.prototype = Object.create(Gp);
        return genFun;
    };
    // Within the body of any async function, `await x` is transformed to
    // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test
    // `hasOwn.call(value, "__await")` to determine if the yielded value is
    // meant to be awaited.
    exports.awrap = function(arg) {
        return {
            __await: arg
        };
    };
    function AsyncIterator(generator, PromiseImpl) {
        function invoke(method, arg, resolve, reject) {
            var record = tryCatch(generator[method], generator, arg);
            if (record.type === "throw") reject(record.arg);
            else {
                var result = record.arg;
                var value = result.value;
                if (value && typeof value === "object" && hasOwn.call(value, "__await")) return PromiseImpl.resolve(value.__await).then(function(value) {
                    invoke("next", value, resolve, reject);
                }, function(err) {
                    invoke("throw", err, resolve, reject);
                });
                return PromiseImpl.resolve(value).then(function(unwrapped) {
                    // When a yielded Promise is resolved, its final value becomes
                    // the .value of the Promise<{value,done}> result for the
                    // current iteration.
                    result.value = unwrapped;
                    resolve(result);
                }, function(error) {
                    // If a rejected Promise was yielded, throw the rejection back
                    // into the async generator function so it can be handled there.
                    return invoke("throw", error, resolve, reject);
                });
            }
        }
        var previousPromise;
        function enqueue(method, arg) {
            function callInvokeWithMethodAndArg() {
                return new PromiseImpl(function(resolve, reject) {
                    invoke(method, arg, resolve, reject);
                });
            }
            return previousPromise = // If enqueue has been called before, then we want to wait until
            // all previous Promises have been resolved before calling invoke,
            // so that results are always delivered in the correct order. If
            // enqueue has not been called before, then it is important to
            // call invoke immediately, without waiting on a callback to fire,
            // so that the async generator function has the opportunity to do
            // any necessary setup in a predictable way. This predictability
            // is why the Promise constructor synchronously invokes its
            // executor callback, and why async functions synchronously
            // execute code before the first await. Since we implement simple
            // async functions in terms of async generators, it is especially
            // important to get this right, even though it requires care.
            previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, // Avoid propagating failures to Promises returned by later
            // invocations of the iterator.
            callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg();
        }
        // Define the unified helper method that is used to implement .next,
        // .throw, and .return (see defineIteratorMethods).
        defineProperty(this, "_invoke", {
            value: enqueue
        });
    }
    defineIteratorMethods(AsyncIterator.prototype);
    define(AsyncIterator.prototype, asyncIteratorSymbol, function() {
        return this;
    });
    exports.AsyncIterator = AsyncIterator;
    // Note that simple async functions are implemented on top of
    // AsyncIterator objects; they just return a Promise for the value of
    // the final result produced by the iterator.
    exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {
        if (PromiseImpl === void 0) PromiseImpl = Promise;
        var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl);
        return exports.isGeneratorFunction(outerFn) ? iter // If outerFn is a generator, return the full iterator.
         : iter.next().then(function(result) {
            return result.done ? result.value : iter.next();
        });
    };
    function makeInvokeMethod(innerFn, self, context) {
        var state = GenStateSuspendedStart;
        return function invoke(method, arg) {
            if (state === GenStateExecuting) throw new Error("Generator is already running");
            if (state === GenStateCompleted) {
                if (method === "throw") throw arg;
                // Be forgiving, per 25.3.3.3.3 of the spec:
                // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume
                return doneResult();
            }
            context.method = method;
            context.arg = arg;
            while(true){
                var delegate = context.delegate;
                if (delegate) {
                    var delegateResult = maybeInvokeDelegate(delegate, context);
                    if (delegateResult) {
                        if (delegateResult === ContinueSentinel) continue;
                        return delegateResult;
                    }
                }
                if (context.method === "next") // Setting context._sent for legacy support of Babel's
                // function.sent implementation.
                context.sent = context._sent = context.arg;
                else if (context.method === "throw") {
                    if (state === GenStateSuspendedStart) {
                        state = GenStateCompleted;
                        throw context.arg;
                    }
                    context.dispatchException(context.arg);
                } else if (context.method === "return") context.abrupt("return", context.arg);
                state = GenStateExecuting;
                var record = tryCatch(innerFn, self, context);
                if (record.type === "normal") {
                    // If an exception is thrown from innerFn, we leave state ===
                    // GenStateExecuting and loop back for another invocation.
                    state = context.done ? GenStateCompleted : GenStateSuspendedYield;
                    if (record.arg === ContinueSentinel) continue;
                    return {
                        value: record.arg,
                        done: context.done
                    };
                } else if (record.type === "throw") {
                    state = GenStateCompleted;
                    // Dispatch the exception by looping back around to the
                    // context.dispatchException(context.arg) call above.
                    context.method = "throw";
                    context.arg = record.arg;
                }
            }
        };
    }
    // Call delegate.iterator[context.method](context.arg) and handle the
    // result, either by returning a { value, done } result from the
    // delegate iterator, or by modifying context.method and context.arg,
    // setting context.delegate to null, and returning the ContinueSentinel.
    function maybeInvokeDelegate(delegate, context) {
        var methodName = context.method;
        var method = delegate.iterator[methodName];
        if (method === undefined) {
            // A .throw or .return when the delegate iterator has no .throw
            // method, or a missing .next mehtod, always terminate the
            // yield* loop.
            context.delegate = null;
            // Note: ["return"] must be used for ES3 parsing compatibility.
            if (methodName === "throw" && delegate.iterator["return"]) {
                // If the delegate iterator has a return method, give it a
                // chance to clean up.
                context.method = "return";
                context.arg = undefined;
                maybeInvokeDelegate(delegate, context);
                if (context.method === "throw") // If maybeInvokeDelegate(context) changed context.method from
                // "return" to "throw", let that override the TypeError below.
                return ContinueSentinel;
            }
            if (methodName !== "return") {
                context.method = "throw";
                context.arg = new TypeError("The iterator does not provide a '" + methodName + "' method");
            }
            return ContinueSentinel;
        }
        var record = tryCatch(method, delegate.iterator, context.arg);
        if (record.type === "throw") {
            context.method = "throw";
            context.arg = record.arg;
            context.delegate = null;
            return ContinueSentinel;
        }
        var info = record.arg;
        if (!info) {
            context.method = "throw";
            context.arg = new TypeError("iterator result is not an object");
            context.delegate = null;
            return ContinueSentinel;
        }
        if (info.done) {
            // Assign the result of the finished delegate to the temporary
            // variable specified by delegate.resultName (see delegateYield).
            context[delegate.resultName] = info.value;
            // Resume execution at the desired location (see delegateYield).
            context.next = delegate.nextLoc;
            // If context.method was "throw" but the delegate handled the
            // exception, let the outer generator proceed normally. If
            // context.method was "next", forget context.arg since it has been
            // "consumed" by the delegate iterator. If context.method was
            // "return", allow the original .return call to continue in the
            // outer generator.
            if (context.method !== "return") {
                context.method = "next";
                context.arg = undefined;
            }
        } else // Re-yield the result returned by the delegate method.
        return info;
        // The delegate iterator is finished, so forget it and continue with
        // the outer generator.
        context.delegate = null;
        return ContinueSentinel;
    }
    // Define Generator.prototype.{next,throw,return} in terms of the
    // unified ._invoke helper method.
    defineIteratorMethods(Gp);
    define(Gp, toStringTagSymbol, "Generator");
    // A Generator should always return itself as the iterator object when the
    // @@iterator function is called on it. Some browsers' implementations of the
    // iterator prototype chain incorrectly implement this, causing the Generator
    // object to not be returned from this call. This ensures that doesn't happen.
    // See https://github.com/facebook/regenerator/issues/274 for more details.
    define(Gp, iteratorSymbol, function() {
        return this;
    });
    define(Gp, "toString", function() {
        return "[object Generator]";
    });
    function pushTryEntry(locs) {
        var entry = {
            tryLoc: locs[0]
        };
        if (1 in locs) entry.catchLoc = locs[1];
        if (2 in locs) {
            entry.finallyLoc = locs[2];
            entry.afterLoc = locs[3];
        }
        this.tryEntries.push(entry);
    }
    function resetTryEntry(entry) {
        var record = entry.completion || {};
        record.type = "normal";
        delete record.arg;
        entry.completion = record;
    }
    function Context(tryLocsList) {
        // The root entry object (effectively a try statement without a catch
        // or a finally block) gives us a place to store values thrown from
        // locations where there is no enclosing try statement.
        this.tryEntries = [
            {
                tryLoc: "root"
            }
        ];
        tryLocsList.forEach(pushTryEntry, this);
        this.reset(true);
    }
    exports.keys = function(val) {
        var object = Object(val);
        var keys = [];
        for(var key in object)keys.push(key);
        keys.reverse();
        // Rather than returning an object with a next method, we keep
        // things simple and return the next function itself.
        return function next() {
            while(keys.length){
                var key = keys.pop();
                if (key in object) {
                    next.value = key;
                    next.done = false;
                    return next;
                }
            }
            // To avoid creating an additional object, we just hang the .value
            // and .done properties off the next function object itself. This
            // also ensures that the minifier will not anonymize the function.
            next.done = true;
            return next;
        };
    };
    function values(iterable) {
        if (iterable) {
            var iteratorMethod = iterable[iteratorSymbol];
            if (iteratorMethod) return iteratorMethod.call(iterable);
            if (typeof iterable.next === "function") return iterable;
            if (!isNaN(iterable.length)) {
                var i = -1, next = function next() {
                    while(++i < iterable.length)if (hasOwn.call(iterable, i)) {
                        next.value = iterable[i];
                        next.done = false;
                        return next;
                    }
                    next.value = undefined;
                    next.done = true;
                    return next;
                };
                return next.next = next;
            }
        }
        // Return an iterator with no values.
        return {
            next: doneResult
        };
    }
    exports.values = values;
    function doneResult() {
        return {
            value: undefined,
            done: true
        };
    }
    Context.prototype = {
        constructor: Context,
        reset: function(skipTempReset) {
            this.prev = 0;
            this.next = 0;
            // Resetting context._sent for legacy support of Babel's
            // function.sent implementation.
            this.sent = this._sent = undefined;
            this.done = false;
            this.delegate = null;
            this.method = "next";
            this.arg = undefined;
            this.tryEntries.forEach(resetTryEntry);
            if (!skipTempReset) {
                for(var name in this)// Not sure about the optimal order of these conditions:
                if (name.charAt(0) === "t" && hasOwn.call(this, name) && !isNaN(+name.slice(1))) this[name] = undefined;
            }
        },
        stop: function() {
            this.done = true;
            var rootEntry = this.tryEntries[0];
            var rootRecord = rootEntry.completion;
            if (rootRecord.type === "throw") throw rootRecord.arg;
            return this.rval;
        },
        dispatchException: function(exception) {
            if (this.done) throw exception;
            var context = this;
            function handle(loc, caught) {
                record.type = "throw";
                record.arg = exception;
                context.next = loc;
                if (caught) {
                    // If the dispatched exception was caught by a catch block,
                    // then let that catch block handle the exception normally.
                    context.method = "next";
                    context.arg = undefined;
                }
                return !!caught;
            }
            for(var i = this.tryEntries.length - 1; i >= 0; --i){
                var entry = this.tryEntries[i];
                var record = entry.completion;
                if (entry.tryLoc === "root") // Exception thrown outside of any try block that could handle
                // it, so set the completion value of the entire function to
                // throw the exception.
                return handle("end");
                if (entry.tryLoc <= this.prev) {
                    var hasCatch = hasOwn.call(entry, "catchLoc");
                    var hasFinally = hasOwn.call(entry, "finallyLoc");
                    if (hasCatch && hasFinally) {
                        if (this.prev < entry.catchLoc) return handle(entry.catchLoc, true);
                        else if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc);
                    } else if (hasCatch) {
                        if (this.prev < entry.catchLoc) return handle(entry.catchLoc, true);
                    } else if (hasFinally) {
                        if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc);
                    } else throw new Error("try statement without catch or finally");
                }
            }
        },
        abrupt: function(type, arg) {
            for(var i = this.tryEntries.length - 1; i >= 0; --i){
                var entry = this.tryEntries[i];
                if (entry.tryLoc <= this.prev && hasOwn.call(entry, "finallyLoc") && this.prev < entry.finallyLoc) {
                    var finallyEntry = entry;
                    break;
                }
            }
            if (finallyEntry && (type === "break" || type === "continue") && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc) // Ignore the finally entry if control is not jumping to a
            // location outside the try/catch block.
            finallyEntry = null;
            var record = finallyEntry ? finallyEntry.completion : {};
            record.type = type;
            record.arg = arg;
            if (finallyEntry) {
                this.method = "next";
                this.next = finallyEntry.finallyLoc;
                return ContinueSentinel;
            }
            return this.complete(record);
        },
        complete: function(record, afterLoc) {
            if (record.type === "throw") throw record.arg;
            if (record.type === "break" || record.type === "continue") this.next = record.arg;
            else if (record.type === "return") {
                this.rval = this.arg = record.arg;
                this.method = "return";
                this.next = "end";
            } else if (record.type === "normal" && afterLoc) this.next = afterLoc;
            return ContinueSentinel;
        },
        finish: function(finallyLoc) {
            for(var i = this.tryEntries.length - 1; i >= 0; --i){
                var entry = this.tryEntries[i];
                if (entry.finallyLoc === finallyLoc) {
                    this.complete(entry.completion, entry.afterLoc);
                    resetTryEntry(entry);
                    return ContinueSentinel;
                }
            }
        },
        "catch": function(tryLoc) {
            for(var i = this.tryEntries.length - 1; i >= 0; --i){
                var entry = this.tryEntries[i];
                if (entry.tryLoc === tryLoc) {
                    var record = entry.completion;
                    if (record.type === "throw") {
                        var thrown = record.arg;
                        resetTryEntry(entry);
                    }
                    return thrown;
                }
            }
            // The context.catch method must only be called with a location
            // argument that corresponds to a known catch block.
            throw new Error("illegal catch attempt");
        },
        delegateYield: function(iterable, resultName, nextLoc) {
            this.delegate = {
                iterator: values(iterable),
                resultName: resultName,
                nextLoc: nextLoc
            };
            if (this.method === "next") // Deliberately forget the last sent value so that we don't
            // accidentally pass it on to the delegate.
            this.arg = undefined;
            return ContinueSentinel;
        }
    };
    // Regardless of whether this script is executing as a CommonJS module
    // or not, return the runtime object so that we can declare the variable
    // regeneratorRuntime in the outer scope, which allows this module to be
    // injected easily by `bin/regenerator --include-runtime script.js`.
    return exports;
}(// If this script is executing as a CommonJS module, use module.exports
// as the regeneratorRuntime namespace. Otherwise create a new empty
// object. Either way, the resulting object will be used to initialize
// the regeneratorRuntime variable at the top of this file.
(0, $60a9721a91be6fe0$exports));
try {
    regeneratorRuntime = $60a9721a91be6fe0$var$runtime;
} catch (accidentalStrictMode) {
    // This module should not be running in strict mode, so the above
    // assignment should always work unless something is misconfigured. Just
    // in case runtime.js accidentally runs in strict mode, in modern engines
    // we can explicitly access globalThis. In older engines we can escape
    // strict mode using a global Function call. This could conceivably fail
    // if a Content Security Policy forbids using Function, but in that case
    // the proper solution is to fix the accidental strict mode problem. If
    // you've misconfigured your bundler to force strict mode and applied a
    // CSP to forbid Function, and you're not willing to fix either of those
    // problems, please detail your unique predicament in a GitHub issue.
    if (typeof globalThis === "object") globalThis.regeneratorRuntime = $60a9721a91be6fe0$var$runtime;
    else Function("r", "regeneratorRuntime = r")($60a9721a91be6fe0$var$runtime);
}


var $403fbbc0a1d8902a$exports = {};
$parcel$export($403fbbc0a1d8902a$exports, "applyMiddleware", function () { return $fbc1c6d249dbe034$export$9ff26e0402cc7b7; }, function (v) { return $fbc1c6d249dbe034$export$9ff26e0402cc7b7 = v; });
$parcel$export($403fbbc0a1d8902a$exports, "combineReducers", function () { return $fbc1c6d249dbe034$export$66e4520cdb265d18; }, function (v) { return $fbc1c6d249dbe034$export$66e4520cdb265d18 = v; });
$parcel$export($403fbbc0a1d8902a$exports, "compose", function () { return $fbc1c6d249dbe034$export$f672e0b6f7222cd7; }, function (v) { return $fbc1c6d249dbe034$export$f672e0b6f7222cd7 = v; });
$parcel$export($403fbbc0a1d8902a$exports, "createStore", function () { return $fbc1c6d249dbe034$export$f51a9068ac82ea43; }, function (v) { return $fbc1c6d249dbe034$export$f51a9068ac82ea43 = v; });

$parcel$export($403fbbc0a1d8902a$exports, "configureStore", function () { return $403fbbc0a1d8902a$export$7d8a5b498da695ac; }, function (v) { return $403fbbc0a1d8902a$export$7d8a5b498da695ac = v; });
$parcel$export($403fbbc0a1d8902a$exports, "createSlice", function () { return $403fbbc0a1d8902a$export$4d8d9bd83c24ae8b; }, function (v) { return $403fbbc0a1d8902a$export$4d8d9bd83c24ae8b = v; });
$parcel$export($403fbbc0a1d8902a$exports, "createAsyncThunk", function () { return $403fbbc0a1d8902a$export$6abd22dc03e5063f; }, function (v) { return $403fbbc0a1d8902a$export$6abd22dc03e5063f = v; });
$parcel$export($403fbbc0a1d8902a$exports, "createSelector", function () { return $f2fa5315b747f183$export$595d22ed68ca2841; }, function (v) { return $f2fa5315b747f183$export$595d22ed68ca2841 = v; });
function $70d3c82dd65bc7da$var$n(n) {
    for(var r = arguments.length, t = Array(r > 1 ? r - 1 : 0), e = 1; e < r; e++)t[e - 1] = arguments[e];
    var i, o;
    throw Error("[Immer] minified error nr: " + n + (t.length ? " " + t.map(function(n) {
        return "'" + n + "'";
    }).join(",") : "") + ". Find the full error at: https://bit.ly/3cXEKWf");
}
function $70d3c82dd65bc7da$export$541ac630993a4c84(n) {
    return !!n && !!n[$70d3c82dd65bc7da$var$Q];
}
function $70d3c82dd65bc7da$export$16e3aed3edb85946(n) {
    var r;
    return !!n && (function(n) {
        if (!n || "object" != typeof n) return !1;
        var r = Object.getPrototypeOf(n);
        if (null === r) return !0;
        var t = Object.hasOwnProperty.call(r, "constructor") && r.constructor;
        return t === Object || "function" == typeof t && Function.toString.call(t) === $70d3c82dd65bc7da$var$Z;
    }(n) || Array.isArray(n) || !!n[$70d3c82dd65bc7da$export$6ee2082928bcb0ee] || !!(null === (r = n.constructor) || void 0 === r ? void 0 : r[$70d3c82dd65bc7da$export$6ee2082928bcb0ee]) || $70d3c82dd65bc7da$var$s(n) || $70d3c82dd65bc7da$var$v(n));
}
function $70d3c82dd65bc7da$export$22e8af3f75a010e3(t) {
    return $70d3c82dd65bc7da$export$541ac630993a4c84(t) || $70d3c82dd65bc7da$var$n(23, t), t[$70d3c82dd65bc7da$var$Q].t;
}
function $70d3c82dd65bc7da$var$i(n, r, t) {
    void 0 === t && (t = !1), 0 === $70d3c82dd65bc7da$var$o(n) ? (t ? Object.keys : $70d3c82dd65bc7da$var$nn)(n).forEach(function(e) {
        t && "symbol" == typeof e || r(e, n[e], n);
    }) : n.forEach(function(t, e) {
        return r(e, t, n);
    });
}
function $70d3c82dd65bc7da$var$o(n) {
    var r = n[$70d3c82dd65bc7da$var$Q];
    return r ? r.i > 3 ? r.i - 4 : r.i : Array.isArray(n) ? 1 : $70d3c82dd65bc7da$var$s(n) ? 2 : $70d3c82dd65bc7da$var$v(n) ? 3 : 0;
}
function $70d3c82dd65bc7da$var$u(n, r) {
    return 2 === $70d3c82dd65bc7da$var$o(n) ? n.has(r) : Object.prototype.hasOwnProperty.call(n, r);
}
function $70d3c82dd65bc7da$var$a(n, r) {
    return 2 === $70d3c82dd65bc7da$var$o(n) ? n.get(r) : n[r];
}
function $70d3c82dd65bc7da$var$f(n, r, t) {
    var e = $70d3c82dd65bc7da$var$o(n);
    2 === e ? n.set(r, t) : 3 === e ? n.add(t) : n[r] = t;
}
function $70d3c82dd65bc7da$var$c(n, r) {
    return n === r ? 0 !== n || 1 / n == 1 / r : n != n && r != r;
}
function $70d3c82dd65bc7da$var$s(n) {
    return $70d3c82dd65bc7da$var$X && n instanceof Map;
}
function $70d3c82dd65bc7da$var$v(n) {
    return $70d3c82dd65bc7da$var$q && n instanceof Set;
}
function $70d3c82dd65bc7da$var$p(n) {
    return n.o || n.t;
}
function $70d3c82dd65bc7da$var$l(n) {
    if (Array.isArray(n)) return Array.prototype.slice.call(n);
    var r = $70d3c82dd65bc7da$var$rn(n);
    delete r[$70d3c82dd65bc7da$var$Q];
    for(var t = $70d3c82dd65bc7da$var$nn(r), e = 0; e < t.length; e++){
        var i = t[e], o = r[i];
        !1 === o.writable && (o.writable = !0, o.configurable = !0), (o.get || o.set) && (r[i] = {
            configurable: !0,
            writable: !0,
            enumerable: o.enumerable,
            value: n[i]
        });
    }
    return Object.create(Object.getPrototypeOf(n), r);
}
function $70d3c82dd65bc7da$export$792f3d81ea979f55(n, e) {
    return void 0 === e && (e = !1), $70d3c82dd65bc7da$var$y(n) || $70d3c82dd65bc7da$export$541ac630993a4c84(n) || !$70d3c82dd65bc7da$export$16e3aed3edb85946(n) || ($70d3c82dd65bc7da$var$o(n) > 1 && (n.set = n.add = n.clear = n.delete = $70d3c82dd65bc7da$var$h), Object.freeze(n), e && $70d3c82dd65bc7da$var$i(n, function(n, r) {
        return $70d3c82dd65bc7da$export$792f3d81ea979f55(r, !0);
    }, !0)), n;
}
function $70d3c82dd65bc7da$var$h() {
    $70d3c82dd65bc7da$var$n(2);
}
function $70d3c82dd65bc7da$var$y(n) {
    return null == n || "object" != typeof n || Object.isFrozen(n);
}
function $70d3c82dd65bc7da$var$b(r) {
    var t = $70d3c82dd65bc7da$var$tn[r];
    return t || $70d3c82dd65bc7da$var$n(18, r), t;
}
function $70d3c82dd65bc7da$var$m(n, r) {
    $70d3c82dd65bc7da$var$tn[n] || ($70d3c82dd65bc7da$var$tn[n] = r);
}
function $70d3c82dd65bc7da$var$_() {
    return $70d3c82dd65bc7da$var$U;
}
function $70d3c82dd65bc7da$var$j(n, r) {
    r && ($70d3c82dd65bc7da$var$b("Patches"), n.u = [], n.s = [], n.v = r);
}
function $70d3c82dd65bc7da$var$g(n) {
    $70d3c82dd65bc7da$var$O(n), n.p.forEach($70d3c82dd65bc7da$var$S), n.p = null;
}
function $70d3c82dd65bc7da$var$O(n) {
    n === $70d3c82dd65bc7da$var$U && ($70d3c82dd65bc7da$var$U = n.l);
}
function $70d3c82dd65bc7da$var$w(n) {
    return $70d3c82dd65bc7da$var$U = {
        p: [],
        l: $70d3c82dd65bc7da$var$U,
        h: n,
        m: !0,
        _: 0
    };
}
function $70d3c82dd65bc7da$var$S(n) {
    var r = n[$70d3c82dd65bc7da$var$Q];
    0 === r.i || 1 === r.i ? r.j() : r.g = !0;
}
function $70d3c82dd65bc7da$var$P(r, e) {
    e._ = e.p.length;
    var i = e.p[0], o = void 0 !== r && r !== i;
    return e.h.O || $70d3c82dd65bc7da$var$b("ES5").S(e, r, o), o ? (i[$70d3c82dd65bc7da$var$Q].P && ($70d3c82dd65bc7da$var$g(e), $70d3c82dd65bc7da$var$n(4)), $70d3c82dd65bc7da$export$16e3aed3edb85946(r) && (r = $70d3c82dd65bc7da$var$M(e, r), e.l || $70d3c82dd65bc7da$var$x(e, r)), e.u && $70d3c82dd65bc7da$var$b("Patches").M(i[$70d3c82dd65bc7da$var$Q].t, r, e.u, e.s)) : r = $70d3c82dd65bc7da$var$M(e, i, []), $70d3c82dd65bc7da$var$g(e), e.u && e.v(e.u, e.s), r !== $70d3c82dd65bc7da$export$45b790e32b2810ee ? r : void 0;
}
function $70d3c82dd65bc7da$var$M(n, r, t) {
    if ($70d3c82dd65bc7da$var$y(r)) return r;
    var e = r[$70d3c82dd65bc7da$var$Q];
    if (!e) return $70d3c82dd65bc7da$var$i(r, function(i, o) {
        return $70d3c82dd65bc7da$var$A(n, e, r, i, o, t);
    }, !0), r;
    if (e.A !== n) return r;
    if (!e.P) return $70d3c82dd65bc7da$var$x(n, e.t, !0), e.t;
    if (!e.I) {
        e.I = !0, e.A._--;
        var o = 4 === e.i || 5 === e.i ? e.o = $70d3c82dd65bc7da$var$l(e.k) : e.o, u = o, a = !1;
        3 === e.i && (u = new Set(o), o.clear(), a = !0), $70d3c82dd65bc7da$var$i(u, function(r, i) {
            return $70d3c82dd65bc7da$var$A(n, e, o, r, i, t, a);
        }), $70d3c82dd65bc7da$var$x(n, o, !1), t && n.u && $70d3c82dd65bc7da$var$b("Patches").N(e, t, n.u, n.s);
    }
    return e.o;
}
function $70d3c82dd65bc7da$var$A(e, i, o, a, c, s, v) {
    if ($70d3c82dd65bc7da$export$541ac630993a4c84(c)) {
        var p = $70d3c82dd65bc7da$var$M(e, c, s && i && 3 !== i.i && !$70d3c82dd65bc7da$var$u(i.R, a) ? s.concat(a) : void 0);
        if ($70d3c82dd65bc7da$var$f(o, a, p), !$70d3c82dd65bc7da$export$541ac630993a4c84(p)) return;
        e.m = !1;
    } else v && o.add(c);
    if ($70d3c82dd65bc7da$export$16e3aed3edb85946(c) && !$70d3c82dd65bc7da$var$y(c)) {
        if (!e.h.D && e._ < 1) return;
        $70d3c82dd65bc7da$var$M(e, c), i && i.A.l || $70d3c82dd65bc7da$var$x(e, c);
    }
}
function $70d3c82dd65bc7da$var$x(n, r, t) {
    void 0 === t && (t = !1), !n.l && n.h.D && n.m && $70d3c82dd65bc7da$export$792f3d81ea979f55(r, t);
}
function $70d3c82dd65bc7da$var$z(n, r) {
    var t = n[$70d3c82dd65bc7da$var$Q];
    return (t ? $70d3c82dd65bc7da$var$p(t) : n)[r];
}
function $70d3c82dd65bc7da$var$I(n, r) {
    if (r in n) for(var t = Object.getPrototypeOf(n); t;){
        var e = Object.getOwnPropertyDescriptor(t, r);
        if (e) return e;
        t = Object.getPrototypeOf(t);
    }
}
function $70d3c82dd65bc7da$var$k(n) {
    n.P || (n.P = !0, n.l && $70d3c82dd65bc7da$var$k(n.l));
}
function $70d3c82dd65bc7da$var$E(n) {
    n.o || (n.o = $70d3c82dd65bc7da$var$l(n.t));
}
function $70d3c82dd65bc7da$var$N(n, r, t) {
    var e = $70d3c82dd65bc7da$var$s(r) ? $70d3c82dd65bc7da$var$b("MapSet").F(r, t) : $70d3c82dd65bc7da$var$v(r) ? $70d3c82dd65bc7da$var$b("MapSet").T(r, t) : n.O ? function(n, r) {
        var t = Array.isArray(n), e = {
            i: t ? 1 : 0,
            A: r ? r.A : $70d3c82dd65bc7da$var$_(),
            P: !1,
            I: !1,
            R: {},
            l: r,
            t: n,
            k: null,
            o: null,
            j: null,
            C: !1
        }, i = e, o = $70d3c82dd65bc7da$var$en;
        t && (i = [
            e
        ], o = $70d3c82dd65bc7da$var$on);
        var u = Proxy.revocable(i, o), a = u.revoke, f = u.proxy;
        return e.k = f, e.j = a, f;
    }(r, t) : $70d3c82dd65bc7da$var$b("ES5").J(r, t);
    return (t ? t.A : $70d3c82dd65bc7da$var$_()).p.push(e), e;
}
function $70d3c82dd65bc7da$export$97aac956da55dae9(e) {
    return $70d3c82dd65bc7da$export$541ac630993a4c84(e) || $70d3c82dd65bc7da$var$n(22, e), function n(r) {
        if (!$70d3c82dd65bc7da$export$16e3aed3edb85946(r)) return r;
        var e, u = r[$70d3c82dd65bc7da$var$Q], c = $70d3c82dd65bc7da$var$o(r);
        if (u) {
            if (!u.P && (u.i < 4 || !$70d3c82dd65bc7da$var$b("ES5").K(u))) return u.t;
            u.I = !0, e = $70d3c82dd65bc7da$var$D(r, c), u.I = !1;
        } else e = $70d3c82dd65bc7da$var$D(r, c);
        return $70d3c82dd65bc7da$var$i(e, function(r, t) {
            u && $70d3c82dd65bc7da$var$a(u.t, r) === t || $70d3c82dd65bc7da$var$f(e, r, n(t));
        }), 3 === c ? new Set(e) : e;
    }(e);
}
function $70d3c82dd65bc7da$var$D(n, r) {
    switch(r){
        case 2:
            return new Map(n);
        case 3:
            return Array.from(n);
    }
    return $70d3c82dd65bc7da$var$l(n);
}
function $70d3c82dd65bc7da$export$56771cf63ee491f5() {
    function t(n, r) {
        var t = s[n];
        return t ? t.enumerable = r : s[n] = t = {
            configurable: !0,
            enumerable: r,
            get: function() {
                var r = this[$70d3c82dd65bc7da$var$Q];
                return $70d3c82dd65bc7da$var$en.get(r, n);
            },
            set: function(r) {
                var t = this[$70d3c82dd65bc7da$var$Q];
                $70d3c82dd65bc7da$var$en.set(t, n, r);
            }
        }, t;
    }
    function e(n) {
        for(var r = n.length - 1; r >= 0; r--){
            var t = n[r][$70d3c82dd65bc7da$var$Q];
            if (!t.P) switch(t.i){
                case 5:
                    a(t) && $70d3c82dd65bc7da$var$k(t);
                    break;
                case 4:
                    o(t) && $70d3c82dd65bc7da$var$k(t);
            }
        }
    }
    function o(n) {
        for(var r = n.t, t = n.k, e = $70d3c82dd65bc7da$var$nn(t), i = e.length - 1; i >= 0; i--){
            var o = e[i];
            if (o !== $70d3c82dd65bc7da$var$Q) {
                var a = r[o];
                if (void 0 === a && !$70d3c82dd65bc7da$var$u(r, o)) return !0;
                var f = t[o], s = f && f[$70d3c82dd65bc7da$var$Q];
                if (s ? s.t !== a : !$70d3c82dd65bc7da$var$c(f, a)) return !0;
            }
        }
        var v = !!r[$70d3c82dd65bc7da$var$Q];
        return e.length !== $70d3c82dd65bc7da$var$nn(r).length + (v ? 0 : 1);
    }
    function a(n) {
        var r = n.k;
        if (r.length !== n.t.length) return !0;
        var t = Object.getOwnPropertyDescriptor(r, r.length - 1);
        if (t && !t.get) return !0;
        for(var e = 0; e < r.length; e++)if (!r.hasOwnProperty(e)) return !0;
        return !1;
    }
    function f(r) {
        r.g && $70d3c82dd65bc7da$var$n(3, JSON.stringify($70d3c82dd65bc7da$var$p(r)));
    }
    var s = {};
    $70d3c82dd65bc7da$var$m("ES5", {
        J: function(n, r) {
            var e = Array.isArray(n), i = function(n, r) {
                if (n) {
                    for(var e = Array(r.length), i = 0; i < r.length; i++)Object.defineProperty(e, "" + i, t(i, !0));
                    return e;
                }
                var o = $70d3c82dd65bc7da$var$rn(r);
                delete o[$70d3c82dd65bc7da$var$Q];
                for(var u = $70d3c82dd65bc7da$var$nn(o), a = 0; a < u.length; a++){
                    var f = u[a];
                    o[f] = t(f, n || !!o[f].enumerable);
                }
                return Object.create(Object.getPrototypeOf(r), o);
            }(e, n), o = {
                i: e ? 5 : 4,
                A: r ? r.A : $70d3c82dd65bc7da$var$_(),
                P: !1,
                I: !1,
                R: {},
                l: r,
                t: n,
                k: i,
                o: null,
                g: !1,
                C: !1
            };
            return Object.defineProperty(i, $70d3c82dd65bc7da$var$Q, {
                value: o,
                writable: !0
            }), i;
        },
        S: function(n, t, o) {
            o ? $70d3c82dd65bc7da$export$541ac630993a4c84(t) && t[$70d3c82dd65bc7da$var$Q].A === n && e(n.p) : (n.u && function n(r) {
                if (r && "object" == typeof r) {
                    var t = r[$70d3c82dd65bc7da$var$Q];
                    if (t) {
                        var e = t.t, o = t.k, f = t.R, c = t.i;
                        if (4 === c) $70d3c82dd65bc7da$var$i(o, function(r) {
                            r !== $70d3c82dd65bc7da$var$Q && (void 0 !== e[r] || $70d3c82dd65bc7da$var$u(e, r) ? f[r] || n(o[r]) : (f[r] = !0, $70d3c82dd65bc7da$var$k(t)));
                        }), $70d3c82dd65bc7da$var$i(e, function(n) {
                            void 0 !== o[n] || $70d3c82dd65bc7da$var$u(o, n) || (f[n] = !1, $70d3c82dd65bc7da$var$k(t));
                        });
                        else if (5 === c) {
                            if (a(t) && ($70d3c82dd65bc7da$var$k(t), f.length = !0), o.length < e.length) for(var s = o.length; s < e.length; s++)f[s] = !1;
                            else for(var v = e.length; v < o.length; v++)f[v] = !0;
                            for(var p = Math.min(o.length, e.length), l = 0; l < p; l++)o.hasOwnProperty(l) || (f[l] = !0), void 0 === f[l] && n(o[l]);
                        }
                    }
                }
            }(n.p[0]), e(n.p));
        },
        K: function(n) {
            return 4 === n.i ? o(n) : a(n);
        }
    });
}
function $70d3c82dd65bc7da$export$d3a6659991a0696c() {
    function e(n) {
        if (!$70d3c82dd65bc7da$export$16e3aed3edb85946(n)) return n;
        if (Array.isArray(n)) return n.map(e);
        if ($70d3c82dd65bc7da$var$s(n)) return new Map(Array.from(n.entries()).map(function(n) {
            return [
                n[0],
                e(n[1])
            ];
        }));
        if ($70d3c82dd65bc7da$var$v(n)) return new Set(Array.from(n).map(e));
        var r = Object.create(Object.getPrototypeOf(n));
        for(var i in n)r[i] = e(n[i]);
        return $70d3c82dd65bc7da$var$u(n, $70d3c82dd65bc7da$export$6ee2082928bcb0ee) && (r[$70d3c82dd65bc7da$export$6ee2082928bcb0ee] = n[$70d3c82dd65bc7da$export$6ee2082928bcb0ee]), r;
    }
    function f(n) {
        return $70d3c82dd65bc7da$export$541ac630993a4c84(n) ? e(n) : n;
    }
    var c = "add";
    $70d3c82dd65bc7da$var$m("Patches", {
        $: function(r, t) {
            return t.forEach(function(t) {
                for(var i = t.path, u = t.op, f = r, s = 0; s < i.length - 1; s++){
                    var v = $70d3c82dd65bc7da$var$o(f), p = i[s];
                    "string" != typeof p && "number" != typeof p && (p = "" + p), 0 !== v && 1 !== v || "__proto__" !== p && "constructor" !== p || $70d3c82dd65bc7da$var$n(24), "function" == typeof f && "prototype" === p && $70d3c82dd65bc7da$var$n(24), "object" != typeof (f = $70d3c82dd65bc7da$var$a(f, p)) && $70d3c82dd65bc7da$var$n(15, i.join("/"));
                }
                var l = $70d3c82dd65bc7da$var$o(f), d = e(t.value), h = i[i.length - 1];
                switch(u){
                    case "replace":
                        switch(l){
                            case 2:
                                return f.set(h, d);
                            case 3:
                                $70d3c82dd65bc7da$var$n(16);
                            default:
                                return f[h] = d;
                        }
                    case c:
                        switch(l){
                            case 1:
                                return "-" === h ? f.push(d) : f.splice(h, 0, d);
                            case 2:
                                return f.set(h, d);
                            case 3:
                                return f.add(d);
                            default:
                                return f[h] = d;
                        }
                    case "remove":
                        switch(l){
                            case 1:
                                return f.splice(h, 1);
                            case 2:
                                return f.delete(h);
                            case 3:
                                return f.delete(t.value);
                            default:
                                return delete f[h];
                        }
                    default:
                        $70d3c82dd65bc7da$var$n(17, u);
                }
            }), r;
        },
        N: function(n, r, t, e) {
            switch(n.i){
                case 0:
                case 4:
                case 2:
                    return function(n, r, t, e) {
                        var o = n.t, s = n.o;
                        $70d3c82dd65bc7da$var$i(n.R, function(n, i) {
                            var v = $70d3c82dd65bc7da$var$a(o, n), p = $70d3c82dd65bc7da$var$a(s, n), l = i ? $70d3c82dd65bc7da$var$u(o, n) ? "replace" : c : "remove";
                            if (v !== p || "replace" !== l) {
                                var d = r.concat(n);
                                t.push("remove" === l ? {
                                    op: l,
                                    path: d
                                } : {
                                    op: l,
                                    path: d,
                                    value: p
                                }), e.push(l === c ? {
                                    op: "remove",
                                    path: d
                                } : "remove" === l ? {
                                    op: c,
                                    path: d,
                                    value: f(v)
                                } : {
                                    op: "replace",
                                    path: d,
                                    value: f(v)
                                });
                            }
                        });
                    }(n, r, t, e);
                case 5:
                case 1:
                    return function(n, r, t, e) {
                        var i = n.t, o = n.R, u = n.o;
                        if (u.length < i.length) {
                            var a = [
                                u,
                                i
                            ];
                            i = a[0], u = a[1];
                            var s = [
                                e,
                                t
                            ];
                            t = s[0], e = s[1];
                        }
                        for(var v = 0; v < i.length; v++)if (o[v] && u[v] !== i[v]) {
                            var p = r.concat([
                                v
                            ]);
                            t.push({
                                op: "replace",
                                path: p,
                                value: f(u[v])
                            }), e.push({
                                op: "replace",
                                path: p,
                                value: f(i[v])
                            });
                        }
                        for(var l = i.length; l < u.length; l++){
                            var d = r.concat([
                                l
                            ]);
                            t.push({
                                op: c,
                                path: d,
                                value: f(u[l])
                            });
                        }
                        i.length < u.length && e.push({
                            op: "replace",
                            path: r.concat([
                                "length"
                            ]),
                            value: i.length
                        });
                    }(n, r, t, e);
                case 3:
                    return function(n, r, t, e) {
                        var i = n.t, o = n.o, u = 0;
                        i.forEach(function(n) {
                            if (!o.has(n)) {
                                var i = r.concat([
                                    u
                                ]);
                                t.push({
                                    op: "remove",
                                    path: i,
                                    value: n
                                }), e.unshift({
                                    op: c,
                                    path: i,
                                    value: n
                                });
                            }
                            u++;
                        }), u = 0, o.forEach(function(n) {
                            if (!i.has(n)) {
                                var o = r.concat([
                                    u
                                ]);
                                t.push({
                                    op: c,
                                    path: o,
                                    value: n
                                }), e.unshift({
                                    op: "remove",
                                    path: o,
                                    value: n
                                });
                            }
                            u++;
                        });
                    }(n, r, t, e);
            }
        },
        M: function(n, r, t, e) {
            t.push({
                op: "replace",
                path: [],
                value: r === $70d3c82dd65bc7da$export$45b790e32b2810ee ? void 0 : r
            }), e.push({
                op: "replace",
                path: [],
                value: n
            });
        }
    });
}
function $70d3c82dd65bc7da$export$7d9f65390203b435() {
    function r(n, r) {
        function t() {
            this.constructor = n;
        }
        a(n, r), n.prototype = (t.prototype = r.prototype, new t);
    }
    function e(n) {
        n.o || (n.R = new Map, n.o = new Map(n.t));
    }
    function o(n) {
        n.o || (n.o = new Set, n.t.forEach(function(r) {
            if ($70d3c82dd65bc7da$export$16e3aed3edb85946(r)) {
                var e = $70d3c82dd65bc7da$var$N(n.A.h, r, n);
                n.p.set(r, e), n.o.add(e);
            } else n.o.add(r);
        }));
    }
    function u(r) {
        r.g && $70d3c82dd65bc7da$var$n(3, JSON.stringify($70d3c82dd65bc7da$var$p(r)));
    }
    var a = function(n, r) {
        return (a = Object.setPrototypeOf || ({
            __proto__: []
        }) instanceof Array && function(n, r) {
            n.__proto__ = r;
        } || function(n, r) {
            for(var t in r)r.hasOwnProperty(t) && (n[t] = r[t]);
        })(n, r);
    }, f = function() {
        function n(n, r) {
            return this[$70d3c82dd65bc7da$var$Q] = {
                i: 2,
                l: r,
                A: r ? r.A : $70d3c82dd65bc7da$var$_(),
                P: !1,
                I: !1,
                o: void 0,
                R: void 0,
                t: n,
                k: this,
                C: !1,
                g: !1
            }, this;
        }
        r(n, Map);
        var o = n.prototype;
        return Object.defineProperty(o, "size", {
            get: function() {
                return $70d3c82dd65bc7da$var$p(this[$70d3c82dd65bc7da$var$Q]).size;
            }
        }), o.has = function(n) {
            return $70d3c82dd65bc7da$var$p(this[$70d3c82dd65bc7da$var$Q]).has(n);
        }, o.set = function(n, r) {
            var t = this[$70d3c82dd65bc7da$var$Q];
            return u(t), $70d3c82dd65bc7da$var$p(t).has(n) && $70d3c82dd65bc7da$var$p(t).get(n) === r || (e(t), $70d3c82dd65bc7da$var$k(t), t.R.set(n, !0), t.o.set(n, r), t.R.set(n, !0)), this;
        }, o.delete = function(n) {
            if (!this.has(n)) return !1;
            var r = this[$70d3c82dd65bc7da$var$Q];
            return u(r), e(r), $70d3c82dd65bc7da$var$k(r), r.t.has(n) ? r.R.set(n, !1) : r.R.delete(n), r.o.delete(n), !0;
        }, o.clear = function() {
            var n = this[$70d3c82dd65bc7da$var$Q];
            u(n), $70d3c82dd65bc7da$var$p(n).size && (e(n), $70d3c82dd65bc7da$var$k(n), n.R = new Map, $70d3c82dd65bc7da$var$i(n.t, function(r) {
                n.R.set(r, !1);
            }), n.o.clear());
        }, o.forEach = function(n, r) {
            var t = this;
            $70d3c82dd65bc7da$var$p(this[$70d3c82dd65bc7da$var$Q]).forEach(function(e, i) {
                n.call(r, t.get(i), i, t);
            });
        }, o.get = function(n) {
            var r = this[$70d3c82dd65bc7da$var$Q];
            u(r);
            var i = $70d3c82dd65bc7da$var$p(r).get(n);
            if (r.I || !$70d3c82dd65bc7da$export$16e3aed3edb85946(i)) return i;
            if (i !== r.t.get(n)) return i;
            var o = $70d3c82dd65bc7da$var$N(r.A.h, i, r);
            return e(r), r.o.set(n, o), o;
        }, o.keys = function() {
            return $70d3c82dd65bc7da$var$p(this[$70d3c82dd65bc7da$var$Q]).keys();
        }, o.values = function() {
            var n, r = this, t = this.keys();
            return (n = {})[$70d3c82dd65bc7da$var$V] = function() {
                return r.values();
            }, n.next = function() {
                var n = t.next();
                return n.done ? n : {
                    done: !1,
                    value: r.get(n.value)
                };
            }, n;
        }, o.entries = function() {
            var n, r = this, t = this.keys();
            return (n = {})[$70d3c82dd65bc7da$var$V] = function() {
                return r.entries();
            }, n.next = function() {
                var n = t.next();
                if (n.done) return n;
                var e = r.get(n.value);
                return {
                    done: !1,
                    value: [
                        n.value,
                        e
                    ]
                };
            }, n;
        }, o[$70d3c82dd65bc7da$var$V] = function() {
            return this.entries();
        }, n;
    }(), c = function() {
        function n(n, r) {
            return this[$70d3c82dd65bc7da$var$Q] = {
                i: 3,
                l: r,
                A: r ? r.A : $70d3c82dd65bc7da$var$_(),
                P: !1,
                I: !1,
                o: void 0,
                t: n,
                k: this,
                p: new Map,
                g: !1,
                C: !1
            }, this;
        }
        r(n, Set);
        var t = n.prototype;
        return Object.defineProperty(t, "size", {
            get: function() {
                return $70d3c82dd65bc7da$var$p(this[$70d3c82dd65bc7da$var$Q]).size;
            }
        }), t.has = function(n) {
            var r = this[$70d3c82dd65bc7da$var$Q];
            return u(r), r.o ? !!r.o.has(n) || !(!r.p.has(n) || !r.o.has(r.p.get(n))) : r.t.has(n);
        }, t.add = function(n) {
            var r = this[$70d3c82dd65bc7da$var$Q];
            return u(r), this.has(n) || (o(r), $70d3c82dd65bc7da$var$k(r), r.o.add(n)), this;
        }, t.delete = function(n) {
            if (!this.has(n)) return !1;
            var r = this[$70d3c82dd65bc7da$var$Q];
            return u(r), o(r), $70d3c82dd65bc7da$var$k(r), r.o.delete(n) || !!r.p.has(n) && r.o.delete(r.p.get(n));
        }, t.clear = function() {
            var n = this[$70d3c82dd65bc7da$var$Q];
            u(n), $70d3c82dd65bc7da$var$p(n).size && (o(n), $70d3c82dd65bc7da$var$k(n), n.o.clear());
        }, t.values = function() {
            var n = this[$70d3c82dd65bc7da$var$Q];
            return u(n), o(n), n.o.values();
        }, t.entries = function() {
            var n = this[$70d3c82dd65bc7da$var$Q];
            return u(n), o(n), n.o.entries();
        }, t.keys = function() {
            return this.values();
        }, t[$70d3c82dd65bc7da$var$V] = function() {
            return this.values();
        }, t.forEach = function(n, r) {
            for(var t = this.values(), e = t.next(); !e.done;)n.call(r, e.value, e.value, this), e = t.next();
        }, n;
    }();
    $70d3c82dd65bc7da$var$m("MapSet", {
        F: function(n, r) {
            return new f(n, r);
        },
        T: function(n, r) {
            return new c(n, r);
        }
    });
}
function $70d3c82dd65bc7da$export$cae049b67c7d1bc9() {
    $70d3c82dd65bc7da$export$56771cf63ee491f5(), $70d3c82dd65bc7da$export$7d9f65390203b435(), $70d3c82dd65bc7da$export$d3a6659991a0696c();
}
function $70d3c82dd65bc7da$export$c05b21e3257751e5(n) {
    return n;
}
function $70d3c82dd65bc7da$export$20f911b3f8cf0b74(n) {
    return n;
}
var $70d3c82dd65bc7da$var$G, $70d3c82dd65bc7da$var$U, $70d3c82dd65bc7da$var$W = "undefined" != typeof Symbol && "symbol" == typeof Symbol("x"), $70d3c82dd65bc7da$var$X = "undefined" != typeof Map, $70d3c82dd65bc7da$var$q = "undefined" != typeof Set, $70d3c82dd65bc7da$var$B = "undefined" != typeof Proxy && void 0 !== Proxy.revocable && "undefined" != typeof Reflect, $70d3c82dd65bc7da$export$45b790e32b2810ee = $70d3c82dd65bc7da$var$W ? Symbol.for("immer-nothing") : (($70d3c82dd65bc7da$var$G = {})["immer-nothing"] = !0, $70d3c82dd65bc7da$var$G), $70d3c82dd65bc7da$export$6ee2082928bcb0ee = $70d3c82dd65bc7da$var$W ? Symbol.for("immer-draftable") : "__$immer_draftable", $70d3c82dd65bc7da$var$Q = $70d3c82dd65bc7da$var$W ? Symbol.for("immer-state") : "__$immer_state", $70d3c82dd65bc7da$var$V = "undefined" != typeof Symbol && Symbol.iterator || "@@iterator", $70d3c82dd65bc7da$var$Y = {
    0: "Illegal state",
    1: "Immer drafts cannot have computed properties",
    2: "This object has been frozen and should not be mutated",
    3: function(n) {
        return "Cannot use a proxy that has been revoked. Did you pass an object from inside an immer function to an async process? " + n;
    },
    4: "An immer producer returned a new value *and* modified its draft. Either return a new value *or* modify the draft.",
    5: "Immer forbids circular references",
    6: "The first or second argument to `produce` must be a function",
    7: "The third argument to `produce` must be a function or undefined",
    8: "First argument to `createDraft` must be a plain object, an array, or an immerable object",
    9: "First argument to `finishDraft` must be a draft returned by `createDraft`",
    10: "The given draft is already finalized",
    11: "Object.defineProperty() cannot be used on an Immer draft",
    12: "Object.setPrototypeOf() cannot be used on an Immer draft",
    13: "Immer only supports deleting array indices",
    14: "Immer only supports setting array indices and the 'length' property",
    15: function(n) {
        return "Cannot apply patch, path doesn't resolve: " + n;
    },
    16: 'Sets cannot have "replace" patches.',
    17: function(n) {
        return "Unsupported patch operation: " + n;
    },
    18: function(n) {
        return "The plugin for '" + n + "' has not been loaded into Immer. To enable the plugin, import and call `enable" + n + "()` when initializing your application.";
    },
    20: "Cannot use proxies if Proxy, Proxy.revocable or Reflect are not available",
    21: function(n) {
        return "produce can only be called on things that are draftable: plain objects, arrays, Map, Set or classes that are marked with '[immerable]: true'. Got '" + n + "'";
    },
    22: function(n) {
        return "'current' expects a draft, got: " + n;
    },
    23: function(n) {
        return "'original' expects a draft, got: " + n;
    },
    24: "Patching reserved attributes like __proto__, prototype and constructor is not allowed"
}, $70d3c82dd65bc7da$var$Z = "" + Object.prototype.constructor, $70d3c82dd65bc7da$var$nn = "undefined" != typeof Reflect && Reflect.ownKeys ? Reflect.ownKeys : void 0 !== Object.getOwnPropertySymbols ? function(n) {
    return Object.getOwnPropertyNames(n).concat(Object.getOwnPropertySymbols(n));
} : Object.getOwnPropertyNames, $70d3c82dd65bc7da$var$rn = Object.getOwnPropertyDescriptors || function(n) {
    var r = {};
    return $70d3c82dd65bc7da$var$nn(n).forEach(function(t) {
        r[t] = Object.getOwnPropertyDescriptor(n, t);
    }), r;
}, $70d3c82dd65bc7da$var$tn = {}, $70d3c82dd65bc7da$var$en = {
    get: function(n, r) {
        if (r === $70d3c82dd65bc7da$var$Q) return n;
        var e = $70d3c82dd65bc7da$var$p(n);
        if (!$70d3c82dd65bc7da$var$u(e, r)) return function(n, r, t) {
            var e, i = $70d3c82dd65bc7da$var$I(r, t);
            return i ? "value" in i ? i.value : null === (e = i.get) || void 0 === e ? void 0 : e.call(n.k) : void 0;
        }(n, e, r);
        var i = e[r];
        return n.I || !$70d3c82dd65bc7da$export$16e3aed3edb85946(i) ? i : i === $70d3c82dd65bc7da$var$z(n.t, r) ? ($70d3c82dd65bc7da$var$E(n), n.o[r] = $70d3c82dd65bc7da$var$N(n.A.h, i, n)) : i;
    },
    has: function(n, r) {
        return r in $70d3c82dd65bc7da$var$p(n);
    },
    ownKeys: function(n) {
        return Reflect.ownKeys($70d3c82dd65bc7da$var$p(n));
    },
    set: function(n, r, t) {
        var e = $70d3c82dd65bc7da$var$I($70d3c82dd65bc7da$var$p(n), r);
        if (null == e ? void 0 : e.set) return e.set.call(n.k, t), !0;
        if (!n.P) {
            var i = $70d3c82dd65bc7da$var$z($70d3c82dd65bc7da$var$p(n), r), o = null == i ? void 0 : i[$70d3c82dd65bc7da$var$Q];
            if (o && o.t === t) return n.o[r] = t, n.R[r] = !1, !0;
            if ($70d3c82dd65bc7da$var$c(t, i) && (void 0 !== t || $70d3c82dd65bc7da$var$u(n.t, r))) return !0;
            $70d3c82dd65bc7da$var$E(n), $70d3c82dd65bc7da$var$k(n);
        }
        return n.o[r] === t && (void 0 !== t || r in n.o) || Number.isNaN(t) && Number.isNaN(n.o[r]) || (n.o[r] = t, n.R[r] = !0), !0;
    },
    deleteProperty: function(n, r) {
        return void 0 !== $70d3c82dd65bc7da$var$z(n.t, r) || r in n.t ? (n.R[r] = !1, $70d3c82dd65bc7da$var$E(n), $70d3c82dd65bc7da$var$k(n)) : delete n.R[r], n.o && delete n.o[r], !0;
    },
    getOwnPropertyDescriptor: function(n, r) {
        var t = $70d3c82dd65bc7da$var$p(n), e = Reflect.getOwnPropertyDescriptor(t, r);
        return e ? {
            writable: !0,
            configurable: 1 !== n.i || "length" !== r,
            enumerable: e.enumerable,
            value: t[r]
        } : e;
    },
    defineProperty: function() {
        $70d3c82dd65bc7da$var$n(11);
    },
    getPrototypeOf: function(n) {
        return Object.getPrototypeOf(n.t);
    },
    setPrototypeOf: function() {
        $70d3c82dd65bc7da$var$n(12);
    }
}, $70d3c82dd65bc7da$var$on = {};
$70d3c82dd65bc7da$var$i($70d3c82dd65bc7da$var$en, function(n, r) {
    $70d3c82dd65bc7da$var$on[n] = function() {
        return arguments[0] = arguments[0][0], r.apply(this, arguments);
    };
}), $70d3c82dd65bc7da$var$on.deleteProperty = function(r, t) {
    return $70d3c82dd65bc7da$var$on.set.call(this, r, t, void 0);
}, $70d3c82dd65bc7da$var$on.set = function(r, t, e) {
    return $70d3c82dd65bc7da$var$en.set.call(this, r[0], t, e, r[0]);
};
var $70d3c82dd65bc7da$export$aaadc6ff0f822719 = function() {
    function e(r) {
        var e = this;
        this.O = $70d3c82dd65bc7da$var$B, this.D = !0, this.produce = function(r, i, o) {
            if ("function" == typeof r && "function" != typeof i) {
                var u = i;
                i = r;
                var a = e;
                return function(n) {
                    var r = this;
                    void 0 === n && (n = u);
                    for(var t = arguments.length, e = Array(t > 1 ? t - 1 : 0), o = 1; o < t; o++)e[o - 1] = arguments[o];
                    return a.produce(n, function(n) {
                        var t;
                        return (t = i).call.apply(t, [
                            r,
                            n
                        ].concat(e));
                    });
                };
            }
            var f;
            if ("function" != typeof i && $70d3c82dd65bc7da$var$n(6), void 0 !== o && "function" != typeof o && $70d3c82dd65bc7da$var$n(7), $70d3c82dd65bc7da$export$16e3aed3edb85946(r)) {
                var c = $70d3c82dd65bc7da$var$w(e), s = $70d3c82dd65bc7da$var$N(e, r, void 0), v = !0;
                try {
                    f = i(s), v = !1;
                } finally{
                    v ? $70d3c82dd65bc7da$var$g(c) : $70d3c82dd65bc7da$var$O(c);
                }
                return "undefined" != typeof Promise && f instanceof Promise ? f.then(function(n) {
                    return $70d3c82dd65bc7da$var$j(c, o), $70d3c82dd65bc7da$var$P(n, c);
                }, function(n) {
                    throw $70d3c82dd65bc7da$var$g(c), n;
                }) : ($70d3c82dd65bc7da$var$j(c, o), $70d3c82dd65bc7da$var$P(f, c));
            }
            if (!r || "object" != typeof r) {
                if (void 0 === (f = i(r)) && (f = r), f === $70d3c82dd65bc7da$export$45b790e32b2810ee && (f = void 0), e.D && $70d3c82dd65bc7da$export$792f3d81ea979f55(f, !0), o) {
                    var p = [], l = [];
                    $70d3c82dd65bc7da$var$b("Patches").M(r, f, p, l), o(p, l);
                }
                return f;
            }
            $70d3c82dd65bc7da$var$n(21, r);
        }, this.produceWithPatches = function(n, r) {
            if ("function" == typeof n) return function(r) {
                for(var t = arguments.length, i = Array(t > 1 ? t - 1 : 0), o = 1; o < t; o++)i[o - 1] = arguments[o];
                return e.produceWithPatches(r, function(r) {
                    return n.apply(void 0, [
                        r
                    ].concat(i));
                });
            };
            var t, i, o = e.produce(n, r, function(n, r) {
                t = n, i = r;
            });
            return "undefined" != typeof Promise && o instanceof Promise ? o.then(function(n) {
                return [
                    n,
                    t,
                    i
                ];
            }) : [
                o,
                t,
                i
            ];
        }, "boolean" == typeof (null == r ? void 0 : r.useProxies) && this.setUseProxies(r.useProxies), "boolean" == typeof (null == r ? void 0 : r.autoFreeze) && this.setAutoFreeze(r.autoFreeze);
    }
    var i = e.prototype;
    return i.createDraft = function(e) {
        $70d3c82dd65bc7da$export$16e3aed3edb85946(e) || $70d3c82dd65bc7da$var$n(8), $70d3c82dd65bc7da$export$541ac630993a4c84(e) && (e = $70d3c82dd65bc7da$export$97aac956da55dae9(e));
        var i = $70d3c82dd65bc7da$var$w(this), o = $70d3c82dd65bc7da$var$N(this, e, void 0);
        return o[$70d3c82dd65bc7da$var$Q].C = !0, $70d3c82dd65bc7da$var$O(i), o;
    }, i.finishDraft = function(r, t) {
        var e = r && r[$70d3c82dd65bc7da$var$Q];
        var i = e.A;
        return $70d3c82dd65bc7da$var$j(i, t), $70d3c82dd65bc7da$var$P(void 0, i);
    }, i.setAutoFreeze = function(n) {
        this.D = n;
    }, i.setUseProxies = function(r) {
        r && !$70d3c82dd65bc7da$var$B && $70d3c82dd65bc7da$var$n(20), this.O = r;
    }, i.applyPatches = function(n, t) {
        var e;
        for(e = t.length - 1; e >= 0; e--){
            var i = t[e];
            if (0 === i.path.length && "replace" === i.op) {
                n = i.value;
                break;
            }
        }
        e > -1 && (t = t.slice(e + 1));
        var o = $70d3c82dd65bc7da$var$b("Patches").$;
        return $70d3c82dd65bc7da$export$541ac630993a4c84(n) ? o(n, t) : this.produce(n, function(n) {
            return o(n, t);
        });
    }, e;
}(), $70d3c82dd65bc7da$var$an = new $70d3c82dd65bc7da$export$aaadc6ff0f822719, $70d3c82dd65bc7da$export$b46cabe22e78bc00 = $70d3c82dd65bc7da$var$an.produce, $70d3c82dd65bc7da$export$4da66d41c9492c78 = $70d3c82dd65bc7da$var$an.produceWithPatches.bind($70d3c82dd65bc7da$var$an), $70d3c82dd65bc7da$export$573f26f60825c493 = $70d3c82dd65bc7da$var$an.setAutoFreeze.bind($70d3c82dd65bc7da$var$an), $70d3c82dd65bc7da$export$36ccd207ae29b74e = $70d3c82dd65bc7da$var$an.setUseProxies.bind($70d3c82dd65bc7da$var$an), $70d3c82dd65bc7da$export$a8b8e03e6bbe5473 = $70d3c82dd65bc7da$var$an.applyPatches.bind($70d3c82dd65bc7da$var$an), $70d3c82dd65bc7da$export$3c3214997190395f = $70d3c82dd65bc7da$var$an.createDraft.bind($70d3c82dd65bc7da$var$an), $70d3c82dd65bc7da$export$c60f5e69c521b528 = $70d3c82dd65bc7da$var$an.finishDraft.bind($70d3c82dd65bc7da$var$an);
var $70d3c82dd65bc7da$export$2e2bcd8739ae039 = $70d3c82dd65bc7da$export$b46cabe22e78bc00;


function $e8f126e5d7889f85$export$2e2bcd8739ae039(obj) {
    "@babel/helpers - typeof";
    return $e8f126e5d7889f85$export$2e2bcd8739ae039 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(obj) {
        return typeof obj;
    } : function(obj) {
        return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
    }, $e8f126e5d7889f85$export$2e2bcd8739ae039(obj);
}



function $7f408b46ef53f75f$export$2e2bcd8739ae039(input, hint) {
    if ((0, $e8f126e5d7889f85$export$2e2bcd8739ae039)(input) !== "object" || input === null) return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
        var res = prim.call(input, hint || "default");
        if ((0, $e8f126e5d7889f85$export$2e2bcd8739ae039)(res) !== "object") return res;
        throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
}


function $41fab575a9d81c24$export$2e2bcd8739ae039(arg) {
    var key = (0, $7f408b46ef53f75f$export$2e2bcd8739ae039)(arg, "string");
    return (0, $e8f126e5d7889f85$export$2e2bcd8739ae039)(key) === "symbol" ? key : String(key);
}


function $8d002fd2b9a1c331$export$2e2bcd8739ae039(obj, key, value) {
    key = (0, $41fab575a9d81c24$export$2e2bcd8739ae039)(key);
    if (key in obj) Object.defineProperty(obj, key, {
        value: value,
        enumerable: true,
        configurable: true,
        writable: true
    });
    else obj[key] = value;
    return obj;
}


function $24055d085f782da0$var$ownKeys(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        enumerableOnly && (symbols = symbols.filter(function(sym) {
            return Object.getOwnPropertyDescriptor(object, sym).enumerable;
        })), keys.push.apply(keys, symbols);
    }
    return keys;
}
function $24055d085f782da0$export$2e2bcd8739ae039(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = null != arguments[i] ? arguments[i] : {};
        i % 2 ? $24055d085f782da0$var$ownKeys(Object(source), !0).forEach(function(key) {
            (0, $8d002fd2b9a1c331$export$2e2bcd8739ae039)(target, key, source[key]);
        }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : $24055d085f782da0$var$ownKeys(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
    }
    return target;
}


/**
 * Adapted from React: https://github.com/facebook/react/blob/master/packages/shared/formatProdErrorMessage.js
 *
 * Do not require this module directly! Use normal throw error calls. These messages will be replaced with error codes
 * during build.
 * @param {number} code
 */ function $fbc1c6d249dbe034$var$formatProdErrorMessage(code) {
    return "Minified Redux error #" + code + "; visit https://redux.js.org/Errors?code=" + code + " for the full message or " + "use the non-minified dev environment for full errors. ";
}
// Inlined version of the `symbol-observable` polyfill
var $fbc1c6d249dbe034$var$$$observable = function() {
    return typeof Symbol === "function" && Symbol.observable || "@@observable";
}();
/**
 * These are private action types reserved by Redux.
 * For any unknown actions, you must return the current state.
 * If the current state is undefined, you must return the initial state.
 * Do not reference these action types directly in your code.
 */ var $fbc1c6d249dbe034$var$randomString = function randomString() {
    return Math.random().toString(36).substring(7).split("").join(".");
};
var $fbc1c6d249dbe034$export$4219e499db7ca678 = {
    INIT: "@@redux/INIT" + $fbc1c6d249dbe034$var$randomString(),
    REPLACE: "@@redux/REPLACE" + $fbc1c6d249dbe034$var$randomString(),
    PROBE_UNKNOWN_ACTION: function PROBE_UNKNOWN_ACTION() {
        return "@@redux/PROBE_UNKNOWN_ACTION" + $fbc1c6d249dbe034$var$randomString();
    }
};
/**
 * @param {any} obj The object to inspect.
 * @returns {boolean} True if the argument appears to be a plain object.
 */ function $fbc1c6d249dbe034$var$isPlainObject(obj) {
    if (typeof obj !== "object" || obj === null) return false;
    var proto = obj;
    while(Object.getPrototypeOf(proto) !== null)proto = Object.getPrototypeOf(proto);
    return Object.getPrototypeOf(obj) === proto;
}
// Inlined / shortened version of `kindOf` from https://github.com/jonschlinkert/kind-of
function $fbc1c6d249dbe034$var$miniKindOf(val) {
    if (val === void 0) return "undefined";
    if (val === null) return "null";
    var type = typeof val;
    switch(type){
        case "boolean":
        case "string":
        case "number":
        case "symbol":
        case "function":
            return type;
    }
    if (Array.isArray(val)) return "array";
    if ($fbc1c6d249dbe034$var$isDate(val)) return "date";
    if ($fbc1c6d249dbe034$var$isError(val)) return "error";
    var constructorName = $fbc1c6d249dbe034$var$ctorName(val);
    switch(constructorName){
        case "Symbol":
        case "Promise":
        case "WeakMap":
        case "WeakSet":
        case "Map":
        case "Set":
            return constructorName;
    } // other
    return type.slice(8, -1).toLowerCase().replace(/\s/g, "");
}
function $fbc1c6d249dbe034$var$ctorName(val) {
    return typeof val.constructor === "function" ? val.constructor.name : null;
}
function $fbc1c6d249dbe034$var$isError(val) {
    return val instanceof Error || typeof val.message === "string" && val.constructor && typeof val.constructor.stackTraceLimit === "number";
}
function $fbc1c6d249dbe034$var$isDate(val) {
    if (val instanceof Date) return true;
    return typeof val.toDateString === "function" && typeof val.getDate === "function" && typeof val.setDate === "function";
}
function $fbc1c6d249dbe034$var$kindOf(val) {
    var typeOfVal = typeof val;
    return typeOfVal;
}
/**
 * @deprecated
 *
 * **We recommend using the `configureStore` method
 * of the `@reduxjs/toolkit` package**, which replaces `createStore`.
 *
 * Redux Toolkit is our recommended approach for writing Redux logic today,
 * including store setup, reducers, data fetching, and more.
 *
 * **For more details, please read this Redux docs page:**
 * **https://redux.js.org/introduction/why-rtk-is-redux-today**
 *
 * `configureStore` from Redux Toolkit is an improved version of `createStore` that
 * simplifies setup and helps avoid common bugs.
 *
 * You should not be using the `redux` core package by itself today, except for learning purposes.
 * The `createStore` method from the core `redux` package will not be removed, but we encourage
 * all users to migrate to using Redux Toolkit for all Redux code.
 *
 * If you want to use `createStore` without this visual deprecation warning, use
 * the `legacy_createStore` import instead:
 *
 * `import { legacy_createStore as createStore} from 'redux'`
 *
 */ function $fbc1c6d249dbe034$export$f51a9068ac82ea43(reducer, preloadedState, enhancer) {
    var _ref2;
    if (typeof preloadedState === "function" && typeof enhancer === "function" || typeof enhancer === "function" && typeof arguments[3] === "function") throw new Error($fbc1c6d249dbe034$var$formatProdErrorMessage(0));
    if (typeof preloadedState === "function" && typeof enhancer === "undefined") {
        enhancer = preloadedState;
        preloadedState = undefined;
    }
    if (typeof enhancer !== "undefined") {
        if (typeof enhancer !== "function") throw new Error($fbc1c6d249dbe034$var$formatProdErrorMessage(1));
        return enhancer($fbc1c6d249dbe034$export$f51a9068ac82ea43)(reducer, preloadedState);
    }
    if (typeof reducer !== "function") throw new Error($fbc1c6d249dbe034$var$formatProdErrorMessage(2));
    var currentReducer = reducer;
    var currentState = preloadedState;
    var currentListeners = [];
    var nextListeners = currentListeners;
    var isDispatching = false;
    /**
   * This makes a shallow copy of currentListeners so we can use
   * nextListeners as a temporary list while dispatching.
   *
   * This prevents any bugs around consumers calling
   * subscribe/unsubscribe in the middle of a dispatch.
   */ function ensureCanMutateNextListeners() {
        if (nextListeners === currentListeners) nextListeners = currentListeners.slice();
    }
    /**
   * Reads the state tree managed by the store.
   *
   * @returns {any} The current state tree of your application.
   */ function getState() {
        if (isDispatching) throw new Error($fbc1c6d249dbe034$var$formatProdErrorMessage(3));
        return currentState;
    }
    /**
   * Adds a change listener. It will be called any time an action is dispatched,
   * and some part of the state tree may potentially have changed. You may then
   * call `getState()` to read the current state tree inside the callback.
   *
   * You may call `dispatch()` from a change listener, with the following
   * caveats:
   *
   * 1. The subscriptions are snapshotted just before every `dispatch()` call.
   * If you subscribe or unsubscribe while the listeners are being invoked, this
   * will not have any effect on the `dispatch()` that is currently in progress.
   * However, the next `dispatch()` call, whether nested or not, will use a more
   * recent snapshot of the subscription list.
   *
   * 2. The listener should not expect to see all state changes, as the state
   * might have been updated multiple times during a nested `dispatch()` before
   * the listener is called. It is, however, guaranteed that all subscribers
   * registered before the `dispatch()` started will be called with the latest
   * state by the time it exits.
   *
   * @param {Function} listener A callback to be invoked on every dispatch.
   * @returns {Function} A function to remove this change listener.
   */ function subscribe(listener) {
        if (typeof listener !== "function") throw new Error($fbc1c6d249dbe034$var$formatProdErrorMessage(4));
        if (isDispatching) throw new Error($fbc1c6d249dbe034$var$formatProdErrorMessage(5));
        var isSubscribed = true;
        ensureCanMutateNextListeners();
        nextListeners.push(listener);
        return function unsubscribe() {
            if (!isSubscribed) return;
            if (isDispatching) throw new Error($fbc1c6d249dbe034$var$formatProdErrorMessage(6));
            isSubscribed = false;
            ensureCanMutateNextListeners();
            var index = nextListeners.indexOf(listener);
            nextListeners.splice(index, 1);
            currentListeners = null;
        };
    }
    /**
   * Dispatches an action. It is the only way to trigger a state change.
   *
   * The `reducer` function, used to create the store, will be called with the
   * current state tree and the given `action`. Its return value will
   * be considered the **next** state of the tree, and the change listeners
   * will be notified.
   *
   * The base implementation only supports plain object actions. If you want to
   * dispatch a Promise, an Observable, a thunk, or something else, you need to
   * wrap your store creating function into the corresponding middleware. For
   * example, see the documentation for the `redux-thunk` package. Even the
   * middleware will eventually dispatch plain object actions using this method.
   *
   * @param {Object} action A plain object representing “what changed”. It is
   * a good idea to keep actions serializable so you can record and replay user
   * sessions, or use the time travelling `redux-devtools`. An action must have
   * a `type` property which may not be `undefined`. It is a good idea to use
   * string constants for action types.
   *
   * @returns {Object} For convenience, the same action object you dispatched.
   *
   * Note that, if you use a custom middleware, it may wrap `dispatch()` to
   * return something else (for example, a Promise you can await).
   */ function dispatch(action) {
        if (!$fbc1c6d249dbe034$var$isPlainObject(action)) throw new Error($fbc1c6d249dbe034$var$formatProdErrorMessage(7));
        if (typeof action.type === "undefined") throw new Error($fbc1c6d249dbe034$var$formatProdErrorMessage(8));
        if (isDispatching) throw new Error($fbc1c6d249dbe034$var$formatProdErrorMessage(9));
        try {
            isDispatching = true;
            currentState = currentReducer(currentState, action);
        } finally{
            isDispatching = false;
        }
        var listeners = currentListeners = nextListeners;
        for(var i = 0; i < listeners.length; i++){
            var listener = listeners[i];
            listener();
        }
        return action;
    }
    /**
   * Replaces the reducer currently used by the store to calculate the state.
   *
   * You might need this if your app implements code splitting and you want to
   * load some of the reducers dynamically. You might also need this if you
   * implement a hot reloading mechanism for Redux.
   *
   * @param {Function} nextReducer The reducer for the store to use instead.
   * @returns {void}
   */ function replaceReducer(nextReducer) {
        if (typeof nextReducer !== "function") throw new Error($fbc1c6d249dbe034$var$formatProdErrorMessage(10));
        currentReducer = nextReducer; // This action has a similiar effect to ActionTypes.INIT.
        // Any reducers that existed in both the new and old rootReducer
        // will receive the previous state. This effectively populates
        // the new state tree with any relevant data from the old one.
        dispatch({
            type: $fbc1c6d249dbe034$export$4219e499db7ca678.REPLACE
        });
    }
    /**
   * Interoperability point for observable/reactive libraries.
   * @returns {observable} A minimal observable of state changes.
   * For more information, see the observable proposal:
   * https://github.com/tc39/proposal-observable
   */ function observable() {
        var _ref;
        var outerSubscribe = subscribe;
        return _ref = {
            /**
       * The minimal observable subscription method.
       * @param {Object} observer Any object that can be used as an observer.
       * The observer object should have a `next` method.
       * @returns {subscription} An object with an `unsubscribe` method that can
       * be used to unsubscribe the observable from the store, and prevent further
       * emission of values from the observable.
       */ subscribe: function subscribe(observer) {
                if (typeof observer !== "object" || observer === null) throw new Error($fbc1c6d249dbe034$var$formatProdErrorMessage(11));
                function observeState() {
                    if (observer.next) observer.next(getState());
                }
                observeState();
                var unsubscribe = outerSubscribe(observeState);
                return {
                    unsubscribe: unsubscribe
                };
            }
        }, _ref[$fbc1c6d249dbe034$var$$$observable] = function() {
            return this;
        }, _ref;
    } // When a store is created, an "INIT" action is dispatched so that every
    // reducer returns their initial state. This effectively populates
    // the initial state tree.
    dispatch({
        type: $fbc1c6d249dbe034$export$4219e499db7ca678.INIT
    });
    return _ref2 = {
        dispatch: dispatch,
        subscribe: subscribe,
        getState: getState,
        replaceReducer: replaceReducer
    }, _ref2[$fbc1c6d249dbe034$var$$$observable] = observable, _ref2;
}
/**
 * Creates a Redux store that holds the state tree.
 *
 * **We recommend using `configureStore` from the
 * `@reduxjs/toolkit` package**, which replaces `createStore`:
 * **https://redux.js.org/introduction/why-rtk-is-redux-today**
 *
 * The only way to change the data in the store is to call `dispatch()` on it.
 *
 * There should only be a single store in your app. To specify how different
 * parts of the state tree respond to actions, you may combine several reducers
 * into a single reducer function by using `combineReducers`.
 *
 * @param {Function} reducer A function that returns the next state tree, given
 * the current state tree and the action to handle.
 *
 * @param {any} [preloadedState] The initial state. You may optionally specify it
 * to hydrate the state from the server in universal apps, or to restore a
 * previously serialized user session.
 * If you use `combineReducers` to produce the root reducer function, this must be
 * an object with the same shape as `combineReducers` keys.
 *
 * @param {Function} [enhancer] The store enhancer. You may optionally specify it
 * to enhance the store with third-party capabilities such as middleware,
 * time travel, persistence, etc. The only store enhancer that ships with Redux
 * is `applyMiddleware()`.
 *
 * @returns {Store} A Redux store that lets you read the state, dispatch actions
 * and subscribe to changes.
 */ var $fbc1c6d249dbe034$export$8928921ea2d3b126 = $fbc1c6d249dbe034$export$f51a9068ac82ea43;
/**
 * Prints a warning in the console if it exists.
 *
 * @param {String} message The warning message.
 * @returns {void}
 */ function $fbc1c6d249dbe034$var$warning(message) {
    /* eslint-disable no-console */ if (typeof console !== "undefined" && typeof console.error === "function") console.error(message);
    /* eslint-enable no-console */ try {
        // This error was thrown as a convenience so that if you enable
        // "break on all exceptions" in your console,
        // it would pause the execution at this line.
        throw new Error(message);
    } catch (e) {} // eslint-disable-line no-empty
}
function $fbc1c6d249dbe034$var$getUnexpectedStateShapeWarningMessage(inputState, reducers, action, unexpectedKeyCache) {
    var reducerKeys = Object.keys(reducers);
    var argumentName = action && action.type === $fbc1c6d249dbe034$export$4219e499db7ca678.INIT ? "preloadedState argument passed to createStore" : "previous state received by the reducer";
    if (reducerKeys.length === 0) return "Store does not have a valid reducer. Make sure the argument passed to combineReducers is an object whose values are reducers.";
    if (!$fbc1c6d249dbe034$var$isPlainObject(inputState)) return "The " + argumentName + ' has unexpected type of "' + $fbc1c6d249dbe034$var$kindOf(inputState) + '". Expected argument to be an object with the following ' + ('keys: "' + reducerKeys.join('", "') + '"');
    var unexpectedKeys = Object.keys(inputState).filter(function(key) {
        return !reducers.hasOwnProperty(key) && !unexpectedKeyCache[key];
    });
    unexpectedKeys.forEach(function(key) {
        unexpectedKeyCache[key] = true;
    });
    if (action && action.type === $fbc1c6d249dbe034$export$4219e499db7ca678.REPLACE) return;
    if (unexpectedKeys.length > 0) return "Unexpected " + (unexpectedKeys.length > 1 ? "keys" : "key") + " " + ('"' + unexpectedKeys.join('", "') + '" found in ' + argumentName + ". ") + "Expected to find one of the known reducer keys instead: " + ('"' + reducerKeys.join('", "') + '". Unexpected keys will be ignored.');
}
function $fbc1c6d249dbe034$var$assertReducerShape(reducers) {
    Object.keys(reducers).forEach(function(key) {
        var reducer = reducers[key];
        var initialState = reducer(undefined, {
            type: $fbc1c6d249dbe034$export$4219e499db7ca678.INIT
        });
        if (typeof initialState === "undefined") throw new Error($fbc1c6d249dbe034$var$formatProdErrorMessage(12));
        if (typeof reducer(undefined, {
            type: $fbc1c6d249dbe034$export$4219e499db7ca678.PROBE_UNKNOWN_ACTION()
        }) === "undefined") throw new Error($fbc1c6d249dbe034$var$formatProdErrorMessage(13));
    });
}
/**
 * Turns an object whose values are different reducer functions, into a single
 * reducer function. It will call every child reducer, and gather their results
 * into a single state object, whose keys correspond to the keys of the passed
 * reducer functions.
 *
 * @param {Object} reducers An object whose values correspond to different
 * reducer functions that need to be combined into one. One handy way to obtain
 * it is to use ES6 `import * as reducers` syntax. The reducers may never return
 * undefined for any action. Instead, they should return their initial state
 * if the state passed to them was undefined, and the current state for any
 * unrecognized action.
 *
 * @returns {Function} A reducer function that invokes every reducer inside the
 * passed object, and builds a state object with the same shape.
 */ function $fbc1c6d249dbe034$export$66e4520cdb265d18(reducers) {
    var reducerKeys = Object.keys(reducers);
    var finalReducers = {};
    for(var i = 0; i < reducerKeys.length; i++){
        var key = reducerKeys[i];
        if (typeof reducers[key] === "function") finalReducers[key] = reducers[key];
    }
    var finalReducerKeys = Object.keys(finalReducers); // This is used to make sure we don't warn about the same
    // keys multiple times.
    var unexpectedKeyCache;
    var shapeAssertionError;
    try {
        $fbc1c6d249dbe034$var$assertReducerShape(finalReducers);
    } catch (e) {
        shapeAssertionError = e;
    }
    return function combination(state, action) {
        if (state === void 0) state = {};
        if (shapeAssertionError) throw shapeAssertionError;
        var warningMessage;
        var hasChanged = false;
        var nextState = {};
        for(var _i = 0; _i < finalReducerKeys.length; _i++){
            var _key = finalReducerKeys[_i];
            var reducer = finalReducers[_key];
            var previousStateForKey = state[_key];
            var nextStateForKey = reducer(previousStateForKey, action);
            if (typeof nextStateForKey === "undefined") {
                var actionType = action && action.type;
                throw new Error($fbc1c6d249dbe034$var$formatProdErrorMessage(14));
            }
            nextState[_key] = nextStateForKey;
            hasChanged = hasChanged || nextStateForKey !== previousStateForKey;
        }
        hasChanged = hasChanged || finalReducerKeys.length !== Object.keys(state).length;
        return hasChanged ? nextState : state;
    };
}
function $fbc1c6d249dbe034$var$bindActionCreator(actionCreator, dispatch) {
    return function() {
        return dispatch(actionCreator.apply(this, arguments));
    };
}
/**
 * Turns an object whose values are action creators, into an object with the
 * same keys, but with every function wrapped into a `dispatch` call so they
 * may be invoked directly. This is just a convenience method, as you can call
 * `store.dispatch(MyActionCreators.doSomething())` yourself just fine.
 *
 * For convenience, you can also pass an action creator as the first argument,
 * and get a dispatch wrapped function in return.
 *
 * @param {Function|Object} actionCreators An object whose values are action
 * creator functions. One handy way to obtain it is to use ES6 `import * as`
 * syntax. You may also pass a single function.
 *
 * @param {Function} dispatch The `dispatch` function available on your Redux
 * store.
 *
 * @returns {Function|Object} The object mimicking the original object, but with
 * every action creator wrapped into the `dispatch` call. If you passed a
 * function as `actionCreators`, the return value will also be a single
 * function.
 */ function $fbc1c6d249dbe034$export$aea084d96e84da92(actionCreators, dispatch) {
    if (typeof actionCreators === "function") return $fbc1c6d249dbe034$var$bindActionCreator(actionCreators, dispatch);
    if (typeof actionCreators !== "object" || actionCreators === null) throw new Error($fbc1c6d249dbe034$var$formatProdErrorMessage(16));
    var boundActionCreators = {};
    for(var key in actionCreators){
        var actionCreator = actionCreators[key];
        if (typeof actionCreator === "function") boundActionCreators[key] = $fbc1c6d249dbe034$var$bindActionCreator(actionCreator, dispatch);
    }
    return boundActionCreators;
}
/**
 * Composes single-argument functions from right to left. The rightmost
 * function can take multiple arguments as it provides the signature for
 * the resulting composite function.
 *
 * @param {...Function} funcs The functions to compose.
 * @returns {Function} A function obtained by composing the argument functions
 * from right to left. For example, compose(f, g, h) is identical to doing
 * (...args) => f(g(h(...args))).
 */ function $fbc1c6d249dbe034$export$f672e0b6f7222cd7() {
    for(var _len = arguments.length, funcs = new Array(_len), _key = 0; _key < _len; _key++)funcs[_key] = arguments[_key];
    if (funcs.length === 0) return function(arg) {
        return arg;
    };
    if (funcs.length === 1) return funcs[0];
    return funcs.reduce(function(a, b) {
        return function() {
            return a(b.apply(void 0, arguments));
        };
    });
}
/**
 * Creates a store enhancer that applies middleware to the dispatch method
 * of the Redux store. This is handy for a variety of tasks, such as expressing
 * asynchronous actions in a concise manner, or logging every action payload.
 *
 * See `redux-thunk` package as an example of the Redux middleware.
 *
 * Because middleware is potentially asynchronous, this should be the first
 * store enhancer in the composition chain.
 *
 * Note that each middleware will be given the `dispatch` and `getState` functions
 * as named arguments.
 *
 * @param {...Function} middlewares The middleware chain to be applied.
 * @returns {Function} A store enhancer applying the middleware.
 */ function $fbc1c6d249dbe034$export$9ff26e0402cc7b7() {
    for(var _len = arguments.length, middlewares = new Array(_len), _key = 0; _key < _len; _key++)middlewares[_key] = arguments[_key];
    return function(createStore) {
        return function() {
            var store = createStore.apply(void 0, arguments);
            var _dispatch = function dispatch() {
                throw new Error($fbc1c6d249dbe034$var$formatProdErrorMessage(15));
            };
            var middlewareAPI = {
                getState: store.getState,
                dispatch: function dispatch() {
                    return _dispatch.apply(void 0, arguments);
                }
            };
            var chain = middlewares.map(function(middleware) {
                return middleware(middlewareAPI);
            });
            _dispatch = $fbc1c6d249dbe034$export$f672e0b6f7222cd7.apply(void 0, chain)(store.dispatch);
            return (0, $24055d085f782da0$export$2e2bcd8739ae039)((0, $24055d085f782da0$export$2e2bcd8739ae039)({}, store), {}, {
                dispatch: _dispatch
            });
        };
    };
}



// Cache implementation based on Erik Rasmussen's `lru-memoize`:
// https://github.com/erikras/lru-memoize
var $30c76d7d19ac4eec$var$NOT_FOUND = "NOT_FOUND";
function $30c76d7d19ac4eec$var$createSingletonCache(equals) {
    var entry;
    return {
        get: function get(key) {
            if (entry && equals(entry.key, key)) return entry.value;
            return $30c76d7d19ac4eec$var$NOT_FOUND;
        },
        put: function put(key, value) {
            entry = {
                key: key,
                value: value
            };
        },
        getEntries: function getEntries() {
            return entry ? [
                entry
            ] : [];
        },
        clear: function clear() {
            entry = undefined;
        }
    };
}
function $30c76d7d19ac4eec$var$createLruCache(maxSize, equals) {
    var entries = [];
    function get(key) {
        var cacheIndex = entries.findIndex(function(entry) {
            return equals(key, entry.key);
        }); // We found a cached entry
        if (cacheIndex > -1) {
            var entry = entries[cacheIndex]; // Cached entry not at top of cache, move it to the top
            if (cacheIndex > 0) {
                entries.splice(cacheIndex, 1);
                entries.unshift(entry);
            }
            return entry.value;
        } // No entry found in cache, return sentinel
        return $30c76d7d19ac4eec$var$NOT_FOUND;
    }
    function put(key, value) {
        if (get(key) === $30c76d7d19ac4eec$var$NOT_FOUND) {
            // TODO Is unshift slow?
            entries.unshift({
                key: key,
                value: value
            });
            if (entries.length > maxSize) entries.pop();
        }
    }
    function getEntries() {
        return entries;
    }
    function clear() {
        entries = [];
    }
    return {
        get: get,
        put: put,
        getEntries: getEntries,
        clear: clear
    };
}
var $30c76d7d19ac4eec$export$e0b28855d0126ccc = function defaultEqualityCheck(a, b) {
    return a === b;
};
function $30c76d7d19ac4eec$export$823674481ed171f9(equalityCheck) {
    return function areArgumentsShallowlyEqual(prev, next) {
        if (prev === null || next === null || prev.length !== next.length) return false;
         // Do this in a for loop (and not a `forEach` or an `every`) so we can determine equality as fast as possible.
        var length = prev.length;
        for(var i = 0; i < length; i++){
            if (!equalityCheck(prev[i], next[i])) return false;
        }
        return true;
    };
}
function $30c76d7d19ac4eec$export$281bff7f05488aa2(func, equalityCheckOrOptions) {
    var providedOptions = typeof equalityCheckOrOptions === "object" ? equalityCheckOrOptions : {
        equalityCheck: equalityCheckOrOptions
    };
    var _providedOptions$equa = providedOptions.equalityCheck, equalityCheck = _providedOptions$equa === void 0 ? $30c76d7d19ac4eec$export$e0b28855d0126ccc : _providedOptions$equa, _providedOptions$maxS = providedOptions.maxSize, maxSize = _providedOptions$maxS === void 0 ? 1 : _providedOptions$maxS, resultEqualityCheck = providedOptions.resultEqualityCheck;
    var comparator = $30c76d7d19ac4eec$export$823674481ed171f9(equalityCheck);
    var cache = maxSize === 1 ? $30c76d7d19ac4eec$var$createSingletonCache(comparator) : $30c76d7d19ac4eec$var$createLruCache(maxSize, comparator); // we reference arguments instead of spreading them for performance reasons
    function memoized() {
        var value = cache.get(arguments);
        if (value === $30c76d7d19ac4eec$var$NOT_FOUND) {
            // @ts-ignore
            value = func.apply(null, arguments);
            if (resultEqualityCheck) {
                var entries = cache.getEntries();
                var matchingEntry = entries.find(function(entry) {
                    return resultEqualityCheck(entry.value, value);
                });
                if (matchingEntry) value = matchingEntry.value;
            }
            cache.put(arguments, value);
        }
        return value;
    }
    memoized.clearCache = function() {
        return cache.clear();
    };
    return memoized;
}


function $f2fa5315b747f183$var$getDependencies(funcs) {
    var dependencies = Array.isArray(funcs[0]) ? funcs[0] : funcs;
    if (!dependencies.every(function(dep) {
        return typeof dep === "function";
    })) {
        var dependencyTypes = dependencies.map(function(dep) {
            return typeof dep === "function" ? "function " + (dep.name || "unnamed") + "()" : typeof dep;
        }).join(", ");
        throw new Error("createSelector expects all input-selectors to be functions, but received the following types: [" + dependencyTypes + "]");
    }
    return dependencies;
}
function $f2fa5315b747f183$export$5943f4447f6ef248(memoize) {
    for(var _len = arguments.length, memoizeOptionsFromArgs = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++)memoizeOptionsFromArgs[_key - 1] = arguments[_key];
    var createSelector = function createSelector() {
        for(var _len2 = arguments.length, funcs = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++)funcs[_key2] = arguments[_key2];
        var _recomputations = 0;
        var _lastResult; // Due to the intricacies of rest params, we can't do an optional arg after `...funcs`.
        // So, start by declaring the default value here.
        // (And yes, the words 'memoize' and 'options' appear too many times in this next sequence.)
        var directlyPassedOptions = {
            memoizeOptions: undefined
        }; // Normally, the result func or "output selector" is the last arg
        var resultFunc = funcs.pop(); // If the result func is actually an _object_, assume it's our options object
        if (typeof resultFunc === "object") {
            directlyPassedOptions = resultFunc; // and pop the real result func off
            resultFunc = funcs.pop();
        }
        if (typeof resultFunc !== "function") throw new Error("createSelector expects an output function after the inputs, but received: [" + typeof resultFunc + "]");
         // Determine which set of options we're using. Prefer options passed directly,
        // but fall back to options given to createSelectorCreator.
        var _directlyPassedOption = directlyPassedOptions, _directlyPassedOption2 = _directlyPassedOption.memoizeOptions, memoizeOptions = _directlyPassedOption2 === void 0 ? memoizeOptionsFromArgs : _directlyPassedOption2; // Simplifying assumption: it's unlikely that the first options arg of the provided memoizer
        // is an array. In most libs I've looked at, it's an equality function or options object.
        // Based on that, if `memoizeOptions` _is_ an array, we assume it's a full
        // user-provided array of options. Otherwise, it must be just the _first_ arg, and so
        // we wrap it in an array so we can apply it.
        var finalMemoizeOptions = Array.isArray(memoizeOptions) ? memoizeOptions : [
            memoizeOptions
        ];
        var dependencies = $f2fa5315b747f183$var$getDependencies(funcs);
        var memoizedResultFunc = memoize.apply(void 0, [
            function recomputationWrapper() {
                _recomputations++; // apply arguments instead of spreading for performance.
                return resultFunc.apply(null, arguments);
            }
        ].concat(finalMemoizeOptions)); // If a selector is called with the exact same arguments we don't need to traverse our dependencies again.
        var selector = memoize(function dependenciesChecker() {
            var params = [];
            var length = dependencies.length;
            for(var i = 0; i < length; i++)// apply arguments instead of spreading and mutate a local list of params for performance.
            // @ts-ignore
            params.push(dependencies[i].apply(null, arguments));
             // apply arguments instead of spreading for performance.
            _lastResult = memoizedResultFunc.apply(null, params);
            return _lastResult;
        });
        Object.assign(selector, {
            resultFunc: resultFunc,
            memoizedResultFunc: memoizedResultFunc,
            dependencies: dependencies,
            lastResult: function lastResult() {
                return _lastResult;
            },
            recomputations: function recomputations() {
                return _recomputations;
            },
            resetRecomputations: function resetRecomputations() {
                return _recomputations = 0;
            }
        });
        return selector;
    }; // @ts-ignore
    return createSelector;
}
var $f2fa5315b747f183$export$595d22ed68ca2841 = /* #__PURE__ */ $f2fa5315b747f183$export$5943f4447f6ef248((0, $30c76d7d19ac4eec$export$281bff7f05488aa2));
var $f2fa5315b747f183$export$75979cfcd91bf38f = function createStructuredSelector(selectors, selectorCreator) {
    if (selectorCreator === void 0) selectorCreator = $f2fa5315b747f183$export$595d22ed68ca2841;
    if (typeof selectors !== "object") throw new Error("createStructuredSelector expects first argument to be an object " + ("where each property is a selector, instead received a " + typeof selectors));
    var objectKeys = Object.keys(selectors);
    var resultSelector = selectorCreator(objectKeys.map(function(key) {
        return selectors[key];
    }), function() {
        for(var _len3 = arguments.length, values = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++)values[_key3] = arguments[_key3];
        return values.reduce(function(composition, value, index) {
            composition[objectKeys[index]] = value;
            return composition;
        }, {});
    });
    return resultSelector;
};






/** A function that accepts a potential "extra argument" value to be injected later,
 * and returns an instance of the thunk middleware that uses that value
 */ function $439f67d35ada4ab1$var$createThunkMiddleware(extraArgument) {
    // Standard Redux middleware definition pattern:
    // See: https://redux.js.org/tutorials/fundamentals/part-4-store#writing-custom-middleware
    var middleware = function middleware(_ref) {
        var dispatch = _ref.dispatch, getState = _ref.getState;
        return function(next) {
            return function(action) {
                // The thunk middleware looks for any functions that were passed to `store.dispatch`.
                // If this "action" is really a function, call it and return the result.
                if (typeof action === "function") // Inject the store's `dispatch` and `getState` methods, as well as any "extra arg"
                return action(dispatch, getState, extraArgument);
                 // Otherwise, pass the action down the middleware chain as usual
                return next(action);
            };
        };
    };
    return middleware;
}
var $439f67d35ada4ab1$var$thunk = $439f67d35ada4ab1$var$createThunkMiddleware(); // Attach the factory function so users can create a customized version
// with whatever "extra arg" they want to inject into their thunks
$439f67d35ada4ab1$var$thunk.withExtraArgument = $439f67d35ada4ab1$var$createThunkMiddleware;
var $439f67d35ada4ab1$export$2e2bcd8739ae039 = $439f67d35ada4ab1$var$thunk;






var $c1Pic = parcelRequire("c1Pic");
var $403fbbc0a1d8902a$var$__extends = undefined && undefined.__extends || function() {
    var extendStatics = function(d, b) {
        extendStatics = Object.setPrototypeOf || ({
            __proto__: []
        }) instanceof Array && function(d, b) {
            d.__proto__ = b;
        } || function(d, b) {
            for(var p in b)if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];
        };
        return extendStatics(d, b);
    };
    return function(d, b) {
        if (typeof b !== "function" && b !== null) throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() {
            this.constructor = d;
        }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
}();
var $403fbbc0a1d8902a$var$__generator = undefined && undefined.__generator || function(thisArg, body) {
    var _ = {
        label: 0,
        sent: function() {
            if (t[0] & 1) throw t[1];
            return t[1];
        },
        trys: [],
        ops: []
    }, f, y, t, g;
    return g = {
        next: verb(0),
        "throw": verb(1),
        "return": verb(2)
    }, typeof Symbol === "function" && (g[Symbol.iterator] = function() {
        return this;
    }), g;
    function verb(n) {
        return function(v) {
            return step([
                n,
                v
            ]);
        };
    }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while(_)try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [
                op[0] & 2,
                t.value
            ];
            switch(op[0]){
                case 0:
                case 1:
                    t = op;
                    break;
                case 4:
                    _.label++;
                    return {
                        value: op[1],
                        done: false
                    };
                case 5:
                    _.label++;
                    y = op[1];
                    op = [
                        0
                    ];
                    continue;
                case 7:
                    op = _.ops.pop();
                    _.trys.pop();
                    continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
                        _ = 0;
                        continue;
                    }
                    if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {
                        _.label = op[1];
                        break;
                    }
                    if (op[0] === 6 && _.label < t[1]) {
                        _.label = t[1];
                        t = op;
                        break;
                    }
                    if (t && _.label < t[2]) {
                        _.label = t[2];
                        _.ops.push(op);
                        break;
                    }
                    if (t[2]) _.ops.pop();
                    _.trys.pop();
                    continue;
            }
            op = body.call(thisArg, _);
        } catch (e) {
            op = [
                6,
                e
            ];
            y = 0;
        } finally{
            f = t = 0;
        }
        if (op[0] & 5) throw op[1];
        return {
            value: op[0] ? op[1] : void 0,
            done: true
        };
    }
};
var $403fbbc0a1d8902a$var$__spreadArray = undefined && undefined.__spreadArray || function(to, from) {
    for(var i = 0, il = from.length, j = to.length; i < il; i++, j++)to[j] = from[i];
    return to;
};
var $403fbbc0a1d8902a$var$__defProp = Object.defineProperty;
var $403fbbc0a1d8902a$var$__defProps = Object.defineProperties;
var $403fbbc0a1d8902a$var$__getOwnPropDescs = Object.getOwnPropertyDescriptors;
var $403fbbc0a1d8902a$var$__getOwnPropSymbols = Object.getOwnPropertySymbols;
var $403fbbc0a1d8902a$var$__hasOwnProp = Object.prototype.hasOwnProperty;
var $403fbbc0a1d8902a$var$__propIsEnum = Object.prototype.propertyIsEnumerable;
var $403fbbc0a1d8902a$var$__defNormalProp = function(obj, key, value) {
    return key in obj ? $403fbbc0a1d8902a$var$__defProp(obj, key, {
        enumerable: true,
        configurable: true,
        writable: true,
        value: value
    }) : obj[key] = value;
};
var $403fbbc0a1d8902a$var$__spreadValues = function(a, b) {
    for(var prop in b || (b = {}))if ($403fbbc0a1d8902a$var$__hasOwnProp.call(b, prop)) $403fbbc0a1d8902a$var$__defNormalProp(a, prop, b[prop]);
    if ($403fbbc0a1d8902a$var$__getOwnPropSymbols) for(var _i = 0, _c = $403fbbc0a1d8902a$var$__getOwnPropSymbols(b); _i < _c.length; _i++){
        var prop = _c[_i];
        if ($403fbbc0a1d8902a$var$__propIsEnum.call(b, prop)) $403fbbc0a1d8902a$var$__defNormalProp(a, prop, b[prop]);
    }
    return a;
};
var $403fbbc0a1d8902a$var$__spreadProps = function(a, b) {
    return $403fbbc0a1d8902a$var$__defProps(a, $403fbbc0a1d8902a$var$__getOwnPropDescs(b));
};
var $403fbbc0a1d8902a$var$__async = function(__this, __arguments, generator) {
    return new Promise(function(resolve, reject) {
        var fulfilled = function(value) {
            try {
                step(generator.next(value));
            } catch (e) {
                reject(e);
            }
        };
        var rejected = function(value) {
            try {
                step(generator.throw(value));
            } catch (e) {
                reject(e);
            }
        };
        var step = function(x) {
            return x.done ? resolve(x.value) : Promise.resolve(x.value).then(fulfilled, rejected);
        };
        step((generator = generator.apply(__this, __arguments)).next());
    });
};
var $403fbbc0a1d8902a$export$a5d3c27355e35910 = function() {
    var args = [];
    for(var _i = 0; _i < arguments.length; _i++)args[_i] = arguments[_i];
    var selector = (0, $f2fa5315b747f183$export$595d22ed68ca2841).apply(void 0, args);
    var wrappedSelector = function(value) {
        var rest = [];
        for(var _i = 1; _i < arguments.length; _i++)rest[_i - 1] = arguments[_i];
        return selector.apply(void 0, $403fbbc0a1d8902a$var$__spreadArray([
            (0, $70d3c82dd65bc7da$export$541ac630993a4c84)(value) ? (0, $70d3c82dd65bc7da$export$97aac956da55dae9)(value) : value
        ], rest));
    };
    return wrappedSelector;
};
var $403fbbc0a1d8902a$var$composeWithDevTools = typeof window !== "undefined" && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ : function() {
    if (arguments.length === 0) return void 0;
    if (typeof arguments[0] === "object") return 0, $fbc1c6d249dbe034$export$f672e0b6f7222cd7;
    return (0, $fbc1c6d249dbe034$export$f672e0b6f7222cd7).apply(null, arguments);
};
var $403fbbc0a1d8902a$var$devToolsEnhancer = typeof window !== "undefined" && window.__REDUX_DEVTOOLS_EXTENSION__ ? window.__REDUX_DEVTOOLS_EXTENSION__ : function() {
    return function(noop2) {
        return noop2;
    };
};
// src/isPlainObject.ts
function $403fbbc0a1d8902a$export$53b83ca8eaab0383(value) {
    if (typeof value !== "object" || value === null) return false;
    var proto = Object.getPrototypeOf(value);
    if (proto === null) return true;
    var baseProto = proto;
    while(Object.getPrototypeOf(baseProto) !== null)baseProto = Object.getPrototypeOf(baseProto);
    return proto === baseProto;
}
function $403fbbc0a1d8902a$var$getTimeMeasureUtils(maxDelay, fnName) {
    var elapsed = 0;
    return {
        measureTime: function(fn) {
            var started = Date.now();
            try {
                return fn();
            } finally{
                var finished = Date.now();
                elapsed += finished - started;
            }
        },
        warnIfExceeded: function() {
            if (elapsed > maxDelay) console.warn(fnName + " took " + elapsed + "ms, which is more than the warning threshold of " + maxDelay + "ms. \nIf your state or actions are very large, you may want to disable the middleware as it might cause too much of a slowdown in development mode. See https://redux-toolkit.js.org/api/getDefaultMiddleware for instructions.\nIt is disabled in production builds, so you don't need to worry about that.");
        }
    };
}
var $403fbbc0a1d8902a$export$20df1e9bd1a54f25 = /** @class */ function(_super) {
    $403fbbc0a1d8902a$var$__extends(MiddlewareArray, _super);
    function MiddlewareArray() {
        var args = [];
        for(var _i = 0; _i < arguments.length; _i++)args[_i] = arguments[_i];
        var _this = _super.apply(this, args) || this;
        Object.setPrototypeOf(_this, MiddlewareArray.prototype);
        return _this;
    }
    Object.defineProperty(MiddlewareArray, Symbol.species, {
        get: function() {
            return MiddlewareArray;
        },
        enumerable: false,
        configurable: true
    });
    MiddlewareArray.prototype.concat = function() {
        var arr = [];
        for(var _i = 0; _i < arguments.length; _i++)arr[_i] = arguments[_i];
        return _super.prototype.concat.apply(this, arr);
    };
    MiddlewareArray.prototype.prepend = function() {
        var arr = [];
        for(var _i = 0; _i < arguments.length; _i++)arr[_i] = arguments[_i];
        if (arr.length === 1 && Array.isArray(arr[0])) return new (MiddlewareArray.bind.apply(MiddlewareArray, $403fbbc0a1d8902a$var$__spreadArray([
            void 0
        ], arr[0].concat(this))))();
        return new (MiddlewareArray.bind.apply(MiddlewareArray, $403fbbc0a1d8902a$var$__spreadArray([
            void 0
        ], arr.concat(this))))();
    };
    return MiddlewareArray;
}(Array);
var $403fbbc0a1d8902a$export$490d10040a0cbe8a = /** @class */ function(_super) {
    $403fbbc0a1d8902a$var$__extends(EnhancerArray, _super);
    function EnhancerArray() {
        var args = [];
        for(var _i = 0; _i < arguments.length; _i++)args[_i] = arguments[_i];
        var _this = _super.apply(this, args) || this;
        Object.setPrototypeOf(_this, EnhancerArray.prototype);
        return _this;
    }
    Object.defineProperty(EnhancerArray, Symbol.species, {
        get: function() {
            return EnhancerArray;
        },
        enumerable: false,
        configurable: true
    });
    EnhancerArray.prototype.concat = function() {
        var arr = [];
        for(var _i = 0; _i < arguments.length; _i++)arr[_i] = arguments[_i];
        return _super.prototype.concat.apply(this, arr);
    };
    EnhancerArray.prototype.prepend = function() {
        var arr = [];
        for(var _i = 0; _i < arguments.length; _i++)arr[_i] = arguments[_i];
        if (arr.length === 1 && Array.isArray(arr[0])) return new (EnhancerArray.bind.apply(EnhancerArray, $403fbbc0a1d8902a$var$__spreadArray([
            void 0
        ], arr[0].concat(this))))();
        return new (EnhancerArray.bind.apply(EnhancerArray, $403fbbc0a1d8902a$var$__spreadArray([
            void 0
        ], arr.concat(this))))();
    };
    return EnhancerArray;
}(Array);
function $403fbbc0a1d8902a$var$freezeDraftable(val) {
    return (0, $70d3c82dd65bc7da$export$16e3aed3edb85946)(val) ? (0, $70d3c82dd65bc7da$export$2e2bcd8739ae039)(val, function() {}) : val;
}
// src/immutableStateInvariantMiddleware.ts
var $403fbbc0a1d8902a$var$isProduction = true;
var $403fbbc0a1d8902a$var$prefix = "Invariant failed";
function $403fbbc0a1d8902a$var$invariant(condition, message) {
    if (condition) return;
    if ($403fbbc0a1d8902a$var$isProduction) throw new Error($403fbbc0a1d8902a$var$prefix);
    throw new Error($403fbbc0a1d8902a$var$prefix + ": " + (message || ""));
}
function $403fbbc0a1d8902a$var$stringify(obj, serializer, indent, decycler) {
    return JSON.stringify(obj, $403fbbc0a1d8902a$var$getSerialize(serializer, decycler), indent);
}
function $403fbbc0a1d8902a$var$getSerialize(serializer, decycler) {
    var stack = [], keys = [];
    if (!decycler) decycler = function(_, value) {
        if (stack[0] === value) return "[Circular ~]";
        return "[Circular ~." + keys.slice(0, stack.indexOf(value)).join(".") + "]";
    };
    return function(key, value) {
        if (stack.length > 0) {
            var thisPos = stack.indexOf(this);
            ~thisPos ? stack.splice(thisPos + 1) : stack.push(this);
            ~thisPos ? keys.splice(thisPos, Infinity, key) : keys.push(key);
            if (~stack.indexOf(value)) value = decycler.call(this, key, value);
        } else stack.push(value);
        return serializer == null ? value : serializer.call(this, key, value);
    };
}
function $403fbbc0a1d8902a$export$9021b2733a0028a3(value) {
    return typeof value !== "object" || value == null || Object.isFrozen(value);
}
function $403fbbc0a1d8902a$var$trackForMutations(isImmutable, ignorePaths, obj) {
    var trackedProperties = $403fbbc0a1d8902a$var$trackProperties(isImmutable, ignorePaths, obj);
    return {
        detectMutations: function() {
            return $403fbbc0a1d8902a$var$detectMutations(isImmutable, ignorePaths, trackedProperties, obj);
        }
    };
}
function $403fbbc0a1d8902a$var$trackProperties(isImmutable, ignorePaths, obj, path) {
    if (ignorePaths === void 0) ignorePaths = [];
    if (path === void 0) path = "";
    var tracked = {
        value: obj
    };
    if (!isImmutable(obj)) {
        tracked.children = {};
        for(var key in obj){
            var childPath = path ? path + "." + key : key;
            if (ignorePaths.length && ignorePaths.indexOf(childPath) !== -1) continue;
            tracked.children[key] = $403fbbc0a1d8902a$var$trackProperties(isImmutable, ignorePaths, obj[key], childPath);
        }
    }
    return tracked;
}
function $403fbbc0a1d8902a$var$detectMutations(isImmutable, ignoredPaths, trackedProperty, obj, sameParentRef, path) {
    if (ignoredPaths === void 0) ignoredPaths = [];
    if (sameParentRef === void 0) sameParentRef = false;
    if (path === void 0) path = "";
    var prevObj = trackedProperty ? trackedProperty.value : void 0;
    var sameRef = prevObj === obj;
    if (sameParentRef && !sameRef && !Number.isNaN(obj)) return {
        wasMutated: true,
        path: path
    };
    if (isImmutable(prevObj) || isImmutable(obj)) return {
        wasMutated: false
    };
    var keysToDetect = {};
    for(var key in trackedProperty.children)keysToDetect[key] = true;
    for(var key in obj)keysToDetect[key] = true;
    var hasIgnoredPaths = ignoredPaths.length > 0;
    var _loop_1 = function(key) {
        var nestedPath = path ? path + "." + key : key;
        if (hasIgnoredPaths) {
            var hasMatches = ignoredPaths.some(function(ignored) {
                if (ignored instanceof RegExp) return ignored.test(nestedPath);
                return nestedPath === ignored;
            });
            if (hasMatches) return "continue";
        }
        var result = $403fbbc0a1d8902a$var$detectMutations(isImmutable, ignoredPaths, trackedProperty.children[key], obj[key], sameRef, nestedPath);
        if (result.wasMutated) return {
            value: result
        };
    };
    for(var key in keysToDetect){
        var state_1 = _loop_1(key);
        if (typeof state_1 === "object") return state_1.value;
    }
    return {
        wasMutated: false
    };
}
function $403fbbc0a1d8902a$export$9181bb1a5474289(options) {
    if (options === void 0) options = {};
    var _c, isImmutable, ignoredPaths, _d, warnAfter, ignore, track;
    return function() {
        return function(next) {
            return function(action) {
                return next(action);
            };
        };
    };
}
// src/serializableStateInvariantMiddleware.ts
function $403fbbc0a1d8902a$export$77670485918dab4e(val) {
    var type = typeof val;
    return val == null || type === "string" || type === "boolean" || type === "number" || Array.isArray(val) || $403fbbc0a1d8902a$export$53b83ca8eaab0383(val);
}
function $403fbbc0a1d8902a$export$ada5dca0b571bc7(value, path, isSerializable, getEntries, ignoredPaths, cache) {
    if (path === void 0) path = "";
    if (isSerializable === void 0) isSerializable = $403fbbc0a1d8902a$export$77670485918dab4e;
    if (ignoredPaths === void 0) ignoredPaths = [];
    var foundNestedSerializable;
    if (!isSerializable(value)) return {
        keyPath: path || "<root>",
        value: value
    };
    if (typeof value !== "object" || value === null) return false;
    if (cache == null ? void 0 : cache.has(value)) return false;
    var entries = getEntries != null ? getEntries(value) : Object.entries(value);
    var hasIgnoredPaths = ignoredPaths.length > 0;
    var _loop_2 = function(key, nestedValue) {
        var nestedPath = path ? path + "." + key : key;
        if (hasIgnoredPaths) {
            var hasMatches = ignoredPaths.some(function(ignored) {
                if (ignored instanceof RegExp) return ignored.test(nestedPath);
                return nestedPath === ignored;
            });
            if (hasMatches) return "continue";
        }
        if (!isSerializable(nestedValue)) return {
            value: {
                keyPath: nestedPath,
                value: nestedValue
            }
        };
        if (typeof nestedValue === "object") {
            foundNestedSerializable = $403fbbc0a1d8902a$export$ada5dca0b571bc7(nestedValue, nestedPath, isSerializable, getEntries, ignoredPaths, cache);
            if (foundNestedSerializable) return {
                value: foundNestedSerializable
            };
        }
    };
    for(var _i = 0, entries_1 = entries; _i < entries_1.length; _i++){
        var _c = entries_1[_i], key = _c[0], nestedValue = _c[1];
        var state_2 = _loop_2(key, nestedValue);
        if (typeof state_2 === "object") return state_2.value;
    }
    if (cache && $403fbbc0a1d8902a$var$isNestedFrozen(value)) cache.add(value);
    return false;
}
function $403fbbc0a1d8902a$var$isNestedFrozen(value) {
    if (!Object.isFrozen(value)) return false;
    for(var _i = 0, _c = Object.values(value); _i < _c.length; _i++){
        var nestedValue = _c[_i];
        if (typeof nestedValue !== "object" || nestedValue === null) continue;
        if (!$403fbbc0a1d8902a$var$isNestedFrozen(nestedValue)) return false;
    }
    return true;
}
function $403fbbc0a1d8902a$export$6dea1aad6dac5ac2(options) {
    if (options === void 0) options = {};
    var _c, isSerializable, getEntries, _d, ignoredActions, _e, ignoredActionPaths, _f, ignoredPaths, _g, warnAfter, _h, ignoreState, _j, ignoreActions, _k, disableCache, cache;
    return function() {
        return function(next) {
            return function(action) {
                return next(action);
            };
        };
    };
}
// src/getDefaultMiddleware.ts
function $403fbbc0a1d8902a$var$isBoolean(x) {
    return typeof x === "boolean";
}
function $403fbbc0a1d8902a$var$curryGetDefaultMiddleware() {
    return function curriedGetDefaultMiddleware(options) {
        return $403fbbc0a1d8902a$export$36c1185aeee5b0a6(options);
    };
}
function $403fbbc0a1d8902a$export$36c1185aeee5b0a6(options) {
    if (options === void 0) options = {};
    var _c = options.thunk, thunk = _c === void 0 ? true : _c, _d = options.immutableCheck, immutableCheck = _d === void 0 ? true : _d, _e = options.serializableCheck, serializableCheck = _e === void 0 ? true : _e;
    var middlewareArray = new $403fbbc0a1d8902a$export$20df1e9bd1a54f25();
    if (thunk) {
        if ($403fbbc0a1d8902a$var$isBoolean(thunk)) middlewareArray.push((0, $439f67d35ada4ab1$export$2e2bcd8739ae039));
        else middlewareArray.push((0, $439f67d35ada4ab1$export$2e2bcd8739ae039).withExtraArgument(thunk.extraArgument));
    }
    var immutableOptions, serializableOptions;
    return middlewareArray;
}
// src/configureStore.ts
var $403fbbc0a1d8902a$var$IS_PRODUCTION = true;
function $403fbbc0a1d8902a$export$7d8a5b498da695ac(options) {
    var curriedGetDefaultMiddleware = $403fbbc0a1d8902a$var$curryGetDefaultMiddleware();
    var _c = options || {}, _d = _c.reducer, reducer = _d === void 0 ? void 0 : _d, _e = _c.middleware, middleware = _e === void 0 ? curriedGetDefaultMiddleware() : _e, _f = _c.devTools, devTools = _f === void 0 ? true : _f, _g = _c.preloadedState, preloadedState = _g === void 0 ? void 0 : _g, _h = _c.enhancers, enhancers = _h === void 0 ? void 0 : _h;
    var rootReducer;
    if (typeof reducer === "function") rootReducer = reducer;
    else if ($403fbbc0a1d8902a$export$53b83ca8eaab0383(reducer)) rootReducer = (0, $fbc1c6d249dbe034$export$66e4520cdb265d18)(reducer);
    else throw new Error('"reducer" is a required argument, and must be a function or an object of functions that can be passed to combineReducers');
    var finalMiddleware = middleware;
    if (typeof finalMiddleware === "function") {
        finalMiddleware = finalMiddleware(curriedGetDefaultMiddleware);
        if (!$403fbbc0a1d8902a$var$IS_PRODUCTION && !Array.isArray(finalMiddleware)) throw new Error("when using a middleware builder function, an array of middleware must be returned");
    }
    if (!$403fbbc0a1d8902a$var$IS_PRODUCTION && finalMiddleware.some(function(item) {
        return typeof item !== "function";
    })) throw new Error("each middleware provided to configureStore must be a function");
    var middlewareEnhancer = (0, $fbc1c6d249dbe034$export$9ff26e0402cc7b7).apply(void 0, finalMiddleware);
    var finalCompose = (0, $fbc1c6d249dbe034$export$f672e0b6f7222cd7);
    if (devTools) finalCompose = $403fbbc0a1d8902a$var$composeWithDevTools($403fbbc0a1d8902a$var$__spreadValues({
        trace: !$403fbbc0a1d8902a$var$IS_PRODUCTION
    }, typeof devTools === "object" && devTools));
    var defaultEnhancers = new $403fbbc0a1d8902a$export$490d10040a0cbe8a(middlewareEnhancer);
    var storeEnhancers = defaultEnhancers;
    if (Array.isArray(enhancers)) storeEnhancers = $403fbbc0a1d8902a$var$__spreadArray([
        middlewareEnhancer
    ], enhancers);
    else if (typeof enhancers === "function") storeEnhancers = enhancers(defaultEnhancers);
    var composedEnhancer = finalCompose.apply(void 0, storeEnhancers);
    return (0, $fbc1c6d249dbe034$export$f51a9068ac82ea43)(rootReducer, preloadedState, composedEnhancer);
}
// src/createAction.ts
function $403fbbc0a1d8902a$export$309c7a02b0b0bc62(type, prepareAction) {
    function actionCreator() {
        var args = [];
        for(var _i = 0; _i < arguments.length; _i++)args[_i] = arguments[_i];
        if (prepareAction) {
            var prepared = prepareAction.apply(void 0, args);
            if (!prepared) throw new Error("prepareAction did not return an object");
            return $403fbbc0a1d8902a$var$__spreadValues($403fbbc0a1d8902a$var$__spreadValues({
                type: type,
                payload: prepared.payload
            }, "meta" in prepared && {
                meta: prepared.meta
            }), "error" in prepared && {
                error: prepared.error
            });
        }
        return {
            type: type,
            payload: args[0]
        };
    }
    actionCreator.toString = function() {
        return "" + type;
    };
    actionCreator.type = type;
    actionCreator.match = function(action) {
        return action.type === type;
    };
    return actionCreator;
}
function $403fbbc0a1d8902a$export$b956e38827fca970(action) {
    return $403fbbc0a1d8902a$export$53b83ca8eaab0383(action) && "type" in action;
}
function $403fbbc0a1d8902a$export$ebd532f9034651f3(action) {
    return $403fbbc0a1d8902a$export$b956e38827fca970(action) && typeof action.type === "string" && Object.keys(action).every($403fbbc0a1d8902a$var$isValidKey);
}
function $403fbbc0a1d8902a$var$isValidKey(key) {
    return [
        "type",
        "payload",
        "error",
        "meta"
    ].indexOf(key) > -1;
}
function $403fbbc0a1d8902a$export$e2b5c5db9e2009fd(actionCreator) {
    return "" + actionCreator;
}
// src/mapBuilders.ts
function $403fbbc0a1d8902a$var$executeReducerBuilderCallback(builderCallback) {
    var actionsMap = {};
    var actionMatchers = [];
    var defaultCaseReducer;
    var builder = {
        addCase: function(typeOrActionCreator, reducer) {
            var type = typeof typeOrActionCreator === "string" ? typeOrActionCreator : typeOrActionCreator.type;
            if (type in actionsMap) throw new Error("addCase cannot be called with two reducers for the same action type");
            actionsMap[type] = reducer;
            return builder;
        },
        addMatcher: function(matcher, reducer) {
            actionMatchers.push({
                matcher: matcher,
                reducer: reducer
            });
            return builder;
        },
        addDefaultCase: function(reducer) {
            defaultCaseReducer = reducer;
            return builder;
        }
    };
    builderCallback(builder);
    return [
        actionsMap,
        actionMatchers,
        defaultCaseReducer
    ];
}
// src/createReducer.ts
function $403fbbc0a1d8902a$var$isStateFunction(x) {
    return typeof x === "function";
}
var $403fbbc0a1d8902a$var$hasWarnedAboutObjectNotation = false;
function $403fbbc0a1d8902a$export$473eb76d322d0290(initialState, mapOrBuilderCallback, actionMatchers, defaultCaseReducer) {
    if (actionMatchers === void 0) actionMatchers = [];
    var _c = typeof mapOrBuilderCallback === "function" ? $403fbbc0a1d8902a$var$executeReducerBuilderCallback(mapOrBuilderCallback) : [
        mapOrBuilderCallback,
        actionMatchers,
        defaultCaseReducer
    ], actionsMap = _c[0], finalActionMatchers = _c[1], finalDefaultCaseReducer = _c[2];
    var getInitialState;
    if ($403fbbc0a1d8902a$var$isStateFunction(initialState)) getInitialState = function() {
        return $403fbbc0a1d8902a$var$freezeDraftable(initialState());
    };
    else {
        var frozenInitialState_1 = $403fbbc0a1d8902a$var$freezeDraftable(initialState);
        getInitialState = function() {
            return frozenInitialState_1;
        };
    }
    function reducer(state, action) {
        if (state === void 0) state = getInitialState();
        var caseReducers = $403fbbc0a1d8902a$var$__spreadArray([
            actionsMap[action.type]
        ], finalActionMatchers.filter(function(_c) {
            var matcher = _c.matcher;
            return matcher(action);
        }).map(function(_c) {
            var reducer2 = _c.reducer;
            return reducer2;
        }));
        if (caseReducers.filter(function(cr) {
            return !!cr;
        }).length === 0) caseReducers = [
            finalDefaultCaseReducer
        ];
        return caseReducers.reduce(function(previousState, caseReducer) {
            if (caseReducer) {
                if ((0, $70d3c82dd65bc7da$export$541ac630993a4c84)(previousState)) {
                    var draft = previousState;
                    var result = caseReducer(draft, action);
                    if (result === void 0) return previousState;
                    return result;
                } else if (!(0, $70d3c82dd65bc7da$export$16e3aed3edb85946)(previousState)) {
                    var result = caseReducer(previousState, action);
                    if (result === void 0) {
                        if (previousState === null) return previousState;
                        throw Error("A case reducer on a non-draftable value must not return undefined");
                    }
                    return result;
                } else return (0, $70d3c82dd65bc7da$export$2e2bcd8739ae039)(previousState, function(draft) {
                    return caseReducer(draft, action);
                });
            }
            return previousState;
        }, state);
    }
    reducer.getInitialState = getInitialState;
    return reducer;
}
// src/createSlice.ts
var $403fbbc0a1d8902a$var$hasWarnedAboutObjectNotation2 = false;
function $403fbbc0a1d8902a$var$getType2(slice, actionKey) {
    return slice + "/" + actionKey;
}
function $403fbbc0a1d8902a$export$4d8d9bd83c24ae8b(options) {
    var name = options.name;
    if (!name) throw new Error("`name` is a required option for createSlice");
    typeof $c1Pic;
    var initialState = typeof options.initialState == "function" ? options.initialState : $403fbbc0a1d8902a$var$freezeDraftable(options.initialState);
    var reducers = options.reducers || {};
    var reducerNames = Object.keys(reducers);
    var sliceCaseReducersByName = {};
    var sliceCaseReducersByType = {};
    var actionCreators = {};
    reducerNames.forEach(function(reducerName) {
        var maybeReducerWithPrepare = reducers[reducerName];
        var type = $403fbbc0a1d8902a$var$getType2(name, reducerName);
        var caseReducer;
        var prepareCallback;
        if ("reducer" in maybeReducerWithPrepare) {
            caseReducer = maybeReducerWithPrepare.reducer;
            prepareCallback = maybeReducerWithPrepare.prepare;
        } else caseReducer = maybeReducerWithPrepare;
        sliceCaseReducersByName[reducerName] = caseReducer;
        sliceCaseReducersByType[type] = caseReducer;
        actionCreators[reducerName] = prepareCallback ? $403fbbc0a1d8902a$export$309c7a02b0b0bc62(type, prepareCallback) : $403fbbc0a1d8902a$export$309c7a02b0b0bc62(type);
    });
    function buildReducer() {
        var _c = typeof options.extraReducers === "function" ? $403fbbc0a1d8902a$var$executeReducerBuilderCallback(options.extraReducers) : [
            options.extraReducers
        ], _d = _c[0], extraReducers = _d === void 0 ? {} : _d, _e = _c[1], actionMatchers = _e === void 0 ? [] : _e, _f = _c[2], defaultCaseReducer = _f === void 0 ? void 0 : _f;
        var finalCaseReducers = $403fbbc0a1d8902a$var$__spreadValues($403fbbc0a1d8902a$var$__spreadValues({}, extraReducers), sliceCaseReducersByType);
        return $403fbbc0a1d8902a$export$473eb76d322d0290(initialState, function(builder) {
            for(var key in finalCaseReducers)builder.addCase(key, finalCaseReducers[key]);
            for(var _i = 0, actionMatchers_1 = actionMatchers; _i < actionMatchers_1.length; _i++){
                var m = actionMatchers_1[_i];
                builder.addMatcher(m.matcher, m.reducer);
            }
            if (defaultCaseReducer) builder.addDefaultCase(defaultCaseReducer);
        });
    }
    var _reducer;
    return {
        name: name,
        reducer: function(state, action) {
            if (!_reducer) _reducer = buildReducer();
            return _reducer(state, action);
        },
        actions: actionCreators,
        caseReducers: sliceCaseReducersByName,
        getInitialState: function() {
            if (!_reducer) _reducer = buildReducer();
            return _reducer.getInitialState();
        }
    };
}
// src/entities/entity_state.ts
function $403fbbc0a1d8902a$var$getInitialEntityState() {
    return {
        ids: [],
        entities: {}
    };
}
function $403fbbc0a1d8902a$var$createInitialStateFactory() {
    function getInitialState(additionalState) {
        if (additionalState === void 0) additionalState = {};
        return Object.assign($403fbbc0a1d8902a$var$getInitialEntityState(), additionalState);
    }
    return {
        getInitialState: getInitialState
    };
}
// src/entities/state_selectors.ts
function $403fbbc0a1d8902a$var$createSelectorsFactory() {
    function getSelectors(selectState) {
        var selectIds = function(state) {
            return state.ids;
        };
        var selectEntities = function(state) {
            return state.entities;
        };
        var selectAll = $403fbbc0a1d8902a$export$a5d3c27355e35910(selectIds, selectEntities, function(ids, entities) {
            return ids.map(function(id) {
                return entities[id];
            });
        });
        var selectId = function(_, id) {
            return id;
        };
        var selectById = function(entities, id) {
            return entities[id];
        };
        var selectTotal = $403fbbc0a1d8902a$export$a5d3c27355e35910(selectIds, function(ids) {
            return ids.length;
        });
        if (!selectState) return {
            selectIds: selectIds,
            selectEntities: selectEntities,
            selectAll: selectAll,
            selectTotal: selectTotal,
            selectById: $403fbbc0a1d8902a$export$a5d3c27355e35910(selectEntities, selectId, selectById)
        };
        var selectGlobalizedEntities = $403fbbc0a1d8902a$export$a5d3c27355e35910(selectState, selectEntities);
        return {
            selectIds: $403fbbc0a1d8902a$export$a5d3c27355e35910(selectState, selectIds),
            selectEntities: selectGlobalizedEntities,
            selectAll: $403fbbc0a1d8902a$export$a5d3c27355e35910(selectState, selectAll),
            selectTotal: $403fbbc0a1d8902a$export$a5d3c27355e35910(selectState, selectTotal),
            selectById: $403fbbc0a1d8902a$export$a5d3c27355e35910(selectGlobalizedEntities, selectId, selectById)
        };
    }
    return {
        getSelectors: getSelectors
    };
}
function $403fbbc0a1d8902a$var$createSingleArgumentStateOperator(mutator) {
    var operator = $403fbbc0a1d8902a$var$createStateOperator(function(_, state) {
        return mutator(state);
    });
    return function operation(state) {
        return operator(state, void 0);
    };
}
function $403fbbc0a1d8902a$var$createStateOperator(mutator) {
    return function operation(state, arg) {
        function isPayloadActionArgument(arg2) {
            return $403fbbc0a1d8902a$export$ebd532f9034651f3(arg2);
        }
        var runMutator = function(draft) {
            if (isPayloadActionArgument(arg)) mutator(arg.payload, draft);
            else mutator(arg, draft);
        };
        if ((0, $70d3c82dd65bc7da$export$541ac630993a4c84)(state)) {
            runMutator(state);
            return state;
        } else return (0, $70d3c82dd65bc7da$export$2e2bcd8739ae039)(state, runMutator);
    };
}
// src/entities/utils.ts
function $403fbbc0a1d8902a$var$selectIdValue(entity, selectId) {
    var key = selectId(entity);
    return key;
}
function $403fbbc0a1d8902a$var$ensureEntitiesArray(entities) {
    if (!Array.isArray(entities)) entities = Object.values(entities);
    return entities;
}
function $403fbbc0a1d8902a$var$splitAddedUpdatedEntities(newEntities, selectId, state) {
    newEntities = $403fbbc0a1d8902a$var$ensureEntitiesArray(newEntities);
    var added = [];
    var updated = [];
    for(var _i = 0, newEntities_1 = newEntities; _i < newEntities_1.length; _i++){
        var entity = newEntities_1[_i];
        var id = $403fbbc0a1d8902a$var$selectIdValue(entity, selectId);
        if (id in state.entities) updated.push({
            id: id,
            changes: entity
        });
        else added.push(entity);
    }
    return [
        added,
        updated
    ];
}
// src/entities/unsorted_state_adapter.ts
function $403fbbc0a1d8902a$var$createUnsortedStateAdapter(selectId) {
    function addOneMutably(entity, state) {
        var key = $403fbbc0a1d8902a$var$selectIdValue(entity, selectId);
        if (key in state.entities) return;
        state.ids.push(key);
        state.entities[key] = entity;
    }
    function addManyMutably(newEntities, state) {
        newEntities = $403fbbc0a1d8902a$var$ensureEntitiesArray(newEntities);
        for(var _i = 0, newEntities_2 = newEntities; _i < newEntities_2.length; _i++){
            var entity = newEntities_2[_i];
            addOneMutably(entity, state);
        }
    }
    function setOneMutably(entity, state) {
        var key = $403fbbc0a1d8902a$var$selectIdValue(entity, selectId);
        if (!(key in state.entities)) state.ids.push(key);
        state.entities[key] = entity;
    }
    function setManyMutably(newEntities, state) {
        newEntities = $403fbbc0a1d8902a$var$ensureEntitiesArray(newEntities);
        for(var _i = 0, newEntities_3 = newEntities; _i < newEntities_3.length; _i++){
            var entity = newEntities_3[_i];
            setOneMutably(entity, state);
        }
    }
    function setAllMutably(newEntities, state) {
        newEntities = $403fbbc0a1d8902a$var$ensureEntitiesArray(newEntities);
        state.ids = [];
        state.entities = {};
        addManyMutably(newEntities, state);
    }
    function removeOneMutably(key, state) {
        return removeManyMutably([
            key
        ], state);
    }
    function removeManyMutably(keys, state) {
        var didMutate = false;
        keys.forEach(function(key) {
            if (key in state.entities) {
                delete state.entities[key];
                didMutate = true;
            }
        });
        if (didMutate) state.ids = state.ids.filter(function(id) {
            return id in state.entities;
        });
    }
    function removeAllMutably(state) {
        Object.assign(state, {
            ids: [],
            entities: {}
        });
    }
    function takeNewKey(keys, update, state) {
        var original2 = state.entities[update.id];
        var updated = Object.assign({}, original2, update.changes);
        var newKey = $403fbbc0a1d8902a$var$selectIdValue(updated, selectId);
        var hasNewKey = newKey !== update.id;
        if (hasNewKey) {
            keys[update.id] = newKey;
            delete state.entities[update.id];
        }
        state.entities[newKey] = updated;
        return hasNewKey;
    }
    function updateOneMutably(update, state) {
        return updateManyMutably([
            update
        ], state);
    }
    function updateManyMutably(updates, state) {
        var newKeys = {};
        var updatesPerEntity = {};
        updates.forEach(function(update) {
            if (update.id in state.entities) updatesPerEntity[update.id] = {
                id: update.id,
                changes: $403fbbc0a1d8902a$var$__spreadValues($403fbbc0a1d8902a$var$__spreadValues({}, updatesPerEntity[update.id] ? updatesPerEntity[update.id].changes : null), update.changes)
            };
        });
        updates = Object.values(updatesPerEntity);
        var didMutateEntities = updates.length > 0;
        if (didMutateEntities) {
            var didMutateIds = updates.filter(function(update) {
                return takeNewKey(newKeys, update, state);
            }).length > 0;
            if (didMutateIds) state.ids = Object.keys(state.entities);
        }
    }
    function upsertOneMutably(entity, state) {
        return upsertManyMutably([
            entity
        ], state);
    }
    function upsertManyMutably(newEntities, state) {
        var _c = $403fbbc0a1d8902a$var$splitAddedUpdatedEntities(newEntities, selectId, state), added = _c[0], updated = _c[1];
        updateManyMutably(updated, state);
        addManyMutably(added, state);
    }
    return {
        removeAll: $403fbbc0a1d8902a$var$createSingleArgumentStateOperator(removeAllMutably),
        addOne: $403fbbc0a1d8902a$var$createStateOperator(addOneMutably),
        addMany: $403fbbc0a1d8902a$var$createStateOperator(addManyMutably),
        setOne: $403fbbc0a1d8902a$var$createStateOperator(setOneMutably),
        setMany: $403fbbc0a1d8902a$var$createStateOperator(setManyMutably),
        setAll: $403fbbc0a1d8902a$var$createStateOperator(setAllMutably),
        updateOne: $403fbbc0a1d8902a$var$createStateOperator(updateOneMutably),
        updateMany: $403fbbc0a1d8902a$var$createStateOperator(updateManyMutably),
        upsertOne: $403fbbc0a1d8902a$var$createStateOperator(upsertOneMutably),
        upsertMany: $403fbbc0a1d8902a$var$createStateOperator(upsertManyMutably),
        removeOne: $403fbbc0a1d8902a$var$createStateOperator(removeOneMutably),
        removeMany: $403fbbc0a1d8902a$var$createStateOperator(removeManyMutably)
    };
}
// src/entities/sorted_state_adapter.ts
function $403fbbc0a1d8902a$var$createSortedStateAdapter(selectId, sort) {
    var _c = $403fbbc0a1d8902a$var$createUnsortedStateAdapter(selectId), removeOne = _c.removeOne, removeMany = _c.removeMany, removeAll = _c.removeAll;
    function addOneMutably(entity, state) {
        return addManyMutably([
            entity
        ], state);
    }
    function addManyMutably(newEntities, state) {
        newEntities = $403fbbc0a1d8902a$var$ensureEntitiesArray(newEntities);
        var models = newEntities.filter(function(model) {
            return !($403fbbc0a1d8902a$var$selectIdValue(model, selectId) in state.entities);
        });
        if (models.length !== 0) merge(models, state);
    }
    function setOneMutably(entity, state) {
        return setManyMutably([
            entity
        ], state);
    }
    function setManyMutably(newEntities, state) {
        newEntities = $403fbbc0a1d8902a$var$ensureEntitiesArray(newEntities);
        if (newEntities.length !== 0) merge(newEntities, state);
    }
    function setAllMutably(newEntities, state) {
        newEntities = $403fbbc0a1d8902a$var$ensureEntitiesArray(newEntities);
        state.entities = {};
        state.ids = [];
        addManyMutably(newEntities, state);
    }
    function updateOneMutably(update, state) {
        return updateManyMutably([
            update
        ], state);
    }
    function updateManyMutably(updates, state) {
        var appliedUpdates = false;
        for(var _i = 0, updates_1 = updates; _i < updates_1.length; _i++){
            var update = updates_1[_i];
            var entity = state.entities[update.id];
            if (!entity) continue;
            appliedUpdates = true;
            Object.assign(entity, update.changes);
            var newId = selectId(entity);
            if (update.id !== newId) {
                delete state.entities[update.id];
                state.entities[newId] = entity;
            }
        }
        if (appliedUpdates) resortEntities(state);
    }
    function upsertOneMutably(entity, state) {
        return upsertManyMutably([
            entity
        ], state);
    }
    function upsertManyMutably(newEntities, state) {
        var _c = $403fbbc0a1d8902a$var$splitAddedUpdatedEntities(newEntities, selectId, state), added = _c[0], updated = _c[1];
        updateManyMutably(updated, state);
        addManyMutably(added, state);
    }
    function areArraysEqual(a, b) {
        if (a.length !== b.length) return false;
        for(var i = 0; i < a.length && i < b.length; i++){
            if (a[i] === b[i]) continue;
            return false;
        }
        return true;
    }
    function merge(models, state) {
        models.forEach(function(model) {
            state.entities[selectId(model)] = model;
        });
        resortEntities(state);
    }
    function resortEntities(state) {
        var allEntities = Object.values(state.entities);
        allEntities.sort(sort);
        var newSortedIds = allEntities.map(selectId);
        var ids = state.ids;
        if (!areArraysEqual(ids, newSortedIds)) state.ids = newSortedIds;
    }
    return {
        removeOne: removeOne,
        removeMany: removeMany,
        removeAll: removeAll,
        addOne: $403fbbc0a1d8902a$var$createStateOperator(addOneMutably),
        updateOne: $403fbbc0a1d8902a$var$createStateOperator(updateOneMutably),
        upsertOne: $403fbbc0a1d8902a$var$createStateOperator(upsertOneMutably),
        setOne: $403fbbc0a1d8902a$var$createStateOperator(setOneMutably),
        setMany: $403fbbc0a1d8902a$var$createStateOperator(setManyMutably),
        setAll: $403fbbc0a1d8902a$var$createStateOperator(setAllMutably),
        addMany: $403fbbc0a1d8902a$var$createStateOperator(addManyMutably),
        updateMany: $403fbbc0a1d8902a$var$createStateOperator(updateManyMutably),
        upsertMany: $403fbbc0a1d8902a$var$createStateOperator(upsertManyMutably)
    };
}
// src/entities/create_adapter.ts
function $403fbbc0a1d8902a$export$abcf4037b41e0df(options) {
    if (options === void 0) options = {};
    var _c = $403fbbc0a1d8902a$var$__spreadValues({
        sortComparer: false,
        selectId: function(instance) {
            return instance.id;
        }
    }, options), selectId = _c.selectId, sortComparer = _c.sortComparer;
    var stateFactory = $403fbbc0a1d8902a$var$createInitialStateFactory();
    var selectorsFactory = $403fbbc0a1d8902a$var$createSelectorsFactory();
    var stateAdapter = sortComparer ? $403fbbc0a1d8902a$var$createSortedStateAdapter(selectId, sortComparer) : $403fbbc0a1d8902a$var$createUnsortedStateAdapter(selectId);
    return $403fbbc0a1d8902a$var$__spreadValues($403fbbc0a1d8902a$var$__spreadValues($403fbbc0a1d8902a$var$__spreadValues({
        selectId: selectId,
        sortComparer: sortComparer
    }, stateFactory), selectorsFactory), stateAdapter);
}
// src/nanoid.ts
var $403fbbc0a1d8902a$var$urlAlphabet = "ModuleSymbhasOwnPr-0123456789ABCDEFGHNRVfgctiUvz_KqYTJkLxpZXIjQW";
var $403fbbc0a1d8902a$export$ac4959f4f1338dfc = function(size) {
    if (size === void 0) size = 21;
    var id = "";
    var i = size;
    while(i--)id += $403fbbc0a1d8902a$var$urlAlphabet[Math.random() * 64 | 0];
    return id;
};
// src/createAsyncThunk.ts
var $403fbbc0a1d8902a$var$commonProperties = [
    "name",
    "message",
    "stack",
    "code"
];
var $403fbbc0a1d8902a$var$RejectWithValue = /** @class */ function() {
    function RejectWithValue(payload, meta) {
        this.payload = payload;
        this.meta = meta;
    }
    return RejectWithValue;
}();
var $403fbbc0a1d8902a$var$FulfillWithMeta = /** @class */ function() {
    function FulfillWithMeta(payload, meta) {
        this.payload = payload;
        this.meta = meta;
    }
    return FulfillWithMeta;
}();
var $403fbbc0a1d8902a$export$c97c53d0b2d5d81e = function(value) {
    if (typeof value === "object" && value !== null) {
        var simpleError = {};
        for(var _i = 0, commonProperties_1 = $403fbbc0a1d8902a$var$commonProperties; _i < commonProperties_1.length; _i++){
            var property = commonProperties_1[_i];
            if (typeof value[property] === "string") simpleError[property] = value[property];
        }
        return simpleError;
    }
    return {
        message: String(value)
    };
};
var $403fbbc0a1d8902a$export$6abd22dc03e5063f = function() {
    function createAsyncThunk2(typePrefix, payloadCreator, options) {
        var fulfilled = $403fbbc0a1d8902a$export$309c7a02b0b0bc62(typePrefix + "/fulfilled", function(payload, requestId, arg, meta) {
            return {
                payload: payload,
                meta: $403fbbc0a1d8902a$var$__spreadProps($403fbbc0a1d8902a$var$__spreadValues({}, meta || {}), {
                    arg: arg,
                    requestId: requestId,
                    requestStatus: "fulfilled"
                })
            };
        });
        var pending = $403fbbc0a1d8902a$export$309c7a02b0b0bc62(typePrefix + "/pending", function(requestId, arg, meta) {
            return {
                payload: void 0,
                meta: $403fbbc0a1d8902a$var$__spreadProps($403fbbc0a1d8902a$var$__spreadValues({}, meta || {}), {
                    arg: arg,
                    requestId: requestId,
                    requestStatus: "pending"
                })
            };
        });
        var rejected = $403fbbc0a1d8902a$export$309c7a02b0b0bc62(typePrefix + "/rejected", function(error, requestId, arg, payload, meta) {
            return {
                payload: payload,
                error: (options && options.serializeError || $403fbbc0a1d8902a$export$c97c53d0b2d5d81e)(error || "Rejected"),
                meta: $403fbbc0a1d8902a$var$__spreadProps($403fbbc0a1d8902a$var$__spreadValues({}, meta || {}), {
                    arg: arg,
                    requestId: requestId,
                    rejectedWithValue: !!payload,
                    requestStatus: "rejected",
                    aborted: (error == null ? void 0 : error.name) === "AbortError",
                    condition: (error == null ? void 0 : error.name) === "ConditionError"
                })
            };
        });
        var displayedWarning = false;
        var AC = typeof AbortController !== "undefined" ? AbortController : /** @class */ function() {
            function class_1() {
                this.signal = {
                    aborted: false,
                    addEventListener: function() {},
                    dispatchEvent: function() {
                        return false;
                    },
                    onabort: function() {},
                    removeEventListener: function() {},
                    reason: void 0,
                    throwIfAborted: function() {}
                };
            }
            class_1.prototype.abort = function() {};
            return class_1;
        }();
        function actionCreator(arg) {
            return function(dispatch, getState, extra) {
                var requestId = (options == null ? void 0 : options.idGenerator) ? options.idGenerator(arg) : $403fbbc0a1d8902a$export$ac4959f4f1338dfc();
                var abortController = new AC();
                var abortReason;
                var started = false;
                function abort(reason) {
                    abortReason = reason;
                    abortController.abort();
                }
                var promise2 = function() {
                    return $403fbbc0a1d8902a$var$__async(this, null, function() {
                        var _a, _b, finalAction, conditionResult, abortedPromise, err_1, skipDispatch;
                        return $403fbbc0a1d8902a$var$__generator(this, function(_c) {
                            switch(_c.label){
                                case 0:
                                    _c.trys.push([
                                        0,
                                        4,
                                        ,
                                        5
                                    ]);
                                    conditionResult = (_a = options == null ? void 0 : options.condition) == null ? void 0 : _a.call(options, arg, {
                                        getState: getState,
                                        extra: extra
                                    });
                                    if (!$403fbbc0a1d8902a$var$isThenable(conditionResult)) return [
                                        3 /*break*/ ,
                                        2
                                    ];
                                    return [
                                        4 /*yield*/ ,
                                        conditionResult
                                    ];
                                case 1:
                                    conditionResult = _c.sent();
                                    _c.label = 2;
                                case 2:
                                    if (conditionResult === false || abortController.signal.aborted) throw {
                                        name: "ConditionError",
                                        message: "Aborted due to condition callback returning false."
                                    };
                                    started = true;
                                    abortedPromise = new Promise(function(_, reject) {
                                        return abortController.signal.addEventListener("abort", function() {
                                            return reject({
                                                name: "AbortError",
                                                message: abortReason || "Aborted"
                                            });
                                        });
                                    });
                                    dispatch(pending(requestId, arg, (_b = options == null ? void 0 : options.getPendingMeta) == null ? void 0 : _b.call(options, {
                                        requestId: requestId,
                                        arg: arg
                                    }, {
                                        getState: getState,
                                        extra: extra
                                    })));
                                    return [
                                        4 /*yield*/ ,
                                        Promise.race([
                                            abortedPromise,
                                            Promise.resolve(payloadCreator(arg, {
                                                dispatch: dispatch,
                                                getState: getState,
                                                extra: extra,
                                                requestId: requestId,
                                                signal: abortController.signal,
                                                abort: abort,
                                                rejectWithValue: function(value, meta) {
                                                    return new $403fbbc0a1d8902a$var$RejectWithValue(value, meta);
                                                },
                                                fulfillWithValue: function(value, meta) {
                                                    return new $403fbbc0a1d8902a$var$FulfillWithMeta(value, meta);
                                                }
                                            })).then(function(result) {
                                                if (result instanceof $403fbbc0a1d8902a$var$RejectWithValue) throw result;
                                                if (result instanceof $403fbbc0a1d8902a$var$FulfillWithMeta) return fulfilled(result.payload, requestId, arg, result.meta);
                                                return fulfilled(result, requestId, arg);
                                            })
                                        ])
                                    ];
                                case 3:
                                    finalAction = _c.sent();
                                    return [
                                        3 /*break*/ ,
                                        5
                                    ];
                                case 4:
                                    err_1 = _c.sent();
                                    finalAction = err_1 instanceof $403fbbc0a1d8902a$var$RejectWithValue ? rejected(null, requestId, arg, err_1.payload, err_1.meta) : rejected(err_1, requestId, arg);
                                    return [
                                        3 /*break*/ ,
                                        5
                                    ];
                                case 5:
                                    skipDispatch = options && !options.dispatchConditionRejection && rejected.match(finalAction) && finalAction.meta.condition;
                                    if (!skipDispatch) dispatch(finalAction);
                                    return [
                                        2 /*return*/ ,
                                        finalAction
                                    ];
                            }
                        });
                    });
                }();
                return Object.assign(promise2, {
                    abort: abort,
                    requestId: requestId,
                    arg: arg,
                    unwrap: function() {
                        return promise2.then($403fbbc0a1d8902a$export$5b28227b4c5dc983);
                    }
                });
            };
        }
        return Object.assign(actionCreator, {
            pending: pending,
            rejected: rejected,
            fulfilled: fulfilled,
            typePrefix: typePrefix
        });
    }
    createAsyncThunk2.withTypes = function() {
        return createAsyncThunk2;
    };
    return createAsyncThunk2;
}();
function $403fbbc0a1d8902a$export$5b28227b4c5dc983(action) {
    if (action.meta && action.meta.rejectedWithValue) throw action.payload;
    if (action.error) throw action.error;
    return action.payload;
}
function $403fbbc0a1d8902a$var$isThenable(value) {
    return value !== null && typeof value === "object" && typeof value.then === "function";
}
// src/tsHelpers.ts
var $403fbbc0a1d8902a$var$hasMatchFunction = function(v) {
    return v && typeof v.match === "function";
};
// src/matchers.ts
var $403fbbc0a1d8902a$var$matches = function(matcher, action) {
    if ($403fbbc0a1d8902a$var$hasMatchFunction(matcher)) return matcher.match(action);
    else return matcher(action);
};
function $403fbbc0a1d8902a$export$2c3435c7647f7b0d() {
    var matchers = [];
    for(var _i = 0; _i < arguments.length; _i++)matchers[_i] = arguments[_i];
    return function(action) {
        return matchers.some(function(matcher) {
            return $403fbbc0a1d8902a$var$matches(matcher, action);
        });
    };
}
function $403fbbc0a1d8902a$export$9dd1fb32974da385() {
    var matchers = [];
    for(var _i = 0; _i < arguments.length; _i++)matchers[_i] = arguments[_i];
    return function(action) {
        return matchers.every(function(matcher) {
            return $403fbbc0a1d8902a$var$matches(matcher, action);
        });
    };
}
function $403fbbc0a1d8902a$var$hasExpectedRequestMetadata(action, validStatus) {
    if (!action || !action.meta) return false;
    var hasValidRequestId = typeof action.meta.requestId === "string";
    var hasValidRequestStatus = validStatus.indexOf(action.meta.requestStatus) > -1;
    return hasValidRequestId && hasValidRequestStatus;
}
function $403fbbc0a1d8902a$var$isAsyncThunkArray(a) {
    return typeof a[0] === "function" && "pending" in a[0] && "fulfilled" in a[0] && "rejected" in a[0];
}
function $403fbbc0a1d8902a$export$872dec21e9a69476() {
    var asyncThunks = [];
    for(var _i = 0; _i < arguments.length; _i++)asyncThunks[_i] = arguments[_i];
    if (asyncThunks.length === 0) return function(action) {
        return $403fbbc0a1d8902a$var$hasExpectedRequestMetadata(action, [
            "pending"
        ]);
    };
    if (!$403fbbc0a1d8902a$var$isAsyncThunkArray(asyncThunks)) return $403fbbc0a1d8902a$export$872dec21e9a69476()(asyncThunks[0]);
    return function(action) {
        var matchers = asyncThunks.map(function(asyncThunk) {
            return asyncThunk.pending;
        });
        var combinedMatcher = $403fbbc0a1d8902a$export$2c3435c7647f7b0d.apply(void 0, matchers);
        return combinedMatcher(action);
    };
}
function $403fbbc0a1d8902a$export$a5c5d27e3994c5be() {
    var asyncThunks = [];
    for(var _i = 0; _i < arguments.length; _i++)asyncThunks[_i] = arguments[_i];
    if (asyncThunks.length === 0) return function(action) {
        return $403fbbc0a1d8902a$var$hasExpectedRequestMetadata(action, [
            "rejected"
        ]);
    };
    if (!$403fbbc0a1d8902a$var$isAsyncThunkArray(asyncThunks)) return $403fbbc0a1d8902a$export$a5c5d27e3994c5be()(asyncThunks[0]);
    return function(action) {
        var matchers = asyncThunks.map(function(asyncThunk) {
            return asyncThunk.rejected;
        });
        var combinedMatcher = $403fbbc0a1d8902a$export$2c3435c7647f7b0d.apply(void 0, matchers);
        return combinedMatcher(action);
    };
}
function $403fbbc0a1d8902a$export$fcc3388fb56de601() {
    var asyncThunks = [];
    for(var _i = 0; _i < arguments.length; _i++)asyncThunks[_i] = arguments[_i];
    var hasFlag = function(action) {
        return action && action.meta && action.meta.rejectedWithValue;
    };
    if (asyncThunks.length === 0) return function(action) {
        var combinedMatcher = $403fbbc0a1d8902a$export$9dd1fb32974da385($403fbbc0a1d8902a$export$a5c5d27e3994c5be.apply(void 0, asyncThunks), hasFlag);
        return combinedMatcher(action);
    };
    if (!$403fbbc0a1d8902a$var$isAsyncThunkArray(asyncThunks)) return $403fbbc0a1d8902a$export$fcc3388fb56de601()(asyncThunks[0]);
    return function(action) {
        var combinedMatcher = $403fbbc0a1d8902a$export$9dd1fb32974da385($403fbbc0a1d8902a$export$a5c5d27e3994c5be.apply(void 0, asyncThunks), hasFlag);
        return combinedMatcher(action);
    };
}
function $403fbbc0a1d8902a$export$1da80a6ef1307441() {
    var asyncThunks = [];
    for(var _i = 0; _i < arguments.length; _i++)asyncThunks[_i] = arguments[_i];
    if (asyncThunks.length === 0) return function(action) {
        return $403fbbc0a1d8902a$var$hasExpectedRequestMetadata(action, [
            "fulfilled"
        ]);
    };
    if (!$403fbbc0a1d8902a$var$isAsyncThunkArray(asyncThunks)) return $403fbbc0a1d8902a$export$1da80a6ef1307441()(asyncThunks[0]);
    return function(action) {
        var matchers = asyncThunks.map(function(asyncThunk) {
            return asyncThunk.fulfilled;
        });
        var combinedMatcher = $403fbbc0a1d8902a$export$2c3435c7647f7b0d.apply(void 0, matchers);
        return combinedMatcher(action);
    };
}
function $403fbbc0a1d8902a$export$6aa4142d99c1abce() {
    var asyncThunks = [];
    for(var _i = 0; _i < arguments.length; _i++)asyncThunks[_i] = arguments[_i];
    if (asyncThunks.length === 0) return function(action) {
        return $403fbbc0a1d8902a$var$hasExpectedRequestMetadata(action, [
            "pending",
            "fulfilled",
            "rejected"
        ]);
    };
    if (!$403fbbc0a1d8902a$var$isAsyncThunkArray(asyncThunks)) return $403fbbc0a1d8902a$export$6aa4142d99c1abce()(asyncThunks[0]);
    return function(action) {
        var matchers = [];
        for(var _i = 0, asyncThunks_1 = asyncThunks; _i < asyncThunks_1.length; _i++){
            var asyncThunk = asyncThunks_1[_i];
            matchers.push(asyncThunk.pending, asyncThunk.rejected, asyncThunk.fulfilled);
        }
        var combinedMatcher = $403fbbc0a1d8902a$export$2c3435c7647f7b0d.apply(void 0, matchers);
        return combinedMatcher(action);
    };
}
// src/listenerMiddleware/utils.ts
var $403fbbc0a1d8902a$var$assertFunction = function(func, expected) {
    if (typeof func !== "function") throw new TypeError(expected + " is not a function");
};
var $403fbbc0a1d8902a$var$noop = function() {};
var $403fbbc0a1d8902a$var$catchRejection = function(promise2, onError) {
    if (onError === void 0) onError = $403fbbc0a1d8902a$var$noop;
    promise2.catch(onError);
    return promise2;
};
var $403fbbc0a1d8902a$var$addAbortSignalListener = function(abortSignal, callback) {
    abortSignal.addEventListener("abort", callback, {
        once: true
    });
    return function() {
        return abortSignal.removeEventListener("abort", callback);
    };
};
var $403fbbc0a1d8902a$var$abortControllerWithReason = function(abortController, reason) {
    var signal = abortController.signal;
    if (signal.aborted) return;
    if (!("reason" in signal)) Object.defineProperty(signal, "reason", {
        enumerable: true,
        value: reason,
        configurable: true,
        writable: true
    });
    abortController.abort(reason);
};
// src/listenerMiddleware/exceptions.ts
var $403fbbc0a1d8902a$var$task = "task";
var $403fbbc0a1d8902a$var$listener = "listener";
var $403fbbc0a1d8902a$var$completed = "completed";
var $403fbbc0a1d8902a$var$cancelled = "cancelled";
var $403fbbc0a1d8902a$var$taskCancelled = "task-" + $403fbbc0a1d8902a$var$cancelled;
var $403fbbc0a1d8902a$var$taskCompleted = "task-" + $403fbbc0a1d8902a$var$completed;
var $403fbbc0a1d8902a$var$listenerCancelled = $403fbbc0a1d8902a$var$listener + "-" + $403fbbc0a1d8902a$var$cancelled;
var $403fbbc0a1d8902a$var$listenerCompleted = $403fbbc0a1d8902a$var$listener + "-" + $403fbbc0a1d8902a$var$completed;
var $403fbbc0a1d8902a$export$cb1bdac908fed7f = /** @class */ function() {
    function TaskAbortError(code) {
        this.code = code;
        this.name = "TaskAbortError";
        this.message = $403fbbc0a1d8902a$var$task + " " + $403fbbc0a1d8902a$var$cancelled + " (reason: " + code + ")";
    }
    return TaskAbortError;
}();
// src/listenerMiddleware/task.ts
var $403fbbc0a1d8902a$var$validateActive = function(signal) {
    if (signal.aborted) throw new $403fbbc0a1d8902a$export$cb1bdac908fed7f(signal.reason);
};
function $403fbbc0a1d8902a$var$raceWithSignal(signal, promise2) {
    var cleanup = $403fbbc0a1d8902a$var$noop;
    return new Promise(function(resolve, reject) {
        var notifyRejection = function() {
            return reject(new $403fbbc0a1d8902a$export$cb1bdac908fed7f(signal.reason));
        };
        if (signal.aborted) {
            notifyRejection();
            return;
        }
        cleanup = $403fbbc0a1d8902a$var$addAbortSignalListener(signal, notifyRejection);
        promise2.finally(function() {
            return cleanup();
        }).then(resolve, reject);
    }).finally(function() {
        cleanup = $403fbbc0a1d8902a$var$noop;
    });
}
var $403fbbc0a1d8902a$var$runTask = function(task2, cleanUp) {
    return $403fbbc0a1d8902a$var$__async(void 0, null, function() {
        var value, error_1;
        return $403fbbc0a1d8902a$var$__generator(this, function(_c) {
            switch(_c.label){
                case 0:
                    _c.trys.push([
                        0,
                        3,
                        4,
                        5
                    ]);
                    return [
                        4 /*yield*/ ,
                        Promise.resolve()
                    ];
                case 1:
                    _c.sent();
                    return [
                        4 /*yield*/ ,
                        task2()
                    ];
                case 2:
                    value = _c.sent();
                    return [
                        2 /*return*/ ,
                        {
                            status: "ok",
                            value: value
                        }
                    ];
                case 3:
                    error_1 = _c.sent();
                    return [
                        2 /*return*/ ,
                        {
                            status: error_1 instanceof $403fbbc0a1d8902a$export$cb1bdac908fed7f ? "cancelled" : "rejected",
                            error: error_1
                        }
                    ];
                case 4:
                    cleanUp == null || cleanUp();
                    return [
                        7 /*endfinally*/ 
                    ];
                case 5:
                    return [
                        2 /*return*/ 
                    ];
            }
        });
    });
};
var $403fbbc0a1d8902a$var$createPause = function(signal) {
    return function(promise2) {
        return $403fbbc0a1d8902a$var$catchRejection($403fbbc0a1d8902a$var$raceWithSignal(signal, promise2).then(function(output) {
            $403fbbc0a1d8902a$var$validateActive(signal);
            return output;
        }));
    };
};
var $403fbbc0a1d8902a$var$createDelay = function(signal) {
    var pause = $403fbbc0a1d8902a$var$createPause(signal);
    return function(timeoutMs) {
        return pause(new Promise(function(resolve) {
            return setTimeout(resolve, timeoutMs);
        }));
    };
};
// src/listenerMiddleware/index.ts
var $403fbbc0a1d8902a$var$assign = Object.assign;
var $403fbbc0a1d8902a$var$INTERNAL_NIL_TOKEN = {};
var $403fbbc0a1d8902a$var$alm = "listenerMiddleware";
var $403fbbc0a1d8902a$var$createFork = function(parentAbortSignal) {
    var linkControllers = function(controller) {
        return $403fbbc0a1d8902a$var$addAbortSignalListener(parentAbortSignal, function() {
            return $403fbbc0a1d8902a$var$abortControllerWithReason(controller, parentAbortSignal.reason);
        });
    };
    return function(taskExecutor) {
        $403fbbc0a1d8902a$var$assertFunction(taskExecutor, "taskExecutor");
        var childAbortController = new AbortController();
        linkControllers(childAbortController);
        var result = $403fbbc0a1d8902a$var$runTask(function() {
            return $403fbbc0a1d8902a$var$__async(void 0, null, function() {
                var result2;
                return $403fbbc0a1d8902a$var$__generator(this, function(_c) {
                    switch(_c.label){
                        case 0:
                            $403fbbc0a1d8902a$var$validateActive(parentAbortSignal);
                            $403fbbc0a1d8902a$var$validateActive(childAbortController.signal);
                            return [
                                4 /*yield*/ ,
                                taskExecutor({
                                    pause: $403fbbc0a1d8902a$var$createPause(childAbortController.signal),
                                    delay: $403fbbc0a1d8902a$var$createDelay(childAbortController.signal),
                                    signal: childAbortController.signal
                                })
                            ];
                        case 1:
                            result2 = _c.sent();
                            $403fbbc0a1d8902a$var$validateActive(childAbortController.signal);
                            return [
                                2 /*return*/ ,
                                result2
                            ];
                    }
                });
            });
        }, function() {
            return $403fbbc0a1d8902a$var$abortControllerWithReason(childAbortController, $403fbbc0a1d8902a$var$taskCompleted);
        });
        return {
            result: $403fbbc0a1d8902a$var$createPause(parentAbortSignal)(result),
            cancel: function() {
                $403fbbc0a1d8902a$var$abortControllerWithReason(childAbortController, $403fbbc0a1d8902a$var$taskCancelled);
            }
        };
    };
};
var $403fbbc0a1d8902a$var$createTakePattern = function(startListening, signal) {
    var take = function(predicate, timeout) {
        return $403fbbc0a1d8902a$var$__async(void 0, null, function() {
            var unsubscribe, tuplePromise, promises, output;
            return $403fbbc0a1d8902a$var$__generator(this, function(_c) {
                switch(_c.label){
                    case 0:
                        $403fbbc0a1d8902a$var$validateActive(signal);
                        unsubscribe = function() {};
                        tuplePromise = new Promise(function(resolve, reject) {
                            var stopListening = startListening({
                                predicate: predicate,
                                effect: function(action, listenerApi) {
                                    listenerApi.unsubscribe();
                                    resolve([
                                        action,
                                        listenerApi.getState(),
                                        listenerApi.getOriginalState()
                                    ]);
                                }
                            });
                            unsubscribe = function() {
                                stopListening();
                                reject();
                            };
                        });
                        promises = [
                            tuplePromise
                        ];
                        if (timeout != null) promises.push(new Promise(function(resolve) {
                            return setTimeout(resolve, timeout, null);
                        }));
                        _c.label = 1;
                    case 1:
                        _c.trys.push([
                            1,
                            ,
                            3,
                            4
                        ]);
                        return [
                            4 /*yield*/ ,
                            $403fbbc0a1d8902a$var$raceWithSignal(signal, Promise.race(promises))
                        ];
                    case 2:
                        output = _c.sent();
                        $403fbbc0a1d8902a$var$validateActive(signal);
                        return [
                            2 /*return*/ ,
                            output
                        ];
                    case 3:
                        unsubscribe();
                        return [
                            7 /*endfinally*/ 
                        ];
                    case 4:
                        return [
                            2 /*return*/ 
                        ];
                }
            });
        });
    };
    return function(predicate, timeout) {
        return $403fbbc0a1d8902a$var$catchRejection(take(predicate, timeout));
    };
};
var $403fbbc0a1d8902a$var$getListenerEntryPropsFrom = function(options) {
    var type = options.type, actionCreator = options.actionCreator, matcher = options.matcher, predicate = options.predicate, effect = options.effect;
    if (type) predicate = $403fbbc0a1d8902a$export$309c7a02b0b0bc62(type).match;
    else if (actionCreator) {
        type = actionCreator.type;
        predicate = actionCreator.match;
    } else if (matcher) predicate = matcher;
    else if (predicate) ;
    else throw new Error("Creating or removing a listener requires one of the known fields for matching an action");
    $403fbbc0a1d8902a$var$assertFunction(effect, "options.listener");
    return {
        predicate: predicate,
        type: type,
        effect: effect
    };
};
var $403fbbc0a1d8902a$var$createListenerEntry = function(options) {
    var _c = $403fbbc0a1d8902a$var$getListenerEntryPropsFrom(options), type = _c.type, predicate = _c.predicate, effect = _c.effect;
    var id = $403fbbc0a1d8902a$export$ac4959f4f1338dfc();
    var entry = {
        id: id,
        effect: effect,
        type: type,
        predicate: predicate,
        pending: new Set(),
        unsubscribe: function() {
            throw new Error("Unsubscribe not initialized");
        }
    };
    return entry;
};
var $403fbbc0a1d8902a$var$cancelActiveListeners = function(entry) {
    entry.pending.forEach(function(controller) {
        $403fbbc0a1d8902a$var$abortControllerWithReason(controller, $403fbbc0a1d8902a$var$listenerCancelled);
    });
};
var $403fbbc0a1d8902a$var$createClearListenerMiddleware = function(listenerMap) {
    return function() {
        listenerMap.forEach($403fbbc0a1d8902a$var$cancelActiveListeners);
        listenerMap.clear();
    };
};
var $403fbbc0a1d8902a$var$safelyNotifyError = function(errorHandler, errorToNotify, errorInfo) {
    try {
        errorHandler(errorToNotify, errorInfo);
    } catch (errorHandlerError) {
        setTimeout(function() {
            throw errorHandlerError;
        }, 0);
    }
};
var $403fbbc0a1d8902a$export$f03a6b845d3fb58b = $403fbbc0a1d8902a$export$309c7a02b0b0bc62($403fbbc0a1d8902a$var$alm + "/add");
var $403fbbc0a1d8902a$export$b1b8022855fb2b71 = $403fbbc0a1d8902a$export$309c7a02b0b0bc62($403fbbc0a1d8902a$var$alm + "/removeAll");
var $403fbbc0a1d8902a$export$b03e9483f936dccb = $403fbbc0a1d8902a$export$309c7a02b0b0bc62($403fbbc0a1d8902a$var$alm + "/remove");
var $403fbbc0a1d8902a$var$defaultErrorHandler = function() {
    var args = [];
    for(var _i = 0; _i < arguments.length; _i++)args[_i] = arguments[_i];
    console.error.apply(console, $403fbbc0a1d8902a$var$__spreadArray([
        $403fbbc0a1d8902a$var$alm + "/error"
    ], args));
};
function $403fbbc0a1d8902a$export$1228acebbbcb485b(middlewareOptions) {
    var _this = this;
    if (middlewareOptions === void 0) middlewareOptions = {};
    var listenerMap = new Map();
    var extra = middlewareOptions.extra, _c = middlewareOptions.onError, onError = _c === void 0 ? $403fbbc0a1d8902a$var$defaultErrorHandler : _c;
    $403fbbc0a1d8902a$var$assertFunction(onError, "onError");
    var insertEntry = function(entry) {
        entry.unsubscribe = function() {
            return listenerMap.delete(entry.id);
        };
        listenerMap.set(entry.id, entry);
        return function(cancelOptions) {
            entry.unsubscribe();
            if (cancelOptions == null ? void 0 : cancelOptions.cancelActive) $403fbbc0a1d8902a$var$cancelActiveListeners(entry);
        };
    };
    var findListenerEntry = function(comparator) {
        for(var _i = 0, _c = Array.from(listenerMap.values()); _i < _c.length; _i++){
            var entry = _c[_i];
            if (comparator(entry)) return entry;
        }
        return void 0;
    };
    var startListening = function(options) {
        var entry = findListenerEntry(function(existingEntry) {
            return existingEntry.effect === options.effect;
        });
        if (!entry) entry = $403fbbc0a1d8902a$var$createListenerEntry(options);
        return insertEntry(entry);
    };
    var stopListening = function(options) {
        var _c = $403fbbc0a1d8902a$var$getListenerEntryPropsFrom(options), type = _c.type, effect = _c.effect, predicate = _c.predicate;
        var entry = findListenerEntry(function(entry2) {
            var matchPredicateOrType = typeof type === "string" ? entry2.type === type : entry2.predicate === predicate;
            return matchPredicateOrType && entry2.effect === effect;
        });
        if (entry) {
            entry.unsubscribe();
            if (options.cancelActive) $403fbbc0a1d8902a$var$cancelActiveListeners(entry);
        }
        return !!entry;
    };
    var notifyListener = function(entry, action, api, getOriginalState) {
        return $403fbbc0a1d8902a$var$__async(_this, null, function() {
            var internalTaskController, take, listenerError_1;
            return $403fbbc0a1d8902a$var$__generator(this, function(_c) {
                switch(_c.label){
                    case 0:
                        internalTaskController = new AbortController();
                        take = $403fbbc0a1d8902a$var$createTakePattern(startListening, internalTaskController.signal);
                        _c.label = 1;
                    case 1:
                        _c.trys.push([
                            1,
                            3,
                            4,
                            5
                        ]);
                        entry.pending.add(internalTaskController);
                        return [
                            4 /*yield*/ ,
                            Promise.resolve(entry.effect(action, $403fbbc0a1d8902a$var$assign({}, api, {
                                getOriginalState: getOriginalState,
                                condition: function(predicate, timeout) {
                                    return take(predicate, timeout).then(Boolean);
                                },
                                take: take,
                                delay: $403fbbc0a1d8902a$var$createDelay(internalTaskController.signal),
                                pause: $403fbbc0a1d8902a$var$createPause(internalTaskController.signal),
                                extra: extra,
                                signal: internalTaskController.signal,
                                fork: $403fbbc0a1d8902a$var$createFork(internalTaskController.signal),
                                unsubscribe: entry.unsubscribe,
                                subscribe: function() {
                                    listenerMap.set(entry.id, entry);
                                },
                                cancelActiveListeners: function() {
                                    entry.pending.forEach(function(controller, _, set) {
                                        if (controller !== internalTaskController) {
                                            $403fbbc0a1d8902a$var$abortControllerWithReason(controller, $403fbbc0a1d8902a$var$listenerCancelled);
                                            set.delete(controller);
                                        }
                                    });
                                }
                            })))
                        ];
                    case 2:
                        _c.sent();
                        return [
                            3 /*break*/ ,
                            5
                        ];
                    case 3:
                        listenerError_1 = _c.sent();
                        if (!(listenerError_1 instanceof $403fbbc0a1d8902a$export$cb1bdac908fed7f)) $403fbbc0a1d8902a$var$safelyNotifyError(onError, listenerError_1, {
                            raisedBy: "effect"
                        });
                        return [
                            3 /*break*/ ,
                            5
                        ];
                    case 4:
                        $403fbbc0a1d8902a$var$abortControllerWithReason(internalTaskController, $403fbbc0a1d8902a$var$listenerCompleted);
                        entry.pending.delete(internalTaskController);
                        return [
                            7 /*endfinally*/ 
                        ];
                    case 5:
                        return [
                            2 /*return*/ 
                        ];
                }
            });
        });
    };
    var clearListenerMiddleware = $403fbbc0a1d8902a$var$createClearListenerMiddleware(listenerMap);
    var middleware = function(api) {
        return function(next) {
            return function(action) {
                if (!$403fbbc0a1d8902a$export$b956e38827fca970(action)) return next(action);
                if ($403fbbc0a1d8902a$export$f03a6b845d3fb58b.match(action)) return startListening(action.payload);
                if ($403fbbc0a1d8902a$export$b1b8022855fb2b71.match(action)) {
                    clearListenerMiddleware();
                    return;
                }
                if ($403fbbc0a1d8902a$export$b03e9483f936dccb.match(action)) return stopListening(action.payload);
                var originalState = api.getState();
                var getOriginalState = function() {
                    if (originalState === $403fbbc0a1d8902a$var$INTERNAL_NIL_TOKEN) throw new Error($403fbbc0a1d8902a$var$alm + ": getOriginalState can only be called synchronously");
                    return originalState;
                };
                var result;
                try {
                    result = next(action);
                    if (listenerMap.size > 0) {
                        var currentState = api.getState();
                        var listenerEntries = Array.from(listenerMap.values());
                        for(var _i = 0, listenerEntries_1 = listenerEntries; _i < listenerEntries_1.length; _i++){
                            var entry = listenerEntries_1[_i];
                            var runListener = false;
                            try {
                                runListener = entry.predicate(action, currentState, originalState);
                            } catch (predicateError) {
                                runListener = false;
                                $403fbbc0a1d8902a$var$safelyNotifyError(onError, predicateError, {
                                    raisedBy: "predicate"
                                });
                            }
                            if (!runListener) continue;
                            notifyListener(entry, action, api, getOriginalState);
                        }
                    }
                } finally{
                    originalState = $403fbbc0a1d8902a$var$INTERNAL_NIL_TOKEN;
                }
                return result;
            };
        };
    };
    return {
        middleware: middleware,
        startListening: startListening,
        stopListening: stopListening,
        clearListeners: clearListenerMiddleware
    };
}
// src/autoBatchEnhancer.ts
var $403fbbc0a1d8902a$export$8fb31c0f05df007b = "RTK_autoBatch";
var $403fbbc0a1d8902a$export$39fcd5145ec5e4e2 = function() {
    return function(payload) {
        var _c;
        return {
            payload: payload,
            meta: (_c = {}, _c[$403fbbc0a1d8902a$export$8fb31c0f05df007b] = true, _c)
        };
    };
};
var $403fbbc0a1d8902a$var$promise;
var $403fbbc0a1d8902a$var$queueMicrotaskShim = typeof queueMicrotask === "function" ? queueMicrotask.bind(typeof window !== "undefined" ? window : typeof $parcel$global !== "undefined" ? $parcel$global : globalThis) : function(cb) {
    return ($403fbbc0a1d8902a$var$promise || ($403fbbc0a1d8902a$var$promise = Promise.resolve())).then(cb).catch(function(err) {
        return setTimeout(function() {
            throw err;
        }, 0);
    });
};
var $403fbbc0a1d8902a$var$createQueueWithTimer = function(timeout) {
    return function(notify) {
        setTimeout(notify, timeout);
    };
};
var $403fbbc0a1d8902a$var$rAF = typeof window !== "undefined" && window.requestAnimationFrame ? window.requestAnimationFrame : $403fbbc0a1d8902a$var$createQueueWithTimer(10);
var $403fbbc0a1d8902a$export$676277d7dca0f396 = function(options) {
    if (options === void 0) options = {
        type: "raf"
    };
    return function(next) {
        return function() {
            var args = [];
            for(var _i = 0; _i < arguments.length; _i++)args[_i] = arguments[_i];
            var store = next.apply(void 0, args);
            var notifying = true;
            var shouldNotifyAtEndOfTick = false;
            var notificationQueued = false;
            var listeners = new Set();
            var queueCallback = options.type === "tick" ? $403fbbc0a1d8902a$var$queueMicrotaskShim : options.type === "raf" ? $403fbbc0a1d8902a$var$rAF : options.type === "callback" ? options.queueNotification : $403fbbc0a1d8902a$var$createQueueWithTimer(options.timeout);
            var notifyListeners = function() {
                notificationQueued = false;
                if (shouldNotifyAtEndOfTick) {
                    shouldNotifyAtEndOfTick = false;
                    listeners.forEach(function(l) {
                        return l();
                    });
                }
            };
            return Object.assign({}, store, {
                subscribe: function(listener2) {
                    var wrappedListener = function() {
                        return notifying && listener2();
                    };
                    var unsubscribe = store.subscribe(wrappedListener);
                    listeners.add(listener2);
                    return function() {
                        unsubscribe();
                        listeners.delete(listener2);
                    };
                },
                dispatch: function(action) {
                    var _a;
                    try {
                        notifying = !((_a = action == null ? void 0 : action.meta) == null ? void 0 : _a[$403fbbc0a1d8902a$export$8fb31c0f05df007b]);
                        shouldNotifyAtEndOfTick = !notifying;
                        if (shouldNotifyAtEndOfTick) {
                            if (!notificationQueued) {
                                notificationQueued = true;
                                queueCallback(notifyListeners);
                            }
                        }
                        return store.dispatch(action);
                    } finally{
                        notifying = true;
                    }
                }
            });
        };
    };
};
// src/index.ts
(0, $70d3c82dd65bc7da$export$56771cf63ee491f5)();



var $ichZR = parcelRequire("ichZR");


var $ichZR = parcelRequire("ichZR");
var $1ed3ac0edf889331$exports = {};

$1ed3ac0edf889331$exports = (parcelRequire("gFMb8"));


const $f5382661654fb2b2$var$instance = (0, (/*@__PURE__*/$parcel$interopDefault($1ed3ac0edf889331$exports))).create({
    baseURL: "https://us-central1-cookbook-beta-46bc5.cloudfunctions.net/api"
});
const $f5382661654fb2b2$var$getInstance = ()=>$f5382661654fb2b2$var$instance;
var $f5382661654fb2b2$export$2e2bcd8739ae039 = $f5382661654fb2b2$var$getInstance;
const $f5382661654fb2b2$export$57e714f81a2c3d86 = (token)=>{
    $f5382661654fb2b2$var$instance.defaults.headers.common["Authorization"] = `Bearer ${token}`;
};


const $19157024659dc6a0$var$baseURL = "/recipes";
const $19157024659dc6a0$var$convertFromHttp = (httpRecipe)=>({
        keywords: [],
        stats: {},
        ingredients: "",
        steps: "",
        ...httpRecipe
    });
const $19157024659dc6a0$export$703df97410785df3 = async ()=>{
    const response = await (0, $f5382661654fb2b2$export$2e2bcd8739ae039)().get($19157024659dc6a0$var$baseURL);
    return response.data?.recipes.map($19157024659dc6a0$var$convertFromHttp);
};
const $19157024659dc6a0$export$2d5f223c4223f53c = async (link)=>{
    const response = await (0, $f5382661654fb2b2$export$2e2bcd8739ae039)().get(`${$19157024659dc6a0$var$baseURL}/${link}`);
    return $19157024659dc6a0$var$convertFromHttp(response.data?.recipe);
};
const $19157024659dc6a0$export$99b76c3aa68bee67 = async (url)=>{
    const response = await (0, $f5382661654fb2b2$export$2e2bcd8739ae039)().post(`${$19157024659dc6a0$var$baseURL}/import`, {
        url: url
    });
    return $19157024659dc6a0$var$convertFromHttp(response?.data?.recipe);
};
const $19157024659dc6a0$export$5d49599920443c31 = async (recipe)=>{
    const response = await (0, $f5382661654fb2b2$export$2e2bcd8739ae039)().post($19157024659dc6a0$var$baseURL, recipe);
    return $19157024659dc6a0$var$convertFromHttp(response?.data?.recipe);
};
const $19157024659dc6a0$export$ff7478e674f87216 = async (recipe)=>(0, $f5382661654fb2b2$export$2e2bcd8739ae039)().delete(`${$19157024659dc6a0$var$baseURL}/${recipe.id}`);
const $19157024659dc6a0$export$1cfc7aad5cb1833b = async ()=>(0, $f5382661654fb2b2$export$2e2bcd8739ae039)().delete(`${$19157024659dc6a0$var$baseURL}/all`);
const $19157024659dc6a0$export$3220ead45e537228 = async (recipe)=>{
    const response = await (0, $f5382661654fb2b2$export$2e2bcd8739ae039)().patch(`${$19157024659dc6a0$var$baseURL}/${recipe.id}`, recipe);
    return $19157024659dc6a0$var$convertFromHttp(response?.data?.recipe);
};


const $57d1b30b79e337f2$export$ab19942a146d5d27 = {
    byId: {},
    areFetched: false,
    areFetching: false,
    metadataById: {},
    trashQueue: [],
    recentSearches: []
};
const $57d1b30b79e337f2$export$984e0109ba03b979 = (0, $403fbbc0a1d8902a$exports.createAsyncThunk)("recipes/fetch", async ()=>$19157024659dc6a0$export$703df97410785df3());
const $57d1b30b79e337f2$export$ca4ce413890bfca6 = (0, $403fbbc0a1d8902a$exports.createAsyncThunk)("recipes/fetchByLink", async (link)=>$19157024659dc6a0$export$2d5f223c4223f53c(link));
const $57d1b30b79e337f2$export$ce41afa5774ede8f = (0, $403fbbc0a1d8902a$exports.createAsyncThunk)("recipes/update", async (recipe)=>$19157024659dc6a0$export$3220ead45e537228(recipe));
const $57d1b30b79e337f2$export$1f4a3fe10896614d = (0, $403fbbc0a1d8902a$exports.createAsyncThunk)("recipes/import", async (url)=>$19157024659dc6a0$export$99b76c3aa68bee67(url));
const $57d1b30b79e337f2$export$b49cb8e3052514a2 = (0, $403fbbc0a1d8902a$exports.createAsyncThunk)("recipes/add", async (recipe)=>$19157024659dc6a0$export$5d49599920443c31(recipe));
const $57d1b30b79e337f2$export$3bff20c7462e0e4a = (0, $403fbbc0a1d8902a$exports.createAsyncThunk)("recipes/delete", async (recipe)=>{
    $19157024659dc6a0$export$ff7478e674f87216(recipe);
});
const $57d1b30b79e337f2$export$9d5822594f0e234 = (0, $403fbbc0a1d8902a$exports.createAsyncThunk)("recipes/deleteAll", async ()=>{
    $19157024659dc6a0$export$1cfc7aad5cb1833b();
});
const $57d1b30b79e337f2$var$timeouts = {};
const $57d1b30b79e337f2$export$a4f60186122287ba = (0, $403fbbc0a1d8902a$exports.createAsyncThunk)("recipes/addToDeleteQueue", async (recipe, thunkApi)=>{
    $57d1b30b79e337f2$var$timeouts[recipe.id] = setTimeout(()=>{
        thunkApi.dispatch($57d1b30b79e337f2$export$3bff20c7462e0e4a(recipe));
    }, 10000);
});
const $57d1b30b79e337f2$export$35820ded2652368d = (0, $403fbbc0a1d8902a$exports.createAsyncThunk)("recipes/cancelDelete", async (recipe)=>{
    clearTimeout($57d1b30b79e337f2$var$timeouts[recipe.id]);
});
const $57d1b30b79e337f2$export$4579f09ab2381822 = (0, $403fbbc0a1d8902a$exports.createAsyncThunk)("recipes/confirmDelete", async (recipe, thunkApi)=>{
    clearTimeout($57d1b30b79e337f2$var$timeouts[recipe.id]);
    await thunkApi.dispatch($57d1b30b79e337f2$export$3bff20c7462e0e4a(recipe));
});
const $57d1b30b79e337f2$var$initializeMetadata = (state, recipeId)=>{
    if (!state.metadataById[recipeId]) state.metadataById[recipeId] = {
        recipeId: recipeId,
        currentStepIndex: 0,
        servingCount: 42
    };
};
const $57d1b30b79e337f2$export$253720aa2de444d8 = (0, $403fbbc0a1d8902a$exports.createSlice)({
    name: "recipes",
    initialState: $57d1b30b79e337f2$export$ab19942a146d5d27,
    reducers: {
        setRecipeProgress: (state, action)=>{
            const { recipeId: recipeId , index: index  } = action.payload;
            $57d1b30b79e337f2$var$initializeMetadata(state, recipeId);
            state.metadataById[recipeId].currentStepIndex = index;
        },
        incrementServingCount: (state, action)=>{
            const recipeId = action.payload;
            $57d1b30b79e337f2$var$initializeMetadata(state, recipeId);
            state.metadataById[recipeId].servingCount += 1;
        },
        decrementServingCount: (state, action)=>{
            const recipeId = action.payload;
            $57d1b30b79e337f2$var$initializeMetadata(state, recipeId);
            if (state.metadataById[recipeId].servingCount > 1) state.metadataById[recipeId].servingCount -= 1;
        },
        addRecentSearch: (state, action)=>{
            const MAX_RECENT_SEARCHES = 10;
            state.recentSearches = (0, $ichZR.uniq)([
                action.payload.id,
                ...state.recentSearches || []
            ]).slice(0, MAX_RECENT_SEARCHES);
        }
    },
    extraReducers: (builder)=>{
        builder.addCase($57d1b30b79e337f2$export$984e0109ba03b979.fulfilled, (state, action)=>{
            const recipes = action.payload;
            state.byId = recipes.reduce((acc, recipe)=>({
                    ...acc,
                    [recipe.id]: recipe
                }), {});
            state.areFetched = true;
            state.areFetching = false;
        });
        builder.addCase($57d1b30b79e337f2$export$984e0109ba03b979.pending, (state, action)=>{
            state.areFetching = true;
        });
        builder.addCase($57d1b30b79e337f2$export$984e0109ba03b979.rejected, (state, action)=>{
            state.areFetching = false;
        });
        builder.addCase($57d1b30b79e337f2$export$ca4ce413890bfca6.fulfilled, (state, action)=>{
            const recipe = action.payload;
            state.byId[recipe.id] = recipe;
        });
        builder.addCase($57d1b30b79e337f2$export$ce41afa5774ede8f.fulfilled, (state, action)=>{
            const recipe = action.payload;
            state.byId[recipe.id] = recipe;
        });
        builder.addCase($57d1b30b79e337f2$export$b49cb8e3052514a2.fulfilled, (state, action)=>{
            const recipe = action.payload;
            state.byId[recipe.id] = recipe;
        });
        builder.addCase($57d1b30b79e337f2$export$1f4a3fe10896614d.fulfilled, (state, action)=>{
            const recipe = action.payload;
            state.byId[recipe.id] = recipe;
        });
        builder.addCase($57d1b30b79e337f2$export$3bff20c7462e0e4a.fulfilled, (state, action)=>{
            const recipe = action.meta.arg;
            delete state.byId[recipe.id];
            state.trashQueue = state.trashQueue.filter((id)=>id !== recipe.id);
        });
        builder.addCase($57d1b30b79e337f2$export$9d5822594f0e234.fulfilled, (state, action)=>{
            state.byId = {};
        });
        builder.addCase($57d1b30b79e337f2$export$a4f60186122287ba.fulfilled, (state, action)=>{
            const recipe = action.meta.arg;
            state.trashQueue = [
                ...state.trashQueue,
                recipe.id
            ];
        });
        builder.addCase($57d1b30b79e337f2$export$35820ded2652368d.fulfilled, (state, action)=>{
            const recipe = action.meta.arg;
            state.trashQueue = state.trashQueue.filter((id)=>id !== recipe.id);
        });
        builder.addCase($57d1b30b79e337f2$export$4579f09ab2381822.fulfilled, (state, action)=>{
            const recipe = action.meta.arg;
            state.trashQueue = state.trashQueue.filter((id)=>id !== recipe.id);
        });
    }
});
var $57d1b30b79e337f2$export$2e2bcd8739ae039 = $57d1b30b79e337f2$export$253720aa2de444d8.reducer;
const { setRecipeProgress: $57d1b30b79e337f2$export$f55860a67b188c55 , incrementServingCount: $57d1b30b79e337f2$export$986463213963f015 , decrementServingCount: $57d1b30b79e337f2$export$e4c50eae2a6dada8 , addRecentSearch: $57d1b30b79e337f2$export$74e99d9695eabee6  } = $57d1b30b79e337f2$export$253720aa2de444d8.actions;
const $57d1b30b79e337f2$export$c341f62fd7d1eec8 = (state)=>state.recipes.areFetched;
const $57d1b30b79e337f2$export$4cba3d1b5f69aff6 = (state)=>state.recipes.areFetching;
const $57d1b30b79e337f2$export$3b86e2cc0677644d = (0, $f2fa5315b747f183$export$595d22ed68ca2841)((state)=>state.recipes.byId, (state)=>state.recipes.trashQueue, (byId, trashQueue)=>Object.values(byId).filter((recipe)=>!trashQueue.includes(recipe.id)));
const $57d1b30b79e337f2$var$cleanId = (id)=>id === undefined ? "" : id;
const $57d1b30b79e337f2$export$d3bef8d36f4e0ca4 = (state, id)=>state.recipes.byId[$57d1b30b79e337f2$var$cleanId(id)];
const $57d1b30b79e337f2$export$98c5022c36dab2d1 = (state, id)=>state.recipes.metadataById[$57d1b30b79e337f2$var$cleanId(id)]?.currentStepIndex || 0;
const $57d1b30b79e337f2$export$7dc7c2b82377d302 = (0, $f2fa5315b747f183$export$595d22ed68ca2841)($57d1b30b79e337f2$export$d3bef8d36f4e0ca4, (state, id)=>state.recipes.metadataById[$57d1b30b79e337f2$var$cleanId(id)]?.servingCount, (recipe, servingCount)=>servingCount || recipe?.stats?.servings?.value || 0);
const $57d1b30b79e337f2$export$7de8bac5e848e0d5 = (0, $f2fa5315b747f183$export$595d22ed68ca2841)((state)=>state.recipes.byId, (state)=>state.recipes.trashQueue, (byId, trashQueue)=>trashQueue.map((id)=>byId[id]));
const $57d1b30b79e337f2$var$sortByCount = (a, b)=>b[1] - a[1];
const $57d1b30b79e337f2$export$f07ccb41aacbe85f = (0, $f2fa5315b747f183$export$595d22ed68ca2841)($57d1b30b79e337f2$export$3b86e2cc0677644d, (recipeList)=>{
    const keywords = Object.entries(recipeList.flatMap((r)=>r.keywords).reduce((acc, keyword)=>({
            ...acc,
            [keyword]: (acc[keyword] || 0) + 1
        }), {}));
    return keywords.filter((k)=>k[1] >= 1).sort($57d1b30b79e337f2$var$sortByCount).map((k)=>k[0]);
// .slice(0, 7)
});
const $57d1b30b79e337f2$var$EMPTY_STRING_ARRAY = [];
const $57d1b30b79e337f2$export$1216255791599668 = (0, $f2fa5315b747f183$export$595d22ed68ca2841)((state)=>state.recipes.byId, (state)=>state.recipes.recentSearches || $57d1b30b79e337f2$var$EMPTY_STRING_ARRAY, (byId, recentSearches)=>recentSearches.map((id)=>byId[id])) // export const getIngredientList = createSelector(
 //   getRecipe,
 //   (state: RootState, id: string | undefined) =>
 //     state.recipes.metadataById[cleanId(id)]?.servingCount,
 //   (recipe, servingCount): Ingredient[] => {
 //     if (!recipe) {
 //       return []
 //     }
 //     if (!servingCount) {
 //       return recipe.ingredients
 //     }
 //     const ratio = servingCount / recipe.stats.servings.value
 //     return recipe.ingredients.map(ingredient => ({
 //       name: ingredient.name,
 //       measure: {
 //         ...ingredient.measure,
 //         value: ingredient.measure.value * ratio,
 //       },
 //     }))
 //   }
 // )
;



const $81a9d7f244750252$export$83a0dadfe20b1e39 = {
    error: null,
    user: null,
    loading: true
};
const $81a9d7f244750252$export$a4617a4027bb509b = (0, $403fbbc0a1d8902a$exports.createSlice)({
    name: "auth",
    initialState: $81a9d7f244750252$export$83a0dadfe20b1e39,
    reducers: {
        login: (state, action)=>{
            state.user = action.payload;
            state.loading = false;
        },
        logout: (state)=>{
            state.user = null;
            state.loading = false;
        }
    }
});
const { login: $81a9d7f244750252$export$596d806903d1f59e , logout: $81a9d7f244750252$export$a0973bcfe11b05c9  } = $81a9d7f244750252$export$a4617a4027bb509b.actions;
var $81a9d7f244750252$export$2e2bcd8739ae039 = $81a9d7f244750252$export$a4617a4027bb509b.reducer;
const $81a9d7f244750252$var$getAuthState = (state)=>state.auth;
const $81a9d7f244750252$export$e5432d4c8eb97ea7 = (state)=>$81a9d7f244750252$var$getAuthState(state).user;
const $81a9d7f244750252$export$c7606e33e48d5b45 = (state)=>Boolean(!$81a9d7f244750252$var$getAuthState(state).loading && $81a9d7f244750252$export$e5432d4c8eb97ea7(state));
const $81a9d7f244750252$export$1ee9436926beb645 = (state)=>Boolean(!$81a9d7f244750252$var$getAuthState(state).loading && !$81a9d7f244750252$export$e5432d4c8eb97ea7(state));



let $c68a09f1152e9f7b$var$Temperature;
(function(Temperature) {
    Temperature["Farenheit"] = "Farenheit";
    Temperature["Celsius"] = "Celsius";
    Temperature["Unknown"] = "Unknown";
})($c68a09f1152e9f7b$var$Temperature || ($c68a09f1152e9f7b$var$Temperature = {}));
var $c68a09f1152e9f7b$export$2e2bcd8739ae039 = $c68a09f1152e9f7b$var$Temperature;
const $c68a09f1152e9f7b$export$60ed5db8e67798cf = (s)=>{
    const temperature = Object.values($c68a09f1152e9f7b$var$Temperature).find((t)=>t === s);
    return temperature ? $c68a09f1152e9f7b$var$Temperature[temperature] : $c68a09f1152e9f7b$var$Temperature.Unknown;
};


const $95c046844269a9cf$export$5ce2a8747fe25672 = {
    temperature: (0, $c68a09f1152e9f7b$export$2e2bcd8739ae039).Unknown,
    ingredientTemplate: "",
    automaticImport: false,
    isVoiceControlEnabled: true,
    isGestureControlEnabled: true,
    cookingModeActivatedOnce: false
};
const $95c046844269a9cf$export$c46a7c20cb562183 = (0, $403fbbc0a1d8902a$exports.createSlice)({
    name: "settings",
    initialState: $95c046844269a9cf$export$5ce2a8747fe25672,
    reducers: {
        setTemperature: (state, action)=>{
            state.temperature = action.payload;
        },
        setIngredientTemplate: (state, action)=>{
            state.ingredientTemplate = action.payload;
        },
        setAutomaticimport: (state, action)=>{
            state.automaticImport = action.payload;
        },
        enableVoiceControl: (state, action)=>{
            state.isVoiceControlEnabled = action.payload;
        },
        enableGestureControl: (state, action)=>{
            state.isGestureControlEnabled = action.payload;
        },
        cookingModeActivated: (state)=>{
            state.cookingModeActivatedOnce = true;
        }
    }
});
var $95c046844269a9cf$export$2e2bcd8739ae039 = $95c046844269a9cf$export$c46a7c20cb562183.reducer;
const { setTemperature: $95c046844269a9cf$export$1ee9c5b316663b8d , setIngredientTemplate: $95c046844269a9cf$export$8c38d409f26db51 , setAutomaticimport: $95c046844269a9cf$export$65467453d81927f1 , enableVoiceControl: $95c046844269a9cf$export$8659b451a486d08e , enableGestureControl: $95c046844269a9cf$export$b4f70692e17432c4 , cookingModeActivated: $95c046844269a9cf$export$d435de81108eeb49  } = $95c046844269a9cf$export$c46a7c20cb562183.actions;
const $95c046844269a9cf$export$c477e9ee4c36462f = (state)=>state.settings.temperature;
const $95c046844269a9cf$export$95e92655b1210e4b = (state)=>state.settings.ingredientTemplate;
const $95c046844269a9cf$export$6a52d4affff68ee8 = (state)=>state.settings.automaticImport;
const $95c046844269a9cf$export$5991c89680fe146f = (state)=>state.settings.isVoiceControlEnabled;
const $95c046844269a9cf$export$5df00f26df02d21b = (state)=>state.settings.isGestureControlEnabled;
const $95c046844269a9cf$export$e6d9f46a816dd14 = (state)=>state.settings.cookingModeActivatedOnce;




const $848c79cf3a5572f8$var$baseURL = "/officialWebsites";
const $848c79cf3a5572f8$export$703df97410785df3 = async ()=>{
    const response = await (0, $f5382661654fb2b2$export$2e2bcd8739ae039)().get($848c79cf3a5572f8$var$baseURL);
    return response.data?.officialWebsites;
};


const $9efd4e08e022ca98$export$6095d8949efe025 = {
    list: []
};
const $9efd4e08e022ca98$export$19857d102f0f8f66 = (0, $403fbbc0a1d8902a$exports.createAsyncThunk)("officialWebsites/fetch", async ()=>$848c79cf3a5572f8$export$703df97410785df3());
const $9efd4e08e022ca98$export$61c0b77a4fe18f8 = (0, $403fbbc0a1d8902a$exports.createSlice)({
    name: "officialWebsites",
    initialState: $9efd4e08e022ca98$export$6095d8949efe025,
    reducers: {},
    extraReducers: (builder)=>{
        builder.addCase($9efd4e08e022ca98$export$19857d102f0f8f66.fulfilled, (state, action)=>{
            state.list = action.payload.sort((a, b)=>a.localeCompare(b));
        });
    }
});
var $9efd4e08e022ca98$export$2e2bcd8739ae039 = $9efd4e08e022ca98$export$61c0b77a4fe18f8.reducer;
const $9efd4e08e022ca98$export$e141af6c897b69ed = (state)=>state.officialWebsites.list;



// Unique ID creation requires a high quality random # generator. In the browser we therefore
// require the crypto API and do not support built-in fallback to lower quality random number
// generators (like Math.random()).
var $98f77d40e2f224ea$var$getRandomValues;
var $98f77d40e2f224ea$var$rnds8 = new Uint8Array(16);
function $98f77d40e2f224ea$export$2e2bcd8739ae039() {
    // lazy load so that environments that need to polyfill have a chance to do so
    if (!$98f77d40e2f224ea$var$getRandomValues) {
        // getRandomValues needs to be invoked in a context where "this" is a Crypto implementation. Also,
        // find the complete implementation of crypto (msCrypto) on IE11.
        $98f77d40e2f224ea$var$getRandomValues = typeof crypto !== "undefined" && crypto.getRandomValues && crypto.getRandomValues.bind(crypto) || typeof msCrypto !== "undefined" && typeof msCrypto.getRandomValues === "function" && msCrypto.getRandomValues.bind(msCrypto);
        if (!$98f77d40e2f224ea$var$getRandomValues) throw new Error("crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported");
    }
    return $98f77d40e2f224ea$var$getRandomValues($98f77d40e2f224ea$var$rnds8);
}


var $64d3ef3d54b41dc1$export$2e2bcd8739ae039 = /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;


function $81da3db8f84f3460$var$validate(uuid) {
    return typeof uuid === "string" && (0, $64d3ef3d54b41dc1$export$2e2bcd8739ae039).test(uuid);
}
var $81da3db8f84f3460$export$2e2bcd8739ae039 = $81da3db8f84f3460$var$validate;


/**
 * Convert array of 16 byte values to UUID string format of the form:
 * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX
 */ var $6cc7cf31593ac306$var$byteToHex = [];
for(var $6cc7cf31593ac306$var$i = 0; $6cc7cf31593ac306$var$i < 256; ++$6cc7cf31593ac306$var$i)$6cc7cf31593ac306$var$byteToHex.push(($6cc7cf31593ac306$var$i + 0x100).toString(16).substr(1));
function $6cc7cf31593ac306$var$stringify(arr) {
    var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;
    // Note: Be careful editing this code!  It's been tuned for performance
    // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434
    var uuid = ($6cc7cf31593ac306$var$byteToHex[arr[offset + 0]] + $6cc7cf31593ac306$var$byteToHex[arr[offset + 1]] + $6cc7cf31593ac306$var$byteToHex[arr[offset + 2]] + $6cc7cf31593ac306$var$byteToHex[arr[offset + 3]] + "-" + $6cc7cf31593ac306$var$byteToHex[arr[offset + 4]] + $6cc7cf31593ac306$var$byteToHex[arr[offset + 5]] + "-" + $6cc7cf31593ac306$var$byteToHex[arr[offset + 6]] + $6cc7cf31593ac306$var$byteToHex[arr[offset + 7]] + "-" + $6cc7cf31593ac306$var$byteToHex[arr[offset + 8]] + $6cc7cf31593ac306$var$byteToHex[arr[offset + 9]] + "-" + $6cc7cf31593ac306$var$byteToHex[arr[offset + 10]] + $6cc7cf31593ac306$var$byteToHex[arr[offset + 11]] + $6cc7cf31593ac306$var$byteToHex[arr[offset + 12]] + $6cc7cf31593ac306$var$byteToHex[arr[offset + 13]] + $6cc7cf31593ac306$var$byteToHex[arr[offset + 14]] + $6cc7cf31593ac306$var$byteToHex[arr[offset + 15]]).toLowerCase(); // Consistency check for valid UUID.  If this throws, it's likely due to one
    // of the following:
    // - One or more input array values don't map to a hex octet (leading to
    // "undefined" in the uuid)
    // - Invalid input values for the RFC `version` or `variant` fields
    if (!(0, $81da3db8f84f3460$export$2e2bcd8739ae039)(uuid)) throw TypeError("Stringified UUID is invalid");
    return uuid;
}
var $6cc7cf31593ac306$export$2e2bcd8739ae039 = $6cc7cf31593ac306$var$stringify;


function $664a626aea95e31f$var$v4(options, buf, offset) {
    options = options || {};
    var rnds = options.random || (options.rng || (0, $98f77d40e2f224ea$export$2e2bcd8739ae039))(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`
    rnds[6] = rnds[6] & 0x0f | 0x40;
    rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided
    if (buf) {
        offset = offset || 0;
        for(var i = 0; i < 16; ++i)buf[offset + i] = rnds[i];
        return buf;
    }
    return (0, $6cc7cf31593ac306$export$2e2bcd8739ae039)(rnds);
}
var $664a626aea95e31f$export$2e2bcd8739ae039 = $664a626aea95e31f$var$v4;


const $6ac6dd6aa51ce13a$export$1420237972dd3493 = (timer)=>new Date(timer.endAt).getTime();
const $6ac6dd6aa51ce13a$export$a4665e647d64ae09 = (timer)=>$6ac6dd6aa51ce13a$export$1420237972dd3493(timer) - new Date().getTime();


const $3b6a9c766566ab66$export$fb26b2980ae1a225 = (seconds)=>seconds * 1000;
const $3b6a9c766566ab66$export$22ca6081c4f2dca9 = (minutes)=>$3b6a9c766566ab66$export$fb26b2980ae1a225(minutes * 60);
const $3b6a9c766566ab66$export$94476e93d16b1f00 = (hours)=>$3b6a9c766566ab66$export$22ca6081c4f2dca9(hours * 60);
const $3b6a9c766566ab66$export$a472b8b4d115b7a3 = (duration)=>duration / 1000;
const $3b6a9c766566ab66$export$7cda90e0c352f241 = (a, b)=>a - b;
const $3b6a9c766566ab66$export$bd4bc282a1a0d264 = (duration, milliseconds)=>duration < milliseconds;


const $da4b2d3120845922$export$8e086ae02cc9096d = {
    list: []
};
const $da4b2d3120845922$export$5985f5b4428bec55 = (0, $403fbbc0a1d8902a$exports.createAsyncThunk)("timers/start", async ({ recipeId: recipeId , duration: duration  })=>{
    const startedAt = new Date();
    return JSON.parse(JSON.stringify({
        recipeId: recipeId,
        id: (0, $664a626aea95e31f$export$2e2bcd8739ae039)(),
        startedAt: startedAt,
        duration: duration,
        endAt: new Date(startedAt.getTime() + duration)
    }));
});
const $da4b2d3120845922$export$4d41f7386211339a = (0, $403fbbc0a1d8902a$exports.createAsyncThunk)("timers/stop", async (timerId)=>{
    return null;
});
const $da4b2d3120845922$var$timersSlice = (0, $403fbbc0a1d8902a$exports.createSlice)({
    name: "timers",
    initialState: $da4b2d3120845922$export$8e086ae02cc9096d,
    reducers: {},
    extraReducers: (builder)=>{
        builder.addCase($da4b2d3120845922$export$5985f5b4428bec55.fulfilled, (state, action)=>{
            state.list = [
                ...state.list,
                action.payload
            ].sort((tA, tB)=>(0, $6ac6dd6aa51ce13a$export$1420237972dd3493)(tA) - (0, $6ac6dd6aa51ce13a$export$1420237972dd3493)(tB)).filter((t)=>!(0, $3b6a9c766566ab66$export$bd4bc282a1a0d264)((0, $6ac6dd6aa51ce13a$export$a4665e647d64ae09)(t), 0));
        });
        builder.addCase($da4b2d3120845922$export$4d41f7386211339a.fulfilled, (state, action)=>{
            state.list = state.list.filter((t)=>t.id !== action.meta.arg);
            return state;
        });
    }
});
var $da4b2d3120845922$export$2e2bcd8739ae039 = $da4b2d3120845922$var$timersSlice;
const $da4b2d3120845922$export$b46d238f7ff52d9f = (0, $f2fa5315b747f183$export$595d22ed68ca2841)((state)=>state.timers.list, (list)=>{
    const timer = list[0];
    if (list.length > 1) {
        if ((0, $3b6a9c766566ab66$export$bd4bc282a1a0d264)((0, $6ac6dd6aa51ce13a$export$a4665e647d64ae09)(timer), -1 * (0, $3b6a9c766566ab66$export$fb26b2980ae1a225)(10))) return timer;
        return list[1];
    }
    return list[0];
});
const $da4b2d3120845922$export$65e54288f66ca3eb = (0, $f2fa5315b747f183$export$595d22ed68ca2841)((state)=>state.timers.list, (list)=>list);


const $4fd7d0fb4b1b7b6c$export$ea32cbdd559da174 = ()=>{
    try {
        const serializedState = localStorage.getItem("state");
        if (serializedState === null) return undefined;
        return JSON.parse(serializedState);
    } catch (err) {
        return undefined;
    }
};
const $4fd7d0fb4b1b7b6c$export$9f127573fd964184 = (state)=>{
    try {
        const serializedState = JSON.stringify(state);
        localStorage.setItem("state", serializedState);
    } catch  {
    // ignore write errors
    }
};






const $217fdb9e67d743e2$export$1650419e431d3ba3 = {
    recipes: $57d1b30b79e337f2$export$2e2bcd8739ae039,
    auth: $81a9d7f244750252$export$2e2bcd8739ae039,
    settings: $95c046844269a9cf$export$2e2bcd8739ae039,
    officialWebsites: $9efd4e08e022ca98$export$2e2bcd8739ae039,
    timers: (0, $da4b2d3120845922$export$2e2bcd8739ae039).reducer
};
const $217fdb9e67d743e2$var$initialState = {
    recipes: (0, $57d1b30b79e337f2$export$ab19942a146d5d27),
    settings: (0, $95c046844269a9cf$export$5ce2a8747fe25672),
    officialWebsites: (0, $9efd4e08e022ca98$export$6095d8949efe025)
};
const $217fdb9e67d743e2$var$persistedState = (0, $4fd7d0fb4b1b7b6c$export$ea32cbdd559da174)();
const $217fdb9e67d743e2$var$preloadedState = $217fdb9e67d743e2$var$persistedState ? {
    ...$217fdb9e67d743e2$var$initialState,
    settings: $217fdb9e67d743e2$var$persistedState.settings,
    recipes: {
        ...$217fdb9e67d743e2$var$initialState.recipes,
        byId: $217fdb9e67d743e2$var$persistedState.recipes.byId,
        recentSearches: $217fdb9e67d743e2$var$persistedState.recipes.recentSearches
    }
} : $217fdb9e67d743e2$var$initialState;
const $217fdb9e67d743e2$var$store = (0, $403fbbc0a1d8902a$exports.configureStore)({
    reducer: $217fdb9e67d743e2$export$1650419e431d3ba3,
    preloadedState: $217fdb9e67d743e2$var$preloadedState
});
$217fdb9e67d743e2$var$store.subscribe((0, $ichZR.throttle)(()=>{
    (0, $4fd7d0fb4b1b7b6c$export$9f127573fd964184)({
        settings: $217fdb9e67d743e2$var$store.getState().settings,
        recipes: {
            byId: $217fdb9e67d743e2$var$store.getState().recipes.byId,
            recentSearches: $217fdb9e67d743e2$var$store.getState().recipes.recentSearches
        }
    });
}, 1000));
var $217fdb9e67d743e2$export$2e2bcd8739ae039 = $217fdb9e67d743e2$var$store;



const $c5d85cef66c9da9e$var$reportWebVitals = (onPerfEntry)=>{
    if (onPerfEntry && onPerfEntry instanceof Function) (parcelRequire("5vvYE")).then(({ getCLS: getCLS , getFID: getFID , getFCP: getFCP , getLCP: getLCP , getTTFB: getTTFB  })=>{
        getCLS(onPerfEntry);
        getFID(onPerfEntry);
        getFCP(onPerfEntry);
        getLCP(onPerfEntry);
        getTTFB(onPerfEntry);
    });
};
var $c5d85cef66c9da9e$export$2e2bcd8739ae039 = $c5d85cef66c9da9e$var$reportWebVitals;



function $b0d264660fcf3da0$export$2e2bcd8739ae039(instance, Constructor) {
    if (!(instance instanceof Constructor)) throw new TypeError("Cannot call a class as a function");
}



function $e1440005d306c330$var$_defineProperties(target, props) {
    for(var i = 0; i < props.length; i++){
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor) descriptor.writable = true;
        Object.defineProperty(target, (0, $41fab575a9d81c24$export$2e2bcd8739ae039)(descriptor.key), descriptor);
    }
}
function $e1440005d306c330$export$2e2bcd8739ae039(Constructor, protoProps, staticProps) {
    if (protoProps) $e1440005d306c330$var$_defineProperties(Constructor.prototype, protoProps);
    if (staticProps) $e1440005d306c330$var$_defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", {
        writable: false
    });
    return Constructor;
}


function $83c6059b9c1e5b12$export$2e2bcd8739ae039(self) {
    if (self === void 0) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
    return self;
}


function $1360f2911fbf5ea7$export$2e2bcd8739ae039(o, p) {
    $1360f2911fbf5ea7$export$2e2bcd8739ae039 = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) {
        o.__proto__ = p;
        return o;
    };
    return $1360f2911fbf5ea7$export$2e2bcd8739ae039(o, p);
}


function $ea512c1c85f799dc$export$2e2bcd8739ae039(subClass, superClass) {
    if (typeof superClass !== "function" && superClass !== null) throw new TypeError("Super expression must either be null or a function");
    subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
            value: subClass,
            writable: true,
            configurable: true
        }
    });
    Object.defineProperty(subClass, "prototype", {
        writable: false
    });
    if (superClass) (0, $1360f2911fbf5ea7$export$2e2bcd8739ae039)(subClass, superClass);
}




function $dd5a12836dec8168$export$2e2bcd8739ae039(self, call) {
    if (call && ((0, $e8f126e5d7889f85$export$2e2bcd8739ae039)(call) === "object" || typeof call === "function")) return call;
    else if (call !== void 0) throw new TypeError("Derived constructors may only return object or undefined");
    return (0, $83c6059b9c1e5b12$export$2e2bcd8739ae039)(self);
}


function $5b8ddfbec539d1fd$export$2e2bcd8739ae039(o) {
    $5b8ddfbec539d1fd$export$2e2bcd8739ae039 = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) {
        return o.__proto__ || Object.getPrototypeOf(o);
    };
    return $5b8ddfbec539d1fd$export$2e2bcd8739ae039(o);
}



function $f501e9dde6f5684b$export$2e2bcd8739ae039(arr) {
    if (Array.isArray(arr)) return arr;
}


function $a81d58046f93c623$export$2e2bcd8739ae039(iter) {
    if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter);
}


function $b48d45bbbf064d19$export$2e2bcd8739ae039(arr, len) {
    if (len == null || len > arr.length) len = arr.length;
    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];
    return arr2;
}


function $14db80b4f9abe2c2$export$2e2bcd8739ae039(o, minLen) {
    if (!o) return;
    if (typeof o === "string") return (0, $b48d45bbbf064d19$export$2e2bcd8739ae039)(o, minLen);
    var n = Object.prototype.toString.call(o).slice(8, -1);
    if (n === "Object" && o.constructor) n = o.constructor.name;
    if (n === "Map" || n === "Set") return Array.from(o);
    if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return (0, $b48d45bbbf064d19$export$2e2bcd8739ae039)(o, minLen);
}


function $4c88e4745c13b5c5$export$2e2bcd8739ae039() {
    throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}


function $8a056ea44d94c5bf$export$2e2bcd8739ae039(arr) {
    return (0, $f501e9dde6f5684b$export$2e2bcd8739ae039)(arr) || (0, $a81d58046f93c623$export$2e2bcd8739ae039)(arr) || (0, $14db80b4f9abe2c2$export$2e2bcd8739ae039)(arr) || (0, $4c88e4745c13b5c5$export$2e2bcd8739ae039)();
}


function $b84a17fdd097c4a1$var$ownKeys(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) symbols = symbols.filter(function(sym) {
            return Object.getOwnPropertyDescriptor(object, sym).enumerable;
        });
        keys.push.apply(keys, symbols);
    }
    return keys;
}
function $b84a17fdd097c4a1$var$_objectSpread(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        if (i % 2) $b84a17fdd097c4a1$var$ownKeys(Object(source), true).forEach(function(key) {
            (0, $8d002fd2b9a1c331$export$2e2bcd8739ae039)(target, key, source[key]);
        });
        else if (Object.getOwnPropertyDescriptors) Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
        else $b84a17fdd097c4a1$var$ownKeys(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
    }
    return target;
}
var $b84a17fdd097c4a1$var$consoleLogger = {
    type: "logger",
    log: function log(args) {
        this.output("log", args);
    },
    warn: function warn(args) {
        this.output("warn", args);
    },
    error: function error(args) {
        this.output("error", args);
    },
    output: function output(type, args) {
        if (console && console[type]) console[type].apply(console, args);
    }
};
var $b84a17fdd097c4a1$var$Logger = function() {
    function Logger(concreteLogger) {
        var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
        (0, $b0d264660fcf3da0$export$2e2bcd8739ae039)(this, Logger);
        this.init(concreteLogger, options);
    }
    (0, $e1440005d306c330$export$2e2bcd8739ae039)(Logger, [
        {
            key: "init",
            value: function init(concreteLogger) {
                var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
                this.prefix = options.prefix || "i18next:";
                this.logger = concreteLogger || $b84a17fdd097c4a1$var$consoleLogger;
                this.options = options;
                this.debug = options.debug;
            }
        },
        {
            key: "setDebug",
            value: function setDebug(bool) {
                this.debug = bool;
            }
        },
        {
            key: "log",
            value: function log() {
                for(var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++)args[_key] = arguments[_key];
                return this.forward(args, "log", "", true);
            }
        },
        {
            key: "warn",
            value: function warn() {
                for(var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++)args[_key2] = arguments[_key2];
                return this.forward(args, "warn", "", true);
            }
        },
        {
            key: "error",
            value: function error() {
                for(var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++)args[_key3] = arguments[_key3];
                return this.forward(args, "error", "");
            }
        },
        {
            key: "deprecate",
            value: function deprecate() {
                for(var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++)args[_key4] = arguments[_key4];
                return this.forward(args, "warn", "WARNING DEPRECATED: ", true);
            }
        },
        {
            key: "forward",
            value: function forward(args, lvl, prefix, debugOnly) {
                if (debugOnly && !this.debug) return null;
                if (typeof args[0] === "string") args[0] = "".concat(prefix).concat(this.prefix, " ").concat(args[0]);
                return this.logger[lvl](args);
            }
        },
        {
            key: "create",
            value: function create(moduleName) {
                return new Logger(this.logger, $b84a17fdd097c4a1$var$_objectSpread($b84a17fdd097c4a1$var$_objectSpread({}, {
                    prefix: "".concat(this.prefix, ":").concat(moduleName, ":")
                }), this.options));
            }
        },
        {
            key: "clone",
            value: function clone(options) {
                options = options || this.options;
                options.prefix = options.prefix || this.prefix;
                return new Logger(this.logger, options);
            }
        }
    ]);
    return Logger;
}();
var $b84a17fdd097c4a1$var$baseLogger = new $b84a17fdd097c4a1$var$Logger();
var $b84a17fdd097c4a1$var$EventEmitter = function() {
    function EventEmitter() {
        (0, $b0d264660fcf3da0$export$2e2bcd8739ae039)(this, EventEmitter);
        this.observers = {};
    }
    (0, $e1440005d306c330$export$2e2bcd8739ae039)(EventEmitter, [
        {
            key: "on",
            value: function on(events, listener) {
                var _this = this;
                events.split(" ").forEach(function(event) {
                    _this.observers[event] = _this.observers[event] || [];
                    _this.observers[event].push(listener);
                });
                return this;
            }
        },
        {
            key: "off",
            value: function off(event, listener) {
                if (!this.observers[event]) return;
                if (!listener) {
                    delete this.observers[event];
                    return;
                }
                this.observers[event] = this.observers[event].filter(function(l) {
                    return l !== listener;
                });
            }
        },
        {
            key: "emit",
            value: function emit(event) {
                for(var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++)args[_key - 1] = arguments[_key];
                if (this.observers[event]) {
                    var cloned = [].concat(this.observers[event]);
                    cloned.forEach(function(observer) {
                        observer.apply(void 0, args);
                    });
                }
                if (this.observers["*"]) {
                    var _cloned = [].concat(this.observers["*"]);
                    _cloned.forEach(function(observer) {
                        observer.apply(observer, [
                            event
                        ].concat(args));
                    });
                }
            }
        }
    ]);
    return EventEmitter;
}();
function $b84a17fdd097c4a1$var$defer() {
    var res;
    var rej;
    var promise = new Promise(function(resolve, reject) {
        res = resolve;
        rej = reject;
    });
    promise.resolve = res;
    promise.reject = rej;
    return promise;
}
function $b84a17fdd097c4a1$var$makeString(object) {
    if (object == null) return "";
    return "" + object;
}
function $b84a17fdd097c4a1$var$copy(a, s, t) {
    a.forEach(function(m) {
        if (s[m]) t[m] = s[m];
    });
}
function $b84a17fdd097c4a1$var$getLastOfPath(object, path, Empty) {
    function cleanKey(key) {
        return key && key.indexOf("###") > -1 ? key.replace(/###/g, ".") : key;
    }
    function canNotTraverseDeeper() {
        return !object || typeof object === "string";
    }
    var stack = typeof path !== "string" ? [].concat(path) : path.split(".");
    while(stack.length > 1){
        if (canNotTraverseDeeper()) return {};
        var key = cleanKey(stack.shift());
        if (!object[key] && Empty) object[key] = new Empty();
        if (Object.prototype.hasOwnProperty.call(object, key)) object = object[key];
        else object = {};
    }
    if (canNotTraverseDeeper()) return {};
    return {
        obj: object,
        k: cleanKey(stack.shift())
    };
}
function $b84a17fdd097c4a1$var$setPath(object, path, newValue) {
    var _getLastOfPath = $b84a17fdd097c4a1$var$getLastOfPath(object, path, Object), obj = _getLastOfPath.obj, k = _getLastOfPath.k;
    obj[k] = newValue;
}
function $b84a17fdd097c4a1$var$pushPath(object, path, newValue, concat) {
    var _getLastOfPath2 = $b84a17fdd097c4a1$var$getLastOfPath(object, path, Object), obj = _getLastOfPath2.obj, k = _getLastOfPath2.k;
    obj[k] = obj[k] || [];
    if (concat) obj[k] = obj[k].concat(newValue);
    if (!concat) obj[k].push(newValue);
}
function $b84a17fdd097c4a1$var$getPath(object, path) {
    var _getLastOfPath3 = $b84a17fdd097c4a1$var$getLastOfPath(object, path), obj = _getLastOfPath3.obj, k = _getLastOfPath3.k;
    if (!obj) return undefined;
    return obj[k];
}
function $b84a17fdd097c4a1$var$getPathWithDefaults(data, defaultData, key) {
    var value = $b84a17fdd097c4a1$var$getPath(data, key);
    if (value !== undefined) return value;
    return $b84a17fdd097c4a1$var$getPath(defaultData, key);
}
function $b84a17fdd097c4a1$var$deepExtend(target, source, overwrite) {
    for(var prop in source)if (prop !== "__proto__" && prop !== "constructor") {
        if (prop in target) {
            if (typeof target[prop] === "string" || target[prop] instanceof String || typeof source[prop] === "string" || source[prop] instanceof String) {
                if (overwrite) target[prop] = source[prop];
            } else $b84a17fdd097c4a1$var$deepExtend(target[prop], source[prop], overwrite);
        } else target[prop] = source[prop];
    }
    return target;
}
function $b84a17fdd097c4a1$var$regexEscape(str) {
    return str.replace(/[\-\[\]\/\{\}\(\)\*\+\?\.\\\^\$\|]/g, "\\$&");
}
var $b84a17fdd097c4a1$var$_entityMap = {
    "&": "&amp;",
    "<": "&lt;",
    ">": "&gt;",
    '"': "&quot;",
    "'": "&#39;",
    "/": "&#x2F;"
};
function $b84a17fdd097c4a1$var$escape(data) {
    if (typeof data === "string") return data.replace(/[&<>"'\/]/g, function(s) {
        return $b84a17fdd097c4a1$var$_entityMap[s];
    });
    return data;
}
var $b84a17fdd097c4a1$var$isIE10 = typeof window !== "undefined" && window.navigator && typeof window.navigator.userAgentData === "undefined" && window.navigator.userAgent && window.navigator.userAgent.indexOf("MSIE") > -1;
var $b84a17fdd097c4a1$var$chars = [
    " ",
    ",",
    "?",
    "!",
    ";"
];
function $b84a17fdd097c4a1$var$looksLikeObjectPath(key, nsSeparator, keySeparator) {
    nsSeparator = nsSeparator || "";
    keySeparator = keySeparator || "";
    var possibleChars = $b84a17fdd097c4a1$var$chars.filter(function(c) {
        return nsSeparator.indexOf(c) < 0 && keySeparator.indexOf(c) < 0;
    });
    if (possibleChars.length === 0) return true;
    var r = new RegExp("(".concat(possibleChars.map(function(c) {
        return c === "?" ? "\\?" : c;
    }).join("|"), ")"));
    var matched = !r.test(key);
    if (!matched) {
        var ki = key.indexOf(keySeparator);
        if (ki > 0 && !r.test(key.substring(0, ki))) matched = true;
    }
    return matched;
}
function $b84a17fdd097c4a1$var$ownKeys$1(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) symbols = symbols.filter(function(sym) {
            return Object.getOwnPropertyDescriptor(object, sym).enumerable;
        });
        keys.push.apply(keys, symbols);
    }
    return keys;
}
function $b84a17fdd097c4a1$var$_objectSpread$1(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        if (i % 2) $b84a17fdd097c4a1$var$ownKeys$1(Object(source), true).forEach(function(key) {
            (0, $8d002fd2b9a1c331$export$2e2bcd8739ae039)(target, key, source[key]);
        });
        else if (Object.getOwnPropertyDescriptors) Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
        else $b84a17fdd097c4a1$var$ownKeys$1(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
    }
    return target;
}
function $b84a17fdd097c4a1$var$_createSuper(Derived) {
    var hasNativeReflectConstruct = $b84a17fdd097c4a1$var$_isNativeReflectConstruct();
    return function _createSuperInternal() {
        var Super = (0, $5b8ddfbec539d1fd$export$2e2bcd8739ae039)(Derived), result;
        if (hasNativeReflectConstruct) {
            var NewTarget = (0, $5b8ddfbec539d1fd$export$2e2bcd8739ae039)(this).constructor;
            result = Reflect.construct(Super, arguments, NewTarget);
        } else result = Super.apply(this, arguments);
        return (0, $dd5a12836dec8168$export$2e2bcd8739ae039)(this, result);
    };
}
function $b84a17fdd097c4a1$var$_isNativeReflectConstruct() {
    if (typeof Reflect === "undefined" || !Reflect.construct) return false;
    if (Reflect.construct.sham) return false;
    if (typeof Proxy === "function") return true;
    try {
        Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {}));
        return true;
    } catch (e) {
        return false;
    }
}
function $b84a17fdd097c4a1$var$deepFind(obj, path) {
    var keySeparator = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : ".";
    if (!obj) return undefined;
    if (obj[path]) return obj[path];
    var paths = path.split(keySeparator);
    var current = obj;
    for(var i = 0; i < paths.length; ++i){
        if (!current) return undefined;
        if (typeof current[paths[i]] === "string" && i + 1 < paths.length) return undefined;
        if (current[paths[i]] === undefined) {
            var j = 2;
            var p = paths.slice(i, i + j).join(keySeparator);
            var mix = current[p];
            while(mix === undefined && paths.length > i + j){
                j++;
                p = paths.slice(i, i + j).join(keySeparator);
                mix = current[p];
            }
            if (mix === undefined) return undefined;
            if (mix === null) return null;
            if (path.endsWith(p)) {
                if (typeof mix === "string") return mix;
                if (p && typeof mix[p] === "string") return mix[p];
            }
            var joinedPath = paths.slice(i + j).join(keySeparator);
            if (joinedPath) return $b84a17fdd097c4a1$var$deepFind(mix, joinedPath, keySeparator);
            return undefined;
        }
        current = current[paths[i]];
    }
    return current;
}
var $b84a17fdd097c4a1$var$ResourceStore = function(_EventEmitter) {
    (0, $ea512c1c85f799dc$export$2e2bcd8739ae039)(ResourceStore, _EventEmitter);
    var _super = $b84a17fdd097c4a1$var$_createSuper(ResourceStore);
    function ResourceStore(data) {
        var _this;
        var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {
            ns: [
                "translation"
            ],
            defaultNS: "translation"
        };
        (0, $b0d264660fcf3da0$export$2e2bcd8739ae039)(this, ResourceStore);
        _this = _super.call(this);
        if ($b84a17fdd097c4a1$var$isIE10) $b84a17fdd097c4a1$var$EventEmitter.call((0, $83c6059b9c1e5b12$export$2e2bcd8739ae039)(_this));
        _this.data = data || {};
        _this.options = options;
        if (_this.options.keySeparator === undefined) _this.options.keySeparator = ".";
        if (_this.options.ignoreJSONStructure === undefined) _this.options.ignoreJSONStructure = true;
        return _this;
    }
    (0, $e1440005d306c330$export$2e2bcd8739ae039)(ResourceStore, [
        {
            key: "addNamespaces",
            value: function addNamespaces(ns) {
                if (this.options.ns.indexOf(ns) < 0) this.options.ns.push(ns);
            }
        },
        {
            key: "removeNamespaces",
            value: function removeNamespaces(ns) {
                var index = this.options.ns.indexOf(ns);
                if (index > -1) this.options.ns.splice(index, 1);
            }
        },
        {
            key: "getResource",
            value: function getResource(lng, ns, key) {
                var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};
                var keySeparator = options.keySeparator !== undefined ? options.keySeparator : this.options.keySeparator;
                var ignoreJSONStructure = options.ignoreJSONStructure !== undefined ? options.ignoreJSONStructure : this.options.ignoreJSONStructure;
                var path = [
                    lng,
                    ns
                ];
                if (key && typeof key !== "string") path = path.concat(key);
                if (key && typeof key === "string") path = path.concat(keySeparator ? key.split(keySeparator) : key);
                if (lng.indexOf(".") > -1) path = lng.split(".");
                var result = $b84a17fdd097c4a1$var$getPath(this.data, path);
                if (result || !ignoreJSONStructure || typeof key !== "string") return result;
                return $b84a17fdd097c4a1$var$deepFind(this.data && this.data[lng] && this.data[lng][ns], key, keySeparator);
            }
        },
        {
            key: "addResource",
            value: function addResource(lng, ns, key, value) {
                var options = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : {
                    silent: false
                };
                var keySeparator = this.options.keySeparator;
                if (keySeparator === undefined) keySeparator = ".";
                var path = [
                    lng,
                    ns
                ];
                if (key) path = path.concat(keySeparator ? key.split(keySeparator) : key);
                if (lng.indexOf(".") > -1) {
                    path = lng.split(".");
                    value = ns;
                    ns = path[1];
                }
                this.addNamespaces(ns);
                $b84a17fdd097c4a1$var$setPath(this.data, path, value);
                if (!options.silent) this.emit("added", lng, ns, key, value);
            }
        },
        {
            key: "addResources",
            value: function addResources(lng, ns, resources) {
                var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {
                    silent: false
                };
                for(var m in resources)if (typeof resources[m] === "string" || Object.prototype.toString.apply(resources[m]) === "[object Array]") this.addResource(lng, ns, m, resources[m], {
                    silent: true
                });
                if (!options.silent) this.emit("added", lng, ns, resources);
            }
        },
        {
            key: "addResourceBundle",
            value: function addResourceBundle(lng, ns, resources, deep, overwrite) {
                var options = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : {
                    silent: false
                };
                var path = [
                    lng,
                    ns
                ];
                if (lng.indexOf(".") > -1) {
                    path = lng.split(".");
                    deep = resources;
                    resources = ns;
                    ns = path[1];
                }
                this.addNamespaces(ns);
                var pack = $b84a17fdd097c4a1$var$getPath(this.data, path) || {};
                if (deep) $b84a17fdd097c4a1$var$deepExtend(pack, resources, overwrite);
                else pack = $b84a17fdd097c4a1$var$_objectSpread$1($b84a17fdd097c4a1$var$_objectSpread$1({}, pack), resources);
                $b84a17fdd097c4a1$var$setPath(this.data, path, pack);
                if (!options.silent) this.emit("added", lng, ns, resources);
            }
        },
        {
            key: "removeResourceBundle",
            value: function removeResourceBundle(lng, ns) {
                if (this.hasResourceBundle(lng, ns)) delete this.data[lng][ns];
                this.removeNamespaces(ns);
                this.emit("removed", lng, ns);
            }
        },
        {
            key: "hasResourceBundle",
            value: function hasResourceBundle(lng, ns) {
                return this.getResource(lng, ns) !== undefined;
            }
        },
        {
            key: "getResourceBundle",
            value: function getResourceBundle(lng, ns) {
                if (!ns) ns = this.options.defaultNS;
                if (this.options.compatibilityAPI === "v1") return $b84a17fdd097c4a1$var$_objectSpread$1($b84a17fdd097c4a1$var$_objectSpread$1({}, {}), this.getResource(lng, ns));
                return this.getResource(lng, ns);
            }
        },
        {
            key: "getDataByLanguage",
            value: function getDataByLanguage(lng) {
                return this.data[lng];
            }
        },
        {
            key: "hasLanguageSomeTranslations",
            value: function hasLanguageSomeTranslations(lng) {
                var data = this.getDataByLanguage(lng);
                var n = data && Object.keys(data) || [];
                return !!n.find(function(v) {
                    return data[v] && Object.keys(data[v]).length > 0;
                });
            }
        },
        {
            key: "toJSON",
            value: function toJSON() {
                return this.data;
            }
        }
    ]);
    return ResourceStore;
}($b84a17fdd097c4a1$var$EventEmitter);
var $b84a17fdd097c4a1$var$postProcessor = {
    processors: {},
    addPostProcessor: function addPostProcessor(module) {
        this.processors[module.name] = module;
    },
    handle: function handle(processors, value, key, options, translator) {
        var _this = this;
        processors.forEach(function(processor) {
            if (_this.processors[processor]) value = _this.processors[processor].process(value, key, options, translator);
        });
        return value;
    }
};
function $b84a17fdd097c4a1$var$ownKeys$2(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) symbols = symbols.filter(function(sym) {
            return Object.getOwnPropertyDescriptor(object, sym).enumerable;
        });
        keys.push.apply(keys, symbols);
    }
    return keys;
}
function $b84a17fdd097c4a1$var$_objectSpread$2(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        if (i % 2) $b84a17fdd097c4a1$var$ownKeys$2(Object(source), true).forEach(function(key) {
            (0, $8d002fd2b9a1c331$export$2e2bcd8739ae039)(target, key, source[key]);
        });
        else if (Object.getOwnPropertyDescriptors) Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
        else $b84a17fdd097c4a1$var$ownKeys$2(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
    }
    return target;
}
function $b84a17fdd097c4a1$var$_createSuper$1(Derived) {
    var hasNativeReflectConstruct = $b84a17fdd097c4a1$var$_isNativeReflectConstruct$1();
    return function _createSuperInternal() {
        var Super = (0, $5b8ddfbec539d1fd$export$2e2bcd8739ae039)(Derived), result;
        if (hasNativeReflectConstruct) {
            var NewTarget = (0, $5b8ddfbec539d1fd$export$2e2bcd8739ae039)(this).constructor;
            result = Reflect.construct(Super, arguments, NewTarget);
        } else result = Super.apply(this, arguments);
        return (0, $dd5a12836dec8168$export$2e2bcd8739ae039)(this, result);
    };
}
function $b84a17fdd097c4a1$var$_isNativeReflectConstruct$1() {
    if (typeof Reflect === "undefined" || !Reflect.construct) return false;
    if (Reflect.construct.sham) return false;
    if (typeof Proxy === "function") return true;
    try {
        Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {}));
        return true;
    } catch (e) {
        return false;
    }
}
var $b84a17fdd097c4a1$var$checkedLoadedFor = {};
var $b84a17fdd097c4a1$var$Translator = function(_EventEmitter) {
    (0, $ea512c1c85f799dc$export$2e2bcd8739ae039)(Translator, _EventEmitter);
    var _super = $b84a17fdd097c4a1$var$_createSuper$1(Translator);
    function Translator(services) {
        var _this;
        var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
        (0, $b0d264660fcf3da0$export$2e2bcd8739ae039)(this, Translator);
        _this = _super.call(this);
        if ($b84a17fdd097c4a1$var$isIE10) $b84a17fdd097c4a1$var$EventEmitter.call((0, $83c6059b9c1e5b12$export$2e2bcd8739ae039)(_this));
        $b84a17fdd097c4a1$var$copy([
            "resourceStore",
            "languageUtils",
            "pluralResolver",
            "interpolator",
            "backendConnector",
            "i18nFormat",
            "utils"
        ], services, (0, $83c6059b9c1e5b12$export$2e2bcd8739ae039)(_this));
        _this.options = options;
        if (_this.options.keySeparator === undefined) _this.options.keySeparator = ".";
        _this.logger = $b84a17fdd097c4a1$var$baseLogger.create("translator");
        return _this;
    }
    (0, $e1440005d306c330$export$2e2bcd8739ae039)(Translator, [
        {
            key: "changeLanguage",
            value: function changeLanguage(lng) {
                if (lng) this.language = lng;
            }
        },
        {
            key: "exists",
            value: function exists(key) {
                var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {
                    interpolation: {}
                };
                if (key === undefined || key === null) return false;
                var resolved = this.resolve(key, options);
                return resolved && resolved.res !== undefined;
            }
        },
        {
            key: "extractFromKey",
            value: function extractFromKey(key, options) {
                var nsSeparator = options.nsSeparator !== undefined ? options.nsSeparator : this.options.nsSeparator;
                if (nsSeparator === undefined) nsSeparator = ":";
                var keySeparator = options.keySeparator !== undefined ? options.keySeparator : this.options.keySeparator;
                var namespaces = options.ns || this.options.defaultNS || [];
                var wouldCheckForNsInKey = nsSeparator && key.indexOf(nsSeparator) > -1;
                var seemsNaturalLanguage = !this.options.userDefinedKeySeparator && !options.keySeparator && !this.options.userDefinedNsSeparator && !options.nsSeparator && !$b84a17fdd097c4a1$var$looksLikeObjectPath(key, nsSeparator, keySeparator);
                if (wouldCheckForNsInKey && !seemsNaturalLanguage) {
                    var m = key.match(this.interpolator.nestingRegexp);
                    if (m && m.length > 0) return {
                        key: key,
                        namespaces: namespaces
                    };
                    var parts = key.split(nsSeparator);
                    if (nsSeparator !== keySeparator || nsSeparator === keySeparator && this.options.ns.indexOf(parts[0]) > -1) namespaces = parts.shift();
                    key = parts.join(keySeparator);
                }
                if (typeof namespaces === "string") namespaces = [
                    namespaces
                ];
                return {
                    key: key,
                    namespaces: namespaces
                };
            }
        },
        {
            key: "translate",
            value: function translate(keys, options, lastKey) {
                var _this2 = this;
                if ((0, $e8f126e5d7889f85$export$2e2bcd8739ae039)(options) !== "object" && this.options.overloadTranslationOptionHandler) options = this.options.overloadTranslationOptionHandler(arguments);
                if (!options) options = {};
                if (keys === undefined || keys === null) return "";
                if (!Array.isArray(keys)) keys = [
                    String(keys)
                ];
                var returnDetails = options.returnDetails !== undefined ? options.returnDetails : this.options.returnDetails;
                var keySeparator = options.keySeparator !== undefined ? options.keySeparator : this.options.keySeparator;
                var _this$extractFromKey = this.extractFromKey(keys[keys.length - 1], options), key = _this$extractFromKey.key, namespaces = _this$extractFromKey.namespaces;
                var namespace = namespaces[namespaces.length - 1];
                var lng = options.lng || this.language;
                var appendNamespaceToCIMode = options.appendNamespaceToCIMode || this.options.appendNamespaceToCIMode;
                if (lng && lng.toLowerCase() === "cimode") {
                    if (appendNamespaceToCIMode) {
                        var nsSeparator = options.nsSeparator || this.options.nsSeparator;
                        if (returnDetails) {
                            resolved.res = "".concat(namespace).concat(nsSeparator).concat(key);
                            return resolved;
                        }
                        return "".concat(namespace).concat(nsSeparator).concat(key);
                    }
                    if (returnDetails) {
                        resolved.res = key;
                        return resolved;
                    }
                    return key;
                }
                var resolved = this.resolve(keys, options);
                var res = resolved && resolved.res;
                var resUsedKey = resolved && resolved.usedKey || key;
                var resExactUsedKey = resolved && resolved.exactUsedKey || key;
                var resType = Object.prototype.toString.apply(res);
                var noObject = [
                    "[object Number]",
                    "[object Function]",
                    "[object RegExp]"
                ];
                var joinArrays = options.joinArrays !== undefined ? options.joinArrays : this.options.joinArrays;
                var handleAsObjectInI18nFormat = !this.i18nFormat || this.i18nFormat.handleAsObject;
                var handleAsObject = typeof res !== "string" && typeof res !== "boolean" && typeof res !== "number";
                if (handleAsObjectInI18nFormat && res && handleAsObject && noObject.indexOf(resType) < 0 && !(typeof joinArrays === "string" && resType === "[object Array]")) {
                    if (!options.returnObjects && !this.options.returnObjects) {
                        if (!this.options.returnedObjectHandler) this.logger.warn("accessing an object - but returnObjects options is not enabled!");
                        var r = this.options.returnedObjectHandler ? this.options.returnedObjectHandler(resUsedKey, res, $b84a17fdd097c4a1$var$_objectSpread$2($b84a17fdd097c4a1$var$_objectSpread$2({}, options), {}, {
                            ns: namespaces
                        })) : "key '".concat(key, " (").concat(this.language, ")' returned an object instead of string.");
                        if (returnDetails) {
                            resolved.res = r;
                            return resolved;
                        }
                        return r;
                    }
                    if (keySeparator) {
                        var resTypeIsArray = resType === "[object Array]";
                        var copy = resTypeIsArray ? [] : {};
                        var newKeyToUse = resTypeIsArray ? resExactUsedKey : resUsedKey;
                        for(var m in res)if (Object.prototype.hasOwnProperty.call(res, m)) {
                            var deepKey = "".concat(newKeyToUse).concat(keySeparator).concat(m);
                            copy[m] = this.translate(deepKey, $b84a17fdd097c4a1$var$_objectSpread$2($b84a17fdd097c4a1$var$_objectSpread$2({}, options), {
                                joinArrays: false,
                                ns: namespaces
                            }));
                            if (copy[m] === deepKey) copy[m] = res[m];
                        }
                        res = copy;
                    }
                } else if (handleAsObjectInI18nFormat && typeof joinArrays === "string" && resType === "[object Array]") {
                    res = res.join(joinArrays);
                    if (res) res = this.extendTranslation(res, keys, options, lastKey);
                } else {
                    var usedDefault = false;
                    var usedKey = false;
                    var needsPluralHandling = options.count !== undefined && typeof options.count !== "string";
                    var hasDefaultValue = Translator.hasDefaultValue(options);
                    var defaultValueSuffix = needsPluralHandling ? this.pluralResolver.getSuffix(lng, options.count, options) : "";
                    var defaultValue = options["defaultValue".concat(defaultValueSuffix)] || options.defaultValue;
                    if (!this.isValidLookup(res) && hasDefaultValue) {
                        usedDefault = true;
                        res = defaultValue;
                    }
                    if (!this.isValidLookup(res)) {
                        usedKey = true;
                        res = key;
                    }
                    var missingKeyNoValueFallbackToKey = options.missingKeyNoValueFallbackToKey || this.options.missingKeyNoValueFallbackToKey;
                    var resForMissing = missingKeyNoValueFallbackToKey && usedKey ? undefined : res;
                    var updateMissing = hasDefaultValue && defaultValue !== res && this.options.updateMissing;
                    if (usedKey || usedDefault || updateMissing) {
                        this.logger.log(updateMissing ? "updateKey" : "missingKey", lng, namespace, key, updateMissing ? defaultValue : res);
                        if (keySeparator) {
                            var fk = this.resolve(key, $b84a17fdd097c4a1$var$_objectSpread$2($b84a17fdd097c4a1$var$_objectSpread$2({}, options), {}, {
                                keySeparator: false
                            }));
                            if (fk && fk.res) this.logger.warn("Seems the loaded translations were in flat JSON format instead of nested. Either set keySeparator: false on init or make sure your translations are published in nested format.");
                        }
                        var lngs = [];
                        var fallbackLngs = this.languageUtils.getFallbackCodes(this.options.fallbackLng, options.lng || this.language);
                        if (this.options.saveMissingTo === "fallback" && fallbackLngs && fallbackLngs[0]) for(var i = 0; i < fallbackLngs.length; i++)lngs.push(fallbackLngs[i]);
                        else if (this.options.saveMissingTo === "all") lngs = this.languageUtils.toResolveHierarchy(options.lng || this.language);
                        else lngs.push(options.lng || this.language);
                        var send = function send(l, k, specificDefaultValue) {
                            var defaultForMissing = hasDefaultValue && specificDefaultValue !== res ? specificDefaultValue : resForMissing;
                            if (_this2.options.missingKeyHandler) _this2.options.missingKeyHandler(l, namespace, k, defaultForMissing, updateMissing, options);
                            else if (_this2.backendConnector && _this2.backendConnector.saveMissing) _this2.backendConnector.saveMissing(l, namespace, k, defaultForMissing, updateMissing, options);
                            _this2.emit("missingKey", l, namespace, k, res);
                        };
                        if (this.options.saveMissing) {
                            if (this.options.saveMissingPlurals && needsPluralHandling) lngs.forEach(function(language) {
                                _this2.pluralResolver.getSuffixes(language, options).forEach(function(suffix) {
                                    send([
                                        language
                                    ], key + suffix, options["defaultValue".concat(suffix)] || defaultValue);
                                });
                            });
                            else send(lngs, key, defaultValue);
                        }
                    }
                    res = this.extendTranslation(res, keys, options, resolved, lastKey);
                    if (usedKey && res === key && this.options.appendNamespaceToMissingKey) res = "".concat(namespace, ":").concat(key);
                    if ((usedKey || usedDefault) && this.options.parseMissingKeyHandler) {
                        if (this.options.compatibilityAPI !== "v1") res = this.options.parseMissingKeyHandler(this.options.appendNamespaceToMissingKey ? "".concat(namespace, ":").concat(key) : key, usedDefault ? res : undefined);
                        else res = this.options.parseMissingKeyHandler(res);
                    }
                }
                if (returnDetails) {
                    resolved.res = res;
                    return resolved;
                }
                return res;
            }
        },
        {
            key: "extendTranslation",
            value: function extendTranslation(res, key, options, resolved, lastKey) {
                var _this3 = this;
                if (this.i18nFormat && this.i18nFormat.parse) res = this.i18nFormat.parse(res, $b84a17fdd097c4a1$var$_objectSpread$2($b84a17fdd097c4a1$var$_objectSpread$2({}, this.options.interpolation.defaultVariables), options), resolved.usedLng, resolved.usedNS, resolved.usedKey, {
                    resolved: resolved
                });
                else if (!options.skipInterpolation) {
                    if (options.interpolation) this.interpolator.init($b84a17fdd097c4a1$var$_objectSpread$2($b84a17fdd097c4a1$var$_objectSpread$2({}, options), {
                        interpolation: $b84a17fdd097c4a1$var$_objectSpread$2($b84a17fdd097c4a1$var$_objectSpread$2({}, this.options.interpolation), options.interpolation)
                    }));
                    var skipOnVariables = typeof res === "string" && (options && options.interpolation && options.interpolation.skipOnVariables !== undefined ? options.interpolation.skipOnVariables : this.options.interpolation.skipOnVariables);
                    var nestBef;
                    if (skipOnVariables) {
                        var nb = res.match(this.interpolator.nestingRegexp);
                        nestBef = nb && nb.length;
                    }
                    var data = options.replace && typeof options.replace !== "string" ? options.replace : options;
                    if (this.options.interpolation.defaultVariables) data = $b84a17fdd097c4a1$var$_objectSpread$2($b84a17fdd097c4a1$var$_objectSpread$2({}, this.options.interpolation.defaultVariables), data);
                    res = this.interpolator.interpolate(res, data, options.lng || this.language, options);
                    if (skipOnVariables) {
                        var na = res.match(this.interpolator.nestingRegexp);
                        var nestAft = na && na.length;
                        if (nestBef < nestAft) options.nest = false;
                    }
                    if (options.nest !== false) res = this.interpolator.nest(res, function() {
                        for(var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++)args[_key] = arguments[_key];
                        if (lastKey && lastKey[0] === args[0] && !options.context) {
                            _this3.logger.warn("It seems you are nesting recursively key: ".concat(args[0], " in key: ").concat(key[0]));
                            return null;
                        }
                        return _this3.translate.apply(_this3, args.concat([
                            key
                        ]));
                    }, options);
                    if (options.interpolation) this.interpolator.reset();
                }
                var postProcess = options.postProcess || this.options.postProcess;
                var postProcessorNames = typeof postProcess === "string" ? [
                    postProcess
                ] : postProcess;
                if (res !== undefined && res !== null && postProcessorNames && postProcessorNames.length && options.applyPostProcessor !== false) res = $b84a17fdd097c4a1$var$postProcessor.handle(postProcessorNames, res, key, this.options && this.options.postProcessPassResolved ? $b84a17fdd097c4a1$var$_objectSpread$2({
                    i18nResolved: resolved
                }, options) : options, this);
                return res;
            }
        },
        {
            key: "resolve",
            value: function resolve(keys) {
                var _this4 = this;
                var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
                var found;
                var usedKey;
                var exactUsedKey;
                var usedLng;
                var usedNS;
                if (typeof keys === "string") keys = [
                    keys
                ];
                keys.forEach(function(k) {
                    if (_this4.isValidLookup(found)) return;
                    var extracted = _this4.extractFromKey(k, options);
                    var key = extracted.key;
                    usedKey = key;
                    var namespaces = extracted.namespaces;
                    if (_this4.options.fallbackNS) namespaces = namespaces.concat(_this4.options.fallbackNS);
                    var needsPluralHandling = options.count !== undefined && typeof options.count !== "string";
                    var needsZeroSuffixLookup = needsPluralHandling && !options.ordinal && options.count === 0 && _this4.pluralResolver.shouldUseIntlApi();
                    var needsContextHandling = options.context !== undefined && (typeof options.context === "string" || typeof options.context === "number") && options.context !== "";
                    var codes = options.lngs ? options.lngs : _this4.languageUtils.toResolveHierarchy(options.lng || _this4.language, options.fallbackLng);
                    namespaces.forEach(function(ns) {
                        if (_this4.isValidLookup(found)) return;
                        usedNS = ns;
                        if (!$b84a17fdd097c4a1$var$checkedLoadedFor["".concat(codes[0], "-").concat(ns)] && _this4.utils && _this4.utils.hasLoadedNamespace && !_this4.utils.hasLoadedNamespace(usedNS)) {
                            $b84a17fdd097c4a1$var$checkedLoadedFor["".concat(codes[0], "-").concat(ns)] = true;
                            _this4.logger.warn('key "'.concat(usedKey, '" for languages "').concat(codes.join(", "), '" won\'t get resolved as namespace "').concat(usedNS, '" was not yet loaded'), "This means something IS WRONG in your setup. You access the t function before i18next.init / i18next.loadNamespace / i18next.changeLanguage was done. Wait for the callback or Promise to resolve before accessing it!!!");
                        }
                        codes.forEach(function(code) {
                            if (_this4.isValidLookup(found)) return;
                            usedLng = code;
                            var finalKeys = [
                                key
                            ];
                            if (_this4.i18nFormat && _this4.i18nFormat.addLookupKeys) _this4.i18nFormat.addLookupKeys(finalKeys, key, code, ns, options);
                            else {
                                var pluralSuffix;
                                if (needsPluralHandling) pluralSuffix = _this4.pluralResolver.getSuffix(code, options.count, options);
                                var zeroSuffix = "".concat(_this4.options.pluralSeparator, "zero");
                                if (needsPluralHandling) {
                                    finalKeys.push(key + pluralSuffix);
                                    if (needsZeroSuffixLookup) finalKeys.push(key + zeroSuffix);
                                }
                                if (needsContextHandling) {
                                    var contextKey = "".concat(key).concat(_this4.options.contextSeparator).concat(options.context);
                                    finalKeys.push(contextKey);
                                    if (needsPluralHandling) {
                                        finalKeys.push(contextKey + pluralSuffix);
                                        if (needsZeroSuffixLookup) finalKeys.push(contextKey + zeroSuffix);
                                    }
                                }
                            }
                            var possibleKey;
                            while(possibleKey = finalKeys.pop())if (!_this4.isValidLookup(found)) {
                                exactUsedKey = possibleKey;
                                found = _this4.getResource(code, ns, possibleKey, options);
                            }
                        });
                    });
                });
                return {
                    res: found,
                    usedKey: usedKey,
                    exactUsedKey: exactUsedKey,
                    usedLng: usedLng,
                    usedNS: usedNS
                };
            }
        },
        {
            key: "isValidLookup",
            value: function isValidLookup(res) {
                return res !== undefined && !(!this.options.returnNull && res === null) && !(!this.options.returnEmptyString && res === "");
            }
        },
        {
            key: "getResource",
            value: function getResource(code, ns, key) {
                var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};
                if (this.i18nFormat && this.i18nFormat.getResource) return this.i18nFormat.getResource(code, ns, key, options);
                return this.resourceStore.getResource(code, ns, key, options);
            }
        }
    ], [
        {
            key: "hasDefaultValue",
            value: function hasDefaultValue(options) {
                var prefix = "defaultValue";
                for(var option in options){
                    if (Object.prototype.hasOwnProperty.call(options, option) && prefix === option.substring(0, prefix.length) && undefined !== options[option]) return true;
                }
                return false;
            }
        }
    ]);
    return Translator;
}($b84a17fdd097c4a1$var$EventEmitter);
function $b84a17fdd097c4a1$var$capitalize(string) {
    return string.charAt(0).toUpperCase() + string.slice(1);
}
var $b84a17fdd097c4a1$var$LanguageUtil = function() {
    function LanguageUtil(options) {
        (0, $b0d264660fcf3da0$export$2e2bcd8739ae039)(this, LanguageUtil);
        this.options = options;
        this.supportedLngs = this.options.supportedLngs || false;
        this.logger = $b84a17fdd097c4a1$var$baseLogger.create("languageUtils");
    }
    (0, $e1440005d306c330$export$2e2bcd8739ae039)(LanguageUtil, [
        {
            key: "getScriptPartFromCode",
            value: function getScriptPartFromCode(code) {
                if (!code || code.indexOf("-") < 0) return null;
                var p = code.split("-");
                if (p.length === 2) return null;
                p.pop();
                if (p[p.length - 1].toLowerCase() === "x") return null;
                return this.formatLanguageCode(p.join("-"));
            }
        },
        {
            key: "getLanguagePartFromCode",
            value: function getLanguagePartFromCode(code) {
                if (!code || code.indexOf("-") < 0) return code;
                var p = code.split("-");
                return this.formatLanguageCode(p[0]);
            }
        },
        {
            key: "formatLanguageCode",
            value: function formatLanguageCode(code) {
                if (typeof code === "string" && code.indexOf("-") > -1) {
                    var specialCases = [
                        "hans",
                        "hant",
                        "latn",
                        "cyrl",
                        "cans",
                        "mong",
                        "arab"
                    ];
                    var p = code.split("-");
                    if (this.options.lowerCaseLng) p = p.map(function(part) {
                        return part.toLowerCase();
                    });
                    else if (p.length === 2) {
                        p[0] = p[0].toLowerCase();
                        p[1] = p[1].toUpperCase();
                        if (specialCases.indexOf(p[1].toLowerCase()) > -1) p[1] = $b84a17fdd097c4a1$var$capitalize(p[1].toLowerCase());
                    } else if (p.length === 3) {
                        p[0] = p[0].toLowerCase();
                        if (p[1].length === 2) p[1] = p[1].toUpperCase();
                        if (p[0] !== "sgn" && p[2].length === 2) p[2] = p[2].toUpperCase();
                        if (specialCases.indexOf(p[1].toLowerCase()) > -1) p[1] = $b84a17fdd097c4a1$var$capitalize(p[1].toLowerCase());
                        if (specialCases.indexOf(p[2].toLowerCase()) > -1) p[2] = $b84a17fdd097c4a1$var$capitalize(p[2].toLowerCase());
                    }
                    return p.join("-");
                }
                return this.options.cleanCode || this.options.lowerCaseLng ? code.toLowerCase() : code;
            }
        },
        {
            key: "isSupportedCode",
            value: function isSupportedCode(code) {
                if (this.options.load === "languageOnly" || this.options.nonExplicitSupportedLngs) code = this.getLanguagePartFromCode(code);
                return !this.supportedLngs || !this.supportedLngs.length || this.supportedLngs.indexOf(code) > -1;
            }
        },
        {
            key: "getBestMatchFromCodes",
            value: function getBestMatchFromCodes(codes) {
                var _this = this;
                if (!codes) return null;
                var found;
                codes.forEach(function(code) {
                    if (found) return;
                    var cleanedLng = _this.formatLanguageCode(code);
                    if (!_this.options.supportedLngs || _this.isSupportedCode(cleanedLng)) found = cleanedLng;
                });
                if (!found && this.options.supportedLngs) codes.forEach(function(code) {
                    if (found) return;
                    var lngOnly = _this.getLanguagePartFromCode(code);
                    if (_this.isSupportedCode(lngOnly)) return found = lngOnly;
                    found = _this.options.supportedLngs.find(function(supportedLng) {
                        if (supportedLng.indexOf(lngOnly) === 0) return supportedLng;
                    });
                });
                if (!found) found = this.getFallbackCodes(this.options.fallbackLng)[0];
                return found;
            }
        },
        {
            key: "getFallbackCodes",
            value: function getFallbackCodes(fallbacks, code) {
                if (!fallbacks) return [];
                if (typeof fallbacks === "function") fallbacks = fallbacks(code);
                if (typeof fallbacks === "string") fallbacks = [
                    fallbacks
                ];
                if (Object.prototype.toString.apply(fallbacks) === "[object Array]") return fallbacks;
                if (!code) return fallbacks["default"] || [];
                var found = fallbacks[code];
                if (!found) found = fallbacks[this.getScriptPartFromCode(code)];
                if (!found) found = fallbacks[this.formatLanguageCode(code)];
                if (!found) found = fallbacks[this.getLanguagePartFromCode(code)];
                if (!found) found = fallbacks["default"];
                return found || [];
            }
        },
        {
            key: "toResolveHierarchy",
            value: function toResolveHierarchy(code, fallbackCode) {
                var _this2 = this;
                var fallbackCodes = this.getFallbackCodes(fallbackCode || this.options.fallbackLng || [], code);
                var codes = [];
                var addCode = function addCode(c) {
                    if (!c) return;
                    if (_this2.isSupportedCode(c)) codes.push(c);
                    else _this2.logger.warn("rejecting language code not found in supportedLngs: ".concat(c));
                };
                if (typeof code === "string" && code.indexOf("-") > -1) {
                    if (this.options.load !== "languageOnly") addCode(this.formatLanguageCode(code));
                    if (this.options.load !== "languageOnly" && this.options.load !== "currentOnly") addCode(this.getScriptPartFromCode(code));
                    if (this.options.load !== "currentOnly") addCode(this.getLanguagePartFromCode(code));
                } else if (typeof code === "string") addCode(this.formatLanguageCode(code));
                fallbackCodes.forEach(function(fc) {
                    if (codes.indexOf(fc) < 0) addCode(_this2.formatLanguageCode(fc));
                });
                return codes;
            }
        }
    ]);
    return LanguageUtil;
}();
var $b84a17fdd097c4a1$var$sets = [
    {
        lngs: [
            "ach",
            "ak",
            "am",
            "arn",
            "br",
            "fil",
            "gun",
            "ln",
            "mfe",
            "mg",
            "mi",
            "oc",
            "pt",
            "pt-BR",
            "tg",
            "tl",
            "ti",
            "tr",
            "uz",
            "wa"
        ],
        nr: [
            1,
            2
        ],
        fc: 1
    },
    {
        lngs: [
            "af",
            "an",
            "ast",
            "az",
            "bg",
            "bn",
            "ca",
            "da",
            "de",
            "dev",
            "el",
            "en",
            "eo",
            "es",
            "et",
            "eu",
            "fi",
            "fo",
            "fur",
            "fy",
            "gl",
            "gu",
            "ha",
            "hi",
            "hu",
            "hy",
            "ia",
            "it",
            "kk",
            "kn",
            "ku",
            "lb",
            "mai",
            "ml",
            "mn",
            "mr",
            "nah",
            "nap",
            "nb",
            "ne",
            "nl",
            "nn",
            "no",
            "nso",
            "pa",
            "pap",
            "pms",
            "ps",
            "pt-PT",
            "rm",
            "sco",
            "se",
            "si",
            "so",
            "son",
            "sq",
            "sv",
            "sw",
            "ta",
            "te",
            "tk",
            "ur",
            "yo"
        ],
        nr: [
            1,
            2
        ],
        fc: 2
    },
    {
        lngs: [
            "ay",
            "bo",
            "cgg",
            "fa",
            "ht",
            "id",
            "ja",
            "jbo",
            "ka",
            "km",
            "ko",
            "ky",
            "lo",
            "ms",
            "sah",
            "su",
            "th",
            "tt",
            "ug",
            "vi",
            "wo",
            "zh"
        ],
        nr: [
            1
        ],
        fc: 3
    },
    {
        lngs: [
            "be",
            "bs",
            "cnr",
            "dz",
            "hr",
            "ru",
            "sr",
            "uk"
        ],
        nr: [
            1,
            2,
            5
        ],
        fc: 4
    },
    {
        lngs: [
            "ar"
        ],
        nr: [
            0,
            1,
            2,
            3,
            11,
            100
        ],
        fc: 5
    },
    {
        lngs: [
            "cs",
            "sk"
        ],
        nr: [
            1,
            2,
            5
        ],
        fc: 6
    },
    {
        lngs: [
            "csb",
            "pl"
        ],
        nr: [
            1,
            2,
            5
        ],
        fc: 7
    },
    {
        lngs: [
            "cy"
        ],
        nr: [
            1,
            2,
            3,
            8
        ],
        fc: 8
    },
    {
        lngs: [
            "fr"
        ],
        nr: [
            1,
            2
        ],
        fc: 9
    },
    {
        lngs: [
            "ga"
        ],
        nr: [
            1,
            2,
            3,
            7,
            11
        ],
        fc: 10
    },
    {
        lngs: [
            "gd"
        ],
        nr: [
            1,
            2,
            3,
            20
        ],
        fc: 11
    },
    {
        lngs: [
            "is"
        ],
        nr: [
            1,
            2
        ],
        fc: 12
    },
    {
        lngs: [
            "jv"
        ],
        nr: [
            0,
            1
        ],
        fc: 13
    },
    {
        lngs: [
            "kw"
        ],
        nr: [
            1,
            2,
            3,
            4
        ],
        fc: 14
    },
    {
        lngs: [
            "lt"
        ],
        nr: [
            1,
            2,
            10
        ],
        fc: 15
    },
    {
        lngs: [
            "lv"
        ],
        nr: [
            1,
            2,
            0
        ],
        fc: 16
    },
    {
        lngs: [
            "mk"
        ],
        nr: [
            1,
            2
        ],
        fc: 17
    },
    {
        lngs: [
            "mnk"
        ],
        nr: [
            0,
            1,
            2
        ],
        fc: 18
    },
    {
        lngs: [
            "mt"
        ],
        nr: [
            1,
            2,
            11,
            20
        ],
        fc: 19
    },
    {
        lngs: [
            "or"
        ],
        nr: [
            2,
            1
        ],
        fc: 2
    },
    {
        lngs: [
            "ro"
        ],
        nr: [
            1,
            2,
            20
        ],
        fc: 20
    },
    {
        lngs: [
            "sl"
        ],
        nr: [
            5,
            1,
            2,
            3
        ],
        fc: 21
    },
    {
        lngs: [
            "he",
            "iw"
        ],
        nr: [
            1,
            2,
            20,
            21
        ],
        fc: 22
    }
];
var $b84a17fdd097c4a1$var$_rulesPluralsTypes = {
    1: function _(n) {
        return Number(n > 1);
    },
    2: function _(n) {
        return Number(n != 1);
    },
    3: function _(n) {
        return 0;
    },
    4: function _(n) {
        return Number(n % 10 == 1 && n % 100 != 11 ? 0 : n % 10 >= 2 && n % 10 <= 4 && (n % 100 < 10 || n % 100 >= 20) ? 1 : 2);
    },
    5: function _(n) {
        return Number(n == 0 ? 0 : n == 1 ? 1 : n == 2 ? 2 : n % 100 >= 3 && n % 100 <= 10 ? 3 : n % 100 >= 11 ? 4 : 5);
    },
    6: function _(n) {
        return Number(n == 1 ? 0 : n >= 2 && n <= 4 ? 1 : 2);
    },
    7: function _(n) {
        return Number(n == 1 ? 0 : n % 10 >= 2 && n % 10 <= 4 && (n % 100 < 10 || n % 100 >= 20) ? 1 : 2);
    },
    8: function _(n) {
        return Number(n == 1 ? 0 : n == 2 ? 1 : n != 8 && n != 11 ? 2 : 3);
    },
    9: function _(n) {
        return Number(n >= 2);
    },
    10: function _(n) {
        return Number(n == 1 ? 0 : n == 2 ? 1 : n < 7 ? 2 : n < 11 ? 3 : 4);
    },
    11: function _(n) {
        return Number(n == 1 || n == 11 ? 0 : n == 2 || n == 12 ? 1 : n > 2 && n < 20 ? 2 : 3);
    },
    12: function _(n) {
        return Number(n % 10 != 1 || n % 100 == 11);
    },
    13: function _(n) {
        return Number(n !== 0);
    },
    14: function _(n) {
        return Number(n == 1 ? 0 : n == 2 ? 1 : n == 3 ? 2 : 3);
    },
    15: function _(n) {
        return Number(n % 10 == 1 && n % 100 != 11 ? 0 : n % 10 >= 2 && (n % 100 < 10 || n % 100 >= 20) ? 1 : 2);
    },
    16: function _(n) {
        return Number(n % 10 == 1 && n % 100 != 11 ? 0 : n !== 0 ? 1 : 2);
    },
    17: function _(n) {
        return Number(n == 1 || n % 10 == 1 && n % 100 != 11 ? 0 : 1);
    },
    18: function _(n) {
        return Number(n == 0 ? 0 : n == 1 ? 1 : 2);
    },
    19: function _(n) {
        return Number(n == 1 ? 0 : n == 0 || n % 100 > 1 && n % 100 < 11 ? 1 : n % 100 > 10 && n % 100 < 20 ? 2 : 3);
    },
    20: function _(n) {
        return Number(n == 1 ? 0 : n == 0 || n % 100 > 0 && n % 100 < 20 ? 1 : 2);
    },
    21: function _(n) {
        return Number(n % 100 == 1 ? 1 : n % 100 == 2 ? 2 : n % 100 == 3 || n % 100 == 4 ? 3 : 0);
    },
    22: function _(n) {
        return Number(n == 1 ? 0 : n == 2 ? 1 : (n < 0 || n > 10) && n % 10 == 0 ? 2 : 3);
    }
};
var $b84a17fdd097c4a1$var$deprecatedJsonVersions = [
    "v1",
    "v2",
    "v3"
];
var $b84a17fdd097c4a1$var$suffixesOrder = {
    zero: 0,
    one: 1,
    two: 2,
    few: 3,
    many: 4,
    other: 5
};
function $b84a17fdd097c4a1$var$createRules() {
    var rules = {};
    $b84a17fdd097c4a1$var$sets.forEach(function(set) {
        set.lngs.forEach(function(l) {
            rules[l] = {
                numbers: set.nr,
                plurals: $b84a17fdd097c4a1$var$_rulesPluralsTypes[set.fc]
            };
        });
    });
    return rules;
}
var $b84a17fdd097c4a1$var$PluralResolver = function() {
    function PluralResolver(languageUtils) {
        var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
        (0, $b0d264660fcf3da0$export$2e2bcd8739ae039)(this, PluralResolver);
        this.languageUtils = languageUtils;
        this.options = options;
        this.logger = $b84a17fdd097c4a1$var$baseLogger.create("pluralResolver");
        if ((!this.options.compatibilityJSON || this.options.compatibilityJSON === "v4") && (typeof Intl === "undefined" || !Intl.PluralRules)) {
            this.options.compatibilityJSON = "v3";
            this.logger.error("Your environment seems not to be Intl API compatible, use an Intl.PluralRules polyfill. Will fallback to the compatibilityJSON v3 format handling.");
        }
        this.rules = $b84a17fdd097c4a1$var$createRules();
    }
    (0, $e1440005d306c330$export$2e2bcd8739ae039)(PluralResolver, [
        {
            key: "addRule",
            value: function addRule(lng, obj) {
                this.rules[lng] = obj;
            }
        },
        {
            key: "getRule",
            value: function getRule(code) {
                var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
                if (this.shouldUseIntlApi()) try {
                    return new Intl.PluralRules(code, {
                        type: options.ordinal ? "ordinal" : "cardinal"
                    });
                } catch (_unused) {
                    return;
                }
                return this.rules[code] || this.rules[this.languageUtils.getLanguagePartFromCode(code)];
            }
        },
        {
            key: "needsPlural",
            value: function needsPlural(code) {
                var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
                var rule = this.getRule(code, options);
                if (this.shouldUseIntlApi()) return rule && rule.resolvedOptions().pluralCategories.length > 1;
                return rule && rule.numbers.length > 1;
            }
        },
        {
            key: "getPluralFormsOfKey",
            value: function getPluralFormsOfKey(code, key) {
                var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
                return this.getSuffixes(code, options).map(function(suffix) {
                    return "".concat(key).concat(suffix);
                });
            }
        },
        {
            key: "getSuffixes",
            value: function getSuffixes(code) {
                var _this = this;
                var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
                var rule = this.getRule(code, options);
                if (!rule) return [];
                if (this.shouldUseIntlApi()) return rule.resolvedOptions().pluralCategories.sort(function(pluralCategory1, pluralCategory2) {
                    return $b84a17fdd097c4a1$var$suffixesOrder[pluralCategory1] - $b84a17fdd097c4a1$var$suffixesOrder[pluralCategory2];
                }).map(function(pluralCategory) {
                    return "".concat(_this.options.prepend).concat(pluralCategory);
                });
                return rule.numbers.map(function(number) {
                    return _this.getSuffix(code, number, options);
                });
            }
        },
        {
            key: "getSuffix",
            value: function getSuffix(code, count) {
                var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
                var rule = this.getRule(code, options);
                if (rule) {
                    if (this.shouldUseIntlApi()) return "".concat(this.options.prepend).concat(rule.select(count));
                    return this.getSuffixRetroCompatible(rule, count);
                }
                this.logger.warn("no plural rule found for: ".concat(code));
                return "";
            }
        },
        {
            key: "getSuffixRetroCompatible",
            value: function getSuffixRetroCompatible(rule, count) {
                var _this2 = this;
                var idx = rule.noAbs ? rule.plurals(count) : rule.plurals(Math.abs(count));
                var suffix = rule.numbers[idx];
                if (this.options.simplifyPluralSuffix && rule.numbers.length === 2 && rule.numbers[0] === 1) {
                    if (suffix === 2) suffix = "plural";
                    else if (suffix === 1) suffix = "";
                }
                var returnSuffix = function returnSuffix() {
                    return _this2.options.prepend && suffix.toString() ? _this2.options.prepend + suffix.toString() : suffix.toString();
                };
                if (this.options.compatibilityJSON === "v1") {
                    if (suffix === 1) return "";
                    if (typeof suffix === "number") return "_plural_".concat(suffix.toString());
                    return returnSuffix();
                } else if (this.options.compatibilityJSON === "v2") return returnSuffix();
                else if (this.options.simplifyPluralSuffix && rule.numbers.length === 2 && rule.numbers[0] === 1) return returnSuffix();
                return this.options.prepend && idx.toString() ? this.options.prepend + idx.toString() : idx.toString();
            }
        },
        {
            key: "shouldUseIntlApi",
            value: function shouldUseIntlApi() {
                return !$b84a17fdd097c4a1$var$deprecatedJsonVersions.includes(this.options.compatibilityJSON);
            }
        }
    ]);
    return PluralResolver;
}();
function $b84a17fdd097c4a1$var$ownKeys$3(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) symbols = symbols.filter(function(sym) {
            return Object.getOwnPropertyDescriptor(object, sym).enumerable;
        });
        keys.push.apply(keys, symbols);
    }
    return keys;
}
function $b84a17fdd097c4a1$var$_objectSpread$3(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        if (i % 2) $b84a17fdd097c4a1$var$ownKeys$3(Object(source), true).forEach(function(key) {
            (0, $8d002fd2b9a1c331$export$2e2bcd8739ae039)(target, key, source[key]);
        });
        else if (Object.getOwnPropertyDescriptors) Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
        else $b84a17fdd097c4a1$var$ownKeys$3(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
    }
    return target;
}
var $b84a17fdd097c4a1$var$Interpolator = function() {
    function Interpolator() {
        var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
        (0, $b0d264660fcf3da0$export$2e2bcd8739ae039)(this, Interpolator);
        this.logger = $b84a17fdd097c4a1$var$baseLogger.create("interpolator");
        this.options = options;
        this.format = options.interpolation && options.interpolation.format || function(value) {
            return value;
        };
        this.init(options);
    }
    (0, $e1440005d306c330$export$2e2bcd8739ae039)(Interpolator, [
        {
            key: "init",
            value: function init() {
                var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
                if (!options.interpolation) options.interpolation = {
                    escapeValue: true
                };
                var iOpts = options.interpolation;
                this.escape = iOpts.escape !== undefined ? iOpts.escape : $b84a17fdd097c4a1$var$escape;
                this.escapeValue = iOpts.escapeValue !== undefined ? iOpts.escapeValue : true;
                this.useRawValueToEscape = iOpts.useRawValueToEscape !== undefined ? iOpts.useRawValueToEscape : false;
                this.prefix = iOpts.prefix ? $b84a17fdd097c4a1$var$regexEscape(iOpts.prefix) : iOpts.prefixEscaped || "{{";
                this.suffix = iOpts.suffix ? $b84a17fdd097c4a1$var$regexEscape(iOpts.suffix) : iOpts.suffixEscaped || "}}";
                this.formatSeparator = iOpts.formatSeparator ? iOpts.formatSeparator : iOpts.formatSeparator || ",";
                this.unescapePrefix = iOpts.unescapeSuffix ? "" : iOpts.unescapePrefix || "-";
                this.unescapeSuffix = this.unescapePrefix ? "" : iOpts.unescapeSuffix || "";
                this.nestingPrefix = iOpts.nestingPrefix ? $b84a17fdd097c4a1$var$regexEscape(iOpts.nestingPrefix) : iOpts.nestingPrefixEscaped || $b84a17fdd097c4a1$var$regexEscape("$t(");
                this.nestingSuffix = iOpts.nestingSuffix ? $b84a17fdd097c4a1$var$regexEscape(iOpts.nestingSuffix) : iOpts.nestingSuffixEscaped || $b84a17fdd097c4a1$var$regexEscape(")");
                this.nestingOptionsSeparator = iOpts.nestingOptionsSeparator ? iOpts.nestingOptionsSeparator : iOpts.nestingOptionsSeparator || ",";
                this.maxReplaces = iOpts.maxReplaces ? iOpts.maxReplaces : 1000;
                this.alwaysFormat = iOpts.alwaysFormat !== undefined ? iOpts.alwaysFormat : false;
                this.resetRegExp();
            }
        },
        {
            key: "reset",
            value: function reset() {
                if (this.options) this.init(this.options);
            }
        },
        {
            key: "resetRegExp",
            value: function resetRegExp() {
                var regexpStr = "".concat(this.prefix, "(.+?)").concat(this.suffix);
                this.regexp = new RegExp(regexpStr, "g");
                var regexpUnescapeStr = "".concat(this.prefix).concat(this.unescapePrefix, "(.+?)").concat(this.unescapeSuffix).concat(this.suffix);
                this.regexpUnescape = new RegExp(regexpUnescapeStr, "g");
                var nestingRegexpStr = "".concat(this.nestingPrefix, "(.+?)").concat(this.nestingSuffix);
                this.nestingRegexp = new RegExp(nestingRegexpStr, "g");
            }
        },
        {
            key: "interpolate",
            value: function interpolate(str, data, lng, options) {
                var _this = this;
                var match;
                var value;
                var replaces;
                var defaultData = this.options && this.options.interpolation && this.options.interpolation.defaultVariables || {};
                function regexSafe(val) {
                    return val.replace(/\$/g, "$$$$");
                }
                var handleFormat = function handleFormat(key) {
                    if (key.indexOf(_this.formatSeparator) < 0) {
                        var path = $b84a17fdd097c4a1$var$getPathWithDefaults(data, defaultData, key);
                        return _this.alwaysFormat ? _this.format(path, undefined, lng, $b84a17fdd097c4a1$var$_objectSpread$3($b84a17fdd097c4a1$var$_objectSpread$3($b84a17fdd097c4a1$var$_objectSpread$3({}, options), data), {}, {
                            interpolationkey: key
                        })) : path;
                    }
                    var p = key.split(_this.formatSeparator);
                    var k = p.shift().trim();
                    var f = p.join(_this.formatSeparator).trim();
                    return _this.format($b84a17fdd097c4a1$var$getPathWithDefaults(data, defaultData, k), f, lng, $b84a17fdd097c4a1$var$_objectSpread$3($b84a17fdd097c4a1$var$_objectSpread$3($b84a17fdd097c4a1$var$_objectSpread$3({}, options), data), {}, {
                        interpolationkey: k
                    }));
                };
                this.resetRegExp();
                var missingInterpolationHandler = options && options.missingInterpolationHandler || this.options.missingInterpolationHandler;
                var skipOnVariables = options && options.interpolation && options.interpolation.skipOnVariables !== undefined ? options.interpolation.skipOnVariables : this.options.interpolation.skipOnVariables;
                var todos = [
                    {
                        regex: this.regexpUnescape,
                        safeValue: function safeValue(val) {
                            return regexSafe(val);
                        }
                    },
                    {
                        regex: this.regexp,
                        safeValue: function safeValue(val) {
                            return _this.escapeValue ? regexSafe(_this.escape(val)) : regexSafe(val);
                        }
                    }
                ];
                todos.forEach(function(todo) {
                    replaces = 0;
                    while(match = todo.regex.exec(str)){
                        var matchedVar = match[1].trim();
                        value = handleFormat(matchedVar);
                        if (value === undefined) {
                            if (typeof missingInterpolationHandler === "function") {
                                var temp = missingInterpolationHandler(str, match, options);
                                value = typeof temp === "string" ? temp : "";
                            } else if (options && options.hasOwnProperty(matchedVar)) value = "";
                            else if (skipOnVariables) {
                                value = match[0];
                                continue;
                            } else {
                                _this.logger.warn("missed to pass in variable ".concat(matchedVar, " for interpolating ").concat(str));
                                value = "";
                            }
                        } else if (typeof value !== "string" && !_this.useRawValueToEscape) value = $b84a17fdd097c4a1$var$makeString(value);
                        var safeValue = todo.safeValue(value);
                        str = str.replace(match[0], safeValue);
                        if (skipOnVariables) {
                            todo.regex.lastIndex += value.length;
                            todo.regex.lastIndex -= match[0].length;
                        } else todo.regex.lastIndex = 0;
                        replaces++;
                        if (replaces >= _this.maxReplaces) break;
                    }
                });
                return str;
            }
        },
        {
            key: "nest",
            value: function nest(str, fc) {
                var _this2 = this;
                var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
                var match;
                var value;
                var clonedOptions = $b84a17fdd097c4a1$var$_objectSpread$3({}, options);
                clonedOptions.applyPostProcessor = false;
                delete clonedOptions.defaultValue;
                function handleHasOptions(key, inheritedOptions) {
                    var sep = this.nestingOptionsSeparator;
                    if (key.indexOf(sep) < 0) return key;
                    var c = key.split(new RegExp("".concat(sep, "[ ]*{")));
                    var optionsString = "{".concat(c[1]);
                    key = c[0];
                    optionsString = this.interpolate(optionsString, clonedOptions);
                    var matchedSingleQuotes = optionsString.match(/'/g);
                    var matchedDoubleQuotes = optionsString.match(/"/g);
                    if (matchedSingleQuotes && matchedSingleQuotes.length % 2 === 0 && !matchedDoubleQuotes || matchedDoubleQuotes.length % 2 !== 0) optionsString = optionsString.replace(/'/g, '"');
                    try {
                        clonedOptions = JSON.parse(optionsString);
                        if (inheritedOptions) clonedOptions = $b84a17fdd097c4a1$var$_objectSpread$3($b84a17fdd097c4a1$var$_objectSpread$3({}, inheritedOptions), clonedOptions);
                    } catch (e) {
                        this.logger.warn("failed parsing options string in nesting for key ".concat(key), e);
                        return "".concat(key).concat(sep).concat(optionsString);
                    }
                    delete clonedOptions.defaultValue;
                    return key;
                }
                while(match = this.nestingRegexp.exec(str)){
                    var formatters = [];
                    var doReduce = false;
                    if (match[0].indexOf(this.formatSeparator) !== -1 && !/{.*}/.test(match[1])) {
                        var r = match[1].split(this.formatSeparator).map(function(elem) {
                            return elem.trim();
                        });
                        match[1] = r.shift();
                        formatters = r;
                        doReduce = true;
                    }
                    value = fc(handleHasOptions.call(this, match[1].trim(), clonedOptions), clonedOptions);
                    if (value && match[0] === str && typeof value !== "string") return value;
                    if (typeof value !== "string") value = $b84a17fdd097c4a1$var$makeString(value);
                    if (!value) {
                        this.logger.warn("missed to resolve ".concat(match[1], " for nesting ").concat(str));
                        value = "";
                    }
                    if (doReduce) value = formatters.reduce(function(v, f) {
                        return _this2.format(v, f, options.lng, $b84a17fdd097c4a1$var$_objectSpread$3($b84a17fdd097c4a1$var$_objectSpread$3({}, options), {}, {
                            interpolationkey: match[1].trim()
                        }));
                    }, value.trim());
                    str = str.replace(match[0], value);
                    this.regexp.lastIndex = 0;
                }
                return str;
            }
        }
    ]);
    return Interpolator;
}();
function $b84a17fdd097c4a1$var$ownKeys$4(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) symbols = symbols.filter(function(sym) {
            return Object.getOwnPropertyDescriptor(object, sym).enumerable;
        });
        keys.push.apply(keys, symbols);
    }
    return keys;
}
function $b84a17fdd097c4a1$var$_objectSpread$4(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        if (i % 2) $b84a17fdd097c4a1$var$ownKeys$4(Object(source), true).forEach(function(key) {
            (0, $8d002fd2b9a1c331$export$2e2bcd8739ae039)(target, key, source[key]);
        });
        else if (Object.getOwnPropertyDescriptors) Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
        else $b84a17fdd097c4a1$var$ownKeys$4(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
    }
    return target;
}
function $b84a17fdd097c4a1$var$parseFormatStr(formatStr) {
    var formatName = formatStr.toLowerCase().trim();
    var formatOptions = {};
    if (formatStr.indexOf("(") > -1) {
        var p = formatStr.split("(");
        formatName = p[0].toLowerCase().trim();
        var optStr = p[1].substring(0, p[1].length - 1);
        if (formatName === "currency" && optStr.indexOf(":") < 0) {
            if (!formatOptions.currency) formatOptions.currency = optStr.trim();
        } else if (formatName === "relativetime" && optStr.indexOf(":") < 0) {
            if (!formatOptions.range) formatOptions.range = optStr.trim();
        } else {
            var opts = optStr.split(";");
            opts.forEach(function(opt) {
                if (!opt) return;
                var _opt$split = opt.split(":"), _opt$split2 = (0, $8a056ea44d94c5bf$export$2e2bcd8739ae039)(_opt$split), key = _opt$split2[0], rest = _opt$split2.slice(1);
                var val = rest.join(":").trim().replace(/^'+|'+$/g, "");
                if (!formatOptions[key.trim()]) formatOptions[key.trim()] = val;
                if (val === "false") formatOptions[key.trim()] = false;
                if (val === "true") formatOptions[key.trim()] = true;
                if (!isNaN(val)) formatOptions[key.trim()] = parseInt(val, 10);
            });
        }
    }
    return {
        formatName: formatName,
        formatOptions: formatOptions
    };
}
function $b84a17fdd097c4a1$var$createCachedFormatter(fn) {
    var cache = {};
    return function invokeFormatter(val, lng, options) {
        var key = lng + JSON.stringify(options);
        var formatter = cache[key];
        if (!formatter) {
            formatter = fn(lng, options);
            cache[key] = formatter;
        }
        return formatter(val);
    };
}
var $b84a17fdd097c4a1$var$Formatter = function() {
    function Formatter() {
        var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
        (0, $b0d264660fcf3da0$export$2e2bcd8739ae039)(this, Formatter);
        this.logger = $b84a17fdd097c4a1$var$baseLogger.create("formatter");
        this.options = options;
        this.formats = {
            number: $b84a17fdd097c4a1$var$createCachedFormatter(function(lng, options) {
                var formatter = new Intl.NumberFormat(lng, options);
                return function(val) {
                    return formatter.format(val);
                };
            }),
            currency: $b84a17fdd097c4a1$var$createCachedFormatter(function(lng, options) {
                var formatter = new Intl.NumberFormat(lng, $b84a17fdd097c4a1$var$_objectSpread$4($b84a17fdd097c4a1$var$_objectSpread$4({}, options), {}, {
                    style: "currency"
                }));
                return function(val) {
                    return formatter.format(val);
                };
            }),
            datetime: $b84a17fdd097c4a1$var$createCachedFormatter(function(lng, options) {
                var formatter = new Intl.DateTimeFormat(lng, $b84a17fdd097c4a1$var$_objectSpread$4({}, options));
                return function(val) {
                    return formatter.format(val);
                };
            }),
            relativetime: $b84a17fdd097c4a1$var$createCachedFormatter(function(lng, options) {
                var formatter = new Intl.RelativeTimeFormat(lng, $b84a17fdd097c4a1$var$_objectSpread$4({}, options));
                return function(val) {
                    return formatter.format(val, options.range || "day");
                };
            }),
            list: $b84a17fdd097c4a1$var$createCachedFormatter(function(lng, options) {
                var formatter = new Intl.ListFormat(lng, $b84a17fdd097c4a1$var$_objectSpread$4({}, options));
                return function(val) {
                    return formatter.format(val);
                };
            })
        };
        this.init(options);
    }
    (0, $e1440005d306c330$export$2e2bcd8739ae039)(Formatter, [
        {
            key: "init",
            value: function init(services) {
                var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {
                    interpolation: {}
                };
                var iOpts = options.interpolation;
                this.formatSeparator = iOpts.formatSeparator ? iOpts.formatSeparator : iOpts.formatSeparator || ",";
            }
        },
        {
            key: "add",
            value: function add(name, fc) {
                this.formats[name.toLowerCase().trim()] = fc;
            }
        },
        {
            key: "addCached",
            value: function addCached(name, fc) {
                this.formats[name.toLowerCase().trim()] = $b84a17fdd097c4a1$var$createCachedFormatter(fc);
            }
        },
        {
            key: "format",
            value: function format(value, _format, lng, options) {
                var _this = this;
                var formats = _format.split(this.formatSeparator);
                var result = formats.reduce(function(mem, f) {
                    var _parseFormatStr = $b84a17fdd097c4a1$var$parseFormatStr(f), formatName = _parseFormatStr.formatName, formatOptions = _parseFormatStr.formatOptions;
                    if (_this.formats[formatName]) {
                        var formatted = mem;
                        try {
                            var valOptions = options && options.formatParams && options.formatParams[options.interpolationkey] || {};
                            var l = valOptions.locale || valOptions.lng || options.locale || options.lng || lng;
                            formatted = _this.formats[formatName](mem, l, $b84a17fdd097c4a1$var$_objectSpread$4($b84a17fdd097c4a1$var$_objectSpread$4($b84a17fdd097c4a1$var$_objectSpread$4({}, formatOptions), options), valOptions));
                        } catch (error) {
                            _this.logger.warn(error);
                        }
                        return formatted;
                    } else _this.logger.warn("there was no format function for ".concat(formatName));
                    return mem;
                }, value);
                return result;
            }
        }
    ]);
    return Formatter;
}();
function $b84a17fdd097c4a1$var$ownKeys$5(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) symbols = symbols.filter(function(sym) {
            return Object.getOwnPropertyDescriptor(object, sym).enumerable;
        });
        keys.push.apply(keys, symbols);
    }
    return keys;
}
function $b84a17fdd097c4a1$var$_objectSpread$5(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        if (i % 2) $b84a17fdd097c4a1$var$ownKeys$5(Object(source), true).forEach(function(key) {
            (0, $8d002fd2b9a1c331$export$2e2bcd8739ae039)(target, key, source[key]);
        });
        else if (Object.getOwnPropertyDescriptors) Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
        else $b84a17fdd097c4a1$var$ownKeys$5(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
    }
    return target;
}
function $b84a17fdd097c4a1$var$_createSuper$2(Derived) {
    var hasNativeReflectConstruct = $b84a17fdd097c4a1$var$_isNativeReflectConstruct$2();
    return function _createSuperInternal() {
        var Super = (0, $5b8ddfbec539d1fd$export$2e2bcd8739ae039)(Derived), result;
        if (hasNativeReflectConstruct) {
            var NewTarget = (0, $5b8ddfbec539d1fd$export$2e2bcd8739ae039)(this).constructor;
            result = Reflect.construct(Super, arguments, NewTarget);
        } else result = Super.apply(this, arguments);
        return (0, $dd5a12836dec8168$export$2e2bcd8739ae039)(this, result);
    };
}
function $b84a17fdd097c4a1$var$_isNativeReflectConstruct$2() {
    if (typeof Reflect === "undefined" || !Reflect.construct) return false;
    if (Reflect.construct.sham) return false;
    if (typeof Proxy === "function") return true;
    try {
        Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {}));
        return true;
    } catch (e) {
        return false;
    }
}
function $b84a17fdd097c4a1$var$removePending(q, name) {
    if (q.pending[name] !== undefined) {
        delete q.pending[name];
        q.pendingCount--;
    }
}
var $b84a17fdd097c4a1$var$Connector = function(_EventEmitter) {
    (0, $ea512c1c85f799dc$export$2e2bcd8739ae039)(Connector, _EventEmitter);
    var _super = $b84a17fdd097c4a1$var$_createSuper$2(Connector);
    function Connector(backend, store, services) {
        var _this;
        var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};
        (0, $b0d264660fcf3da0$export$2e2bcd8739ae039)(this, Connector);
        _this = _super.call(this);
        if ($b84a17fdd097c4a1$var$isIE10) $b84a17fdd097c4a1$var$EventEmitter.call((0, $83c6059b9c1e5b12$export$2e2bcd8739ae039)(_this));
        _this.backend = backend;
        _this.store = store;
        _this.services = services;
        _this.languageUtils = services.languageUtils;
        _this.options = options;
        _this.logger = $b84a17fdd097c4a1$var$baseLogger.create("backendConnector");
        _this.waitingReads = [];
        _this.maxParallelReads = options.maxParallelReads || 10;
        _this.readingCalls = 0;
        _this.maxRetries = options.maxRetries >= 0 ? options.maxRetries : 5;
        _this.retryTimeout = options.retryTimeout >= 1 ? options.retryTimeout : 350;
        _this.state = {};
        _this.queue = [];
        if (_this.backend && _this.backend.init) _this.backend.init(services, options.backend, options);
        return _this;
    }
    (0, $e1440005d306c330$export$2e2bcd8739ae039)(Connector, [
        {
            key: "queueLoad",
            value: function queueLoad(languages, namespaces, options, callback) {
                var _this2 = this;
                var toLoad = {};
                var pending = {};
                var toLoadLanguages = {};
                var toLoadNamespaces = {};
                languages.forEach(function(lng) {
                    var hasAllNamespaces = true;
                    namespaces.forEach(function(ns) {
                        var name = "".concat(lng, "|").concat(ns);
                        if (!options.reload && _this2.store.hasResourceBundle(lng, ns)) _this2.state[name] = 2;
                        else if (_this2.state[name] < 0) ;
                        else if (_this2.state[name] === 1) {
                            if (pending[name] === undefined) pending[name] = true;
                        } else {
                            _this2.state[name] = 1;
                            hasAllNamespaces = false;
                            if (pending[name] === undefined) pending[name] = true;
                            if (toLoad[name] === undefined) toLoad[name] = true;
                            if (toLoadNamespaces[ns] === undefined) toLoadNamespaces[ns] = true;
                        }
                    });
                    if (!hasAllNamespaces) toLoadLanguages[lng] = true;
                });
                if (Object.keys(toLoad).length || Object.keys(pending).length) this.queue.push({
                    pending: pending,
                    pendingCount: Object.keys(pending).length,
                    loaded: {},
                    errors: [],
                    callback: callback
                });
                return {
                    toLoad: Object.keys(toLoad),
                    pending: Object.keys(pending),
                    toLoadLanguages: Object.keys(toLoadLanguages),
                    toLoadNamespaces: Object.keys(toLoadNamespaces)
                };
            }
        },
        {
            key: "loaded",
            value: function loaded(name, err, data) {
                var s = name.split("|");
                var lng = s[0];
                var ns = s[1];
                if (err) this.emit("failedLoading", lng, ns, err);
                if (data) this.store.addResourceBundle(lng, ns, data);
                this.state[name] = err ? -1 : 2;
                var loaded = {};
                this.queue.forEach(function(q) {
                    $b84a17fdd097c4a1$var$pushPath(q.loaded, [
                        lng
                    ], ns);
                    $b84a17fdd097c4a1$var$removePending(q, name);
                    if (err) q.errors.push(err);
                    if (q.pendingCount === 0 && !q.done) {
                        Object.keys(q.loaded).forEach(function(l) {
                            if (!loaded[l]) loaded[l] = {};
                            var loadedKeys = q.loaded[l];
                            if (loadedKeys.length) loadedKeys.forEach(function(ns) {
                                if (loaded[l][ns] === undefined) loaded[l][ns] = true;
                            });
                        });
                        q.done = true;
                        if (q.errors.length) q.callback(q.errors);
                        else q.callback();
                    }
                });
                this.emit("loaded", loaded);
                this.queue = this.queue.filter(function(q) {
                    return !q.done;
                });
            }
        },
        {
            key: "read",
            value: function read(lng, ns, fcName) {
                var _this3 = this;
                var tried = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;
                var wait = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : this.retryTimeout;
                var callback = arguments.length > 5 ? arguments[5] : undefined;
                if (!lng.length) return callback(null, {});
                if (this.readingCalls >= this.maxParallelReads) {
                    this.waitingReads.push({
                        lng: lng,
                        ns: ns,
                        fcName: fcName,
                        tried: tried,
                        wait: wait,
                        callback: callback
                    });
                    return;
                }
                this.readingCalls++;
                return this.backend[fcName](lng, ns, function(err, data) {
                    _this3.readingCalls--;
                    if (_this3.waitingReads.length > 0) {
                        var next = _this3.waitingReads.shift();
                        _this3.read(next.lng, next.ns, next.fcName, next.tried, next.wait, next.callback);
                    }
                    if (err && data && tried < _this3.maxRetries) {
                        setTimeout(function() {
                            _this3.read.call(_this3, lng, ns, fcName, tried + 1, wait * 2, callback);
                        }, wait);
                        return;
                    }
                    callback(err, data);
                });
            }
        },
        {
            key: "prepareLoading",
            value: function prepareLoading(languages, namespaces) {
                var _this4 = this;
                var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
                var callback = arguments.length > 3 ? arguments[3] : undefined;
                if (!this.backend) {
                    this.logger.warn("No backend was added via i18next.use. Will not load resources.");
                    return callback && callback();
                }
                if (typeof languages === "string") languages = this.languageUtils.toResolveHierarchy(languages);
                if (typeof namespaces === "string") namespaces = [
                    namespaces
                ];
                var toLoad = this.queueLoad(languages, namespaces, options, callback);
                if (!toLoad.toLoad.length) {
                    if (!toLoad.pending.length) callback();
                    return null;
                }
                toLoad.toLoad.forEach(function(name) {
                    _this4.loadOne(name);
                });
            }
        },
        {
            key: "load",
            value: function load(languages, namespaces, callback) {
                this.prepareLoading(languages, namespaces, {}, callback);
            }
        },
        {
            key: "reload",
            value: function reload(languages, namespaces, callback) {
                this.prepareLoading(languages, namespaces, {
                    reload: true
                }, callback);
            }
        },
        {
            key: "loadOne",
            value: function loadOne(name) {
                var _this5 = this;
                var prefix = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : "";
                var s = name.split("|");
                var lng = s[0];
                var ns = s[1];
                this.read(lng, ns, "read", undefined, undefined, function(err, data) {
                    if (err) _this5.logger.warn("".concat(prefix, "loading namespace ").concat(ns, " for language ").concat(lng, " failed"), err);
                    if (!err && data) _this5.logger.log("".concat(prefix, "loaded namespace ").concat(ns, " for language ").concat(lng), data);
                    _this5.loaded(name, err, data);
                });
            }
        },
        {
            key: "saveMissing",
            value: function saveMissing(languages, namespace, key, fallbackValue, isUpdate) {
                var options = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : {};
                if (this.services.utils && this.services.utils.hasLoadedNamespace && !this.services.utils.hasLoadedNamespace(namespace)) {
                    this.logger.warn('did not save key "'.concat(key, '" as the namespace "').concat(namespace, '" was not yet loaded'), "This means something IS WRONG in your setup. You access the t function before i18next.init / i18next.loadNamespace / i18next.changeLanguage was done. Wait for the callback or Promise to resolve before accessing it!!!");
                    return;
                }
                if (key === undefined || key === null || key === "") return;
                if (this.backend && this.backend.create) this.backend.create(languages, namespace, key, fallbackValue, null, $b84a17fdd097c4a1$var$_objectSpread$5($b84a17fdd097c4a1$var$_objectSpread$5({}, options), {}, {
                    isUpdate: isUpdate
                }));
                if (!languages || !languages[0]) return;
                this.store.addResource(languages[0], namespace, key, fallbackValue);
            }
        }
    ]);
    return Connector;
}($b84a17fdd097c4a1$var$EventEmitter);
function $b84a17fdd097c4a1$var$get() {
    return {
        debug: false,
        initImmediate: true,
        ns: [
            "translation"
        ],
        defaultNS: [
            "translation"
        ],
        fallbackLng: [
            "dev"
        ],
        fallbackNS: false,
        supportedLngs: false,
        nonExplicitSupportedLngs: false,
        load: "all",
        preload: false,
        simplifyPluralSuffix: true,
        keySeparator: ".",
        nsSeparator: ":",
        pluralSeparator: "_",
        contextSeparator: "_",
        partialBundledLanguages: false,
        saveMissing: false,
        updateMissing: false,
        saveMissingTo: "fallback",
        saveMissingPlurals: true,
        missingKeyHandler: false,
        missingInterpolationHandler: false,
        postProcess: false,
        postProcessPassResolved: false,
        returnNull: true,
        returnEmptyString: true,
        returnObjects: false,
        joinArrays: false,
        returnedObjectHandler: false,
        parseMissingKeyHandler: false,
        appendNamespaceToMissingKey: false,
        appendNamespaceToCIMode: false,
        overloadTranslationOptionHandler: function handle(args) {
            var ret = {};
            if ((0, $e8f126e5d7889f85$export$2e2bcd8739ae039)(args[1]) === "object") ret = args[1];
            if (typeof args[1] === "string") ret.defaultValue = args[1];
            if (typeof args[2] === "string") ret.tDescription = args[2];
            if ((0, $e8f126e5d7889f85$export$2e2bcd8739ae039)(args[2]) === "object" || (0, $e8f126e5d7889f85$export$2e2bcd8739ae039)(args[3]) === "object") {
                var options = args[3] || args[2];
                Object.keys(options).forEach(function(key) {
                    ret[key] = options[key];
                });
            }
            return ret;
        },
        interpolation: {
            escapeValue: true,
            format: function format(value, _format, lng, options) {
                return value;
            },
            prefix: "{{",
            suffix: "}}",
            formatSeparator: ",",
            unescapePrefix: "-",
            nestingPrefix: "$t(",
            nestingSuffix: ")",
            nestingOptionsSeparator: ",",
            maxReplaces: 1000,
            skipOnVariables: true
        }
    };
}
function $b84a17fdd097c4a1$var$transformOptions(options) {
    if (typeof options.ns === "string") options.ns = [
        options.ns
    ];
    if (typeof options.fallbackLng === "string") options.fallbackLng = [
        options.fallbackLng
    ];
    if (typeof options.fallbackNS === "string") options.fallbackNS = [
        options.fallbackNS
    ];
    if (options.supportedLngs && options.supportedLngs.indexOf("cimode") < 0) options.supportedLngs = options.supportedLngs.concat([
        "cimode"
    ]);
    return options;
}
function $b84a17fdd097c4a1$var$ownKeys$6(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) symbols = symbols.filter(function(sym) {
            return Object.getOwnPropertyDescriptor(object, sym).enumerable;
        });
        keys.push.apply(keys, symbols);
    }
    return keys;
}
function $b84a17fdd097c4a1$var$_objectSpread$6(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        if (i % 2) $b84a17fdd097c4a1$var$ownKeys$6(Object(source), true).forEach(function(key) {
            (0, $8d002fd2b9a1c331$export$2e2bcd8739ae039)(target, key, source[key]);
        });
        else if (Object.getOwnPropertyDescriptors) Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
        else $b84a17fdd097c4a1$var$ownKeys$6(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
    }
    return target;
}
function $b84a17fdd097c4a1$var$_createSuper$3(Derived) {
    var hasNativeReflectConstruct = $b84a17fdd097c4a1$var$_isNativeReflectConstruct$3();
    return function _createSuperInternal() {
        var Super = (0, $5b8ddfbec539d1fd$export$2e2bcd8739ae039)(Derived), result;
        if (hasNativeReflectConstruct) {
            var NewTarget = (0, $5b8ddfbec539d1fd$export$2e2bcd8739ae039)(this).constructor;
            result = Reflect.construct(Super, arguments, NewTarget);
        } else result = Super.apply(this, arguments);
        return (0, $dd5a12836dec8168$export$2e2bcd8739ae039)(this, result);
    };
}
function $b84a17fdd097c4a1$var$_isNativeReflectConstruct$3() {
    if (typeof Reflect === "undefined" || !Reflect.construct) return false;
    if (Reflect.construct.sham) return false;
    if (typeof Proxy === "function") return true;
    try {
        Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {}));
        return true;
    } catch (e) {
        return false;
    }
}
function $b84a17fdd097c4a1$var$noop() {}
function $b84a17fdd097c4a1$var$bindMemberFunctions(inst) {
    var mems = Object.getOwnPropertyNames(Object.getPrototypeOf(inst));
    mems.forEach(function(mem) {
        if (typeof inst[mem] === "function") inst[mem] = inst[mem].bind(inst);
    });
}
var $b84a17fdd097c4a1$var$I18n = function(_EventEmitter) {
    (0, $ea512c1c85f799dc$export$2e2bcd8739ae039)(I18n, _EventEmitter);
    var _super = $b84a17fdd097c4a1$var$_createSuper$3(I18n);
    function I18n() {
        var _this;
        var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
        var callback = arguments.length > 1 ? arguments[1] : undefined;
        (0, $b0d264660fcf3da0$export$2e2bcd8739ae039)(this, I18n);
        _this = _super.call(this);
        if ($b84a17fdd097c4a1$var$isIE10) $b84a17fdd097c4a1$var$EventEmitter.call((0, $83c6059b9c1e5b12$export$2e2bcd8739ae039)(_this));
        _this.options = $b84a17fdd097c4a1$var$transformOptions(options);
        _this.services = {};
        _this.logger = $b84a17fdd097c4a1$var$baseLogger;
        _this.modules = {
            external: []
        };
        $b84a17fdd097c4a1$var$bindMemberFunctions((0, $83c6059b9c1e5b12$export$2e2bcd8739ae039)(_this));
        if (callback && !_this.isInitialized && !options.isClone) {
            if (!_this.options.initImmediate) {
                _this.init(options, callback);
                return (0, $dd5a12836dec8168$export$2e2bcd8739ae039)(_this, (0, $83c6059b9c1e5b12$export$2e2bcd8739ae039)(_this));
            }
            setTimeout(function() {
                _this.init(options, callback);
            }, 0);
        }
        return _this;
    }
    (0, $e1440005d306c330$export$2e2bcd8739ae039)(I18n, [
        {
            key: "init",
            value: function init() {
                var _this2 = this;
                var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
                var callback = arguments.length > 1 ? arguments[1] : undefined;
                if (typeof options === "function") {
                    callback = options;
                    options = {};
                }
                if (!options.defaultNS && options.defaultNS !== false && options.ns) {
                    if (typeof options.ns === "string") options.defaultNS = options.ns;
                    else if (options.ns.indexOf("translation") < 0) options.defaultNS = options.ns[0];
                }
                var defOpts = $b84a17fdd097c4a1$var$get();
                this.options = $b84a17fdd097c4a1$var$_objectSpread$6($b84a17fdd097c4a1$var$_objectSpread$6($b84a17fdd097c4a1$var$_objectSpread$6({}, defOpts), this.options), $b84a17fdd097c4a1$var$transformOptions(options));
                if (this.options.compatibilityAPI !== "v1") this.options.interpolation = $b84a17fdd097c4a1$var$_objectSpread$6($b84a17fdd097c4a1$var$_objectSpread$6({}, defOpts.interpolation), this.options.interpolation);
                if (options.keySeparator !== undefined) this.options.userDefinedKeySeparator = options.keySeparator;
                if (options.nsSeparator !== undefined) this.options.userDefinedNsSeparator = options.nsSeparator;
                function createClassOnDemand(ClassOrObject) {
                    if (!ClassOrObject) return null;
                    if (typeof ClassOrObject === "function") return new ClassOrObject();
                    return ClassOrObject;
                }
                if (!this.options.isClone) {
                    if (this.modules.logger) $b84a17fdd097c4a1$var$baseLogger.init(createClassOnDemand(this.modules.logger), this.options);
                    else $b84a17fdd097c4a1$var$baseLogger.init(null, this.options);
                    var formatter;
                    if (this.modules.formatter) formatter = this.modules.formatter;
                    else if (typeof Intl !== "undefined") formatter = $b84a17fdd097c4a1$var$Formatter;
                    var lu = new $b84a17fdd097c4a1$var$LanguageUtil(this.options);
                    this.store = new $b84a17fdd097c4a1$var$ResourceStore(this.options.resources, this.options);
                    var s = this.services;
                    s.logger = $b84a17fdd097c4a1$var$baseLogger;
                    s.resourceStore = this.store;
                    s.languageUtils = lu;
                    s.pluralResolver = new $b84a17fdd097c4a1$var$PluralResolver(lu, {
                        prepend: this.options.pluralSeparator,
                        compatibilityJSON: this.options.compatibilityJSON,
                        simplifyPluralSuffix: this.options.simplifyPluralSuffix
                    });
                    if (formatter && (!this.options.interpolation.format || this.options.interpolation.format === defOpts.interpolation.format)) {
                        s.formatter = createClassOnDemand(formatter);
                        s.formatter.init(s, this.options);
                        this.options.interpolation.format = s.formatter.format.bind(s.formatter);
                    }
                    s.interpolator = new $b84a17fdd097c4a1$var$Interpolator(this.options);
                    s.utils = {
                        hasLoadedNamespace: this.hasLoadedNamespace.bind(this)
                    };
                    s.backendConnector = new $b84a17fdd097c4a1$var$Connector(createClassOnDemand(this.modules.backend), s.resourceStore, s, this.options);
                    s.backendConnector.on("*", function(event) {
                        for(var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++)args[_key - 1] = arguments[_key];
                        _this2.emit.apply(_this2, [
                            event
                        ].concat(args));
                    });
                    if (this.modules.languageDetector) {
                        s.languageDetector = createClassOnDemand(this.modules.languageDetector);
                        s.languageDetector.init(s, this.options.detection, this.options);
                    }
                    if (this.modules.i18nFormat) {
                        s.i18nFormat = createClassOnDemand(this.modules.i18nFormat);
                        if (s.i18nFormat.init) s.i18nFormat.init(this);
                    }
                    this.translator = new $b84a17fdd097c4a1$var$Translator(this.services, this.options);
                    this.translator.on("*", function(event) {
                        for(var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++)args[_key2 - 1] = arguments[_key2];
                        _this2.emit.apply(_this2, [
                            event
                        ].concat(args));
                    });
                    this.modules.external.forEach(function(m) {
                        if (m.init) m.init(_this2);
                    });
                }
                this.format = this.options.interpolation.format;
                if (!callback) callback = $b84a17fdd097c4a1$var$noop;
                if (this.options.fallbackLng && !this.services.languageDetector && !this.options.lng) {
                    var codes = this.services.languageUtils.getFallbackCodes(this.options.fallbackLng);
                    if (codes.length > 0 && codes[0] !== "dev") this.options.lng = codes[0];
                }
                if (!this.services.languageDetector && !this.options.lng) this.logger.warn("init: no languageDetector is used and no lng is defined");
                var storeApi = [
                    "getResource",
                    "hasResourceBundle",
                    "getResourceBundle",
                    "getDataByLanguage"
                ];
                storeApi.forEach(function(fcName) {
                    _this2[fcName] = function() {
                        var _this2$store;
                        return (_this2$store = _this2.store)[fcName].apply(_this2$store, arguments);
                    };
                });
                var storeApiChained = [
                    "addResource",
                    "addResources",
                    "addResourceBundle",
                    "removeResourceBundle"
                ];
                storeApiChained.forEach(function(fcName) {
                    _this2[fcName] = function() {
                        var _this2$store2;
                        (_this2$store2 = _this2.store)[fcName].apply(_this2$store2, arguments);
                        return _this2;
                    };
                });
                var deferred = $b84a17fdd097c4a1$var$defer();
                var load = function load() {
                    var finish = function finish(err, t) {
                        if (_this2.isInitialized && !_this2.initializedStoreOnce) _this2.logger.warn("init: i18next is already initialized. You should call init just once!");
                        _this2.isInitialized = true;
                        if (!_this2.options.isClone) _this2.logger.log("initialized", _this2.options);
                        _this2.emit("initialized", _this2.options);
                        deferred.resolve(t);
                        callback(err, t);
                    };
                    if (_this2.languages && _this2.options.compatibilityAPI !== "v1" && !_this2.isInitialized) return finish(null, _this2.t.bind(_this2));
                    _this2.changeLanguage(_this2.options.lng, finish);
                };
                if (this.options.resources || !this.options.initImmediate) load();
                else setTimeout(load, 0);
                return deferred;
            }
        },
        {
            key: "loadResources",
            value: function loadResources(language) {
                var _this3 = this;
                var callback = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : $b84a17fdd097c4a1$var$noop;
                var usedCallback = callback;
                var usedLng = typeof language === "string" ? language : this.language;
                if (typeof language === "function") usedCallback = language;
                if (!this.options.resources || this.options.partialBundledLanguages) {
                    if (usedLng && usedLng.toLowerCase() === "cimode") return usedCallback();
                    var toLoad = [];
                    var append = function append(lng) {
                        if (!lng) return;
                        var lngs = _this3.services.languageUtils.toResolveHierarchy(lng);
                        lngs.forEach(function(l) {
                            if (toLoad.indexOf(l) < 0) toLoad.push(l);
                        });
                    };
                    if (!usedLng) {
                        var fallbacks = this.services.languageUtils.getFallbackCodes(this.options.fallbackLng);
                        fallbacks.forEach(function(l) {
                            return append(l);
                        });
                    } else append(usedLng);
                    if (this.options.preload) this.options.preload.forEach(function(l) {
                        return append(l);
                    });
                    this.services.backendConnector.load(toLoad, this.options.ns, function(e) {
                        if (!e && !_this3.resolvedLanguage && _this3.language) _this3.setResolvedLanguage(_this3.language);
                        usedCallback(e);
                    });
                } else usedCallback(null);
            }
        },
        {
            key: "reloadResources",
            value: function reloadResources(lngs, ns, callback) {
                var deferred = $b84a17fdd097c4a1$var$defer();
                if (!lngs) lngs = this.languages;
                if (!ns) ns = this.options.ns;
                if (!callback) callback = $b84a17fdd097c4a1$var$noop;
                this.services.backendConnector.reload(lngs, ns, function(err) {
                    deferred.resolve();
                    callback(err);
                });
                return deferred;
            }
        },
        {
            key: "use",
            value: function use(module) {
                if (!module) throw new Error("You are passing an undefined module! Please check the object you are passing to i18next.use()");
                if (!module.type) throw new Error("You are passing a wrong module! Please check the object you are passing to i18next.use()");
                if (module.type === "backend") this.modules.backend = module;
                if (module.type === "logger" || module.log && module.warn && module.error) this.modules.logger = module;
                if (module.type === "languageDetector") this.modules.languageDetector = module;
                if (module.type === "i18nFormat") this.modules.i18nFormat = module;
                if (module.type === "postProcessor") $b84a17fdd097c4a1$var$postProcessor.addPostProcessor(module);
                if (module.type === "formatter") this.modules.formatter = module;
                if (module.type === "3rdParty") this.modules.external.push(module);
                return this;
            }
        },
        {
            key: "setResolvedLanguage",
            value: function setResolvedLanguage(l) {
                if (!l || !this.languages) return;
                if ([
                    "cimode",
                    "dev"
                ].indexOf(l) > -1) return;
                for(var li = 0; li < this.languages.length; li++){
                    var lngInLngs = this.languages[li];
                    if ([
                        "cimode",
                        "dev"
                    ].indexOf(lngInLngs) > -1) continue;
                    if (this.store.hasLanguageSomeTranslations(lngInLngs)) {
                        this.resolvedLanguage = lngInLngs;
                        break;
                    }
                }
            }
        },
        {
            key: "changeLanguage",
            value: function changeLanguage(lng, callback) {
                var _this4 = this;
                this.isLanguageChangingTo = lng;
                var deferred = $b84a17fdd097c4a1$var$defer();
                this.emit("languageChanging", lng);
                var setLngProps = function setLngProps(l) {
                    _this4.language = l;
                    _this4.languages = _this4.services.languageUtils.toResolveHierarchy(l);
                    _this4.resolvedLanguage = undefined;
                    _this4.setResolvedLanguage(l);
                };
                var done = function done(err, l) {
                    if (l) {
                        setLngProps(l);
                        _this4.translator.changeLanguage(l);
                        _this4.isLanguageChangingTo = undefined;
                        _this4.emit("languageChanged", l);
                        _this4.logger.log("languageChanged", l);
                    } else _this4.isLanguageChangingTo = undefined;
                    deferred.resolve(function() {
                        return _this4.t.apply(_this4, arguments);
                    });
                    if (callback) callback(err, function() {
                        return _this4.t.apply(_this4, arguments);
                    });
                };
                var setLng = function setLng(lngs) {
                    if (!lng && !lngs && _this4.services.languageDetector) lngs = [];
                    var l = typeof lngs === "string" ? lngs : _this4.services.languageUtils.getBestMatchFromCodes(lngs);
                    if (l) {
                        if (!_this4.language) setLngProps(l);
                        if (!_this4.translator.language) _this4.translator.changeLanguage(l);
                        if (_this4.services.languageDetector) _this4.services.languageDetector.cacheUserLanguage(l);
                    }
                    _this4.loadResources(l, function(err) {
                        done(err, l);
                    });
                };
                if (!lng && this.services.languageDetector && !this.services.languageDetector.async) setLng(this.services.languageDetector.detect());
                else if (!lng && this.services.languageDetector && this.services.languageDetector.async) this.services.languageDetector.detect(setLng);
                else setLng(lng);
                return deferred;
            }
        },
        {
            key: "getFixedT",
            value: function getFixedT(lng, ns, keyPrefix) {
                var _this5 = this;
                var fixedT = function fixedT(key, opts) {
                    var options;
                    if ((0, $e8f126e5d7889f85$export$2e2bcd8739ae039)(opts) !== "object") {
                        for(var _len3 = arguments.length, rest = new Array(_len3 > 2 ? _len3 - 2 : 0), _key3 = 2; _key3 < _len3; _key3++)rest[_key3 - 2] = arguments[_key3];
                        options = _this5.options.overloadTranslationOptionHandler([
                            key,
                            opts
                        ].concat(rest));
                    } else options = $b84a17fdd097c4a1$var$_objectSpread$6({}, opts);
                    options.lng = options.lng || fixedT.lng;
                    options.lngs = options.lngs || fixedT.lngs;
                    options.ns = options.ns || fixedT.ns;
                    options.keyPrefix = options.keyPrefix || keyPrefix || fixedT.keyPrefix;
                    var keySeparator = _this5.options.keySeparator || ".";
                    var resultKey = options.keyPrefix ? "".concat(options.keyPrefix).concat(keySeparator).concat(key) : key;
                    return _this5.t(resultKey, options);
                };
                if (typeof lng === "string") fixedT.lng = lng;
                else fixedT.lngs = lng;
                fixedT.ns = ns;
                fixedT.keyPrefix = keyPrefix;
                return fixedT;
            }
        },
        {
            key: "t",
            value: function t() {
                var _this$translator;
                return this.translator && (_this$translator = this.translator).translate.apply(_this$translator, arguments);
            }
        },
        {
            key: "exists",
            value: function exists() {
                var _this$translator2;
                return this.translator && (_this$translator2 = this.translator).exists.apply(_this$translator2, arguments);
            }
        },
        {
            key: "setDefaultNamespace",
            value: function setDefaultNamespace(ns) {
                this.options.defaultNS = ns;
            }
        },
        {
            key: "hasLoadedNamespace",
            value: function hasLoadedNamespace(ns) {
                var _this6 = this;
                var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
                if (!this.isInitialized) {
                    this.logger.warn("hasLoadedNamespace: i18next was not initialized", this.languages);
                    return false;
                }
                if (!this.languages || !this.languages.length) {
                    this.logger.warn("hasLoadedNamespace: i18n.languages were undefined or empty", this.languages);
                    return false;
                }
                var lng = this.resolvedLanguage || this.languages[0];
                var fallbackLng = this.options ? this.options.fallbackLng : false;
                var lastLng = this.languages[this.languages.length - 1];
                if (lng.toLowerCase() === "cimode") return true;
                var loadNotPending = function loadNotPending(l, n) {
                    var loadState = _this6.services.backendConnector.state["".concat(l, "|").concat(n)];
                    return loadState === -1 || loadState === 2;
                };
                if (options.precheck) {
                    var preResult = options.precheck(this, loadNotPending);
                    if (preResult !== undefined) return preResult;
                }
                if (this.hasResourceBundle(lng, ns)) return true;
                if (!this.services.backendConnector.backend || this.options.resources && !this.options.partialBundledLanguages) return true;
                if (loadNotPending(lng, ns) && (!fallbackLng || loadNotPending(lastLng, ns))) return true;
                return false;
            }
        },
        {
            key: "loadNamespaces",
            value: function loadNamespaces(ns, callback) {
                var _this7 = this;
                var deferred = $b84a17fdd097c4a1$var$defer();
                if (!this.options.ns) {
                    callback && callback();
                    return Promise.resolve();
                }
                if (typeof ns === "string") ns = [
                    ns
                ];
                ns.forEach(function(n) {
                    if (_this7.options.ns.indexOf(n) < 0) _this7.options.ns.push(n);
                });
                this.loadResources(function(err) {
                    deferred.resolve();
                    if (callback) callback(err);
                });
                return deferred;
            }
        },
        {
            key: "loadLanguages",
            value: function loadLanguages(lngs, callback) {
                var deferred = $b84a17fdd097c4a1$var$defer();
                if (typeof lngs === "string") lngs = [
                    lngs
                ];
                var preloaded = this.options.preload || [];
                var newLngs = lngs.filter(function(lng) {
                    return preloaded.indexOf(lng) < 0;
                });
                if (!newLngs.length) {
                    if (callback) callback();
                    return Promise.resolve();
                }
                this.options.preload = preloaded.concat(newLngs);
                this.loadResources(function(err) {
                    deferred.resolve();
                    if (callback) callback(err);
                });
                return deferred;
            }
        },
        {
            key: "dir",
            value: function dir(lng) {
                if (!lng) lng = this.resolvedLanguage || (this.languages && this.languages.length > 0 ? this.languages[0] : this.language);
                if (!lng) return "rtl";
                var rtlLngs = [
                    "ar",
                    "shu",
                    "sqr",
                    "ssh",
                    "xaa",
                    "yhd",
                    "yud",
                    "aao",
                    "abh",
                    "abv",
                    "acm",
                    "acq",
                    "acw",
                    "acx",
                    "acy",
                    "adf",
                    "ads",
                    "aeb",
                    "aec",
                    "afb",
                    "ajp",
                    "apc",
                    "apd",
                    "arb",
                    "arq",
                    "ars",
                    "ary",
                    "arz",
                    "auz",
                    "avl",
                    "ayh",
                    "ayl",
                    "ayn",
                    "ayp",
                    "bbz",
                    "pga",
                    "he",
                    "iw",
                    "ps",
                    "pbt",
                    "pbu",
                    "pst",
                    "prp",
                    "prd",
                    "ug",
                    "ur",
                    "ydd",
                    "yds",
                    "yih",
                    "ji",
                    "yi",
                    "hbo",
                    "men",
                    "xmn",
                    "fa",
                    "jpr",
                    "peo",
                    "pes",
                    "prs",
                    "dv",
                    "sam",
                    "ckb"
                ];
                return rtlLngs.indexOf(this.services.languageUtils.getLanguagePartFromCode(lng)) > -1 || lng.toLowerCase().indexOf("-arab") > 1 ? "rtl" : "ltr";
            }
        },
        {
            key: "cloneInstance",
            value: function cloneInstance() {
                var _this8 = this;
                var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
                var callback = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : $b84a17fdd097c4a1$var$noop;
                var mergedOptions = $b84a17fdd097c4a1$var$_objectSpread$6($b84a17fdd097c4a1$var$_objectSpread$6($b84a17fdd097c4a1$var$_objectSpread$6({}, this.options), options), {
                    isClone: true
                });
                var clone = new I18n(mergedOptions);
                if (options.debug !== undefined || options.prefix !== undefined) clone.logger = clone.logger.clone(options);
                var membersToCopy = [
                    "store",
                    "services",
                    "language"
                ];
                membersToCopy.forEach(function(m) {
                    clone[m] = _this8[m];
                });
                clone.services = $b84a17fdd097c4a1$var$_objectSpread$6({}, this.services);
                clone.services.utils = {
                    hasLoadedNamespace: clone.hasLoadedNamespace.bind(clone)
                };
                clone.translator = new $b84a17fdd097c4a1$var$Translator(clone.services, clone.options);
                clone.translator.on("*", function(event) {
                    for(var _len4 = arguments.length, args = new Array(_len4 > 1 ? _len4 - 1 : 0), _key4 = 1; _key4 < _len4; _key4++)args[_key4 - 1] = arguments[_key4];
                    clone.emit.apply(clone, [
                        event
                    ].concat(args));
                });
                clone.init(mergedOptions, callback);
                clone.translator.options = clone.options;
                clone.translator.backendConnector.services.utils = {
                    hasLoadedNamespace: clone.hasLoadedNamespace.bind(clone)
                };
                return clone;
            }
        },
        {
            key: "toJSON",
            value: function toJSON() {
                return {
                    options: this.options,
                    store: this.store,
                    language: this.language,
                    languages: this.languages,
                    resolvedLanguage: this.resolvedLanguage
                };
            }
        }
    ]);
    return I18n;
}($b84a17fdd097c4a1$var$EventEmitter);
(0, $8d002fd2b9a1c331$export$2e2bcd8739ae039)($b84a17fdd097c4a1$var$I18n, "createInstance", function() {
    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
    var callback = arguments.length > 1 ? arguments[1] : undefined;
    return new $b84a17fdd097c4a1$var$I18n(options, callback);
});
var $b84a17fdd097c4a1$var$instance = $b84a17fdd097c4a1$var$I18n.createInstance();
$b84a17fdd097c4a1$var$instance.createInstance = $b84a17fdd097c4a1$var$I18n.createInstance;
var $b84a17fdd097c4a1$export$99152e8d49ca4e7d = $b84a17fdd097c4a1$var$instance.createInstance;
var $b84a17fdd097c4a1$export$2cd8252107eb640b = $b84a17fdd097c4a1$var$instance.init;
var $b84a17fdd097c4a1$export$d3d08d944062d7e = $b84a17fdd097c4a1$var$instance.loadResources;
var $b84a17fdd097c4a1$export$a5d9bf5d83fcab09 = $b84a17fdd097c4a1$var$instance.reloadResources;
var $b84a17fdd097c4a1$export$1f96ae73734a86cc = $b84a17fdd097c4a1$var$instance.use;
var $b84a17fdd097c4a1$export$61465194746e7fd2 = $b84a17fdd097c4a1$var$instance.changeLanguage;
var $b84a17fdd097c4a1$export$f90d180fc7da3b3b = $b84a17fdd097c4a1$var$instance.getFixedT;
var $b84a17fdd097c4a1$export$625550452a3fa3ec = $b84a17fdd097c4a1$var$instance.t;
var $b84a17fdd097c4a1$export$f7e9f41ea797a17 = $b84a17fdd097c4a1$var$instance.exists;
var $b84a17fdd097c4a1$export$2b4b218e406d2d00 = $b84a17fdd097c4a1$var$instance.setDefaultNamespace;
var $b84a17fdd097c4a1$export$93d9ee97c1ad3f31 = $b84a17fdd097c4a1$var$instance.hasLoadedNamespace;
var $b84a17fdd097c4a1$export$83be934b53fff43b = $b84a17fdd097c4a1$var$instance.loadNamespaces;
var $b84a17fdd097c4a1$export$8cd7e7a54fa865bc = $b84a17fdd097c4a1$var$instance.loadLanguages;
var $b84a17fdd097c4a1$export$2e2bcd8739ae039 = $b84a17fdd097c4a1$var$instance;


var $5af89b4a17df68cc$exports = {};
function $5af89b4a17df68cc$var$_classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) throw new TypeError("Cannot call a class as a function");
}
$5af89b4a17df68cc$exports = $5af89b4a17df68cc$var$_classCallCheck, $5af89b4a17df68cc$exports.__esModule = true, $5af89b4a17df68cc$exports["default"] = $5af89b4a17df68cc$exports;


var $e689da5ad43e3fc4$exports = {};
var $44b9f0e346e4d140$exports = {};
var $5cdb893ab5319183$exports = {};
function $5cdb893ab5319183$var$_typeof(obj) {
    "@babel/helpers - typeof";
    return $5cdb893ab5319183$exports = $5cdb893ab5319183$var$_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(obj) {
        return typeof obj;
    } : function(obj) {
        return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
    }, $5cdb893ab5319183$exports.__esModule = true, $5cdb893ab5319183$exports["default"] = $5cdb893ab5319183$exports, $5cdb893ab5319183$var$_typeof(obj);
}
$5cdb893ab5319183$exports = $5cdb893ab5319183$var$_typeof, $5cdb893ab5319183$exports.__esModule = true, $5cdb893ab5319183$exports["default"] = $5cdb893ab5319183$exports;


var $44b9f0e346e4d140$var$_typeof = $5cdb893ab5319183$exports.default;
var $94a4394273d13938$exports = {};

var $94a4394273d13938$var$_typeof = $5cdb893ab5319183$exports.default;
function $94a4394273d13938$var$_toPrimitive(input, hint) {
    if ($94a4394273d13938$var$_typeof(input) !== "object" || input === null) return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
        var res = prim.call(input, hint || "default");
        if ($94a4394273d13938$var$_typeof(res) !== "object") return res;
        throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
}
$94a4394273d13938$exports = $94a4394273d13938$var$_toPrimitive, $94a4394273d13938$exports.__esModule = true, $94a4394273d13938$exports["default"] = $94a4394273d13938$exports;


function $44b9f0e346e4d140$var$_toPropertyKey(arg) {
    var key = $94a4394273d13938$exports(arg, "string");
    return $44b9f0e346e4d140$var$_typeof(key) === "symbol" ? key : String(key);
}
$44b9f0e346e4d140$exports = $44b9f0e346e4d140$var$_toPropertyKey, $44b9f0e346e4d140$exports.__esModule = true, $44b9f0e346e4d140$exports["default"] = $44b9f0e346e4d140$exports;


function $e689da5ad43e3fc4$var$_defineProperties(target, props) {
    for(var i = 0; i < props.length; i++){
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor) descriptor.writable = true;
        Object.defineProperty(target, $44b9f0e346e4d140$exports(descriptor.key), descriptor);
    }
}
function $e689da5ad43e3fc4$var$_createClass(Constructor, protoProps, staticProps) {
    if (protoProps) $e689da5ad43e3fc4$var$_defineProperties(Constructor.prototype, protoProps);
    if (staticProps) $e689da5ad43e3fc4$var$_defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", {
        writable: false
    });
    return Constructor;
}
$e689da5ad43e3fc4$exports = $e689da5ad43e3fc4$var$_createClass, $e689da5ad43e3fc4$exports.__esModule = true, $e689da5ad43e3fc4$exports["default"] = $e689da5ad43e3fc4$exports;


var $e0329cfc87271e64$exports = {};

function $e0329cfc87271e64$var$_defineProperty(obj, key, value) {
    key = $44b9f0e346e4d140$exports(key);
    if (key in obj) Object.defineProperty(obj, key, {
        value: value,
        enumerable: true,
        configurable: true,
        writable: true
    });
    else obj[key] = value;
    return obj;
}
$e0329cfc87271e64$exports = $e0329cfc87271e64$var$_defineProperty, $e0329cfc87271e64$exports.__esModule = true, $e0329cfc87271e64$exports["default"] = $e0329cfc87271e64$exports;



var $laauJ = parcelRequire("laauJ");
var $1189757ed155c55c$var$matchHtmlEntity = /&(?:amp|#38|lt|#60|gt|#62|apos|#39|quot|#34|nbsp|#160|copy|#169|reg|#174|hellip|#8230|#x2F|#47);/g;
var $1189757ed155c55c$var$htmlEntities = {
    "&amp;": "&",
    "&#38;": "&",
    "&lt;": "<",
    "&#60;": "<",
    "&gt;": ">",
    "&#62;": ">",
    "&apos;": "'",
    "&#39;": "'",
    "&quot;": '"',
    "&#34;": '"',
    "&nbsp;": " ",
    "&#160;": " ",
    "&copy;": "\xa9",
    "&#169;": "\xa9",
    "&reg;": "\xae",
    "&#174;": "\xae",
    "&hellip;": "…",
    "&#8230;": "…",
    "&#x2F;": "/",
    "&#47;": "/"
};
var $1189757ed155c55c$var$unescapeHtmlEntity = function unescapeHtmlEntity(m) {
    return $1189757ed155c55c$var$htmlEntities[m];
};
var $1189757ed155c55c$export$e8bacd2802a88316 = function unescape(text) {
    return text.replace($1189757ed155c55c$var$matchHtmlEntity, $1189757ed155c55c$var$unescapeHtmlEntity);
};


function $8d6effaaa4d6cb49$var$ownKeys(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) symbols = symbols.filter(function(sym) {
            return Object.getOwnPropertyDescriptor(object, sym).enumerable;
        });
        keys.push.apply(keys, symbols);
    }
    return keys;
}
function $8d6effaaa4d6cb49$var$_objectSpread(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        if (i % 2) $8d6effaaa4d6cb49$var$ownKeys(Object(source), true).forEach(function(key) {
            (0, (/*@__PURE__*/$parcel$interopDefault($e0329cfc87271e64$exports)))(target, key, source[key]);
        });
        else if (Object.getOwnPropertyDescriptors) Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
        else $8d6effaaa4d6cb49$var$ownKeys(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
    }
    return target;
}
var $8d6effaaa4d6cb49$var$defaultOptions = {
    bindI18n: "languageChanged",
    bindI18nStore: "",
    transEmptyNodeValue: "",
    transSupportBasicHtmlNodes: true,
    transWrapTextNodes: "",
    transKeepBasicHtmlNodesFor: [
        "br",
        "strong",
        "i",
        "p"
    ],
    useSuspense: true,
    unescape: (0, $1189757ed155c55c$export$e8bacd2802a88316)
};
var $8d6effaaa4d6cb49$var$i18nInstance;
var $8d6effaaa4d6cb49$export$5603ab5ced17ce64 = (0, $laauJ.createContext)();
function $8d6effaaa4d6cb49$export$2e2366488d12e20d() {
    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
    $8d6effaaa4d6cb49$var$defaultOptions = $8d6effaaa4d6cb49$var$_objectSpread($8d6effaaa4d6cb49$var$_objectSpread({}, $8d6effaaa4d6cb49$var$defaultOptions), options);
}
function $8d6effaaa4d6cb49$export$212bb2fc580a90a8() {
    return $8d6effaaa4d6cb49$var$defaultOptions;
}
var $8d6effaaa4d6cb49$export$ea171b67e3820290 = function() {
    function ReportNamespaces() {
        (0, (/*@__PURE__*/$parcel$interopDefault($5af89b4a17df68cc$exports)))(this, ReportNamespaces);
        this.usedNamespaces = {};
    }
    (0, (/*@__PURE__*/$parcel$interopDefault($e689da5ad43e3fc4$exports)))(ReportNamespaces, [
        {
            key: "addUsedNamespaces",
            value: function addUsedNamespaces(namespaces) {
                var _this = this;
                namespaces.forEach(function(ns) {
                    if (!_this.usedNamespaces[ns]) _this.usedNamespaces[ns] = true;
                });
            }
        },
        {
            key: "getUsedNamespaces",
            value: function getUsedNamespaces() {
                return Object.keys(this.usedNamespaces);
            }
        }
    ]);
    return ReportNamespaces;
}();
function $8d6effaaa4d6cb49$export$a039134f2fc7e0(instance) {
    $8d6effaaa4d6cb49$var$i18nInstance = instance;
}
function $8d6effaaa4d6cb49$export$64af334f494c2f47() {
    return $8d6effaaa4d6cb49$var$i18nInstance;
}
var $8d6effaaa4d6cb49$export$ae7e14d40d89f296 = {
    type: "3rdParty",
    init: function init(instance) {
        $8d6effaaa4d6cb49$export$2e2366488d12e20d(instance.options.react);
        $8d6effaaa4d6cb49$export$a039134f2fc7e0(instance);
    }
};
function $8d6effaaa4d6cb49$export$30ff0342ccf735a(ForComponent) {
    return function(ctx) {
        return new Promise(function(resolve) {
            var i18nInitialProps = $8d6effaaa4d6cb49$export$704200e5d0b9e8f();
            if (ForComponent.getInitialProps) ForComponent.getInitialProps(ctx).then(function(componentsInitialProps) {
                resolve($8d6effaaa4d6cb49$var$_objectSpread($8d6effaaa4d6cb49$var$_objectSpread({}, componentsInitialProps), i18nInitialProps));
            });
            else resolve(i18nInitialProps);
        });
    };
}
function $8d6effaaa4d6cb49$export$704200e5d0b9e8f() {
    var i18n = $8d6effaaa4d6cb49$export$64af334f494c2f47();
    var namespaces = i18n.reportNamespaces ? i18n.reportNamespaces.getUsedNamespaces() : [];
    var ret = {};
    var initialI18nStore = {};
    i18n.languages.forEach(function(l) {
        initialI18nStore[l] = {};
        namespaces.forEach(function(ns) {
            initialI18nStore[l][ns] = i18n.getResourceBundle(l, ns) || {};
        });
    });
    ret.initialI18nStore = initialI18nStore;
    ret.initialLanguage = i18n.language;
    return ret;
}


function $7090533d2355e7a2$var$_typeof(obj) {
    "@babel/helpers - typeof";
    return $7090533d2355e7a2$var$_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(obj) {
        return typeof obj;
    } : function(obj) {
        return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
    }, $7090533d2355e7a2$var$_typeof(obj);
}
var $7090533d2355e7a2$var$arr = [];
var $7090533d2355e7a2$var$each = $7090533d2355e7a2$var$arr.forEach;
var $7090533d2355e7a2$var$slice = $7090533d2355e7a2$var$arr.slice;
function $7090533d2355e7a2$export$ebe90cb607ad99e(obj) {
    $7090533d2355e7a2$var$each.call($7090533d2355e7a2$var$slice.call(arguments, 1), function(source) {
        if (source) {
            for(var prop in source)if (obj[prop] === undefined) obj[prop] = source[prop];
        }
    });
    return obj;
}
function $7090533d2355e7a2$export$87022daa49baf612() {
    return typeof XMLHttpRequest === "function" || (typeof XMLHttpRequest === "undefined" ? "undefined" : $7090533d2355e7a2$var$_typeof(XMLHttpRequest)) === "object";
}
function $7090533d2355e7a2$var$isPromise(maybePromise) {
    return !!maybePromise && typeof maybePromise.then === "function";
}
function $7090533d2355e7a2$export$1625492ec82002b9(maybePromise) {
    if ($7090533d2355e7a2$var$isPromise(maybePromise)) return maybePromise;
    return Promise.resolve(maybePromise);
}



var $49eacaab3060ff93$exports = {};
var $49eacaab3060ff93$var$fetchApi;
if (typeof fetch === "function") {
    if (typeof $parcel$global !== "undefined" && $parcel$global.fetch) $49eacaab3060ff93$var$fetchApi = $parcel$global.fetch;
    else if (typeof window !== "undefined" && window.fetch) $49eacaab3060ff93$var$fetchApi = window.fetch;
    else $49eacaab3060ff93$var$fetchApi = fetch;
}

if (typeof window === "undefined" || typeof window.document === "undefined") {
    var $49eacaab3060ff93$var$f = $49eacaab3060ff93$var$fetchApi || (parcelRequire("ldyI0"));
    if ($49eacaab3060ff93$var$f.default) $49eacaab3060ff93$var$f = $49eacaab3060ff93$var$f.default;
    $49eacaab3060ff93$exports.default = $49eacaab3060ff93$var$f;
    $49eacaab3060ff93$exports = $49eacaab3060ff93$exports.default;
}


function $64bd153c842a3149$var$_typeof(obj) {
    "@babel/helpers - typeof";
    return $64bd153c842a3149$var$_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(obj) {
        return typeof obj;
    } : function(obj) {
        return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
    }, $64bd153c842a3149$var$_typeof(obj);
}
var $64bd153c842a3149$var$fetchApi;
if (typeof fetch === "function") {
    if (typeof $parcel$global !== "undefined" && $parcel$global.fetch) $64bd153c842a3149$var$fetchApi = $parcel$global.fetch;
    else if (typeof window !== "undefined" && window.fetch) $64bd153c842a3149$var$fetchApi = window.fetch;
    else $64bd153c842a3149$var$fetchApi = fetch;
}
var $64bd153c842a3149$var$XmlHttpRequestApi;
if ((0, $7090533d2355e7a2$export$87022daa49baf612)()) {
    if (typeof $parcel$global !== "undefined" && $parcel$global.XMLHttpRequest) $64bd153c842a3149$var$XmlHttpRequestApi = $parcel$global.XMLHttpRequest;
    else if (typeof window !== "undefined" && window.XMLHttpRequest) $64bd153c842a3149$var$XmlHttpRequestApi = window.XMLHttpRequest;
}
var $64bd153c842a3149$var$ActiveXObjectApi;
if (typeof ActiveXObject === "function") {
    if (typeof $parcel$global !== "undefined" && $parcel$global.ActiveXObject) $64bd153c842a3149$var$ActiveXObjectApi = $parcel$global.ActiveXObject;
    else if (typeof window !== "undefined" && window.ActiveXObject) $64bd153c842a3149$var$ActiveXObjectApi = window.ActiveXObject;
}
if (!$64bd153c842a3149$var$fetchApi && $49eacaab3060ff93$exports && !$64bd153c842a3149$var$XmlHttpRequestApi && !$64bd153c842a3149$var$ActiveXObjectApi) $64bd153c842a3149$var$fetchApi = $49eacaab3060ff93$exports.default || $49eacaab3060ff93$exports;
if (typeof $64bd153c842a3149$var$fetchApi !== "function") $64bd153c842a3149$var$fetchApi = undefined;
var $64bd153c842a3149$var$addQueryString = function addQueryString(url, params) {
    if (params && $64bd153c842a3149$var$_typeof(params) === "object") {
        var queryString = "";
        for(var paramName in params)queryString += "&" + encodeURIComponent(paramName) + "=" + encodeURIComponent(params[paramName]);
        if (!queryString) return url;
        url = url + (url.indexOf("?") !== -1 ? "&" : "?") + queryString.slice(1);
    }
    return url;
};
var $64bd153c842a3149$var$fetchIt = function fetchIt(url, fetchOptions, callback) {
    $64bd153c842a3149$var$fetchApi(url, fetchOptions).then(function(response) {
        if (!response.ok) return callback(response.statusText || "Error", {
            status: response.status
        });
        response.text().then(function(data) {
            callback(null, {
                status: response.status,
                data: data
            });
        }).catch(callback);
    }).catch(callback);
};
var $64bd153c842a3149$var$omitFetchOptions = false;
var $64bd153c842a3149$var$requestWithFetch = function requestWithFetch(options, url, payload, callback) {
    if (options.queryStringParams) url = $64bd153c842a3149$var$addQueryString(url, options.queryStringParams);
    var headers = (0, $7090533d2355e7a2$export$ebe90cb607ad99e)({}, typeof options.customHeaders === "function" ? options.customHeaders() : options.customHeaders);
    if (payload) headers["Content-Type"] = "application/json";
    var reqOptions = typeof options.requestOptions === "function" ? options.requestOptions(payload) : options.requestOptions;
    var fetchOptions = (0, $7090533d2355e7a2$export$ebe90cb607ad99e)({
        method: payload ? "POST" : "GET",
        body: payload ? options.stringify(payload) : undefined,
        headers: headers
    }, $64bd153c842a3149$var$omitFetchOptions ? {} : reqOptions);
    try {
        $64bd153c842a3149$var$fetchIt(url, fetchOptions, callback);
    } catch (e) {
        if (!reqOptions || Object.keys(reqOptions).length === 0 || !e.message || e.message.indexOf("not implemented") < 0) return callback(e);
        try {
            Object.keys(reqOptions).forEach(function(opt) {
                delete fetchOptions[opt];
            });
            $64bd153c842a3149$var$fetchIt(url, fetchOptions, callback);
            $64bd153c842a3149$var$omitFetchOptions = true;
        } catch (err) {
            callback(err);
        }
    }
};
var $64bd153c842a3149$var$requestWithXmlHttpRequest = function requestWithXmlHttpRequest(options, url, payload, callback) {
    if (payload && $64bd153c842a3149$var$_typeof(payload) === "object") payload = $64bd153c842a3149$var$addQueryString("", payload).slice(1);
    if (options.queryStringParams) url = $64bd153c842a3149$var$addQueryString(url, options.queryStringParams);
    try {
        var x;
        if ($64bd153c842a3149$var$XmlHttpRequestApi) x = new $64bd153c842a3149$var$XmlHttpRequestApi();
        else x = new $64bd153c842a3149$var$ActiveXObjectApi("MSXML2.XMLHTTP.3.0");
        x.open(payload ? "POST" : "GET", url, 1);
        if (!options.crossDomain) x.setRequestHeader("X-Requested-With", "XMLHttpRequest");
        x.withCredentials = !!options.withCredentials;
        if (payload) x.setRequestHeader("Content-Type", "application/x-www-form-urlencoded");
        if (x.overrideMimeType) x.overrideMimeType("application/json");
        var h = options.customHeaders;
        h = typeof h === "function" ? h() : h;
        if (h) for(var i in h)x.setRequestHeader(i, h[i]);
        x.onreadystatechange = function() {
            x.readyState > 3 && callback(x.status >= 400 ? x.statusText : null, {
                status: x.status,
                data: x.responseText
            });
        };
        x.send(payload);
    } catch (e) {
        console && console.log(e);
    }
};
var $64bd153c842a3149$var$request = function request(options, url, payload, callback) {
    if (typeof payload === "function") {
        callback = payload;
        payload = undefined;
    }
    callback = callback || function() {};
    if ($64bd153c842a3149$var$fetchApi) return $64bd153c842a3149$var$requestWithFetch(options, url, payload, callback);
    if ((0, $7090533d2355e7a2$export$87022daa49baf612)() || typeof ActiveXObject === "function") return $64bd153c842a3149$var$requestWithXmlHttpRequest(options, url, payload, callback);
    callback(new Error("No fetch and no xhr implementation found!"));
};
var $64bd153c842a3149$export$2e2bcd8739ae039 = $64bd153c842a3149$var$request;


function $19f0215fc7fd2a9a$var$_classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) throw new TypeError("Cannot call a class as a function");
}
function $19f0215fc7fd2a9a$var$_defineProperties(target, props) {
    for(var i = 0; i < props.length; i++){
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor) descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
    }
}
function $19f0215fc7fd2a9a$var$_createClass(Constructor, protoProps, staticProps) {
    if (protoProps) $19f0215fc7fd2a9a$var$_defineProperties(Constructor.prototype, protoProps);
    if (staticProps) $19f0215fc7fd2a9a$var$_defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", {
        writable: false
    });
    return Constructor;
}
function $19f0215fc7fd2a9a$var$_defineProperty(obj, key, value) {
    if (key in obj) Object.defineProperty(obj, key, {
        value: value,
        enumerable: true,
        configurable: true,
        writable: true
    });
    else obj[key] = value;
    return obj;
}
var $19f0215fc7fd2a9a$var$getDefaults = function getDefaults() {
    return {
        loadPath: "/locales/{{lng}}/{{ns}}.json",
        addPath: "/locales/add/{{lng}}/{{ns}}",
        allowMultiLoading: false,
        parse: function parse(data) {
            return JSON.parse(data);
        },
        stringify: JSON.stringify,
        parsePayload: function parsePayload(namespace, key, fallbackValue) {
            return $19f0215fc7fd2a9a$var$_defineProperty({}, key, fallbackValue || "");
        },
        request: (0, $64bd153c842a3149$export$2e2bcd8739ae039),
        reloadInterval: typeof window !== "undefined" ? false : 3600000,
        customHeaders: {},
        queryStringParams: {},
        crossDomain: false,
        withCredentials: false,
        overrideMimeType: false,
        requestOptions: {
            mode: "cors",
            credentials: "same-origin",
            cache: "default"
        }
    };
};
var $19f0215fc7fd2a9a$var$Backend = function() {
    function Backend(services) {
        var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
        var allOptions = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
        $19f0215fc7fd2a9a$var$_classCallCheck(this, Backend);
        this.services = services;
        this.options = options;
        this.allOptions = allOptions;
        this.type = "backend";
        this.init(services, options, allOptions);
    }
    $19f0215fc7fd2a9a$var$_createClass(Backend, [
        {
            key: "init",
            value: function init(services) {
                var _this = this;
                var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
                var allOptions = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
                this.services = services;
                this.options = (0, $7090533d2355e7a2$export$ebe90cb607ad99e)(options, this.options || {}, $19f0215fc7fd2a9a$var$getDefaults());
                this.allOptions = allOptions;
                if (this.services && this.options.reloadInterval) setInterval(function() {
                    return _this.reload();
                }, this.options.reloadInterval);
            }
        },
        {
            key: "readMulti",
            value: function readMulti(languages, namespaces, callback) {
                this._readAny(languages, languages, namespaces, namespaces, callback);
            }
        },
        {
            key: "read",
            value: function read(language, namespace, callback) {
                this._readAny([
                    language
                ], language, [
                    namespace
                ], namespace, callback);
            }
        },
        {
            key: "_readAny",
            value: function _readAny(languages, loadUrlLanguages, namespaces, loadUrlNamespaces, callback) {
                var _this2 = this;
                var loadPath = this.options.loadPath;
                if (typeof this.options.loadPath === "function") loadPath = this.options.loadPath(languages, namespaces);
                loadPath = (0, $7090533d2355e7a2$export$1625492ec82002b9)(loadPath);
                loadPath.then(function(resolvedLoadPath) {
                    if (!resolvedLoadPath) return callback(null, {});
                    var url = _this2.services.interpolator.interpolate(resolvedLoadPath, {
                        lng: languages.join("+"),
                        ns: namespaces.join("+")
                    });
                    _this2.loadUrl(url, callback, loadUrlLanguages, loadUrlNamespaces);
                });
            }
        },
        {
            key: "loadUrl",
            value: function loadUrl(url, callback, languages, namespaces) {
                var _this3 = this;
                this.options.request(this.options, url, undefined, function(err, res) {
                    if (res && (res.status >= 500 && res.status < 600 || !res.status)) return callback("failed loading " + url + "; status code: " + res.status, true);
                    if (res && res.status >= 400 && res.status < 500) return callback("failed loading " + url + "; status code: " + res.status, false);
                    if (!res && err && err.message && err.message.indexOf("Failed to fetch") > -1) return callback("failed loading " + url + ": " + err.message, true);
                    if (err) return callback(err, false);
                    var ret, parseErr;
                    try {
                        if (typeof res.data === "string") ret = _this3.options.parse(res.data, languages, namespaces);
                        else ret = res.data;
                    } catch (e) {
                        parseErr = "failed parsing " + url + " to json";
                    }
                    if (parseErr) return callback(parseErr, false);
                    callback(null, ret);
                });
            }
        },
        {
            key: "create",
            value: function create(languages, namespace, key, fallbackValue, callback) {
                var _this4 = this;
                if (!this.options.addPath) return;
                if (typeof languages === "string") languages = [
                    languages
                ];
                var payload = this.options.parsePayload(namespace, key, fallbackValue);
                var finished = 0;
                var dataArray = [];
                var resArray = [];
                languages.forEach(function(lng) {
                    var addPath = _this4.options.addPath;
                    if (typeof _this4.options.addPath === "function") addPath = _this4.options.addPath(lng, namespace);
                    var url = _this4.services.interpolator.interpolate(addPath, {
                        lng: lng,
                        ns: namespace
                    });
                    _this4.options.request(_this4.options, url, payload, function(data, res) {
                        finished += 1;
                        dataArray.push(data);
                        resArray.push(res);
                        if (finished === languages.length) {
                            if (callback) callback(dataArray, resArray);
                        }
                    });
                });
            }
        },
        {
            key: "reload",
            value: function reload() {
                var _this5 = this;
                var _this$services = this.services, backendConnector = _this$services.backendConnector, languageUtils = _this$services.languageUtils, logger = _this$services.logger;
                var currentLanguage = backendConnector.language;
                if (currentLanguage && currentLanguage.toLowerCase() === "cimode") return;
                var toLoad = [];
                var append = function append(lng) {
                    var lngs = languageUtils.toResolveHierarchy(lng);
                    lngs.forEach(function(l) {
                        if (toLoad.indexOf(l) < 0) toLoad.push(l);
                    });
                };
                append(currentLanguage);
                if (this.allOptions.preload) this.allOptions.preload.forEach(function(l) {
                    return append(l);
                });
                toLoad.forEach(function(lng) {
                    _this5.allOptions.ns.forEach(function(ns) {
                        backendConnector.read(lng, ns, "read", null, null, function(err, data) {
                            if (err) logger.warn("loading namespace ".concat(ns, " for language ").concat(lng, " failed"), err);
                            if (!err && data) logger.log("loaded namespace ".concat(ns, " for language ").concat(lng), data);
                            backendConnector.loaded("".concat(lng, "|").concat(ns), err, data);
                        });
                    });
                });
            }
        }
    ]);
    return Backend;
}();
$19f0215fc7fd2a9a$var$Backend.type = "backend";
var $19f0215fc7fd2a9a$export$2e2bcd8739ae039 = $19f0215fc7fd2a9a$var$Backend;




var $065fea0be8742d07$var$arr = [];
var $065fea0be8742d07$var$each = $065fea0be8742d07$var$arr.forEach;
var $065fea0be8742d07$var$slice = $065fea0be8742d07$var$arr.slice;
function $065fea0be8742d07$var$defaults(obj) {
    $065fea0be8742d07$var$each.call($065fea0be8742d07$var$slice.call(arguments, 1), function(source) {
        if (source) {
            for(var prop in source)if (obj[prop] === undefined) obj[prop] = source[prop];
        }
    });
    return obj;
}
// eslint-disable-next-line no-control-regex
var $065fea0be8742d07$var$fieldContentRegExp = /^[\u0009\u0020-\u007e\u0080-\u00ff]+$/;
var $065fea0be8742d07$var$serializeCookie = function serializeCookie(name, val, options) {
    var opt = options || {};
    opt.path = opt.path || "/";
    var value = encodeURIComponent(val);
    var str = "".concat(name, "=").concat(value);
    if (opt.maxAge > 0) {
        var maxAge = opt.maxAge - 0;
        if (Number.isNaN(maxAge)) throw new Error("maxAge should be a Number");
        str += "; Max-Age=".concat(Math.floor(maxAge));
    }
    if (opt.domain) {
        if (!$065fea0be8742d07$var$fieldContentRegExp.test(opt.domain)) throw new TypeError("option domain is invalid");
        str += "; Domain=".concat(opt.domain);
    }
    if (opt.path) {
        if (!$065fea0be8742d07$var$fieldContentRegExp.test(opt.path)) throw new TypeError("option path is invalid");
        str += "; Path=".concat(opt.path);
    }
    if (opt.expires) {
        if (typeof opt.expires.toUTCString !== "function") throw new TypeError("option expires is invalid");
        str += "; Expires=".concat(opt.expires.toUTCString());
    }
    if (opt.httpOnly) str += "; HttpOnly";
    if (opt.secure) str += "; Secure";
    if (opt.sameSite) {
        var sameSite = typeof opt.sameSite === "string" ? opt.sameSite.toLowerCase() : opt.sameSite;
        switch(sameSite){
            case true:
                str += "; SameSite=Strict";
                break;
            case "lax":
                str += "; SameSite=Lax";
                break;
            case "strict":
                str += "; SameSite=Strict";
                break;
            case "none":
                str += "; SameSite=None";
                break;
            default:
                throw new TypeError("option sameSite is invalid");
        }
    }
    return str;
};
var $065fea0be8742d07$var$cookie = {
    create: function create(name, value, minutes, domain) {
        var cookieOptions = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : {
            path: "/",
            sameSite: "strict"
        };
        if (minutes) {
            cookieOptions.expires = new Date();
            cookieOptions.expires.setTime(cookieOptions.expires.getTime() + minutes * 60000);
        }
        if (domain) cookieOptions.domain = domain;
        document.cookie = $065fea0be8742d07$var$serializeCookie(name, encodeURIComponent(value), cookieOptions);
    },
    read: function read(name) {
        var nameEQ = "".concat(name, "=");
        var ca = document.cookie.split(";");
        for(var i = 0; i < ca.length; i++){
            var c = ca[i];
            while(c.charAt(0) === " ")c = c.substring(1, c.length);
            if (c.indexOf(nameEQ) === 0) return c.substring(nameEQ.length, c.length);
        }
        return null;
    },
    remove: function remove(name) {
        this.create(name, "", -1);
    }
};
var $065fea0be8742d07$var$cookie$1 = {
    name: "cookie",
    lookup: function lookup(options) {
        var found;
        if (options.lookupCookie && typeof document !== "undefined") {
            var c = $065fea0be8742d07$var$cookie.read(options.lookupCookie);
            if (c) found = c;
        }
        return found;
    },
    cacheUserLanguage: function cacheUserLanguage(lng, options) {
        if (options.lookupCookie && typeof document !== "undefined") $065fea0be8742d07$var$cookie.create(options.lookupCookie, lng, options.cookieMinutes, options.cookieDomain, options.cookieOptions);
    }
};
var $065fea0be8742d07$var$querystring = {
    name: "querystring",
    lookup: function lookup(options) {
        var found;
        if (typeof window !== "undefined") {
            var search = window.location.search;
            if (!window.location.search && window.location.hash && window.location.hash.indexOf("?") > -1) search = window.location.hash.substring(window.location.hash.indexOf("?"));
            var query = search.substring(1);
            var params = query.split("&");
            for(var i = 0; i < params.length; i++){
                var pos = params[i].indexOf("=");
                if (pos > 0) {
                    var key = params[i].substring(0, pos);
                    if (key === options.lookupQuerystring) found = params[i].substring(pos + 1);
                }
            }
        }
        return found;
    }
};
var $065fea0be8742d07$var$hasLocalStorageSupport = null;
var $065fea0be8742d07$var$localStorageAvailable = function localStorageAvailable() {
    if ($065fea0be8742d07$var$hasLocalStorageSupport !== null) return $065fea0be8742d07$var$hasLocalStorageSupport;
    try {
        $065fea0be8742d07$var$hasLocalStorageSupport = window !== "undefined" && window.localStorage !== null;
        var testKey = "i18next.translate.boo";
        window.localStorage.setItem(testKey, "foo");
        window.localStorage.removeItem(testKey);
    } catch (e) {
        $065fea0be8742d07$var$hasLocalStorageSupport = false;
    }
    return $065fea0be8742d07$var$hasLocalStorageSupport;
};
var $065fea0be8742d07$var$localStorage = {
    name: "localStorage",
    lookup: function lookup(options) {
        var found;
        if (options.lookupLocalStorage && $065fea0be8742d07$var$localStorageAvailable()) {
            var lng = window.localStorage.getItem(options.lookupLocalStorage);
            if (lng) found = lng;
        }
        return found;
    },
    cacheUserLanguage: function cacheUserLanguage(lng, options) {
        if (options.lookupLocalStorage && $065fea0be8742d07$var$localStorageAvailable()) window.localStorage.setItem(options.lookupLocalStorage, lng);
    }
};
var $065fea0be8742d07$var$hasSessionStorageSupport = null;
var $065fea0be8742d07$var$sessionStorageAvailable = function sessionStorageAvailable() {
    if ($065fea0be8742d07$var$hasSessionStorageSupport !== null) return $065fea0be8742d07$var$hasSessionStorageSupport;
    try {
        $065fea0be8742d07$var$hasSessionStorageSupport = window !== "undefined" && window.sessionStorage !== null;
        var testKey = "i18next.translate.boo";
        window.sessionStorage.setItem(testKey, "foo");
        window.sessionStorage.removeItem(testKey);
    } catch (e) {
        $065fea0be8742d07$var$hasSessionStorageSupport = false;
    }
    return $065fea0be8742d07$var$hasSessionStorageSupport;
};
var $065fea0be8742d07$var$sessionStorage = {
    name: "sessionStorage",
    lookup: function lookup(options) {
        var found;
        if (options.lookupSessionStorage && $065fea0be8742d07$var$sessionStorageAvailable()) {
            var lng = window.sessionStorage.getItem(options.lookupSessionStorage);
            if (lng) found = lng;
        }
        return found;
    },
    cacheUserLanguage: function cacheUserLanguage(lng, options) {
        if (options.lookupSessionStorage && $065fea0be8742d07$var$sessionStorageAvailable()) window.sessionStorage.setItem(options.lookupSessionStorage, lng);
    }
};
var $065fea0be8742d07$var$navigator$1 = {
    name: "navigator",
    lookup: function lookup(options) {
        var found = [];
        if (typeof navigator !== "undefined") {
            if (navigator.languages) // chrome only; not an array, so can't use .push.apply instead of iterating
            for(var i = 0; i < navigator.languages.length; i++)found.push(navigator.languages[i]);
            if (navigator.userLanguage) found.push(navigator.userLanguage);
            if (navigator.language) found.push(navigator.language);
        }
        return found.length > 0 ? found : undefined;
    }
};
var $065fea0be8742d07$var$htmlTag = {
    name: "htmlTag",
    lookup: function lookup(options) {
        var found;
        var htmlTag = options.htmlTag || (typeof document !== "undefined" ? document.documentElement : null);
        if (htmlTag && typeof htmlTag.getAttribute === "function") found = htmlTag.getAttribute("lang");
        return found;
    }
};
var $065fea0be8742d07$var$path = {
    name: "path",
    lookup: function lookup(options) {
        var found;
        if (typeof window !== "undefined") {
            var language = window.location.pathname.match(/\/([a-zA-Z-]*)/g);
            if (language instanceof Array) {
                if (typeof options.lookupFromPathIndex === "number") {
                    if (typeof language[options.lookupFromPathIndex] !== "string") return undefined;
                    found = language[options.lookupFromPathIndex].replace("/", "");
                } else found = language[0].replace("/", "");
            }
        }
        return found;
    }
};
var $065fea0be8742d07$var$subdomain = {
    name: "subdomain",
    lookup: function lookup(options) {
        // If given get the subdomain index else 1
        var lookupFromSubdomainIndex = typeof options.lookupFromSubdomainIndex === "number" ? options.lookupFromSubdomainIndex + 1 : 1; // get all matches if window.location. is existing
        // first item of match is the match itself and the second is the first group macht which sould be the first subdomain match
        // is the hostname no public domain get the or option of localhost
        var language = typeof window !== "undefined" && window.location && window.location.hostname && window.location.hostname.match(/^(\w{2,5})\.(([a-z0-9-]{1,63}\.[a-z]{2,6})|localhost)/i); // if there is no match (null) return undefined
        if (!language) return undefined; // return the given group match
        return language[lookupFromSubdomainIndex];
    }
};
function $065fea0be8742d07$var$getDefaults() {
    return {
        order: [
            "querystring",
            "cookie",
            "localStorage",
            "sessionStorage",
            "navigator",
            "htmlTag"
        ],
        lookupQuerystring: "lng",
        lookupCookie: "i18next",
        lookupLocalStorage: "i18nextLng",
        lookupSessionStorage: "i18nextLng",
        // cache user language
        caches: [
            "localStorage"
        ],
        excludeCacheFor: [
            "cimode"
        ] // cookieMinutes: 10,
    };
}
var $065fea0be8742d07$export$2e2bcd8739ae039 = /*#__PURE__*/ function() {
    function Browser(services) {
        var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
        (0, $b0d264660fcf3da0$export$2e2bcd8739ae039)(this, Browser);
        this.type = "languageDetector";
        this.detectors = {};
        this.init(services, options);
    }
    (0, $e1440005d306c330$export$2e2bcd8739ae039)(Browser, [
        {
            key: "init",
            value: function init(services) {
                var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
                var i18nOptions = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
                this.services = services;
                this.options = $065fea0be8742d07$var$defaults(options, this.options || {}, $065fea0be8742d07$var$getDefaults()); // backwards compatibility
                if (this.options.lookupFromUrlIndex) this.options.lookupFromPathIndex = this.options.lookupFromUrlIndex;
                this.i18nOptions = i18nOptions;
                this.addDetector($065fea0be8742d07$var$cookie$1);
                this.addDetector($065fea0be8742d07$var$querystring);
                this.addDetector($065fea0be8742d07$var$localStorage);
                this.addDetector($065fea0be8742d07$var$sessionStorage);
                this.addDetector($065fea0be8742d07$var$navigator$1);
                this.addDetector($065fea0be8742d07$var$htmlTag);
                this.addDetector($065fea0be8742d07$var$path);
                this.addDetector($065fea0be8742d07$var$subdomain);
            }
        },
        {
            key: "addDetector",
            value: function addDetector(detector) {
                this.detectors[detector.name] = detector;
            }
        },
        {
            key: "detect",
            value: function detect(detectionOrder) {
                var _this = this;
                if (!detectionOrder) detectionOrder = this.options.order;
                var detected = [];
                detectionOrder.forEach(function(detectorName) {
                    if (_this.detectors[detectorName]) {
                        var lookup = _this.detectors[detectorName].lookup(_this.options);
                        if (lookup && typeof lookup === "string") lookup = [
                            lookup
                        ];
                        if (lookup) detected = detected.concat(lookup);
                    }
                });
                if (this.services.languageUtils.getBestMatchFromCodes) return detected; // new i18next v19.5.0
                return detected.length > 0 ? detected[0] : null; // a little backward compatibility
            }
        },
        {
            key: "cacheUserLanguage",
            value: function cacheUserLanguage(lng, caches) {
                var _this2 = this;
                if (!caches) caches = this.options.caches;
                if (!caches) return;
                if (this.options.excludeCacheFor && this.options.excludeCacheFor.indexOf(lng) > -1) return;
                caches.forEach(function(cacheName) {
                    if (_this2.detectors[cacheName]) _this2.detectors[cacheName].cacheUserLanguage(lng, _this2.options);
                });
            }
        }
    ]);
    return Browser;
}();
$065fea0be8742d07$export$2e2bcd8739ae039.type = "languageDetector";


var $1745880347f5e8d0$exports = {};
$1745880347f5e8d0$exports = JSON.parse('{"farsi":true,"focus":true,"timer":false}');


var $a7c88fdc6f6e6b09$exports = {};
$a7c88fdc6f6e6b09$exports = JSON.parse('{"farsi":false,"focus":true,"timer":false}');


var $b24b44daa4fd6720$exports = {};
$b24b44daa4fd6720$exports = JSON.parse('{"farsi":true,"focus":false,"timer":false}');


const $c146f3ff8c09f649$var$findFeatures = ()=>{
    return 0, (/*@__PURE__*/$parcel$interopDefault($b24b44daa4fd6720$exports));
};
const $c146f3ff8c09f649$var$features = $c146f3ff8c09f649$var$findFeatures();
const $c146f3ff8c09f649$export$25eaa035e2e3a214 = (featureName)=>Boolean($c146f3ff8c09f649$var$features[featureName]);


const $4606b9bc154be2ad$export$d0d68bb9ed2c643d = [
    {
        value: "fr",
        label: "Fran\xe7ais"
    },
    {
        value: "en",
        label: "English"
    },
    (0, $c146f3ff8c09f649$export$25eaa035e2e3a214)("farsi") ? {
        value: "fa",
        label: "فارسی"
    } : null
].filter(Boolean);
(0, $b84a17fdd097c4a1$export$2e2bcd8739ae039)// load translation using http -> see /public/locales (i.e. https://github.com/i18next/react-i18next/tree/master/example/react/public/locales)
// learn more: https://github.com/i18next/i18next-http-backend
// want your translations to be loaded from a professional CDN? => https://github.com/locize/react-tutorial#step-2---use-the-locize-cdn
.use((0, $19f0215fc7fd2a9a$export$2e2bcd8739ae039))// detect user language
// learn more: https://github.com/i18next/i18next-browser-languageDetector
.use((0, $065fea0be8742d07$export$2e2bcd8739ae039))// pass the i18n instance to react-i18next.
.use((0, $8d6effaaa4d6cb49$export$ae7e14d40d89f296))// init i18next
// for all options read: https://www.i18next.com/overview/configuration-options
.init({
    ns: [
        "default"
    ],
    fallbackLng: "en",
    debug: false,
    load: "all",
    supportedLngs: $4606b9bc154be2ad$export$d0d68bb9ed2c643d.map((l)=>l.value),
    interpolation: {
        escapeValue: false
    },
    backend: {
        loadPath: `/locales/{{lng}}/{{ns}}.json`
    }
});
var $4606b9bc154be2ad$export$2e2bcd8739ae039 = (0, $b84a17fdd097c4a1$export$2e2bcd8739ae039);


/* eslint-disable sonarjs/cognitive-complexity */ // This optional code is used to register a service worker.
// register() is not called by default.
// This lets the app load faster on subsequent visits in production, and gives
// it offline capabilities. However, it also means that developers (and users)
// will only see deployed updates on subsequent visits to a page, after all the
// existing tabs open on the page have been closed, since previously cached
// resources are updated in the background.
// To learn more about the benefits of this model and instructions on how to
// opt-in, read https://cra.link/PWA
const $3f4aca45445a3e1c$var$isLocalhost = Boolean(window.location.hostname === "localhost" || // [::1] is the IPv6 localhost address.
window.location.hostname === "[::1]" || // 127.0.0.0/8 are considered localhost for IPv4.
window.location.hostname.match(/^127(?:\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));
function $3f4aca45445a3e1c$export$6503ec6e8aabbaf(config) {
    if ("serviceWorker" in navigator) {
        // The URL constructor is available in all browsers that support SW.
        const publicUrl = new URL(undefined, window.location.href);
        if (publicUrl.origin !== window.location.origin) // Our service worker won't work if PUBLIC_URL is on a different origin
        // from what our page is served on. This might happen if a CDN is used to
        // serve assets; see https://github.com/facebook/create-react-app/issues/2374
        return;
        window.addEventListener("load", ()=>{
            const swUrl = `${undefined}/service-worker.js`;
            if ($3f4aca45445a3e1c$var$isLocalhost) {
                // This is running on localhost. Let's check if a service worker still exists or not.
                $3f4aca45445a3e1c$var$checkValidServiceWorker(swUrl, config);
                // Add some additional logging to localhost, pointing developers to the
                // service worker/PWA documentation.
                navigator.serviceWorker.ready.then(()=>{
                    console.warn("This web app is being served cache-first by a service worker. To learn more, visit https://cra.link/PWA");
                });
            } else // Is not localhost. Just register service worker
            $3f4aca45445a3e1c$var$registerValidSW(swUrl, config);
        });
    }
}
function $3f4aca45445a3e1c$var$registerValidSW(swUrl, config) {
    navigator.serviceWorker.register(swUrl).then((registration)=>{
        registration.onupdatefound = ()=>{
            const installingWorker = registration.installing;
            if (installingWorker == null) return;
            installingWorker.onstatechange = ()=>{
                if (installingWorker.state === "installed") {
                    if (navigator.serviceWorker.controller) {
                        // At this point, the updated precached content has been fetched,
                        // but the previous service worker will still serve the older
                        // content until all client tabs are closed.
                        console.warn("New content is available and will be used when all tabs for this page are closed. See https://cra.link/PWA.");
                        // Execute callback
                        if (config && config.onUpdate) config.onUpdate(registration);
                    } else {
                        // At this point, everything has been precached.
                        // It's the perfect time to display a
                        // "Content is cached for offline use." message.
                        console.warn("Content is cached for offline use.");
                        // Execute callback
                        if (config && config.onSuccess) config.onSuccess(registration);
                    }
                }
            };
        };
    }).catch((error)=>{
        console.error("Error during service worker registration:", error);
    });
}
function $3f4aca45445a3e1c$var$checkValidServiceWorker(swUrl, config) {
    // Check if the service worker can be found. If it can't reload the page.
    fetch(swUrl, {
        headers: {
            "Service-Worker": "script"
        }
    }).then((response)=>{
        // Ensure service worker exists, and that we really are getting a JS file.
        const contentType = response.headers.get("content-type");
        if (response.status === 404 || contentType != null && contentType.indexOf("javascript") === -1) // No service worker found. Probably a different app. Reload the page.
        navigator.serviceWorker.ready.then((registration)=>{
            registration.unregister().then(()=>{
                window.location.reload();
            });
        });
        else // Service worker found. Proceed as normal.
        $3f4aca45445a3e1c$var$registerValidSW(swUrl, config);
    }).catch(()=>{
        console.error("No internet connection found. App is running in offline mode.");
    });
}
function $3f4aca45445a3e1c$export$d07f55d4c15c0440() {
    if ("serviceWorker" in navigator) navigator.serviceWorker.ready.then((registration)=>{
        registration.unregister();
    }).catch((error)=>{
        console.error(error.message);
    });
}



var $f12606d6457926ba$exports = {};
"use strict";
Object.defineProperty($f12606d6457926ba$exports, "__esModule", {
    value: true
});
$f12606d6457926ba$exports.useMagicLink = $f12606d6457926ba$exports.MagicLinkErrorCode = $f12606d6457926ba$exports.isMagicLinkError = void 0;

var $fOt1z = parcelRequire("fOt1z");

$fOt1z.__exportStar((parcelRequire("aImsM")), $f12606d6457926ba$exports);

$fOt1z.__exportStar((parcelRequire("dp31I")), $f12606d6457926ba$exports);

$fOt1z.__exportStar((parcelRequire("fBe5P")), $f12606d6457926ba$exports);

var $rLPvf = parcelRequire("rLPvf");
Object.defineProperty($f12606d6457926ba$exports, "isMagicLinkError", {
    enumerable: true,
    get: function() {
        return $rLPvf.isMagicLinkError;
    }
});
Object.defineProperty($f12606d6457926ba$exports, "MagicLinkErrorCode", {
    enumerable: true,
    get: function() {
        return $rLPvf.MagicLinkErrorCode;
    }
});

var $bHx4m = parcelRequire("bHx4m");
Object.defineProperty($f12606d6457926ba$exports, "useMagicLink", {
    enumerable: true,
    get: function() {
        return $bHx4m.useMagicLink;
    }
});
/**
 * Vite does not define `global` by default
 * One workaround is to use the `define` config prop
 * https://vitejs.dev/config/#define
 * We are solving this in the SDK level to reduce setup steps.
 */ if (typeof $parcel$global === "undefined" && typeof window !== "undefined" && !window.global) window.global = window;



const $f75e7a344f618f37$var$AuthProvider = ({ children: children  })=>{
    const navigate = (0, $48ba1f31742d01ea$export$9770f232ac06a008)();
    console.log("process.env.REACT_APP_CLERK_PUBLISHABLE_KEY", "pk_test_ZmxlZXQtY3ViLTk0LmNsZXJrLmFjY291bnRzLmRldiQ", "https://us-central1-cookbook-beta-46bc5.cloudfunctions.net/api");
    return /*#__PURE__*/ (0, $b6a3286edf44722b$exports.jsx)((0, $f12606d6457926ba$exports.ClerkProvider), {
        publishableKey: "pk_test_ZmxlZXQtY3ViLTk0LmNsZXJrLmFjY291bnRzLmRldiQ" ?? "",
        navigate: (to)=>navigate(to),
        children: children
    });
};
var $f75e7a344f618f37$export$2e2bcd8739ae039 = $f75e7a344f618f37$var$AuthProvider;


const $0f8050d200c0829e$var$root = (0, (/*@__PURE__*/$parcel$interopDefault($4395a3bfab7cc8d5$exports))).createRoot(document.getElementById("root"));
// eslint-disable-next-line i18next/no-literal-string
const $0f8050d200c0829e$var$App = ()=>/*#__PURE__*/ (0, $b6a3286edf44722b$exports.jsx)("div", {
        children: "foo"
    });
$0f8050d200c0829e$var$root.render(/*#__PURE__*/ (0, $b6a3286edf44722b$exports.jsx)((0, (/*@__PURE__*/$parcel$interopDefault($laauJ))).StrictMode, {
    children: /*#__PURE__*/ (0, $b6a3286edf44722b$exports.jsx)((0, $de8f4a6bfd6923d4$export$4719288a8f5f7e71), {
        children: /*#__PURE__*/ (0, $b6a3286edf44722b$exports.jsx)((0, $646c75eca4d3ce21$export$9ba4e89fdfa1fc54), {
            children: /*#__PURE__*/ (0, $b6a3286edf44722b$exports.jsx)((0, $f75e7a344f618f37$export$2e2bcd8739ae039), {
                children: /*#__PURE__*/ (0, $b6a3286edf44722b$exports.jsx)((0, $84ac92c3b5686760$export$2e2bcd8739ae039), {
                    store: (0, $217fdb9e67d743e2$export$2e2bcd8739ae039),
                    children: /*#__PURE__*/ (0, $b6a3286edf44722b$exports.jsx)($0f8050d200c0829e$var$App, {})
                })
            })
        })
    })
}));
// If you want to start measuring performance in your app, pass a function
// to log results (for example: reportWebVitals(console.log))
// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals
(0, $c5d85cef66c9da9e$export$2e2bcd8739ae039)();
// If you want your app to work offline and load faster, you can change
// unregister() to register() below. Note this comes with some pitfalls.
// Learn more about service workers: https://cra.link/PWA
$3f4aca45445a3e1c$export$6503ec6e8aabbaf();

})();
//# sourceMappingURL=index.fbcba9eb.js.map
